

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Mar 12 15:35:07 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    17  0000                     _ADCON1	set	4033
    18  0000                     _PORTAbits	set	3968
    19  0000                     _T1CON	set	4045
    20  0000                     _TMR1H	set	4047
    21  0000                     _TMR1L	set	4046
    22  0000                     _TRISAbits	set	3986
    23  0000                     _TRISBbits	set	3987
    24  0000                     _TRISCbits	set	3988
    25  0000                     _TMR1ON	set	32360
    26                           
    27 ;;
    28 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
    29 ;;
    30 ;; *************** function _main *****************
    31 ;; Defined at:
    32 ;;		line 74 in file "newmain.c"
    33 ;; Parameters:    Size  Location     Type
    34 ;;		None
    35 ;; Auto vars:     Size  Location     Type
    36 ;;  a               2   46[COMRAM] int 
    37 ;; Return value:  Size  Location     Type
    38 ;;		None               void
    39 ;; Registers used:
    40 ;;		wreg, status,2, status,0, prodl, cstack
    41 ;; Tracked objects:
    42 ;;		On entry : 0/0
    43 ;;		On exit  : 0/0
    44 ;;		Unchanged: 0/0
    45 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
    46 ;;      Params:         0       0       0       0       0       0       0       0       0
    47 ;;      Locals:         2       0       0       0       0       0       0       0       0
    48 ;;      Temps:          4       0       0       0       0       0       0       0       0
    49 ;;      Totals:         6       0       0       0       0       0       0       0       0
    50 ;;Total ram usage:        6 bytes
    51 ;; Hardware stack levels required when called:    2
    52 ;; This function calls:
    53 ;;		___awdiv
    54 ;;		___awtoft
    55 ;;		___ftdiv
    56 ;;		___fttol
    57 ;;		_ping
    58 ;; This function is called by:
    59 ;;		Startup code after reset
    60 ;; This function uses a non-reentrant model
    61 ;;
    62                           
    63                           	psect	text0
    64  007EE0                     __ptext0:
    65                           	opt stack 0
    66  007EE0                     _main:
    67                           	opt stack 29
    68                           
    69                           ;newmain.c: 75: int a = 0;
    70                           
    71                           ;incstack = 0
    72  007EE0  0E00               	movlw	0
    73  007EE2  6E30               	movwf	main@a+1,c
    74  007EE4  0E00               	movlw	0
    75  007EE6  6E2F               	movwf	main@a,c
    76                           
    77                           ;newmain.c: 77: TRISCbits.TRISC7 = 0;
    78  007EE8  9E94               	bcf	3988,7,c	;volatile
    79                           
    80                           ;newmain.c: 78: TRISBbits.TRISB0 = 0;
    81  007EEA  9093               	bcf	3987,0,c	;volatile
    82                           
    83                           ;newmain.c: 79: TRISBbits.TRISB1 = 0;
    84  007EEC  9293               	bcf	3987,1,c	;volatile
    85                           
    86                           ;newmain.c: 80: TRISCbits.TRISC6 = 0;
    87  007EEE  9C94               	bcf	3988,6,c	;volatile
    88                           
    89                           ;newmain.c: 81: TRISAbits.TRISA3 = 1;
    90  007EF0  8692               	bsf	3986,3,c	;volatile
    91                           
    92                           ;newmain.c: 82: TRISAbits.TRISA4 = 0;
    93  007EF2  9892               	bcf	3986,4,c	;volatile
    94                           
    95                           ;newmain.c: 83: PORTAbits.RA4 = 0;
    96  007EF4  9880               	bcf	3968,4,c	;volatile
    97                           
    98                           ;newmain.c: 84: T1CON = 0x10;
    99  007EF6  0E10               	movlw	16
   100  007EF8  6ECD               	movwf	4045,c	;volatile
   101                           
   102                           ;newmain.c: 85: ADCON1 = 0xFF;
   103  007EFA  68C1               	setf	4033,c	;volatile
   104  007EFC                     l25:
   105                           
   106                           ;newmain.c: 88: for (a = 0; a < 500; a++);
   107  007EFC  0E00               	movlw	0
   108  007EFE  6E30               	movwf	main@a+1,c
   109  007F00  0E00               	movlw	0
   110  007F02  6E2F               	movwf	main@a,c
   111  007F04  5030               	movf	main@a+1,w,c
   112  007F06  0A80               	xorlw	128
   113  007F08  0F7F               	addlw	-129
   114  007F0A  0EF4               	movlw	244
   115  007F0C  B4D8               	btfsc	status,2,c
   116  007F0E  5C2F               	subwf	main@a,w,c
   117  007F10  B0D8               	btfsc	status,0,c
   118  007F12  D003               	goto	l838
   119  007F14  4A2F               	infsnz	main@a,f,c
   120  007F16  2A30               	incf	main@a+1,f,c
   121  007F18  D7F5               	goto	L1
   122  007F1A                     l838:
   123                           
   124                           ;newmain.c: 89: ping();
   125  007F1A  ECBB  F03D         	call	_ping	;wreg free
   126  007F1E  D7EE               	goto	l25
   127  007F20                     l30:
   128  007F20  A680               	btfss	3968,3,c	;volatile
   129  007F22  D7FE               	goto	l30
   130                           
   131                           ;newmain.c: 96: TMR1ON = 1;
   132  007F24  80CD               	bsf	4045,0,c	;volatile
   133  007F26                     l33:
   134  007F26  B680               	btfsc	3968,3,c	;volatile
   135  007F28  D7FE               	goto	l33
   136                           
   137                           ;newmain.c: 98: TMR1ON = 0;
   138  007F2A  90CD               	bcf	4045,0,c	;volatile
   139                           
   140                           ;newmain.c: 100: a = 0;
   141  007F2C  0E00               	movlw	0
   142  007F2E  6E30               	movwf	main@a+1,c
   143  007F30  0E00               	movlw	0
   144  007F32  6E2F               	movwf	main@a,c
   145                           
   146                           ;newmain.c: 101: a = (TMR1L | (TMR1H << 8));
   147  007F34  50CF               	movf	4047,w,c	;volatile
   148  007F36  6E2C               	movwf	(??_main+1)& (0+255),c
   149  007F38  6A2B               	clrf	??_main& (0+255),c
   150  007F3A  50CE               	movf	4046,w,c	;volatile
   151  007F3C  6E2D               	movwf	(??_main+2)& (0+255),c
   152  007F3E  6A2E               	clrf	(??_main+3)& (0+255),c
   153  007F40  502B               	movf	??_main,w,c
   154  007F42  102D               	iorwf	??_main+2,w,c
   155  007F44  6E2F               	movwf	main@a,c
   156  007F46  502C               	movf	??_main+1,w,c
   157  007F48  102E               	iorwf	??_main+3,w,c
   158  007F4A  6E30               	movwf	main@a+1,c
   159                           
   160                           ;newmain.c: 102: a = a / 58.82;
   161  007F4C  0E48               	movlw	72
   162  007F4E  6E10               	movwf	___ftdiv@f2,c
   163  007F50  0E6B               	movlw	107
   164  007F52  6E11               	movwf	___ftdiv@f2+1,c
   165  007F54  0E42               	movlw	66
   166  007F56  6E12               	movwf	___ftdiv@f2+2,c
   167  007F58  C02F  F009         	movff	main@a,___awtoft@c
   168  007F5C  C030  F00A         	movff	main@a+1,___awtoft@c+1
   169  007F60  ECD1  F03D         	call	___awtoft	;wreg free
   170  007F64  C009  F00D         	movff	?___awtoft,___ftdiv@f1
   171  007F68  C00A  F00E         	movff	?___awtoft+1,___ftdiv@f1+1
   172  007F6C  C00B  F00F         	movff	?___awtoft+2,___ftdiv@f1+2
   173  007F70  EC05  F03F         	call	___ftdiv	;wreg free
   174  007F74  C00D  F01C         	movff	?___ftdiv,___fttol@f1
   175  007F78  C00E  F01D         	movff	?___ftdiv+1,___fttol@f1+1
   176  007F7C  C00F  F01E         	movff	?___ftdiv+2,___fttol@f1+2
   177  007F80  EC9B  F03E         	call	___fttol	;wreg free
   178  007F84  C01C  F02B         	movff	?___fttol,??_main
   179  007F88  C01D  F02C         	movff	?___fttol+1,??_main+1
   180  007F8C  C01E  F02D         	movff	?___fttol+2,??_main+2
   181  007F90  C01F  F02E         	movff	?___fttol+3,??_main+3
   182  007F94  C02B  F02F         	movff	??_main,main@a
   183  007F98  C02C  F030         	movff	??_main+1,main@a+1
   184                           
   185                           ;newmain.c: 105: if (a >= 2 && a <= 400)
   186  007F9C  5030               	movf	main@a+1,w,c
   187  007F9E  0A80               	xorlw	128
   188  007FA0  0F80               	addlw	-128
   189  007FA2  0E02               	movlw	2
   190  007FA4  B4D8               	btfsc	status,2,c
   191  007FA6  5C2F               	subwf	main@a,w,c
   192  007FA8  A0D8               	btfss	status,0,c
   193  007FAA  EF00  F000         	goto	start
   194  007FAE  5030               	movf	main@a+1,w,c
   195  007FB0  0A80               	xorlw	128
   196  007FB2  6EF3               	movwf	prodl,c
   197  007FB4  0E81               	movlw	129
   198  007FB6  5CF3               	subwf	prodl,w,c
   199  007FB8  0E91               	movlw	145
   200  007FBA  B4D8               	btfsc	status,2,c
   201  007FBC  5C2F               	subwf	main@a,w,c
   202  007FBE  B0D8               	btfsc	status,0,c
   203  007FC0  EF00  F000         	goto	start
   204                           
   205                           ;newmain.c: 106: {
   206                           ;newmain.c: 107: a = a / 10;
   207  007FC4  C02F  F001         	movff	main@a,___awdiv@dividend
   208  007FC8  C030  F002         	movff	main@a+1,___awdiv@dividend+1
   209  007FCC  0E00               	movlw	0
   210  007FCE  6E04               	movwf	___awdiv@divisor+1,c
   211  007FD0  0E0A               	movlw	10
   212  007FD2  6E03               	movwf	___awdiv@divisor,c
   213  007FD4  ECF5  F03D         	call	___awdiv	;wreg free
   214  007FD8  C001  F02F         	movff	?___awdiv,main@a
   215  007FDC  C002  F030         	movff	?___awdiv+1,main@a+1
   216                           
   217                           ;newmain.c: 108: a = a / 10;
   218  007FE0  C02F  F001         	movff	main@a,___awdiv@dividend
   219  007FE4  C030  F002         	movff	main@a+1,___awdiv@dividend+1
   220  007FE8  0E00               	movlw	0
   221  007FEA  6E04               	movwf	___awdiv@divisor+1,c
   222  007FEC  0E0A               	movlw	10
   223  007FEE  6E03               	movwf	___awdiv@divisor,c
   224  007FF0  ECF5  F03D         	call	___awdiv	;wreg free
   225  007FF4  C001  F02F         	movff	?___awdiv,main@a
   226  007FF8  C002  F030         	movff	?___awdiv+1,main@a+1
   227  007FFC  EF00  F000         	goto	start
   228  008000                     __end_of_main:
   229                           	opt stack 0
   230                           prodl	equ	0xFF3
   231                           status	equ	0xFD8
   232                           
   233                           	psect	cinit
   234  007B6C                     __pcinit:
   235                           	opt stack 0
   236  007B6C                     start_initialization:
   237                           	opt stack 0
   238  007B6C                     __initialization:
   239                           	opt stack 0
   240                           
   241                           ; Clear objects allocated to COMRAM (2 bytes)
   242  007B6C  6A32               	clrf	(__pbssCOMRAM+1)& (0+255),c
   243  007B6E  6A31               	clrf	__pbssCOMRAM& (0+255),c
   244  007B70                     end_of_initialization:
   245                           	opt stack 0
   246  007B70                     __end_of__initialization:
   247                           	opt stack 0
   248  007B70  0100               	movlb	0
   249  007B72  EF70  F03F         	goto	_main	;jump to C main() function
   250                           prodl	equ	0xFF3
   251                           status	equ	0xFD8
   252                           
   253                           	psect	bssCOMRAM
   254  000031                     __pbssCOMRAM:
   255                           	opt stack 0
   256  000031                     _b:
   257                           	opt stack 0
   258  000031                     	ds	2
   259                           prodl	equ	0xFF3
   260                           status	equ	0xFD8
   261                           
   262                           	psect	cstackCOMRAM
   263  000001                     __pcstackCOMRAM:
   264                           	opt stack 0
   265  000001                     ?___awdiv:
   266                           	opt stack 0
   267  000001                     ?___ftpack:
   268                           	opt stack 0
   269  000001                     ping@b:
   270                           	opt stack 0
   271  000001                     ___awdiv@dividend:
   272                           	opt stack 0
   273  000001                     ___ftpack@arg:
   274                           	opt stack 0
   275                           
   276                           ; 3 bytes @ 0x0
   277  000001                     	ds	2
   278  000003                     ___awdiv@divisor:
   279                           	opt stack 0
   280                           
   281                           ; 2 bytes @ 0x2
   282  000003                     	ds	1
   283  000004                     ___ftpack@exp:
   284                           	opt stack 0
   285                           
   286                           ; 1 bytes @ 0x3
   287  000004                     	ds	1
   288  000005                     ___awdiv@counter:
   289                           	opt stack 0
   290  000005                     ___ftpack@sign:
   291                           	opt stack 0
   292                           
   293                           ; 1 bytes @ 0x4
   294  000005                     	ds	1
   295  000006                     ??___ftpack:
   296  000006                     ___awdiv@sign:
   297                           	opt stack 0
   298                           
   299                           ; 1 bytes @ 0x5
   300  000006                     	ds	1
   301  000007                     ___awdiv@quotient:
   302                           	opt stack 0
   303                           
   304                           ; 2 bytes @ 0x6
   305  000007                     	ds	2
   306  000009                     ?___awtoft:
   307                           	opt stack 0
   308  000009                     ___awtoft@c:
   309                           	opt stack 0
   310                           
   311                           ; 2 bytes @ 0x8
   312  000009                     	ds	3
   313  00000C                     ___awtoft@sign:
   314                           	opt stack 0
   315                           
   316                           ; 1 bytes @ 0xB
   317  00000C                     	ds	1
   318  00000D                     ?___ftdiv:
   319                           	opt stack 0
   320  00000D                     ___ftdiv@f1:
   321                           	opt stack 0
   322                           
   323                           ; 3 bytes @ 0xC
   324  00000D                     	ds	3
   325  000010                     ___ftdiv@f2:
   326                           	opt stack 0
   327                           
   328                           ; 3 bytes @ 0xF
   329  000010                     	ds	3
   330  000013                     ??___ftdiv:
   331                           
   332                           ; 0 bytes @ 0x12
   333  000013                     	ds	3
   334  000016                     ___ftdiv@f3:
   335                           	opt stack 0
   336                           
   337                           ; 3 bytes @ 0x15
   338  000016                     	ds	3
   339  000019                     ___ftdiv@cntr:
   340                           	opt stack 0
   341                           
   342                           ; 1 bytes @ 0x18
   343  000019                     	ds	1
   344  00001A                     ___ftdiv@exp:
   345                           	opt stack 0
   346                           
   347                           ; 1 bytes @ 0x19
   348  00001A                     	ds	1
   349  00001B                     ___ftdiv@sign:
   350                           	opt stack 0
   351                           
   352                           ; 1 bytes @ 0x1A
   353  00001B                     	ds	1
   354  00001C                     ?___fttol:
   355                           	opt stack 0
   356  00001C                     ___fttol@f1:
   357                           	opt stack 0
   358                           
   359                           ; 3 bytes @ 0x1B
   360  00001C                     	ds	4
   361  000020                     ??___fttol:
   362                           
   363                           ; 0 bytes @ 0x1F
   364  000020                     	ds	5
   365  000025                     ___fttol@sign1:
   366                           	opt stack 0
   367                           
   368                           ; 1 bytes @ 0x24
   369  000025                     	ds	1
   370  000026                     ___fttol@lval:
   371                           	opt stack 0
   372                           
   373                           ; 4 bytes @ 0x25
   374  000026                     	ds	4
   375  00002A                     ___fttol@exp1:
   376                           	opt stack 0
   377                           
   378                           ; 1 bytes @ 0x29
   379  00002A                     	ds	1
   380  00002B                     ??_main:
   381                           
   382                           ; 0 bytes @ 0x2A
   383  00002B                     	ds	4
   384  00002F                     main@a:
   385                           	opt stack 0
   386                           
   387                           ; 2 bytes @ 0x2E
   388  00002F                     	ds	2
   389                           prodl	equ	0xFF3
   390                           status	equ	0xFD8
   391                           
   392 ;; *************** function _ping *****************
   393 ;; Defined at:
   394 ;;		line 114 in file "newmain.c"
   395 ;; Parameters:    Size  Location     Type
   396 ;;		None
   397 ;; Auto vars:     Size  Location     Type
   398 ;;  b               2    0[COMRAM] int 
   399 ;; Return value:  Size  Location     Type
   400 ;;		None               void
   401 ;; Registers used:
   402 ;;		wreg, status,2, status,0
   403 ;; Tracked objects:
   404 ;;		On entry : 0/0
   405 ;;		On exit  : 0/0
   406 ;;		Unchanged: 0/0
   407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   408 ;;      Params:         0       0       0       0       0       0       0       0       0
   409 ;;      Locals:         2       0       0       0       0       0       0       0       0
   410 ;;      Temps:          0       0       0       0       0       0       0       0       0
   411 ;;      Totals:         2       0       0       0       0       0       0       0       0
   412 ;;Total ram usage:        2 bytes
   413 ;; Hardware stack levels used:    1
   414 ;; This function calls:
   415 ;;		Nothing
   416 ;; This function is called by:
   417 ;;		_main
   418 ;; This function uses a non-reentrant model
   419 ;;
   420                           
   421                           	psect	text1
   422  007B76                     __ptext1:
   423                           	opt stack 0
   424  007B76                     _ping:
   425                           	opt stack 30
   426                           
   427                           ;newmain.c: 115: int b = 0;
   428                           
   429                           ;incstack = 0
   430  007B76  0E00               	movlw	0
   431  007B78  6E02               	movwf	ping@b+1,c
   432  007B7A  0E00               	movlw	0
   433  007B7C  6E01               	movwf	ping@b,c
   434                           
   435                           ;newmain.c: 117: PORTAbits.RA4 = 1;
   436  007B7E  8880               	bsf	3968,4,c	;volatile
   437                           
   438                           ;newmain.c: 118: for (b = 0; b < 100; b++);
   439  007B80  0E00               	movlw	0
   440  007B82  6E02               	movwf	ping@b+1,c
   441  007B84  0E00               	movlw	0
   442  007B86  6E01               	movwf	ping@b,c
   443  007B88  5002               	movf	ping@b+1,w,c
   444  007B8A  0A80               	xorlw	128
   445  007B8C  0F80               	addlw	-128
   446  007B8E  0E64               	movlw	100
   447  007B90  B4D8               	btfsc	status,2,c
   448  007B92  5C01               	subwf	ping@b,w,c
   449  007B94  B0D8               	btfsc	status,0,c
   450  007B96  D003               	goto	l41
   451  007B98  4A01               	infsnz	ping@b,f,c
   452  007B9A  2A02               	incf	ping@b+1,f,c
   453  007B9C  D7F5               	goto	L2
   454  007B9E                     l41:
   455                           
   456                           ;newmain.c: 119: PORTAbits.RA4 = 0;
   457  007B9E  9880               	bcf	3968,4,c	;volatile
   458  007BA0  0012               	return	
   459  007BA2                     __end_of_ping:
   460                           	opt stack 0
   461                           prodl	equ	0xFF3
   462                           status	equ	0xFD8
   463                           
   464 ;; *************** function ___fttol *****************
   465 ;; Defined at:
   466 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
   467 ;; Parameters:    Size  Location     Type
   468 ;;  f1              3   27[COMRAM] float 
   469 ;; Auto vars:     Size  Location     Type
   470 ;;  lval            4   37[COMRAM] unsigned long 
   471 ;;  exp1            1   41[COMRAM] unsigned char 
   472 ;;  sign1           1   36[COMRAM] unsigned char 
   473 ;; Return value:  Size  Location     Type
   474 ;;                  4   27[COMRAM] long 
   475 ;; Registers used:
   476 ;;		wreg, status,2, status,0
   477 ;; Tracked objects:
   478 ;;		On entry : 0/0
   479 ;;		On exit  : 0/0
   480 ;;		Unchanged: 0/0
   481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   482 ;;      Params:         4       0       0       0       0       0       0       0       0
   483 ;;      Locals:         6       0       0       0       0       0       0       0       0
   484 ;;      Temps:          5       0       0       0       0       0       0       0       0
   485 ;;      Totals:        15       0       0       0       0       0       0       0       0
   486 ;;Total ram usage:       15 bytes
   487 ;; Hardware stack levels used:    1
   488 ;; This function calls:
   489 ;;		Nothing
   490 ;; This function is called by:
   491 ;;		_main
   492 ;; This function uses a non-reentrant model
   493 ;;
   494                           
   495                           	psect	text2
   496  007D36                     __ptext2:
   497                           	opt stack 0
   498  007D36                     ___fttol:
   499                           	opt stack 30
   500                           
   501                           ;incstack = 0
   502  007D36  C01E  F020         	movff	___fttol@f1+2,??___fttol
   503  007D3A  6A21               	clrf	(??___fttol+1)& (0+255),c
   504  007D3C  6A22               	clrf	(??___fttol+2)& (0+255),c
   505  007D3E  341D               	rlcf	___fttol@f1+1,w,c
   506  007D40  3620               	rlcf	??___fttol& (0+255),f,c
   507  007D42  E301               	bnc	u221
   508  007D44  8021               	bsf	(??___fttol+1)& (0+255),0,c
   509  007D46                     u221:
   510  007D46  5020               	movf	??___fttol,w,c
   511  007D48  6E2A               	movwf	___fttol@exp1,c
   512  007D4A  662A               	tstfsz	___fttol@exp1& (0+255),c
   513  007D4C  D001               	goto	l772
   514  007D4E  D038               	goto	u270
   515  007D50                     l772:
   516  007D50  0E17               	movlw	23
   517  007D52  6E20               	movwf	??___fttol& (0+255),c
   518  007D54  C01C  F021         	movff	___fttol@f1,??___fttol+1
   519  007D58  C01D  F022         	movff	___fttol@f1+1,??___fttol+2
   520  007D5C  C01E  F023         	movff	___fttol@f1+2,??___fttol+3
   521  007D60  2820               	incf	??___fttol,w,c
   522  007D62  6E24               	movwf	(??___fttol+4)& (0+255),c
   523  007D64  D004               	goto	u240
   524  007D66                     u245:
   525  007D66  90D8               	bcf	status,0,c
   526  007D68  3223               	rrcf	??___fttol+3,f,c
   527  007D6A  3222               	rrcf	??___fttol+2,f,c
   528  007D6C  3221               	rrcf	??___fttol+1,f,c
   529  007D6E                     u240:
   530  007D6E  2E24               	decfsz	(??___fttol+4)& (0+255),f,c
   531  007D70  D7FA               	goto	u245
   532  007D72  5021               	movf	??___fttol+1,w,c
   533  007D74  6E25               	movwf	___fttol@sign1,c
   534  007D76  8E1D               	bsf	___fttol@f1+1,7,c
   535  007D78  0EFF               	movlw	255
   536  007D7A  161C               	andwf	___fttol@f1,f,c
   537  007D7C  0EFF               	movlw	255
   538  007D7E  161D               	andwf	___fttol@f1+1,f,c
   539  007D80  0E00               	movlw	0
   540  007D82  161E               	andwf	___fttol@f1+2,f,c
   541  007D84  501C               	movf	___fttol@f1,w,c
   542  007D86  6E26               	movwf	___fttol@lval,c
   543  007D88  501D               	movf	___fttol@f1+1,w,c
   544  007D8A  6E27               	movwf	___fttol@lval+1,c
   545  007D8C  501E               	movf	___fttol@f1+2,w,c
   546  007D8E  6E28               	movwf	___fttol@lval+2,c
   547  007D90  6A29               	clrf	___fttol@lval+3,c
   548  007D92  0E8E               	movlw	142
   549  007D94  5E2A               	subwf	___fttol@exp1,f,c
   550  007D96  AE2A               	btfss	___fttol@exp1,7,c
   551  007D98  D010               	goto	l794
   552  007D9A  502A               	movf	___fttol@exp1,w,c
   553  007D9C  0A80               	xorlw	128
   554  007D9E  6E20               	movwf	??___fttol& (0+255),c
   555  007DA0  0EF1               	movlw	241
   556  007DA2  0A80               	xorlw	128
   557  007DA4  5C20               	subwf	??___fttol,w,c
   558  007DA6  A0D8               	btfss	status,0,c
   559  007DA8  D00B               	goto	u270
   560  007DAA                     l790:
   561  007DAA  90D8               	bcf	status,0,c
   562  007DAC  3229               	rrcf	___fttol@lval+3,f,c
   563  007DAE  3228               	rrcf	___fttol@lval+2,f,c
   564  007DB0  3227               	rrcf	___fttol@lval+1,f,c
   565  007DB2  3226               	rrcf	___fttol@lval,f,c
   566  007DB4  3E2A               	incfsz	___fttol@exp1,f,c
   567  007DB6  D7F9               	goto	l790
   568  007DB8  D014               	goto	l804
   569  007DBA                     l794:
   570  007DBA  0E17               	movlw	23
   571  007DBC  642A               	cpfsgt	___fttol@exp1,c
   572  007DBE  D00F               	goto	l802
   573  007DC0                     u270:
   574  007DC0  0E00               	movlw	0
   575  007DC2  6E1C               	movwf	?___fttol,c
   576  007DC4  0E00               	movlw	0
   577  007DC6  6E1D               	movwf	?___fttol+1,c
   578  007DC8  0E00               	movlw	0
   579  007DCA  6E1E               	movwf	?___fttol+2,c
   580  007DCC  0E00               	movlw	0
   581  007DCE  6E1F               	movwf	?___fttol+3,c
   582  007DD0  D01B               	goto	l455
   583  007DD2                     l800:
   584  007DD2  90D8               	bcf	status,0,c
   585  007DD4  3626               	rlcf	___fttol@lval,f,c
   586  007DD6  3627               	rlcf	___fttol@lval+1,f,c
   587  007DD8  3628               	rlcf	___fttol@lval+2,f,c
   588  007DDA  3629               	rlcf	___fttol@lval+3,f,c
   589  007DDC  062A               	decf	___fttol@exp1,f,c
   590  007DDE                     l802:
   591  007DDE  662A               	tstfsz	___fttol@exp1,c
   592  007DE0  D7F8               	goto	l800
   593  007DE2                     l804:
   594  007DE2  5025               	movf	___fttol@sign1,w,c
   595  007DE4  B4D8               	btfsc	status,2,c
   596  007DE6  D008               	goto	l808
   597  007DE8  1E29               	comf	___fttol@lval+3,f,c
   598  007DEA  1E28               	comf	___fttol@lval+2,f,c
   599  007DEC  1E27               	comf	___fttol@lval+1,f,c
   600  007DEE  6C26               	negf	___fttol@lval,c
   601  007DF0  0E00               	movlw	0
   602  007DF2  2227               	addwfc	___fttol@lval+1,f,c
   603  007DF4  2228               	addwfc	___fttol@lval+2,f,c
   604  007DF6  2229               	addwfc	___fttol@lval+3,f,c
   605  007DF8                     l808:
   606  007DF8  C026  F01C         	movff	___fttol@lval,?___fttol
   607  007DFC  C027  F01D         	movff	___fttol@lval+1,?___fttol+1
   608  007E00  C028  F01E         	movff	___fttol@lval+2,?___fttol+2
   609  007E04  C029  F01F         	movff	___fttol@lval+3,?___fttol+3
   610  007E08                     l455:
   611  007E08  0012               	return	
   612  007E0A                     __end_of___fttol:
   613                           	opt stack 0
   614                           prodl	equ	0xFF3
   615                           status	equ	0xFD8
   616                           
   617 ;; *************** function ___ftdiv *****************
   618 ;; Defined at:
   619 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftdiv.c"
   620 ;; Parameters:    Size  Location     Type
   621 ;;  f1              3   12[COMRAM] float 
   622 ;;  f2              3   15[COMRAM] float 
   623 ;; Auto vars:     Size  Location     Type
   624 ;;  f3              3   21[COMRAM] float 
   625 ;;  sign            1   26[COMRAM] unsigned char 
   626 ;;  exp             1   25[COMRAM] unsigned char 
   627 ;;  cntr            1   24[COMRAM] unsigned char 
   628 ;; Return value:  Size  Location     Type
   629 ;;                  3   12[COMRAM] float 
   630 ;; Registers used:
   631 ;;		wreg, status,2, status,0, cstack
   632 ;; Tracked objects:
   633 ;;		On entry : 0/0
   634 ;;		On exit  : 0/0
   635 ;;		Unchanged: 0/0
   636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   637 ;;      Params:         6       0       0       0       0       0       0       0       0
   638 ;;      Locals:         6       0       0       0       0       0       0       0       0
   639 ;;      Temps:          3       0       0       0       0       0       0       0       0
   640 ;;      Totals:        15       0       0       0       0       0       0       0       0
   641 ;;Total ram usage:       15 bytes
   642 ;; Hardware stack levels used:    1
   643 ;; Hardware stack levels required when called:    1
   644 ;; This function calls:
   645 ;;		___ftpack
   646 ;; This function is called by:
   647 ;;		_main
   648 ;; This function uses a non-reentrant model
   649 ;;
   650                           
   651                           	psect	text3
   652  007E0A                     __ptext3:
   653                           	opt stack 0
   654  007E0A                     ___ftdiv:
   655                           	opt stack 29
   656                           
   657                           ;incstack = 0
   658  007E0A  C00F  F013         	movff	___ftdiv@f1+2,??___ftdiv
   659  007E0E  6A14               	clrf	(??___ftdiv+1)& (0+255),c
   660  007E10  6A15               	clrf	(??___ftdiv+2)& (0+255),c
   661  007E12  340E               	rlcf	___ftdiv@f1+1,w,c
   662  007E14  3613               	rlcf	??___ftdiv& (0+255),f,c
   663  007E16  E301               	bnc	u101
   664  007E18  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
   665  007E1A                     u101:
   666  007E1A  5013               	movf	??___ftdiv,w,c
   667  007E1C  6E1A               	movwf	___ftdiv@exp,c
   668  007E1E  661A               	tstfsz	___ftdiv@exp& (0+255),c
   669  007E20  D001               	goto	l670
   670  007E22  D00C               	goto	u130
   671  007E24                     l670:
   672  007E24  C012  F013         	movff	___ftdiv@f2+2,??___ftdiv
   673  007E28  6A14               	clrf	(??___ftdiv+1)& (0+255),c
   674  007E2A  6A15               	clrf	(??___ftdiv+2)& (0+255),c
   675  007E2C  3411               	rlcf	___ftdiv@f2+1,w,c
   676  007E2E  3613               	rlcf	??___ftdiv& (0+255),f,c
   677  007E30  E301               	bnc	u121
   678  007E32  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
   679  007E34                     u121:
   680  007E34  5013               	movf	??___ftdiv,w,c
   681  007E36  6E1B               	movwf	___ftdiv@sign,c
   682  007E38  661B               	tstfsz	___ftdiv@sign& (0+255),c
   683  007E3A  D007               	goto	l676
   684  007E3C                     u130:
   685  007E3C  0E00               	movlw	0
   686  007E3E  6E0D               	movwf	?___ftdiv,c
   687  007E40  0E00               	movlw	0
   688  007E42  6E0E               	movwf	?___ftdiv+1,c
   689  007E44  0E00               	movlw	0
   690  007E46  6E0F               	movwf	?___ftdiv+2,c
   691  007E48  D04A               	goto	l420
   692  007E4A                     l676:
   693  007E4A  0E00               	movlw	0
   694  007E4C  6E16               	movwf	___ftdiv@f3,c
   695  007E4E  0E00               	movlw	0
   696  007E50  6E17               	movwf	___ftdiv@f3+1,c
   697  007E52  0E00               	movlw	0
   698  007E54  6E18               	movwf	___ftdiv@f3+2,c
   699  007E56  501B               	movf	___ftdiv@sign,w,c
   700  007E58  0F89               	addlw	137
   701  007E5A  5E1A               	subwf	___ftdiv@exp,f,c
   702  007E5C  C00F  F01B         	movff	___ftdiv@f1+2,___ftdiv@sign
   703  007E60  5012               	movf	___ftdiv@f2+2,w,c
   704  007E62  1A1B               	xorwf	___ftdiv@sign,f,c
   705  007E64  0E80               	movlw	128
   706  007E66  161B               	andwf	___ftdiv@sign,f,c
   707  007E68  8E0E               	bsf	___ftdiv@f1+1,7,c
   708  007E6A  0EFF               	movlw	255
   709  007E6C  160D               	andwf	___ftdiv@f1,f,c
   710  007E6E  0EFF               	movlw	255
   711  007E70  160E               	andwf	___ftdiv@f1+1,f,c
   712  007E72  0E00               	movlw	0
   713  007E74  160F               	andwf	___ftdiv@f1+2,f,c
   714  007E76  8E11               	bsf	___ftdiv@f2+1,7,c
   715  007E78  0EFF               	movlw	255
   716  007E7A  1610               	andwf	___ftdiv@f2,f,c
   717  007E7C  0EFF               	movlw	255
   718  007E7E  1611               	andwf	___ftdiv@f2+1,f,c
   719  007E80  0E00               	movlw	0
   720  007E82  1612               	andwf	___ftdiv@f2+2,f,c
   721  007E84  0E18               	movlw	24
   722  007E86  6E19               	movwf	___ftdiv@cntr,c
   723  007E88                     l696:
   724  007E88  90D8               	bcf	status,0,c
   725  007E8A  3616               	rlcf	___ftdiv@f3,f,c
   726  007E8C  3617               	rlcf	___ftdiv@f3+1,f,c
   727  007E8E  3618               	rlcf	___ftdiv@f3+2,f,c
   728  007E90  5010               	movf	___ftdiv@f2,w,c
   729  007E92  5C0D               	subwf	___ftdiv@f1,w,c
   730  007E94  5011               	movf	___ftdiv@f2+1,w,c
   731  007E96  580E               	subwfb	___ftdiv@f1+1,w,c
   732  007E98  5012               	movf	___ftdiv@f2+2,w,c
   733  007E9A  580F               	subwfb	___ftdiv@f1+2,w,c
   734  007E9C  A0D8               	btfss	status,0,c
   735  007E9E  D007               	goto	l423
   736  007EA0  5010               	movf	___ftdiv@f2,w,c
   737  007EA2  5E0D               	subwf	___ftdiv@f1,f,c
   738  007EA4  5011               	movf	___ftdiv@f2+1,w,c
   739  007EA6  5A0E               	subwfb	___ftdiv@f1+1,f,c
   740  007EA8  5012               	movf	___ftdiv@f2+2,w,c
   741  007EAA  5A0F               	subwfb	___ftdiv@f1+2,f,c
   742  007EAC  8016               	bsf	___ftdiv@f3,0,c
   743  007EAE                     l423:
   744  007EAE  90D8               	bcf	status,0,c
   745  007EB0  360D               	rlcf	___ftdiv@f1,f,c
   746  007EB2  360E               	rlcf	___ftdiv@f1+1,f,c
   747  007EB4  360F               	rlcf	___ftdiv@f1+2,f,c
   748  007EB6  2E19               	decfsz	___ftdiv@cntr,f,c
   749  007EB8  D7E7               	goto	l696
   750  007EBA  C016  F001         	movff	___ftdiv@f3,___ftpack@arg
   751  007EBE  C017  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
   752  007EC2  C018  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
   753  007EC6  C01A  F004         	movff	___ftdiv@exp,___ftpack@exp
   754  007ECA  C01B  F005         	movff	___ftdiv@sign,___ftpack@sign
   755  007ECE  EC47  F03E         	call	___ftpack	;wreg free
   756  007ED2  C001  F00D         	movff	?___ftpack,?___ftdiv
   757  007ED6  C002  F00E         	movff	?___ftpack+1,?___ftdiv+1
   758  007EDA  C003  F00F         	movff	?___ftpack+2,?___ftdiv+2
   759  007EDE                     l420:
   760  007EDE  0012               	return	
   761  007EE0                     __end_of___ftdiv:
   762                           	opt stack 0
   763                           prodl	equ	0xFF3
   764                           status	equ	0xFD8
   765                           
   766 ;; *************** function ___awtoft *****************
   767 ;; Defined at:
   768 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
   769 ;; Parameters:    Size  Location     Type
   770 ;;  c               2    8[COMRAM] int 
   771 ;; Auto vars:     Size  Location     Type
   772 ;;  sign            1   11[COMRAM] unsigned char 
   773 ;; Return value:  Size  Location     Type
   774 ;;                  3    8[COMRAM] float 
   775 ;; Registers used:
   776 ;;		wreg, status,2, status,0, prodl, cstack
   777 ;; Tracked objects:
   778 ;;		On entry : 0/0
   779 ;;		On exit  : 0/0
   780 ;;		Unchanged: 0/0
   781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   782 ;;      Params:         3       0       0       0       0       0       0       0       0
   783 ;;      Locals:         1       0       0       0       0       0       0       0       0
   784 ;;      Temps:          0       0       0       0       0       0       0       0       0
   785 ;;      Totals:         4       0       0       0       0       0       0       0       0
   786 ;;Total ram usage:        4 bytes
   787 ;; Hardware stack levels used:    1
   788 ;; Hardware stack levels required when called:    1
   789 ;; This function calls:
   790 ;;		___ftpack
   791 ;; This function is called by:
   792 ;;		_main
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796                           	psect	text4
   797  007BA2                     __ptext4:
   798                           	opt stack 0
   799  007BA2                     ___awtoft:
   800                           	opt stack 29
   801                           
   802                           ;incstack = 0
   803  007BA2  0E00               	movlw	0
   804  007BA4  6E0C               	movwf	___awtoft@sign,c
   805  007BA6  500A               	movf	___awtoft@c+1,w,c
   806  007BA8  0A80               	xorlw	128
   807  007BAA  6EF3               	movwf	prodl,c
   808  007BAC  0E80               	movlw	128
   809  007BAE  5CF3               	subwf	prodl,w,c
   810  007BB0  0E00               	movlw	0
   811  007BB2  B4D8               	btfsc	status,2,c
   812  007BB4  5C09               	subwf	___awtoft@c,w,c
   813  007BB6  B0D8               	btfsc	status,0,c
   814  007BB8  D006               	goto	l762
   815  007BBA  6C09               	negf	___awtoft@c,c
   816  007BBC  1E0A               	comf	___awtoft@c+1,f,c
   817  007BBE  B0D8               	btfsc	status,0,c
   818  007BC0  2A0A               	incf	___awtoft@c+1,f,c
   819  007BC2  0E01               	movlw	1
   820  007BC4  6E0C               	movwf	___awtoft@sign,c
   821  007BC6                     l762:
   822  007BC6  C009  F001         	movff	___awtoft@c,___ftpack@arg
   823  007BCA  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
   824  007BCE  6A03               	clrf	___ftpack@arg+2,c
   825  007BD0  0E8E               	movlw	142
   826  007BD2  6E04               	movwf	___ftpack@exp,c
   827  007BD4  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
   828  007BD8  EC47  F03E         	call	___ftpack	;wreg free
   829  007BDC  C001  F009         	movff	?___ftpack,?___awtoft
   830  007BE0  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
   831  007BE4  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
   832  007BE8  0012               	return	
   833  007BEA                     __end_of___awtoft:
   834                           	opt stack 0
   835                           prodl	equ	0xFF3
   836                           status	equ	0xFD8
   837                           
   838 ;; *************** function ___ftpack *****************
   839 ;; Defined at:
   840 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
   841 ;; Parameters:    Size  Location     Type
   842 ;;  arg             3    0[COMRAM] unsigned um
   843 ;;  exp             1    3[COMRAM] unsigned char 
   844 ;;  sign            1    4[COMRAM] unsigned char 
   845 ;; Auto vars:     Size  Location     Type
   846 ;;		None
   847 ;; Return value:  Size  Location     Type
   848 ;;                  3    0[COMRAM] float 
   849 ;; Registers used:
   850 ;;		wreg, status,2, status,0
   851 ;; Tracked objects:
   852 ;;		On entry : 0/0
   853 ;;		On exit  : 0/0
   854 ;;		Unchanged: 0/0
   855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   856 ;;      Params:         5       0       0       0       0       0       0       0       0
   857 ;;      Locals:         0       0       0       0       0       0       0       0       0
   858 ;;      Temps:          3       0       0       0       0       0       0       0       0
   859 ;;      Totals:         8       0       0       0       0       0       0       0       0
   860 ;;Total ram usage:        8 bytes
   861 ;; Hardware stack levels used:    1
   862 ;; This function calls:
   863 ;;		Nothing
   864 ;; This function is called by:
   865 ;;		___awtoft
   866 ;;		___ftdiv
   867 ;; This function uses a non-reentrant model
   868 ;;
   869                           
   870                           	psect	text5
   871  007C8E                     __ptext5:
   872                           	opt stack 0
   873  007C8E                     ___ftpack:
   874                           	opt stack 29
   875                           
   876                           ;incstack = 0
   877  007C8E  5004               	movf	___ftpack@exp,w,c
   878  007C90  B4D8               	btfsc	status,2,c
   879  007C92  D005               	goto	l622
   880  007C94  5001               	movf	___ftpack@arg,w,c
   881  007C96  1002               	iorwf	___ftpack@arg+1,w,c
   882  007C98  1003               	iorwf	___ftpack@arg+2,w,c
   883  007C9A  A4D8               	btfss	status,2,c
   884  007C9C  D00C               	goto	l628
   885  007C9E                     l622:
   886  007C9E  0E00               	movlw	0
   887  007CA0  6E01               	movwf	?___ftpack,c
   888  007CA2  0E00               	movlw	0
   889  007CA4  6E02               	movwf	?___ftpack+1,c
   890  007CA6  0E00               	movlw	0
   891  007CA8  6E03               	movwf	?___ftpack+2,c
   892  007CAA  D044               	goto	l351
   893  007CAC                     l626:
   894  007CAC  2A04               	incf	___ftpack@exp,f,c
   895  007CAE  90D8               	bcf	status,0,c
   896  007CB0  3203               	rrcf	___ftpack@arg+2,f,c
   897  007CB2  3202               	rrcf	___ftpack@arg+1,f,c
   898  007CB4  3201               	rrcf	___ftpack@arg,f,c
   899  007CB6                     l628:
   900  007CB6  0E00               	movlw	0
   901  007CB8  1401               	andwf	___ftpack@arg,w,c
   902  007CBA  6E06               	movwf	??___ftpack& (0+255),c
   903  007CBC  0E00               	movlw	0
   904  007CBE  1402               	andwf	___ftpack@arg+1,w,c
   905  007CC0  6E07               	movwf	(??___ftpack+1)& (0+255),c
   906  007CC2  0EFE               	movlw	254
   907  007CC4  1403               	andwf	___ftpack@arg+2,w,c
   908  007CC6  6E08               	movwf	(??___ftpack+2)& (0+255),c
   909  007CC8  5006               	movf	??___ftpack,w,c
   910  007CCA  1007               	iorwf	??___ftpack+1,w,c
   911  007CCC  1008               	iorwf	??___ftpack+2,w,c
   912  007CCE  B4D8               	btfsc	status,2,c
   913  007CD0  D00C               	goto	l634
   914  007CD2  D7EC               	goto	l626
   915  007CD4                     l630:
   916  007CD4  2A04               	incf	___ftpack@exp,f,c
   917  007CD6  0E01               	movlw	1
   918  007CD8  2601               	addwf	___ftpack@arg,f,c
   919  007CDA  0E00               	movlw	0
   920  007CDC  2202               	addwfc	___ftpack@arg+1,f,c
   921  007CDE  0E00               	movlw	0
   922  007CE0  2203               	addwfc	___ftpack@arg+2,f,c
   923  007CE2  90D8               	bcf	status,0,c
   924  007CE4  3203               	rrcf	___ftpack@arg+2,f,c
   925  007CE6  3202               	rrcf	___ftpack@arg+1,f,c
   926  007CE8  3201               	rrcf	___ftpack@arg,f,c
   927  007CEA                     l634:
   928  007CEA  0E00               	movlw	0
   929  007CEC  1401               	andwf	___ftpack@arg,w,c
   930  007CEE  6E06               	movwf	??___ftpack& (0+255),c
   931  007CF0  0E00               	movlw	0
   932  007CF2  1402               	andwf	___ftpack@arg+1,w,c
   933  007CF4  6E07               	movwf	(??___ftpack+1)& (0+255),c
   934  007CF6  0EFF               	movlw	255
   935  007CF8  1403               	andwf	___ftpack@arg+2,w,c
   936  007CFA  6E08               	movwf	(??___ftpack+2)& (0+255),c
   937  007CFC  5006               	movf	??___ftpack,w,c
   938  007CFE  1007               	iorwf	??___ftpack+1,w,c
   939  007D00  1008               	iorwf	??___ftpack+2,w,c
   940  007D02  B4D8               	btfsc	status,2,c
   941  007D04  D006               	goto	l638
   942  007D06  D7E6               	goto	l630
   943  007D08                     l636:
   944  007D08  0604               	decf	___ftpack@exp,f,c
   945  007D0A  90D8               	bcf	status,0,c
   946  007D0C  3601               	rlcf	___ftpack@arg,f,c
   947  007D0E  3602               	rlcf	___ftpack@arg+1,f,c
   948  007D10  3603               	rlcf	___ftpack@arg+2,f,c
   949  007D12                     l638:
   950  007D12  AE02               	btfss	___ftpack@arg+1,7,c
   951  007D14  D7F9               	goto	l636
   952  007D16  A004               	btfss	___ftpack@exp,0,c
   953  007D18  9E02               	bcf	___ftpack@arg+1,7,c
   954  007D1A  90D8               	bcf	status,0,c
   955  007D1C  3204               	rrcf	___ftpack@exp,f,c
   956  007D1E  5004               	movf	___ftpack@exp,w,c
   957  007D20  1203               	iorwf	___ftpack@arg+2,f,c
   958  007D22  5005               	movf	___ftpack@sign,w,c
   959  007D24  A4D8               	btfss	status,2,c
   960  007D26  8E03               	bsf	___ftpack@arg+2,7,c
   961  007D28  C001  F001         	movff	___ftpack@arg,?___ftpack
   962  007D2C  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
   963  007D30  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
   964  007D34                     l351:
   965  007D34  0012               	return	
   966  007D36                     __end_of___ftpack:
   967                           	opt stack 0
   968                           prodl	equ	0xFF3
   969                           status	equ	0xFD8
   970                           
   971 ;; *************** function ___awdiv *****************
   972 ;; Defined at:
   973 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;  dividend        2    0[COMRAM] int 
   976 ;;  divisor         2    2[COMRAM] int 
   977 ;; Auto vars:     Size  Location     Type
   978 ;;  quotient        2    6[COMRAM] int 
   979 ;;  sign            1    5[COMRAM] unsigned char 
   980 ;;  counter         1    4[COMRAM] unsigned char 
   981 ;; Return value:  Size  Location     Type
   982 ;;                  2    0[COMRAM] int 
   983 ;; Registers used:
   984 ;;		wreg, status,2, status,0, prodl
   985 ;; Tracked objects:
   986 ;;		On entry : 0/0
   987 ;;		On exit  : 0/0
   988 ;;		Unchanged: 0/0
   989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   990 ;;      Params:         4       0       0       0       0       0       0       0       0
   991 ;;      Locals:         4       0       0       0       0       0       0       0       0
   992 ;;      Temps:          0       0       0       0       0       0       0       0       0
   993 ;;      Totals:         8       0       0       0       0       0       0       0       0
   994 ;;Total ram usage:        8 bytes
   995 ;; Hardware stack levels used:    1
   996 ;; This function calls:
   997 ;;		Nothing
   998 ;; This function is called by:
   999 ;;		_main
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003                           	psect	text6
  1004  007BEA                     __ptext6:
  1005                           	opt stack 0
  1006  007BEA                     ___awdiv:
  1007                           	opt stack 30
  1008                           
  1009                           ;incstack = 0
  1010  007BEA  0E00               	movlw	0
  1011  007BEC  6E06               	movwf	___awdiv@sign,c
  1012  007BEE  5004               	movf	___awdiv@divisor+1,w,c
  1013  007BF0  0A80               	xorlw	128
  1014  007BF2  6EF3               	movwf	prodl,c
  1015  007BF4  0E80               	movlw	128
  1016  007BF6  5CF3               	subwf	prodl,w,c
  1017  007BF8  0E00               	movlw	0
  1018  007BFA  B4D8               	btfsc	status,2,c
  1019  007BFC  5C03               	subwf	___awdiv@divisor,w,c
  1020  007BFE  B0D8               	btfsc	status,0,c
  1021  007C00  D006               	goto	l718
  1022  007C02  6C03               	negf	___awdiv@divisor,c
  1023  007C04  1E04               	comf	___awdiv@divisor+1,f,c
  1024  007C06  B0D8               	btfsc	status,0,c
  1025  007C08  2A04               	incf	___awdiv@divisor+1,f,c
  1026  007C0A  0E01               	movlw	1
  1027  007C0C  6E06               	movwf	___awdiv@sign,c
  1028  007C0E                     l718:
  1029  007C0E  5002               	movf	___awdiv@dividend+1,w,c
  1030  007C10  0A80               	xorlw	128
  1031  007C12  6EF3               	movwf	prodl,c
  1032  007C14  0E80               	movlw	128
  1033  007C16  5CF3               	subwf	prodl,w,c
  1034  007C18  0E00               	movlw	0
  1035  007C1A  B4D8               	btfsc	status,2,c
  1036  007C1C  5C01               	subwf	___awdiv@dividend,w,c
  1037  007C1E  B0D8               	btfsc	status,0,c
  1038  007C20  D006               	goto	l724
  1039  007C22  6C01               	negf	___awdiv@dividend,c
  1040  007C24  1E02               	comf	___awdiv@dividend+1,f,c
  1041  007C26  B0D8               	btfsc	status,0,c
  1042  007C28  2A02               	incf	___awdiv@dividend+1,f,c
  1043  007C2A  0E01               	movlw	1
  1044  007C2C  1A06               	xorwf	___awdiv@sign,f,c
  1045  007C2E                     l724:
  1046  007C2E  0E00               	movlw	0
  1047  007C30  6E08               	movwf	___awdiv@quotient+1,c
  1048  007C32  0E00               	movlw	0
  1049  007C34  6E07               	movwf	___awdiv@quotient,c
  1050  007C36  5004               	movf	___awdiv@divisor+1,w,c
  1051  007C38  1003               	iorwf	___awdiv@divisor,w,c
  1052  007C3A  B4D8               	btfsc	status,2,c
  1053  007C3C  D01C               	goto	l746
  1054  007C3E  0E01               	movlw	1
  1055  007C40  6E05               	movwf	___awdiv@counter,c
  1056  007C42  D004               	goto	l732
  1057  007C44                     l730:
  1058  007C44  90D8               	bcf	status,0,c
  1059  007C46  3603               	rlcf	___awdiv@divisor,f,c
  1060  007C48  3604               	rlcf	___awdiv@divisor+1,f,c
  1061  007C4A  2A05               	incf	___awdiv@counter,f,c
  1062  007C4C                     l732:
  1063  007C4C  AE04               	btfss	___awdiv@divisor+1,7,c
  1064  007C4E  D7FA               	goto	l730
  1065  007C50                     l734:
  1066  007C50  90D8               	bcf	status,0,c
  1067  007C52  3607               	rlcf	___awdiv@quotient,f,c
  1068  007C54  3608               	rlcf	___awdiv@quotient+1,f,c
  1069  007C56  5003               	movf	___awdiv@divisor,w,c
  1070  007C58  5C01               	subwf	___awdiv@dividend,w,c
  1071  007C5A  5004               	movf	___awdiv@divisor+1,w,c
  1072  007C5C  5802               	subwfb	___awdiv@dividend+1,w,c
  1073  007C5E  A0D8               	btfss	status,0,c
  1074  007C60  D005               	goto	l742
  1075  007C62  5003               	movf	___awdiv@divisor,w,c
  1076  007C64  5E01               	subwf	___awdiv@dividend,f,c
  1077  007C66  5004               	movf	___awdiv@divisor+1,w,c
  1078  007C68  5A02               	subwfb	___awdiv@dividend+1,f,c
  1079  007C6A  8007               	bsf	___awdiv@quotient,0,c
  1080  007C6C                     l742:
  1081  007C6C  90D8               	bcf	status,0,c
  1082  007C6E  3204               	rrcf	___awdiv@divisor+1,f,c
  1083  007C70  3203               	rrcf	___awdiv@divisor,f,c
  1084  007C72  2E05               	decfsz	___awdiv@counter,f,c
  1085  007C74  D7ED               	goto	l734
  1086  007C76                     l746:
  1087  007C76  5006               	movf	___awdiv@sign,w,c
  1088  007C78  B4D8               	btfsc	status,2,c
  1089  007C7A  D004               	goto	l750
  1090  007C7C  6C07               	negf	___awdiv@quotient,c
  1091  007C7E  1E08               	comf	___awdiv@quotient+1,f,c
  1092  007C80  B0D8               	btfsc	status,0,c
  1093  007C82  2A08               	incf	___awdiv@quotient+1,f,c
  1094  007C84                     l750:
  1095  007C84  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1096  007C88  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1097  007C8C  0012               	return	
  1098  007C8E                     __end_of___awdiv:
  1099                           	opt stack 0
  1100  0000                     prodl	equ	0xFF3
  1101                           status	equ	0xFD8
  1102                           prodl	equ	0xFF3
  1103                           status	equ	0xFD8
  1104                           
  1105                           	psect	rparam
  1106  0000                     prodl	equ	0xFF3
  1107                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     48      50
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___fttol
    ___fttol->___ftdiv
    ___ftdiv->___awtoft
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    3141
                                             42 COMRAM     6     6      0
                            ___awdiv
                           ___awtoft
                            ___ftdiv
                            ___fttol
                               _ping
 ---------------------------------------------------------------------------------
 (1) _ping                                                 2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     199
                                             27 COMRAM    15    11      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    1341
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    1135
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1041
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     331
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
   _ping

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     30      32       1       52.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      32      20        0.0%
DATA                 0      0      32       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Mar 12 15:35:07 2015

                      _b 0031                       l30 7F20                       l41 7B9E  
                     l33 7F26                       l25 7EFC             ___awdiv@sign 0006  
            __CFG_BOR$ON 000000              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    l420 7EDE                      l351 7D34                      l423 7EAE  
                    l630 7CD4                      l622 7C9E                      l455 7E08  
                    l800 7DD2                      l730 7C44                      l634 7CEA  
                    l626 7CAC                      l802 7DDE                      l732 7C4C  
                    l724 7C2E                      l636 7D08                      l628 7CB6  
                    l804 7DE2                      l750 7C84                      l742 7C6C  
                    l734 7C50                      l718 7C0E                      l638 7D12  
                    l670 7E24                      l808 7DF8                      l746 7C76  
                    l762 7BC6                      l676 7E4A                      l772 7D50  
                    l790 7DAA                      l838 7F1A                      l696 7E88  
                    l794 7DBA             __CFG_CPB$OFF 000000                      u101 7E1A  
                    u121 7E34                      u130 7E3C                      u221 7D46  
                    u240 7D6E                      u245 7D66                      u270 7DC0  
           __CFG_CPD$OFF 000000             __CFG_LVP$OFF 000000             ___ftdiv@cntr 0019  
           ___ftdiv@sign 001B             __CFG_WDT$OFF 000000                     _main 7EE0  
           ___ftpack@arg 0001                     _ping 7B76             ___ftpack@exp 0004  
                   prodl 000FF3                     start 0000            __CFG_IESO$OFF 000000  
           ___fttol@exp1 002A             ___fttol@lval 0026           __CFG_CCP2MX$ON 000000  
                  ?_main 0001          __end_of___awdiv 7C8E                    ?_ping 0001  
        __end_of___ftdiv 7EE0          ___awdiv@divisor 0003                    _T1CON 000FCD  
        __end_of___fttol 7E0A          ___awdiv@counter 0005                    _TMR1H 000FCF  
                  _TMR1L 000FCE            __CFG_USBDIV$2 000000            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000            ___awtoft@sign 000C            ___ftpack@sign 0005  
                  main@a 002F                    ping@b 0001                    status 000FD8  
         __CFG_PBADEN$ON 000000           __CFG_MCLRE$OFF 000000          __initialization 7B6C  
           __end_of_main 8000             __end_of_ping 7BA2                   ??_main 002B  
          ___fttol@sign1 0025                   ??_ping 0001            __activetblptr 000000  
         __CFG_PLLDIV$12 000000                   _ADCON1 000FC1         ___awdiv@dividend 0001  
       __end_of___awtoft 7BEA         __end_of___ftpack 7D36                   _TMR1ON 007E68  
         __CFG_XINST$OFF 000000                ??___awdiv 0005           __CFG_STVREN$ON 000000  
              ??___ftdiv 0013                ??___fttol 0020         ___awdiv@quotient 0007  
             __accesstop 0060  __end_of__initialization 7B70               ___ftdiv@f1 000D  
             ___ftdiv@f2 0010               ___ftdiv@f3 0016               ___awtoft@c 0009  
             ___fttol@f1 001C           __pcstackCOMRAM 0001                ?___awtoft 0009  
              ?___ftpack 0001          __CFG_VREGEN$OFF 000000                  __Hparam 0000  
                __Lparam 0000                  ___awdiv 7BEA                  ___ftdiv 7E0A  
                ___fttol 7D36                  __pcinit 7B6C               ??___awtoft 000C  
             ??___ftpack 0006                  __ramtop 0800                  __ptext0 7EE0  
                __ptext1 7B76                  __ptext2 7D36                  __ptext3 7E0A  
                __ptext4 7BA2                  __ptext5 7C8E                  __ptext6 7BEA  
   end_of_initialization 7B70                _PORTAbits 000F80                _TRISAbits 000F92  
              _TRISBbits 000F93                _TRISCbits 000F94              ___ftdiv@exp 001A  
    start_initialization 7B6C         __CFG_LPT1OSC$OFF 000000        __size_of___awtoft 0048  
      __size_of___ftpack 00A8              __pbssCOMRAM 0031                 ?___awdiv 0001  
               ?___ftdiv 000D                 ?___fttol 001C         __CFG_WDTPS$32768 000000  
               __Hrparam 0000                 __Lrparam 0000         __size_of___awdiv 00A4  
       __size_of___ftdiv 00D6         __size_of___fttol 00D4                 ___awtoft 7BA2  
               ___ftpack 7C8E            __size_of_main 0120            __size_of_ping 002C  
  __CFG_CPUDIV$OSC1_PLL2 000000      __CFG_FOSC$INTOSC_HS 000000  
