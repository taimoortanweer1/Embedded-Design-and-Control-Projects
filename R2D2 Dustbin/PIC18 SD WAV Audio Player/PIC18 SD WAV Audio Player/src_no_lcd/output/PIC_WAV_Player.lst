

HI-TECH Software PRO Macro Assembler (PIC18) V9.64 build 5495 
                                                       Sat May 22 08:49:08 2010

HI-TECH Software Omniscient Code Generator build 5501
     1                           	processor	18F2550
     2                           	fnconf	param3,??,?,0
     3                           	opt	pw 80
     4                           	opt	pm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	text1,global,reloc=2,class=CODE,delta=1
     7                           	psect	text2,global,reloc=2,class=CODE,delta=1
     8                           	psect	text3,global,reloc=2,class=CODE,delta=1
     9                           	psect	text4,global,reloc=2,class=CODE,delta=1
    10                           	psect	text5,global,reloc=2,class=CODE,delta=1
    11                           	psect	text6,global,reloc=2,class=CODE,delta=1
    12                           	psect	text7,global,reloc=2,class=CODE,delta=1
    13                           	psect	text8,global,reloc=2,class=CODE,delta=1
    14                           	psect	text9,global,reloc=2,class=CODE,delta=1
    15                           	psect	text10,global,reloc=2,class=CODE,delta=1
    16                           	psect	text11,global,reloc=2,class=CODE,delta=1
    17                           	psect	text12,global,reloc=2,class=CODE,delta=1
    18                           	psect	text13,global,reloc=2,class=CODE,delta=1
    19                           	psect	text14,global,reloc=2,class=CODE,delta=1
    20                           	psect	text15,global,reloc=2,class=CODE,delta=1
    21                           	psect	text16,global,reloc=2,class=CODE,delta=1
    22                           	psect	text17,global,reloc=2,class=CODE,delta=1
    23                           	psect	text18,global,reloc=2,class=CODE,delta=1
    24                           	psect	text19,global,reloc=2,class=CODE,delta=1
    25                           	psect	text20,global,reloc=2,class=CODE,delta=1
    26                           	psect	text21,global,reloc=2,class=CODE,delta=1
    27                           	psect	text22,global,reloc=2,class=CODE,delta=1
    28                           	psect	text23,global,reloc=2,class=CODE,delta=1
    29                           	psect	text24,global,reloc=2,class=CODE,delta=1
    30                           	psect	text25,global,reloc=2,class=CODE,delta=1
    31                           	psect	text26,global,reloc=2,class=CODE,delta=1
    32                           	psect	text27,global,reloc=2,class=CODE,delta=1
    33                           	psect	text28,global,reloc=2,class=CODE,delta=1
    34                           	psect	text29,global,reloc=2,class=CODE,delta=1
    35                           	psect	text30,global,reloc=2,class=CODE,delta=1
    36                           	psect	text31,global,reloc=2,class=CODE,delta=1
    37                           	psect	text32,global,reloc=2,class=CODE,delta=1
    38                           	psect	text33,global,reloc=2,class=CODE,delta=1
    39                           	psect	text34,global,reloc=2,class=CODE,delta=1
    40                           	psect	text35,global,reloc=2,class=CODE,delta=1
    41                           	psect	text36,global,reloc=2,class=CODE,delta=1
    42                           	psect	text37,global,reloc=2,class=CODE,delta=1
    43                           	psect	text38,global,reloc=2,class=CODE,delta=1
    44                           	psect	text39,global,reloc=2,class=CODE,delta=1
    45                           	psect	text40,global,reloc=2,class=CODE,delta=1
    46                           	psect	text41,global,reloc=2,class=CODE,delta=1
    47                           	psect	text42,global,reloc=2,class=CODE,delta=1
    48                           	psect	text43,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    50                           	psect	text44,global,reloc=2,class=CODE,delta=1
    51                           	psect	smallconst,global,reloc=2,class=SMALLCONS
      +                          T,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
    53                           	psect	param3,global,class=BANK3,space=1,delta=1
    54                           	psect	pa_nodes,global,reloc=2,class=CODE,delta=
      +                          1
    55                           	dabs	1,0x200,256
    56                           	dabs	1,0x100,256
    57                           	dabs	1,0xA,44
    58                           	dabs	1,0x36,22
    59                           	dabs	1,0x50,16
    60                           	dabs	1,0x4E,2
    61                           	dabs	1,0x4C,2
    62                           	dabs	1,0x4,2
    63                           	dabs	1,0x2,2
    64                           	dabs	1,0x0,2
    65                           	dabs	1,0x6,1
    66                           	dabs	1,0x9,1
    67                           	dabs	1,0x8,1
    68                           	dabs	1,0x7,1
    69  000000                     
    70  000000                     
    71  000000                     
    72  000000                     
    73  000000                     
    74  000000                     
    75  000000                     
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96  000000                     
    97  000000                     
    98  000000                     
    99  000000                     
   100  000000                     
   101  000000                     
   102  000000                     
   103  000000                     
   104  000000                     
   105  000000                     
   106  000000                     
   107  000000                     
   108  000000                     
   109  000000                     
   110  000000                     
   111  000000                     
   112  000000                     
   113  000000                     
   114  000000                     
   115  000000                     
   116  000000                     
   117  000000                     
   118  000000                     
   119  000000                     
   120  000000                     
   121  000000                     
   122  000000                     
   123  000000                     
   124  000000                     
   125  000000                     
   126  000000                     
   127  000000                     
   128  000000                     
   129  000000                     
   130  000000                     
   131  000000                     
   132  000000                     
   133  000000                     
   134  000000                     
   135  000000                     
   136  000000                     
   137  000000                     
   138  000000                     
   139  000000                     
   140  000000                     
   141  000000                     
   142  000000                     
   143  000000                     
   144  000000                     
   145  000000                     
   146  000000                     
   147  000000                     
   148  000000                     
   149  000000                     
   150  000000                     
   151  000000                     
   152  000000                     
   153  000000                     
   154  000000                     
   155  000000                     
   156  000000                     
   157  000000                     
   158  000000                     
   159  000000                     
   160  000000                     
   161  000000                     
   162  000000                     
   163  000000                     
   164  000000                     
   165  000000                     
   166  000000                     
   167  000000                     
   168  000000                     
   169  000000                     
   170  000000                     
   171  000000                     
   172  000000                     
   173  000000                     
   174  000000                     
   175  000000                     
   176  000000                     
   177  000000                     
   178  000000                     
   179  000000                     
   180  000000                     
   181  000000                     
   182  000000                     
   183  000000                     
   184  000000                     
   185  000000                     
   186  000000                     
   187  000000                     
   188  000000                     
   189  000000                     
   190  000000                     
   191  000000                     
   192  000000                     
   193  000000                     
   194  000000                     
   195  000000                     
   196  000000                     
   197  000000                     
   198  000000                     
   199  000000                     
   200  000000                     
   201  000000                     
   202  000000                     
   203  000000                     
   204  000000                     
   205  000000                     
   206  000000                     
   207  000000                     
   208  000000                     
   209  000000                     
   210  000000                     
   211  000000                     
   212  000000                     
   213  000000                     
   214  000000                     
   215  000000                     
   216  000000                     
   217  000000                     
   218  000000                     
   219  000000                     
   220  000000                     
   221  000000                     
   222  000000                     
   223  000000                     
   224  000000                     
   225  000000                     
   226  000000                     
   227  000000                     
   228  000000                     
   229  000000                     
   230  000000                     
   231  000000                     
   232  000000                     
   233  000000                     
   234  000000                     
   235  000000                     
   236  000000                     
   237  000000                     
   238  000000                     
   239  000000                     
   240  000000                     
   241  000000                     
   242  000000                     
   243  000000                     
   244  000000                     
   245  000000                     
   246  000000                     
   247  000000                     
   248  000000                     
   249  000000                     
   250  000000                     
   251  000000                     
   252  000000                     
   253  000000                     
   254  000000                     
   255  000000                     
   256  000000                     
   257  000000                     
   258  000000                     
   259  000000                     
   260  000000                     
   261  000000                     
   262  000000                     
   263  000000                     
   264  000000                     
   265  000000                     
   266  000000                     
   267  000000                     
   268  000000                     
   269  000000                     
   270  000000                     
   271  000000                     
   272  000000                     
   273  000000                     
   274  000000                     
   275  000000                     
   276  000000                     
   277  000000                     
   278  000000                     
   279  000000                     
   280  000000                     
   281  000000                     
   282  000000                     
   283  000000                     
   284  000000                     
   285  000000                     
   286  000000                     
   287  000000                     
   288  000000                     
   289  000000                     
   290  000000                     
   291  000000                     
   292  000000                     
   293  000000                     
   294  000000                     
   295  000000                     
   296  000000                     
   297  000000                     
   298  000000                     
   299  000000                     
   300  000000                     
   301  000000                     
   302  000000                     
   303  000000                     
   304  000000                     
   305  000000                     
   306  000000                     
   307  000000                     
   308  000000                     
   309  000000                     
   310  000000                     
   311  000000                     
   312  000000                     
   313  000000                     
   314  000000                     
   315  000000                     
   316  000000                     
   317  000000                     
   318  000000                     
   319  000000                     
   320  000000                     
   321  000000                     
   322  000000                     
   323  000000                     
   324  000000                     
   325  000000                     
   326  000000                     
   327  000000                     
   328  000000                     
   329  000000                     
   330  000000                     
   331  000000                     
   332  000000                     
   333  000000                     
   334  000000                     
   335  000000                     
   336  000000                     
   337  000000                     
   338  000000                     
   339  000000                     
   340  000000                     
   341  000000                     
   342  000000                     
   343  000000                     
   344  000000                     
   345  000000                     
   346  000000                     
   347  000000                     
   348  000000                     
   349  000000                     
   350  000000                     
   351  000000                     
   352  000000                     
   353  000000                     
   354  000000                     
   355  000000                     
   356  000000                     
   357  000000                     
   358  000000                     
   359  000000                     
   360  000000                     
   361  000000                     
   362  000000                     
   363  000000                     
   364  000000                     
   365  000000                     
   366  000000                     
   367  000000                     
   368  000000                     
   369  000000                     
   370  000000                     
   371  000000                     
   372  000000                     
   373  000000                     
   374  000000                     
   375  000000                     
   376  000000                     
   377  000000                     
   378  000000                     
   379  000000                     
   380  000000                     
   381  000000                     
   382  000000                     
   383  000000                     
   384  000000                     
   385  000000                     
   386  000000                     
   387  000000                     
   388  000000                     
   389  000000                     
   390  000000                     
   391  000000                     
   392  000000                     
   393  000000                     
   394  000000                     
   395  000000                     
   396  000000                     
   397  000000                     
   398  000000                     
   399  000000                     
   400  000000                     
   401  000000                     
   402  000000                     
   403  000000                     
   404  000000                     
   405  000000                     
   406  000000                     
   407  000000                     
   408  000000                     
   409  000000                     
   410  000000                     
   411  000000                     
   412  000000                     
   413  000000                     
   414  000000                     
   415  000000                     
   416  000000                     
   417  000000                     
   418  000000                     
   419  000000                     
   420  000000                     
   421  000000                     
   422  000000                     
   423  000000                     
   424  000000                     
   425  000000                     
   426  000000                     
   427  000000                     
   428  000000                     
   429                           
   430                           	psect	text0
   431                           ;Data sizes: Strings 5, constant 0, data 0, bss 
      +                          0, persistent 0 stack 176
   432                           ; *************** function _main ***************
      +                          **
   433                           ; Defined at:
   434                           ;		line 35 in file "D:\ElabPh\SDMMC\PIC WAV Play
      +                          er\PIC18 SD WAV Audio Player\src_no_lcd\main.c"
   435                           ; Parameters:
   436                           ;		None
   437                           ; Auto variables:
   438                           ;		None
   439                           ; Return value:
   440                           ;		type: void 
   441                           ;		size: 0
   442                           ; Registers used:
   443                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2
      +                          h, status,2, status,0, tblptrl, tblptrh, tblptru
      +                          , tablat, prodl, prodh, cstack
   444                           ; Tracked objects:
   445                           ;		On entry : 0/0
   446                           ;		On exit  : 0/0
   447                           ;		Unchanged: FFFFFFF0/0
   448                           ; Data sizes:
   449                           ;		Autos:    0
   450                           ;		Params:   0
   451                           ;		Temp:     0
   452                           ;		Total:    0
   453                           ; This function calls:
   454                           ;		_pwm_audio_init
   455                           ;		_delay
   456                           ;		_pf_mount
   457                           ;		_pf_opendir
   458                           ;		_strstr
   459                           ;		_play_wave_file
   460                           ;		_pf_readdir
   461                           ; This function is called by:
   462                           ;		Startup code after reset
   463                           ; This function uses a non-reentrant model
   464                           ; 
   465  000000                     
   466                           ;integer.h: 12: typedef int INT;
   467                           ;integer.h: 13: typedef unsigned int UINT;
   468                           ;integer.h: 16: typedef signed char CHAR;
   469                           ;integer.h: 17: typedef unsigned char UCHAR;
   470                           ;integer.h: 18: typedef unsigned char BYTE;
   471                           ;integer.h: 21: typedef short SHORT;
   472                           ;integer.h: 22: typedef unsigned short USHORT;
   473                           ;integer.h: 23: typedef unsigned short WORD;
   474                           ;integer.h: 24: typedef unsigned short WCHAR;
   475                           ;integer.h: 27: typedef long LONG;
   476                           ;integer.h: 28: typedef unsigned long ULONG;
   477                           ;integer.h: 29: typedef unsigned long DWORD;
   478                           ;integer.h: 32: typedef enum { FALSE = 0, TRUE }
      +                           BOOL;
   479  002752                     _main:
   480                           	opt stack 29
   481                           ; BSR set to: ?
   482  002752  EC16  F015         	call	_pwm_audio_init	;wreg free
   483                           ;main.c: 38: while(1){
   484  002756                     l141:
   485                           ; BSR set to: ?
   486                           ;main.c: 39: delay();
   487  002756  ECAE  F014         	call	_delay	;wreg free
   488                           ;main.c: 40: if (pf_mount(&Fs) ) continue;
   489  00275A  0E0A               	movlw	10
   490  00275C  ECD7  F003         	call	_pf_mount
   491  002760  0900               	iorlw	0
   492  002762  E1F9               	bnz	l141
   493                           ;main.c: 41: while(1){
   494  002764                     l145:
   495                           ; BSR set to: ?
   496                           ;main.c: 42: if (pf_opendir(&Dir, "")) break;
   497  002764  0E05               	movlw	low (STR_2+4)
   498  002766  0103               	movlb	3	; () banked
   499  002768  6F00               	movwf	?_pf_opendir& (0+255),b
   500  00276A  0E50               	movlw	80
   501  00276C  EC63  F011         	call	_pf_opendir
   502  002770  0900               	iorlw	0
   503  002772  E1F1               	bnz	l141
   504  002774  D00A               	goto	l148
   505                           ; BSR set to: 3
   506                           ;main.c: 43: while (!pf_readdir(&Dir, &Fno) && F
      +                          no.fname[0]) {
   507  002776                     l149:
   508                           ; BSR set to: 3
   509                           ;main.c: 44: if( strstr(Fno.fname, ".WAV") ){
   510  002776  0E01               	movlw	low STR_2
   511  002778  6F00               	movwf	?_strstr& (0+255),b
   512  00277A  0E3F               	movlw	63
   513  00277C  EC53  F013         	call	_strstr
   514  002780  0900               	iorlw	0
   515  002782  E003               	bz	l148
   516                           ;main.c: 45: play_wave_file(Fno.fname);
   517  002784  0E3F               	movlw	63
   518  002786  EC42  F009         	call	_play_wave_file
   519                           ; BSR set to: 3
   520  00278A                     l148:
   521                           ; BSR set to: 3
   522  00278A  0E36               	movlw	54
   523  00278C  6F00               	movwf	?_pf_readdir& (0+255),b
   524  00278E  0E50               	movlw	80
   525  002790  ECCB  F011         	call	_pf_readdir
   526  002794  0900               	iorlw	0
   527  002796  E1E6               	bnz	l145
   528  002798  663F               	tstfsz	63,c
   529  00279A  D7ED               	goto	l149
   530  00279C  D7E3               	goto	l145
   531                           ; BSR set to: 3
   532                           ; BSR set to: 3
   533                           ; BSR set to: 3
   534                           ; BSR set to: ?
   535  00279E                     __end_of_main:
   536                           	opt stack 0
   537                           
   538                           	psect	text1
   539                           ; =============== function _main ends ==========
      +                          ==
   540                           ; *************** function _strstr *************
      +                          ****
   541                           ; Defined at:
   542                           ;		line 5 in file "C:\Program Files\HI-TECH Soft
      +                          ware\PICC-18\PRO\9.64\sources\strstr.c"
   543                           ; Parameters:
   544                           ;		s1             size:   1reg:   wre	type: PTR 
      +                          const unsigned char ; Largest target is 255
   545                           ;		 -> RAM(255), Fno(22), 
   546                           ;		s2             size:   1offs:   0	type: PTR c
      +                          onst unsigned char ; Largest target is 5
   547                           ;		 -> STR_2(5), 
   548                           ; Auto variables:
   549                           ;		None
   550                           ; Return value:
   551                           ;		type: PTR unsigned char 
   552                           ;		size: 1
   553                           ; Registers used:
   554                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, tblptrl, tblptrh, tblptru, tablat, prod
      +                          l, cstack
   555                           ; Tracked objects:
   556                           ;		On entry : F/3
   557                           ;		On exit  : F/3
   558                           ;		Unchanged: FFFFFFF0/0
   559                           ; Data sizes:
   560                           ;		Autos:    2
   561                           ;		Params:   1
   562                           ;		Temp:     0
   563                           ;		Total:    3
   564                           ; This function calls:
   565                           ;		_strlen
   566                           ;		_strncmp
   567                           ;		_strchr
   568                           ; This function is called by:
   569                           ;		_main
   570                           ; This function uses a non-reentrant model
   571                           ; 
   572  000000                     
   573  0026A6                     _strstr:
   574                           	opt stack 28
   575                           ; BSR set to: 3
   576                           ; strstr@s1 loaded to prodl
   577  0026A6  CFE8 FFF3          	movff	wreg,prodl
   578  0026AA  D021               	goto	l1005
   579  0026AC                     l1006:
   580                           ; BSR set to: 3
   581  0026AC  5100               	movf	?_strstr& (0+255),w,b
   582  0026AE  EC60  F014         	call	_strlen
   583  0026B2  C303  F301         	movff	?_strlen,??_strstr
   584  0026B6  C304  F302         	movff	?_strlen+1,??_strstr+1
   585  0026BA  C301  F304         	movff	??_strstr,?_strncmp+1
   586  0026BE  C302  F305         	movff	??_strstr+1,?_strncmp+2
   587  0026C2  C300  F303         	movff	?_strstr,?_strncmp
   588  0026C6  50F3               	movf	prodl,w,c
   589  0026C8  ECF1  F012         	call	_strncmp
   590  0026CC  5104               	movf	(?_strncmp+1)& (0+255),w,b
   591  0026CE  1103               	iorwf	?_strncmp& (0+255),w,b
   592  0026D0  E102               	bnz	l1008
   593  0026D2  50F3               	movf	prodl,w,c
   594  0026D4  D014               	goto	l1004
   595  0026D6                     l1008:
   596                           ; BSR set to: 3
   597  0026D6  C300  FFF6         	movff	?_strstr,tblptrl
   598  0026DA  0E04               	movlw	high __Lsmallconst
   599  0026DC  6EF7               	movwf	tblptrh,c
   600  0026DE  0008               	tblrd		*
   601  0026E0  50F5               	movf	tablat,w,c
   602  0026E2  6F03               	movwf	?_strchr& (0+255),b
   603  0026E4  6B04               	clrf	(?_strchr+1)& (0+255),b
   604  0026E6  28F3               	incf	prodl,w,c
   605  0026E8  ECC1  F014         	call	_strchr
   606  0026EC  6EF3               	movwf	prodl,c
   607  0026EE                     l1005:
   608                           ; BSR set to: 3
   609  0026EE  50F3               	movf	prodl,w,c
   610  0026F0  E005               	bz	l1007
   611  0026F2  50F3               	movf	prodl,w,c
   612  0026F4  6EE9               	movwf	fsr0l,c
   613  0026F6  6AEA               	clrf	fsr0h,c
   614  0026F8  50EF               	movf	indf0,w,c
   615  0026FA  E1D8               	bnz	l1006
   616                           ; BSR set to: 3
   617  0026FC                     l1007:
   618                           ; BSR set to: 3
   619  0026FC  0E00               	movlw	0
   620  0026FE                     l1004:
   621                           ; BSR set to: 3
   622  0026FE  0012               	return	
   623  002700                     __end_of_strstr:
   624                           	opt stack 0
   625                           
   626                           	psect	text2
   627                           ; =============== function _strstr ends ========
      +                          ====
   628                           ; *************** function _pf_readdir *********
      +                          ********
   629                           ; Defined at:
   630                           ;		line 809 in file "D:\ElabPh\SDMMC\PIC WAV Pla
      +                          yer\PIC18 SD WAV Audio Player\src_no_lcd\pff.c"
   631                           ; Parameters:
   632                           ;		dj             size:   1reg:   wre	type: PTR 
      +                          struct _DIR_; Largest target is 17
   633                           ;		 -> Dir(16), 
   634                           ;		fno            size:   1offs:   0	type: PTR s
      +                          truct _FILINFO_; Largest target is 22
   635                           ;		 -> Fno(22), 
   636                           ; Auto variables:
   637                           ;		fs          	       	type: PTR struct _FATFS_
      +                          ; Largest target is 255
   638                           ;		 -> RAM(255), Fs(44), 
   639                           ;		dj          	       	type: PTR struct _DIR_; 
      +                          Largest target is 17
   640                           ;		 -> Dir(16), 
   641                           ;		res         	       	type: enum E48
   642                           ;		sp          	       	type: unsigned char [12]
   643                           ;		dir         	       	type: unsigned char [32]
   644                           ; Return value:
   645                           ;		type: enum E1240
   646                           ;		size: 1
   647                           ; Registers used:
   648                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, stat
      +                          us,2, status,0, prodl, prodh, cstack
   649                           ; Tracked objects:
   650                           ;		On entry : F/3
   651                           ;		On exit  : F/3
   652                           ;		Unchanged: FFFFFFF0/0
   653                           ; Data sizes:
   654                           ;		Autos:   46
   655                           ;		Params:   1
   656                           ;		Temp:     0
   657                           ;		Total:   47
   658                           ; This function calls:
   659                           ;		_dir_rewind
   660                           ;		_dir_read
   661                           ;		_get_fileinfo
   662                           ;		_dir_next
   663                           ; This function is called by:
   664                           ;		_main
   665                           ; This function uses a non-reentrant model
   666                           ; 
   667  000000                     
   668                           ;pff.c: 805: FRESULT pf_readdir (
   669                           ;pff.c: 806: DIR *dj,
   670                           ;pff.c: 807: FILINFO *fno
   671                           ;pff.c: 808: )
   672                           ;pff.c: 809: {
   673  002396                     _pf_readdir:
   674                           	opt stack 28
   675                           ; BSR set to: 3
   676                           ;pf_readdir@dj stored from wreg
   677  002396  CFE8 F301          	movff	wreg,??_pf_readdir
   678  00239A  C009 FFD9          	movff	9,fsr2l
   679                           ;pff.c: 815: if (!fs) {
   680  00239E  66D9               	tstfsz	fsr2l,c
   681  0023A0  D002               	goto	l312
   682                           ;pff.c: 816: res = FR_NOT_ENABLED;
   683  0023A2  0E06               	movlw	6
   684  0023A4  D01B               	goto	L1
   685                           ;pff.c: 817: } else {
   686  0023A6                     l312:
   687                           ; BSR set to: 3
   688                           ;pff.c: 818: fs->buf = dir;
   689  0023A6  50D9               	movf	fsr2l,w,c
   690  0023A8  0F06               	addlw	6
   691  0023AA  6EE9               	movwf	fsr0l,c
   692  0023AC  6AEA               	clrf	fsr0h,c
   693  0023AE  0E0F               	movlw	low (??_pf_readdir+14)
   694  0023B0  6EEE               	movwf	postinc0,c
   695  0023B2  0E03               	movlw	high (??_pf_readdir+14)
   696  0023B4  6EED               	movwf	postdec0,c
   697                           ;pff.c: 819: dj->fn = sp;
   698  0023B6  5101               	movf	??_pf_readdir& (0+255),w,b
   699  0023B8  0F02               	addlw	2
   700  0023BA  6EE9               	movwf	fsr0l,c
   701  0023BC  6AEA               	clrf	fsr0h,c
   702  0023BE  0E03               	movlw	low (??_pf_readdir+2)
   703  0023C0  6EEE               	movwf	postinc0,c
   704  0023C2  0E03               	movlw	high (??_pf_readdir+2)
   705  0023C4  6EED               	movwf	postdec0,c
   706                           ;pff.c: 820: if (!fno) {
   707  0023C6  6700               	tstfsz	?_pf_readdir& (0+255),b
   708  0023C8  D00B               	goto	l314
   709                           ;pff.c: 821: res = dir_rewind(dj);
   710  0023CA  C301  F36C         	movff	??_pf_readdir,?_dir_rewind
   711  0023CE  0E0F               	movlw	15
   712  0023D0  6F6D               	movwf	(?_dir_rewind+1)& (0+255),b
   713  0023D2  0E5F               	movlw	__accesstop+-1
   714  0023D4  656C               	cpfsgt	?_dir_rewind& (0+255),b
   715  0023D6  6B6D               	clrf	(?_dir_rewind+1)& (0+255),b
   716  0023D8  EC84  F00E         	call	_dir_rewind	;wreg free
   717  0023DC                     L1:
   718  0023DC  6F02               	movwf	(??_pf_readdir+1)& (0+255),b
   719                           ;pff.c: 822: } else {
   720  0023DE  D02E               	goto	l313
   721  0023E0                     l314:
   722                           ; BSR set to: 3
   723                           ;pff.c: 823: res = dir_read(dj);
   724  0023E0  5101               	movf	??_pf_readdir& (0+255),w,b
   725  0023E2  EC0E  F00F         	call	_dir_read
   726  0023E6  6F02               	movwf	(??_pf_readdir+1)& (0+255),b
   727                           ;pff.c: 824: if (res == FR_NO_FILE) {
   728  0023E8  5102               	movf	(??_pf_readdir+1)& (0+255),w,b
   729  0023EA  0A03               	xorlw	3
   730  0023EC  E10A               	bnz	l316
   731                           ;pff.c: 825: dj->sect = 0;
   732  0023EE  5101               	movf	??_pf_readdir& (0+255),w,b
   733  0023F0  0F0C               	addlw	12
   734  0023F2  6EE9               	movwf	fsr0l,c
   735  0023F4  6AEA               	clrf	fsr0h,c
   736  0023F6  0E00               	movlw	0
   737  0023F8  6AEE               	clrf	postinc0,c
   738  0023FA  6AEE               	clrf	postinc0,c
   739  0023FC  6AEE               	clrf	postinc0,c
   740  0023FE  6AED               	clrf	postdec0,c
   741                           ;pff.c: 826: res = FR_OK;
   742  002400  6B02               	clrf	(??_pf_readdir+1)& (0+255),b
   743  002402                     l316:
   744                           ; BSR set to: 3
   745                           ;pff.c: 827: }
   746                           ;pff.c: 828: if (res == FR_OK) {
   747  002402  6702               	tstfsz	(??_pf_readdir+1)& (0+255),b
   748  002404  D01B               	goto	l313
   749                           ;pff.c: 829: get_fileinfo(dj, fno);
   750  002406  C300  F32F         	movff	?_pf_readdir,?_get_fileinfo
   751  00240A  5101               	movf	??_pf_readdir& (0+255),w,b
   752  00240C  ECE2  F00D         	call	_get_fileinfo
   753                           ;pff.c: 830: res = dir_next(dj);
   754  002410  C301  F36C         	movff	??_pf_readdir,?_dir_next
   755  002414  0E0F               	movlw	15
   756  002416  6F6D               	movwf	(?_dir_next+1)& (0+255),b
   757  002418  0E5F               	movlw	__accesstop+-1
   758  00241A  656C               	cpfsgt	?_dir_next& (0+255),b
   759  00241C  6B6D               	clrf	(?_dir_next+1)& (0+255),b
   760  00241E  EC6D  F00C         	call	_dir_next	;wreg free
   761  002422  6F02               	movwf	(??_pf_readdir+1)& (0+255),b
   762                           ;pff.c: 831: if (res == FR_NO_FILE) {
   763  002424  5102               	movf	(??_pf_readdir+1)& (0+255),w,b
   764  002426  0A03               	xorlw	3
   765  002428  E109               	bnz	l313
   766                           ;pff.c: 832: dj->sect = 0;
   767  00242A  5101               	movf	??_pf_readdir& (0+255),w,b
   768  00242C  0F0C               	addlw	12
   769  00242E  6EE9               	movwf	fsr0l,c
   770  002430  6AEA               	clrf	fsr0h,c
   771  002432  6AEE               	clrf	postinc0,c
   772  002434  6AEE               	clrf	postinc0,c
   773  002436  6AEE               	clrf	postinc0,c
   774  002438  6AED               	clrf	postdec0,c
   775                           ;pff.c: 833: res = FR_OK;
   776  00243A  6B02               	clrf	(??_pf_readdir+1)& (0+255),b
   777                           ; BSR set to: 3
   778                           ; BSR set to: 3
   779                           ; BSR set to: 3
   780  00243C                     l313:
   781                           ; BSR set to: 3
   782                           ;pff.c: 834: }
   783                           ;pff.c: 835: }
   784                           ;pff.c: 836: }
   785                           ;pff.c: 837: }
   786                           ;pff.c: 839: return res;
   787  00243C  5102               	movf	(??_pf_readdir+1)& (0+255),w,b
   788                           ;pff.c: 840: }
   789                           ; BSR set to: 3
   790  00243E  0012               	return	
   791  002440                     __end_of_pf_readdir:
   792                           	opt stack 0
   793                           
   794                           	psect	text3
   795                           ; =============== function _pf_readdir ends ====
      +                          ========
   796                           ; *************** function _pf_opendir *********
      +                          ********
   797                           ; Defined at:
   798                           ;		line 765 in file "D:\ElabPh\SDMMC\PIC WAV Pla
      +                          yer\PIC18 SD WAV Audio Player\src_no_lcd\pff.c"
   799                           ; Parameters:
   800                           ;		dj             size:   1reg:   wre	type: PTR 
      +                          struct _DIR_; Largest target is 17
   801                           ;		 -> Dir(16), 
   802                           ;		path           size:   1offs:   0	type: PTR c
      +                          onst unsigned char ; Largest target is 1
   803                           ;		 -> STR_1(1), 
   804                           ; Auto variables:
   805                           ;		fs          	       	type: PTR struct _FATFS_
      +                          ; Largest target is 255
   806                           ;		 -> RAM(255), Fs(44), 
   807                           ;		dj          	       	type: PTR struct _DIR_; 
      +                          Largest target is 17
   808                           ;		 -> Dir(16), 
   809                           ;		res         	       	type: enum E48
   810                           ;		sp          	       	type: unsigned char [12]
   811                           ;		dir         	       	type: unsigned char [32]
   812                           ; Return value:
   813                           ;		type: enum E1240
   814                           ;		size: 1
   815                           ; Registers used:
   816                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2
      +                          h, status,2, status,0, tblptrl, tblptrh, tblptru
      +                          , tablat, prodl, prodh, cstack
   817                           ; Tracked objects:
   818                           ;		On entry : F/3
   819                           ;		On exit  : F/3
   820                           ;		Unchanged: FFFFFFF0/0
   821                           ; Data sizes:
   822                           ;		Autos:   46
   823                           ;		Params:   1
   824                           ;		Temp:     8
   825                           ;		Total:   55
   826                           ; This function calls:
   827                           ;		_follow_path
   828                           ;		_dir_rewind
   829                           ; This function is called by:
   830                           ;		_main
   831                           ; This function uses a non-reentrant model
   832                           ; 
   833  000000                     
   834                           ;pff.c: 761: FRESULT pf_opendir (
   835                           ;pff.c: 762: DIR *dj,
   836                           ;pff.c: 763: const char *path
   837                           ;pff.c: 764: )
   838                           ;pff.c: 765: {
   839  0022C6                     _pf_opendir:
   840                           	opt stack 28
   841                           ; BSR set to: 3
   842                           ;pf_opendir@dj stored from wreg
   843  0022C6  CFE8 F301          	movff	wreg,??_pf_opendir
   844                           ;pff.c: 766: FRESULT res;
   845                           ;pff.c: 767: BYTE sp[12], dir[32];
   846                           ;pff.c: 768: FATFS *fs = FatFs;
   847  0022CA  C009 FFD9          	movff	9,fsr2l
   848                           ;pff.c: 771: if (!fs) {
   849  0022CE  66D9               	tstfsz	fsr2l,c
   850  0022D0  D002               	goto	l303
   851                           ;pff.c: 772: res = FR_NOT_ENABLED;
   852  0022D2  0E06               	movlw	6
   853  0022D4  D05D               	goto	L2
   854                           ;pff.c: 773: } else {
   855  0022D6                     l303:
   856                           ; BSR set to: 3
   857                           ;pff.c: 774: fs->buf = dir;
   858  0022D6  50D9               	movf	fsr2l,w,c
   859  0022D8  0F06               	addlw	6
   860  0022DA  6EE9               	movwf	fsr0l,c
   861  0022DC  6AEA               	clrf	fsr0h,c
   862  0022DE  0E0F               	movlw	low (??_pf_opendir+14)
   863  0022E0  6EEE               	movwf	postinc0,c
   864  0022E2  0E03               	movlw	high (??_pf_opendir+14)
   865  0022E4  6EED               	movwf	postdec0,c
   866                           ;pff.c: 775: dj->fn = sp;
   867  0022E6  5101               	movf	??_pf_opendir& (0+255),w,b
   868  0022E8  0F02               	addlw	2
   869  0022EA  6EE9               	movwf	fsr0l,c
   870  0022EC  6AEA               	clrf	fsr0h,c
   871  0022EE  0E03               	movlw	low (??_pf_opendir+2)
   872  0022F0  6EEE               	movwf	postinc0,c
   873  0022F2  0E03               	movlw	high (??_pf_opendir+2)
   874  0022F4  6EED               	movwf	postdec0,c
   875                           ;pff.c: 776: res = follow_path(dj, path);
   876  0022F6  C300  F356         	movff	?_pf_opendir,?_follow_path+2
   877  0022FA  0E04               	movlw	high __Lsmallconst
   878  0022FC  6F57               	movwf	(?_follow_path+3)& (0+255),b
   879  0022FE  C301  F354         	movff	??_pf_opendir,?_follow_path
   880  002302  0E0F               	movlw	15
   881  002304  6F55               	movwf	(?_follow_path+1)& (0+255),b
   882  002306  0E5F               	movlw	__accesstop+-1
   883  002308  6554               	cpfsgt	?_follow_path& (0+255),b
   884  00230A  6B55               	clrf	(?_follow_path+1)& (0+255),b
   885  00230C  EC21  F00A         	call	_follow_path	;wreg free
   886  002310  6F02               	movwf	(??_pf_opendir+1)& (0+255),b
   887                           ;pff.c: 777: if (res == FR_OK) {
   888  002312  6702               	tstfsz	(??_pf_opendir+1)& (0+255),b
   889  002314  D039               	goto	l305
   890                           ; pf_opendir@dj loaded to fsr1l
   891  002316  C301  FFE1         	movff	??_pf_opendir,fsr1l
   892                           ;pff.c: 778: if (dir[0]) {
   893  00231A  510F               	movf	(??_pf_opendir+14)& (0+255),w,b
   894  00231C  E029               	bz	l306
   895                           ;pff.c: 779: if (dir[11] & 0x10) {
   896  00231E  A91A               	btfss	(??_pf_opendir+25)& (0+255),4,b
   897  002320  D025               	goto	l307
   898                           ;pff.c: 780: dj->sclust =
   899                           ;pff.c: 782: ((DWORD)(WORD)(*(WORD*)(BYTE*)(dir+
      +                          20)) << 16) |
   900                           ;pff.c: 784: (WORD)(*(WORD*)(BYTE*)(dir+26));
   901  002322  5123               	movf	(??_pf_opendir+34)& (0+255),w,b
   902  002324  6F2F               	movwf	(??_pf_opendir+46)& (0+255),b
   903  002326  5124               	movf	(??_pf_opendir+35)& (0+255),w,b
   904  002328  6F30               	movwf	(??_pf_opendir+47)& (0+255),b
   905  00232A  6B31               	clrf	(??_pf_opendir+48)& (0+255),b
   906  00232C  6B32               	clrf	(??_pf_opendir+49)& (0+255),b
   907  00232E  C330  F332         	movff	??_pf_opendir+47,??_pf_opendir+49
   908  002332  C32F  F331         	movff	??_pf_opendir+46,??_pf_opendir+48
   909  002336  6B30               	clrf	(??_pf_opendir+47)& (0+255),b
   910  002338  6B2F               	clrf	(??_pf_opendir+46)& (0+255),b
   911  00233A  5129               	movf	(??_pf_opendir+40)& (0+255),w,b
   912  00233C  112F               	iorwf	(??_pf_opendir+46)& (0+255),w,b
   913  00233E  6F33               	movwf	(??_pf_opendir+50)& (0+255),b
   914  002340  512A               	movf	(??_pf_opendir+41)& (0+255),w,b
   915  002342  1130               	iorwf	(??_pf_opendir+47)& (0+255),w,b
   916  002344  6F34               	movwf	(??_pf_opendir+51)& (0+255),b
   917  002346  0E00               	movlw	0
   918  002348  1131               	iorwf	(??_pf_opendir+48)& (0+255),w,b
   919  00234A  6F35               	movwf	(??_pf_opendir+52)& (0+255),b
   920  00234C  0E00               	movlw	0
   921  00234E  1132               	iorwf	(??_pf_opendir+49)& (0+255),w,b
   922  002350  6F36               	movwf	(??_pf_opendir+53)& (0+255),b
   923  002352  50E1               	movf	fsr1l,w,c
   924  002354  0F04               	addlw	4
   925  002356  6EE9               	movwf	fsr0l,c
   926  002358  6AEA               	clrf	fsr0h,c
   927  00235A  C333  FFEE         	movff	??_pf_opendir+50,postinc0
   928  00235E  C334  FFEE         	movff	??_pf_opendir+51,postinc0
   929  002362  C335  FFEE         	movff	??_pf_opendir+52,postinc0
   930  002366  C336  FFED         	movff	??_pf_opendir+53,postdec0
   931                           ;pff.c: 785: } else {
   932  00236A  D002               	goto	l306
   933  00236C                     l307:
   934                           ; BSR set to: 3
   935                           ;pff.c: 786: res = FR_NO_PATH;
   936  00236C  0E04               	movlw	4
   937  00236E  6F02               	movwf	(??_pf_opendir+1)& (0+255),b
   938                           ; BSR set to: 3
   939  002370                     l306:
   940                           ; BSR set to: 3
   941                           ;pff.c: 787: }
   942                           ;pff.c: 788: }
   943                           ;pff.c: 789: if (res == FR_OK)
   944  002370  6702               	tstfsz	(??_pf_opendir+1)& (0+255),b
   945  002372  D00A               	goto	l305
   946                           ;pff.c: 790: res = dir_rewind(dj);
   947  002374  CFE1 F36C          	movff	fsr1l,?_dir_rewind
   948  002378  0E0F               	movlw	15
   949  00237A  6F6D               	movwf	(?_dir_rewind+1)& (0+255),b
   950  00237C  0E5F               	movlw	__accesstop+-1
   951  00237E  656C               	cpfsgt	?_dir_rewind& (0+255),b
   952  002380  6B6D               	clrf	(?_dir_rewind+1)& (0+255),b
   953  002382  EC84  F00E         	call	_dir_rewind	;wreg free
   954  002386  6F02               	movwf	(??_pf_opendir+1)& (0+255),b
   955                           ; BSR set to: 3
   956  002388                     l305:
   957                           ; BSR set to: 3
   958                           ;pff.c: 791: }
   959                           ;pff.c: 792: if (res == FR_NO_FILE) res = FR_NO_
      +                          PATH;
   960  002388  5102               	movf	(??_pf_opendir+1)& (0+255),w,b
   961  00238A  0A03               	xorlw	3
   962  00238C  E102               	bnz	l304
   963  00238E  0E04               	movlw	4
   964  002390                     L2:
   965  002390  6F02               	movwf	(??_pf_opendir+1)& (0+255),b
   966                           ; BSR set to: 3
   967  002392                     l304:
   968                           ; BSR set to: 3
   969                           ;pff.c: 793: }
   970                           ;pff.c: 795: return res;
   971  002392  5102               	movf	(??_pf_opendir+1)& (0+255),w,b
   972                           ;pff.c: 796: }
   973                           ; BSR set to: 3
   974  002394  0012               	return	
   975  002396                     __end_of_pf_opendir:
   976                           	opt stack 0
   977                           
   978                           	psect	text4
   979                           ; =============== function _pf_opendir ends ====
      +                          ========
   980                           ; *************** function _play_wave_file *****
      +                          ************
   981                           ; Defined at:
   982                           ;		line 86 in file "D:\ElabPh\SDMMC\PIC WAV Play
      +                          er\PIC18 SD WAV Audio Player\src_no_lcd\wave_fil
      +                          e.c"
   983                           ; Parameters:
   984                           ;		fn             size:   1reg:   wre	type: PTR 
      +                          const unsigned char ; Largest target is 22
   985                           ;		 -> Fno(22), 
   986                           ; Auto variables:
   987                           ;		fn          	       	type: PTR const unsigned
      +                           char ; Largest target is 22
   988                           ;		 -> Fno(22), 
   989                           ;		amplitude   	       	type: unsigned short 
   990                           ;		sz          	       	type: unsigned long 
   991                           ;		i           	       	type: unsigned long 
   992                           ; Return value:
   993                           ;		type: unsigned int 
   994                           ;		size: 2
   995                           ; Registers used:
   996                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2
      +                          h, status,2, status,0, tblptrl, tblptrh, tblptru
      +                          , tablat, prodl, prodh, cstack
   997                           ; Tracked objects:
   998                           ;		On entry : F/3
   999                           ;		On exit  : F/3
  1000                           ;		Unchanged: FFFFFFF0/0
  1001                           ; Data sizes:
  1002                           ;		Autos:   11
  1003                           ;		Params:   0
  1004                           ;		Temp:     2
  1005                           ;		Total:   13
  1006                           ; This function calls:
  1007                           ;		_pf_open
  1008                           ;		_load_header
  1009                           ;		_pf_read
  1010                           ;		_wav_putc
  1011                           ; This function is called by:
  1012                           ;		_main
  1013                           ; This function uses a non-reentrant model
  1014                           ; 
  1015  000000                     
  1016                           ;wave_file.c: 85: UINT play_wave_file(const char
      +                           *fn)
  1017                           ;wave_file.c: 86: {
  1018  001284                     _play_wave_file:
  1019                           	opt stack 28
  1020                           ; BSR set to: 3
  1021                           ;play_wave_file@fn stored from wreg
  1022  001284  CFE8 F300          	movff	wreg,??_play_wave_file
  1023  001288  5100               	movf	??_play_wave_file& (0+255),w,b
  1024  00128A  EC85  F010         	call	_pf_open
  1025  00128E  0900               	iorlw	0
  1026  001290  E001 D0D6          	bnz	l620
  1027                           ;wave_file.c: 93: sz = load_header();
  1028  001294  EC4B  F008         	call	_load_header	;wreg free
  1029  001298  C30D  F303         	movff	?_load_header,??_play_wave_file+3
  1030  00129C  C30E  F304         	movff	?_load_header+1,??_play_wave_file+4
  1031  0012A0  C30F  F305         	movff	?_load_header+2,??_play_wave_file+5
  1032  0012A4  C310  F306         	movff	?_load_header+3,??_play_wave_file+6
  1033                           ;wave_file.c: 94: if (sz < 256) return (UINT)sz;
  1034  0012A8  0E00               	movlw	0
  1035  0012AA  5D03               	subwf	(??_play_wave_file+3)& (0+255),w,b
  1036  0012AC  0E01               	movlw	1
  1037  0012AE  5904               	subwfb	(??_play_wave_file+4)& (0+255),w,b
  1038  0012B0  0E00               	movlw	0
  1039  0012B2  5905               	subwfb	(??_play_wave_file+5)& (0+255),w,b
  1040  0012B4  0E00               	movlw	0
  1041  0012B6  5906               	subwfb	(??_play_wave_file+6)& (0+255),w,b
  1042  0012B8  E201 D0C2          	bnc	l620
  1043                           ; BSR set to: 3
  1044                           ;wave_file.c: 95: TRISC &= 0b11111001;
  1045  0012BC  0EF9               	movlw	249
  1046  0012BE  1694               	andwf	3988,f,c	;volatile
  1047                           ;wave_file.c: 96: if( (NumChannels==2) && (BitsP
      +                          erSample==16) ){
  1048  0012C0  504C               	movf	76,w,c
  1049  0012C2  0A02               	xorlw	2
  1050  0012C4  104D               	iorwf	77,w,c
  1051  0012C6  E137               	bnz	l623
  1052  0012C8  504E               	movf	78,w,c
  1053  0012CA  0A10               	xorlw	16
  1054  0012CC  104F               	iorwf	79,w,c
  1055  0012CE  E133               	bnz	l623
  1056                           ;wave_file.c: 97: do{
  1057  0012D0                     l626:
  1058                           ; BSR set to: 3
  1059                           ;wave_file.c: 98: pf_read(Buff, 256, &rb);
  1060  0012D0  6B25               	clrf	(?_pf_read+4)& (0+255),b
  1061  0012D2  ECA2  F00B         	call	PL2
  1062  0012D6  EC82  F005         	call	_pf_read	;wreg free
  1063                           ;wave_file.c: 100: for(i=0; i<(256>>2); i++){
  1064  0012DA  6B07               	clrf	(??_play_wave_file+7)& (0+255),b
  1065  0012DC  6B08               	clrf	(??_play_wave_file+8)& (0+255),b
  1066  0012DE  6B09               	clrf	(??_play_wave_file+9)& (0+255),b
  1067  0012E0  6B0A               	clrf	(??_play_wave_file+10)& (0+255),b
  1068  0012E2                     l627:
  1069                           ; BSR set to: 3
  1070                           ;wave_file.c: 101: amplitude = Buff[(i<<2)+1];
  1071  0012E2  C307  F30B         	movff	??_play_wave_file+7,??_play_wave_file+11
  1072  0012E6  C308  F30C         	movff	??_play_wave_file+8,??_play_wave_file+12
  1073  0012EA  90D8               	bcf	status,0,c
  1074  0012EC  370B               	rlcf	(??_play_wave_file+11)& (0+255),f,b
  1075  0012EE  370C               	rlcf	(??_play_wave_file+12)& (0+255),f,b
  1076  0012F0  90D8               	bcf	status,0,c
  1077  0012F2  370B               	rlcf	(??_play_wave_file+11)& (0+255),f,b
  1078  0012F4  370C               	rlcf	(??_play_wave_file+12)& (0+255),f,b
  1079  0012F6  0E01               	movlw	1
  1080  0012F8  0103               	movlb	3	; () banked
  1081  0012FA  250B               	addwf	(??_play_wave_file+11)& (0+255),w,b
  1082  0012FC  6EE9               	movwf	fsr0l,c
  1083  0012FE  0E02               	movlw	2
  1084  001300  210C               	addwfc	(??_play_wave_file+12)& (0+255),w,b
  1085  001302  6EEA               	movwf	fsr0h,c
  1086  001304  50EF               	movf	indf0,w,c
  1087  001306  6F01               	movwf	(??_play_wave_file+1)& (0+255),b
  1088  001308  6B02               	clrf	(??_play_wave_file+2)& (0+255),b
  1089                           ;wave_file.c: 103: if(amplitude&0x80) amplitude 
      +                          = 0;
  1090  00130A  AF01               	btfss	(??_play_wave_file+1)& (0+255),7,b
  1091  00130C  D002               	goto	l630
  1092  00130E  6B01               	clrf	(??_play_wave_file+1)& (0+255),b
  1093  001310  6B02               	clrf	(??_play_wave_file+2)& (0+255),b
  1094  001312                     l630:
  1095                           ; BSR set to: 3
  1096                           ;wave_file.c: 105: wav_putc( amplitude );
  1097  001312  5101               	movf	(??_play_wave_file+1)& (0+255),w,b
  1098  001314  EC96  F014         	call	_wav_putc
  1099  001318  0103               	movlb	3	; () banked
  1100  00131A  2B07               	incf	(??_play_wave_file+7)& (0+255),f,b
  1101  00131C  0E00               	movlw	0
  1102  00131E  2308               	addwfc	(??_play_wave_file+8)& (0+255),f,b
  1103  001320  2309               	addwfc	(??_play_wave_file+9)& (0+255),f,b
  1104  001322  230A               	addwfc	(??_play_wave_file+10)& (0+255),f,b
  1105  001324  0E40               	movlw	64
  1106  001326  EC9A  F00B         	call	PL3
  1107  00132A  E3DB               	bnc	l627
  1108                           ; BSR set to: 3
  1109                           ;wave_file.c: 106: }
  1110                           ;wave_file.c: 107: }while(rb==256);
  1111  00132C  0401               	decf	1,w,c
  1112  00132E  1000               	iorwf	0,w,c
  1113  001330  E001 D084          	bnz	l631
  1114  001334  D7CD               	goto	l626
  1115                           ; BSR set to: 3
  1116                           ;wave_file.c: 108: }
  1117  001336                     l623:
  1118                           ; BSR set to: 3
  1119                           ;wave_file.c: 109: else if( (NumChannels==1) && 
      +                          (BitsPerSample==16) ){
  1120  001336  044C               	decf	76,w,c
  1121  001338  104D               	iorwf	77,w,c
  1122  00133A  E12C               	bnz	l632
  1123  00133C  504E               	movf	78,w,c
  1124  00133E  0A10               	xorlw	16
  1125  001340  104F               	iorwf	79,w,c
  1126  001342  E128               	bnz	l632
  1127                           ;wave_file.c: 110: do{
  1128  001344                     l635:
  1129                           ; BSR set to: 3
  1130                           ;wave_file.c: 111: pf_read(Buff, 256, &rb);
  1131  001344  6B25               	clrf	(?_pf_read+4)& (0+255),b
  1132  001346  ECA2  F00B         	call	PL2
  1133  00134A  EC82  F005         	call	_pf_read	;wreg free
  1134                           ;wave_file.c: 113: for(i=0; i<(256>>1); i++){
  1135  00134E  6B07               	clrf	(??_play_wave_file+7)& (0+255),b
  1136  001350  6B08               	clrf	(??_play_wave_file+8)& (0+255),b
  1137  001352  6B09               	clrf	(??_play_wave_file+9)& (0+255),b
  1138  001354  6B0A               	clrf	(??_play_wave_file+10)& (0+255),b
  1139  001356                     l636:
  1140                           ; BSR set to: 3
  1141                           ;wave_file.c: 114: amplitude = Buff[(i<<1)+1];
  1142  001356  90D8               	bcf	status,0,c
  1143  001358  3507               	rlcf	(??_play_wave_file+7)& (0+255),w,b
  1144  00135A  6F0B               	movwf	(??_play_wave_file+11)& (0+255),b
  1145  00135C  3508               	rlcf	(??_play_wave_file+8)& (0+255),w,b
  1146  00135E  6F0C               	movwf	(??_play_wave_file+12)& (0+255),b
  1147  001360  0E01               	movlw	1
  1148  001362  0103               	movlb	3	; () banked
  1149  001364  250B               	addwf	(??_play_wave_file+11)& (0+255),w,b
  1150  001366  6EE9               	movwf	fsr0l,c
  1151  001368  0E02               	movlw	2
  1152  00136A  210C               	addwfc	(??_play_wave_file+12)& (0+255),w,b
  1153  00136C  6EEA               	movwf	fsr0h,c
  1154  00136E  50EF               	movf	indf0,w,c
  1155  001370  6EF3               	movwf	prodl,c
  1156  001372  6AF4               	clrf	prodh,c
  1157                           ;wave_file.c: 116: if(amplitude&0x80) amplitude 
      +                          = 0;
  1158  001374  AEF3               	btfss	prodl,7,c
  1159  001376  D002               	goto	l639
  1160  001378  6AF3               	clrf	prodl,c
  1161  00137A  6AF4               	clrf	prodh,c
  1162  00137C                     l639:
  1163                           ; BSR set to: 3
  1164                           ;wave_file.c: 118: wav_putc( amplitude );
  1165  00137C  50F3               	movf	prodl,w,c
  1166  00137E  EC96  F014         	call	_wav_putc
  1167  001382  EC92  F00B         	call	PL4
  1168  001386  EC9A  F00B         	call	PL3
  1169  00138A  E3E5               	bnc	l636
  1170                           ; BSR set to: 3
  1171                           ;wave_file.c: 119: }
  1172                           ;wave_file.c: 120: }while(rb==256);
  1173  00138C  0401               	decf	1,w,c
  1174  00138E  1000               	iorwf	0,w,c
  1175  001390  E155               	bnz	l631
  1176  001392  D7D8               	goto	l635
  1177                           ; BSR set to: 3
  1178                           ;wave_file.c: 121: }
  1179  001394                     l632:
  1180                           ; BSR set to: 3
  1181                           ;wave_file.c: 122: else if( (NumChannels==2) && 
      +                          (BitsPerSample==8) ){
  1182  001394  504C               	movf	76,w,c
  1183  001396  0A02               	xorlw	2
  1184  001398  104D               	iorwf	77,w,c
  1185  00139A  E125               	bnz	l641
  1186  00139C  504E               	movf	78,w,c
  1187  00139E  0A08               	xorlw	8
  1188  0013A0  104F               	iorwf	79,w,c
  1189  0013A2  E121               	bnz	l641
  1190                           ;wave_file.c: 123: do{
  1191  0013A4                     l644:
  1192                           ; BSR set to: 3
  1193                           ;wave_file.c: 124: pf_read(Buff, 256, &rb);
  1194  0013A4  6B25               	clrf	(?_pf_read+4)& (0+255),b
  1195  0013A6  ECA2  F00B         	call	PL2
  1196  0013AA  EC82  F005         	call	_pf_read	;wreg free
  1197                           ;wave_file.c: 125: for(i=0; i<(256>>1); i++) wav
      +                          _putc(Buff[i<<1]);
  1198  0013AE  6B07               	clrf	(??_play_wave_file+7)& (0+255),b
  1199  0013B0  6B08               	clrf	(??_play_wave_file+8)& (0+255),b
  1200  0013B2  6B09               	clrf	(??_play_wave_file+9)& (0+255),b
  1201  0013B4  6B0A               	clrf	(??_play_wave_file+10)& (0+255),b
  1202  0013B6                     l645:
  1203                           ; BSR set to: 3
  1204  0013B6  90D8               	bcf	status,0,c
  1205  0013B8  3507               	rlcf	(??_play_wave_file+7)& (0+255),w,b
  1206  0013BA  6F0B               	movwf	(??_play_wave_file+11)& (0+255),b
  1207  0013BC  3508               	rlcf	(??_play_wave_file+8)& (0+255),w,b
  1208  0013BE  6F0C               	movwf	(??_play_wave_file+12)& (0+255),b
  1209  0013C0  0E00               	movlw	0
  1210  0013C2  0103               	movlb	3	; () banked
  1211  0013C4  250B               	addwf	(??_play_wave_file+11)& (0+255),w,b
  1212  0013C6  6EE9               	movwf	fsr0l,c
  1213  0013C8  0E02               	movlw	2
  1214  0013CA  210C               	addwfc	(??_play_wave_file+12)& (0+255),w,b
  1215  0013CC  6EEA               	movwf	fsr0h,c
  1216  0013CE  50EF               	movf	indf0,w,c
  1217  0013D0  EC96  F014         	call	_wav_putc
  1218  0013D4  EC92  F00B         	call	PL4
  1219  0013D8  EC9A  F00B         	call	PL3
  1220  0013DC  E3EC               	bnc	l645
  1221                           ; BSR set to: 3
  1222                           ;wave_file.c: 126: }while(rb==256);
  1223  0013DE  0401               	decf	1,w,c
  1224  0013E0  1000               	iorwf	0,w,c
  1225  0013E2  E12C               	bnz	l631
  1226  0013E4  D7DF               	goto	l644
  1227                           ; BSR set to: 3
  1228                           ;wave_file.c: 127: }
  1229  0013E6                     l641:
  1230                           ; BSR set to: 3
  1231                           ;wave_file.c: 128: else if( (NumChannels==1) && 
      +                          (BitsPerSample==8) ){
  1232  0013E6  044C               	decf	76,w,c
  1233  0013E8  104D               	iorwf	77,w,c
  1234  0013EA  E128               	bnz	l631
  1235  0013EC  504E               	movf	78,w,c
  1236  0013EE  0A08               	xorlw	8
  1237  0013F0  104F               	iorwf	79,w,c
  1238  0013F2  E124               	bnz	l631
  1239                           ;wave_file.c: 129: do{
  1240  0013F4                     l652:
  1241                           ; BSR set to: 3
  1242                           ;wave_file.c: 130: pf_read(Buff, 256, &rb);
  1243  0013F4  6B25               	clrf	(?_pf_read+4)& (0+255),b
  1244  0013F6  ECA2  F00B         	call	PL2
  1245  0013FA  EC82  F005         	call	_pf_read	;wreg free
  1246                           ;wave_file.c: 131: for(i=0; i<256; i++) wav_putc
      +                          (Buff[i]);
  1247  0013FE  6B07               	clrf	(??_play_wave_file+7)& (0+255),b
  1248  001400  6B08               	clrf	(??_play_wave_file+8)& (0+255),b
  1249  001402  6B09               	clrf	(??_play_wave_file+9)& (0+255),b
  1250  001404  6B0A               	clrf	(??_play_wave_file+10)& (0+255),b
  1251  001406                     l653:
  1252                           ; BSR set to: 3
  1253  001406  0E00               	movlw	0
  1254  001408  0103               	movlb	3	; () banked
  1255  00140A  2507               	addwf	(??_play_wave_file+7)& (0+255),w,b
  1256  00140C  6EE9               	movwf	fsr0l,c
  1257  00140E  0E02               	movlw	2
  1258  001410  2108               	addwfc	(??_play_wave_file+8)& (0+255),w,b
  1259  001412  6EEA               	movwf	fsr0h,c
  1260  001414  50EF               	movf	indf0,w,c
  1261  001416  EC96  F014         	call	_wav_putc
  1262  00141A  0103               	movlb	3	; () banked
  1263  00141C  2B07               	incf	(??_play_wave_file+7)& (0+255),f,b
  1264  00141E  0E00               	movlw	0
  1265  001420  2308               	addwfc	(??_play_wave_file+8)& (0+255),f,b
  1266  001422  2309               	addwfc	(??_play_wave_file+9)& (0+255),f,b
  1267  001424  230A               	addwfc	(??_play_wave_file+10)& (0+255),f,b
  1268  001426  5D07               	subwf	(??_play_wave_file+7)& (0+255),w,b
  1269  001428  0E01               	movlw	1
  1270  00142A  5908               	subwfb	(??_play_wave_file+8)& (0+255),w,b
  1271  00142C  0E00               	movlw	0
  1272  00142E  5909               	subwfb	(??_play_wave_file+9)& (0+255),w,b
  1273  001430  0E00               	movlw	0
  1274  001432  590A               	subwfb	(??_play_wave_file+10)& (0+255),w,b
  1275  001434  E3E8               	bnc	l653
  1276                           ; BSR set to: 3
  1277                           ;wave_file.c: 132: }while(rb==256);
  1278  001436  0401               	decf	1,w,c
  1279  001438  1000               	iorwf	0,w,c
  1280  00143A  E0DC               	bz	l652
  1281                           ; BSR set to: 3
  1282                           ; BSR set to: 3
  1283                           ; BSR set to: 3
  1284                           ; BSR set to: 3
  1285  00143C                     l631:
  1286                           ; BSR set to: 3
  1287                           ;wave_file.c: 133: }
  1288                           ;wave_file.c: 135: TRISC |= 0b00000110;
  1289  00143C  0E06               	movlw	6
  1290  00143E  1294               	iorwf	3988,f,c	;volatile
  1291                           ; BSR set to: 3
  1292                           ;wave_file.c: 140: }
  1293  001440                     l620:
  1294                           ; BSR set to: 3
  1295  001440  0012               	return	
  1296  001442                     __end_of_play_wave_file:
  1297                           	opt stack 0
  1298                           
  1299                           	psect	text5
  1300                           ; =============== function _play_wave_file ends 
      +                          ============
  1301                           ; *************** function _pf_mount ***********
      +                          ******
  1302                           ; Defined at:
  1303                           ;		line 459 in file "D:\ElabPh\SDMMC\PIC WAV Pla
      +                          yer\PIC18 SD WAV Audio Player\src_no_lcd\pff.c"
  1304                           ; Parameters:
  1305                           ;		fs             size:   1reg:   wre	type: PTR 
      +                          struct _FATFS_; Largest target is 45
  1306                           ;		 -> Fs(44), 
  1307                           ; Auto variables:
  1308                           ;		fmt         	       	type: unsigned char 
  1309                           ;		fs          	       	type: PTR struct _FATFS_
      +                          ; Largest target is 45
  1310                           ;		 -> Fs(44), 
  1311                           ;		mclst       	       	type: unsigned long 
  1312                           ;		tsect       	       	type: unsigned long 
  1313                           ;		bsect       	       	type: unsigned long 
  1314                           ;		fsize       	       	type: unsigned long 
  1315                           ;		buf         	       	type: unsigned char [36]
  1316                           ; Return value:
  1317                           ;		type: enum E1240
  1318                           ;		size: 1
  1319                           ; Registers used:
  1320                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, prodl, prodh, cstack
  1321                           ; Tracked objects:
  1322                           ;		On entry : 0/0
  1323                           ;		On exit  : 0/0
  1324                           ;		Unchanged: FFFFFFF0/0
  1325                           ; Data sizes:
  1326                           ;		Autos:   54
  1327                           ;		Params:   0
  1328                           ;		Temp:    19
  1329                           ;		Total:   73
  1330                           ; This function calls:
  1331                           ;		_disk_initialize
  1332                           ;		_check_fs
  1333                           ;		_disk_readp
  1334                           ;		___aslmul
  1335                           ;		___lldiv
  1336                           ; This function is called by:
  1337                           ;		_main
  1338                           ; This function uses a non-reentrant model
  1339                           ; 
  1340  000000                     
  1341                           ;pff.c: 456: FRESULT pf_mount (
  1342                           ;pff.c: 457: FATFS *fs
  1343                           ;pff.c: 458: )
  1344                           ;pff.c: 459: {
  1345  0007AE                     _pf_mount:
  1346                           	opt stack 28
  1347                           ; BSR set to: ?
  1348                           ; pf_mount@fs loaded to fsr2l
  1349  0007AE  CFE8 FFD9          	movff	wreg,fsr2l
  1350  0007B2  6A09               	clrf	9,c
  1351                           ;pf_mount@fs stored from fsr2l
  1352  0007B4  CFD9 F301          	movff	fsr2l,??_pf_mount+1
  1353                           ;pff.c: 465: if (!fs) return FR_OK;
  1354  0007B8  66D9               	tstfsz	fsr2l,c
  1355  0007BA  D001               	goto	l255
  1356  0007BC  D1A1               	goto	L3
  1357  0007BE                     l255:
  1358                           ; BSR set to: ?
  1359                           ;pff.c: 467: if (disk_initialize() & 0x01)
  1360  0007BE  EC2F  F00D         	call	_disk_initialize	;wreg free
  1361  0007C2  0103               	movlb	3	; () banked
  1362  0007C4  6F36               	movwf	(??_pf_mount+54)& (0+255),b
  1363  0007C6  A136               	btfss	(??_pf_mount+54)& (0+255),0,b
  1364  0007C8  D002               	goto	l256
  1365                           ;pff.c: 468: return FR_NOT_READY;
  1366  0007CA  0E02               	movlw	2
  1367  0007CC  D19A               	goto	l254
  1368  0007CE                     l256:
  1369                           ; BSR set to: 3
  1370                           ;pff.c: 471: bsect = 0;
  1371  0007CE  6B0A               	clrf	(??_pf_mount+10)& (0+255),b
  1372  0007D0  6B0B               	clrf	(??_pf_mount+11)& (0+255),b
  1373  0007D2  6B0C               	clrf	(??_pf_mount+12)& (0+255),b
  1374  0007D4  6B0D               	clrf	(??_pf_mount+13)& (0+255),b
  1375                           ;pff.c: 472: fmt = check_fs(buf, bsect);
  1376  0007D6  C30A  F34B         	movff	??_pf_mount+10,?_check_fs+2
  1377  0007DA  EC87  F00B         	call	PL5
  1378  0007DE  EC71  F012         	call	_check_fs	;wreg free
  1379  0007E2  0103               	movlb	3	; () banked
  1380  0007E4  6F00               	movwf	??_pf_mount& (0+255),b
  1381                           ;pff.c: 473: if (fmt == 1) {
  1382  0007E6  0500               	decf	??_pf_mount& (0+255),w,b
  1383  0007E8  E122               	bnz	l257
  1384                           ;pff.c: 475: if (disk_readp(buf, bsect, 446, 16)
      +                          ) {
  1385  0007EA  0E10               	movlw	16
  1386  0007EC  6F9E               	movwf	(?_disk_readp+8)& (0+255),b
  1387  0007EE  6B9F               	clrf	(?_disk_readp+9)& (0+255),b
  1388  0007F0  0EBE               	movlw	190
  1389  0007F2  6F9C               	movwf	(?_disk_readp+6)& (0+255),b
  1390  0007F4  0E01               	movlw	1
  1391  0007F6  6F9D               	movwf	(?_disk_readp+7)& (0+255),b
  1392  0007F8  EC7A  F00B         	call	PL6
  1393  0007FC  ECFA  F010         	call	_disk_readp	;wreg free
  1394  000800  0900               	iorlw	0
  1395  000802  E002               	bz	l258
  1396                           ;pff.c: 476: fmt = 3;
  1397  000804  0E03               	movlw	3
  1398  000806  D011               	goto	L4
  1399                           ;pff.c: 477: } else {
  1400  000808                     l258:
  1401                           ; BSR set to: ?
  1402                           ;pff.c: 478: if (buf[4]) {
  1403  000808  0103               	movlb	3	; () banked
  1404  00080A  5116               	movf	(??_pf_mount+22)& (0+255),w,b
  1405  00080C  E010               	bz	l257
  1406                           ;pff.c: 479: bsect = (DWORD)(*(DWORD*)(BYTE*)(&b
      +                          uf[8]));
  1407  00080E  C31A  F30A         	movff	??_pf_mount+26,??_pf_mount+10
  1408  000812  C31B  F30B         	movff	??_pf_mount+27,??_pf_mount+11
  1409  000816  C31C  F30C         	movff	??_pf_mount+28,??_pf_mount+12
  1410  00081A  C31D  F30D         	movff	??_pf_mount+29,??_pf_mount+13
  1411                           ;pff.c: 480: fmt = check_fs(buf, bsect);
  1412  00081E  C30A  F34B         	movff	??_pf_mount+10,?_check_fs+2
  1413  000822  EC87  F00B         	call	PL5
  1414  000826  EC71  F012         	call	_check_fs	;wreg free
  1415  00082A                     L4:
  1416  00082A  0103               	movlb	3	; () banked
  1417  00082C  6F00               	movwf	??_pf_mount& (0+255),b
  1418                           ; BSR set to: 3
  1419                           ; BSR set to: 3
  1420  00082E                     l257:
  1421                           ; BSR set to: 3
  1422                           ;pff.c: 481: }
  1423                           ;pff.c: 482: }
  1424                           ;pff.c: 483: }
  1425                           ;pff.c: 484: if (fmt == 3) return FR_DISK_ERR;
  1426  00082E  5100               	movf	??_pf_mount& (0+255),w,b
  1427  000830  0A03               	xorlw	3
  1428  000832  E010               	bz	u9140
  1429                           ; BSR set to: 3
  1430                           ;pff.c: 485: if (fmt) return FR_NO_FILESYSTEM;
  1431  000834  5100               	movf	??_pf_mount& (0+255),w,b
  1432  000836  E002               	bz	l262
  1433  000838  0E07               	movlw	7
  1434  00083A  D163               	goto	l254
  1435  00083C                     l262:
  1436                           ; BSR set to: 3
  1437                           ;pff.c: 488: if (disk_readp(buf, bsect, 13, size
      +                          of(buf))) return FR_DISK_ERR;
  1438  00083C  0E24               	movlw	36
  1439  00083E  6F9E               	movwf	(?_disk_readp+8)& (0+255),b
  1440  000840  6B9F               	clrf	(?_disk_readp+9)& (0+255),b
  1441  000842  0E0D               	movlw	13
  1442  000844  6F9C               	movwf	(?_disk_readp+6)& (0+255),b
  1443  000846  6B9D               	clrf	(?_disk_readp+7)& (0+255),b
  1444  000848  EC7A  F00B         	call	PL6
  1445  00084C  ECFA  F010         	call	_disk_readp	;wreg free
  1446  000850  0900               	iorlw	0
  1447  000852  E002               	bz	l263
  1448  000854                     u9140:
  1449  000854  0E01               	movlw	1
  1450  000856  D155               	goto	l254
  1451  000858                     l263:
  1452                           ; BSR set to: ?
  1453                           ;pff.c: 490: fsize = (WORD)(*(WORD*)(BYTE*)(buf+
      +                          22-13));
  1454  000858  0103               	movlb	3	; () banked
  1455  00085A  C31B  F30E         	movff	??_pf_mount+27,??_pf_mount+14
  1456  00085E  C31C  F30F         	movff	??_pf_mount+28,??_pf_mount+15
  1457  000862  6B10               	clrf	(??_pf_mount+16)& (0+255),b
  1458  000864  6B11               	clrf	(??_pf_mount+17)& (0+255),b
  1459                           ; pf_mount@fs loaded to fsr1l
  1460  000866  C301  FFE1         	movff	??_pf_mount+1,fsr1l
  1461                           ;pff.c: 491: if (!fsize) fsize = (DWORD)(*(DWORD
      +                          *)(BYTE*)(buf+36-13));
  1462  00086A  5111               	movf	(??_pf_mount+17)& (0+255),w,b
  1463  00086C  110E               	iorwf	(??_pf_mount+14)& (0+255),w,b
  1464  00086E  110F               	iorwf	(??_pf_mount+15)& (0+255),w,b
  1465  000870  1110               	iorwf	(??_pf_mount+16)& (0+255),w,b
  1466  000872  E108               	bnz	l264
  1467  000874  C329  F30E         	movff	??_pf_mount+41,??_pf_mount+14
  1468  000878  C32A  F30F         	movff	??_pf_mount+42,??_pf_mount+15
  1469  00087C  C32B  F310         	movff	??_pf_mount+43,??_pf_mount+16
  1470  000880  C32C  F311         	movff	??_pf_mount+44,??_pf_mount+17
  1471  000884                     l264:
  1472                           ; BSR set to: 3
  1473                           ;pff.c: 493: fsize *= buf[16-13];
  1474  000884  5115               	movf	(??_pf_mount+21)& (0+255),w,b
  1475  000886  6F4B               	movwf	(?___aslmul+2)& (0+255),b
  1476  000888  6B4C               	clrf	(?___aslmul+3)& (0+255),b
  1477  00088A  6B4D               	clrf	(?___aslmul+4)& (0+255),b
  1478  00088C  6B4E               	clrf	(?___aslmul+5)& (0+255),b
  1479  00088E  0E0E               	movlw	low (??_pf_mount+14)
  1480  000890  6F49               	movwf	?___aslmul& (0+255),b
  1481  000892  0E03               	movlw	high (??_pf_mount+14)
  1482  000894  6F4A               	movwf	(?___aslmul+1)& (0+255),b
  1483  000896  EC3D  F014         	call	___aslmul	;wreg free
  1484                           ;pff.c: 494: fs->fatbase = bsect + (WORD)(*(WORD
      +                          *)(BYTE*)(buf+14-13));
  1485  00089A  5113               	movf	(??_pf_mount+19)& (0+255),w,b
  1486  00089C  250A               	addwf	(??_pf_mount+10)& (0+255),w,b
  1487  00089E  6F36               	movwf	(??_pf_mount+54)& (0+255),b
  1488  0008A0  5114               	movf	(??_pf_mount+20)& (0+255),w,b
  1489  0008A2  210B               	addwfc	(??_pf_mount+11)& (0+255),w,b
  1490  0008A4  6F37               	movwf	(??_pf_mount+55)& (0+255),b
  1491  0008A6  0E00               	movlw	0
  1492  0008A8  210C               	addwfc	(??_pf_mount+12)& (0+255),w,b
  1493  0008AA  6F38               	movwf	(??_pf_mount+56)& (0+255),b
  1494  0008AC  0E00               	movlw	0
  1495  0008AE  210D               	addwfc	(??_pf_mount+13)& (0+255),w,b
  1496  0008B0  6F39               	movwf	(??_pf_mount+57)& (0+255),b
  1497  0008B2  50E1               	movf	fsr1l,w,c
  1498  0008B4  0F0C               	addlw	12
  1499  0008B6  6EE9               	movwf	fsr0l,c
  1500  0008B8  6AEA               	clrf	fsr0h,c
  1501  0008BA  C336  FFEE         	movff	??_pf_mount+54,postinc0
  1502  0008BE  C337  FFEE         	movff	??_pf_mount+55,postinc0
  1503  0008C2  C338  FFEE         	movff	??_pf_mount+56,postinc0
  1504  0008C6  C339  FFED         	movff	??_pf_mount+57,postdec0
  1505                           ;pff.c: 495: fs->csize = buf[13-13];
  1506  0008CA  28E1               	incf	fsr1l,w,c
  1507  0008CC  6EE9               	movwf	fsr0l,c
  1508  0008CE  6AEA               	clrf	fsr0h,c
  1509  0008D0  C312  FFEF         	movff	??_pf_mount+18,indf0
  1510                           ;pff.c: 496: fs->n_rootdir = (WORD)(*(WORD*)(BYT
      +                          E*)(buf+17-13));
  1511  0008D4  50E1               	movf	fsr1l,w,c
  1512  0008D6  0F04               	addlw	4
  1513  0008D8  6EE9               	movwf	fsr0l,c
  1514  0008DA  6AEA               	clrf	fsr0h,c
  1515  0008DC  C316  FFEE         	movff	??_pf_mount+22,postinc0
  1516  0008E0  C317  FFED         	movff	??_pf_mount+23,postdec0
  1517                           ;pff.c: 497: tsect = (WORD)(*(WORD*)(BYTE*)(buf+
      +                          19-13));
  1518  0008E4  C318  F306         	movff	??_pf_mount+24,??_pf_mount+6
  1519  0008E8  C319  F307         	movff	??_pf_mount+25,??_pf_mount+7
  1520  0008EC  6B08               	clrf	(??_pf_mount+8)& (0+255),b
  1521  0008EE  6B09               	clrf	(??_pf_mount+9)& (0+255),b
  1522                           ;pff.c: 498: if (!tsect) tsect = (DWORD)(*(DWORD
      +                          *)(BYTE*)(buf+32-13));
  1523  0008F0  5109               	movf	(??_pf_mount+9)& (0+255),w,b
  1524  0008F2  1106               	iorwf	(??_pf_mount+6)& (0+255),w,b
  1525  0008F4  1107               	iorwf	(??_pf_mount+7)& (0+255),w,b
  1526  0008F6  1108               	iorwf	(??_pf_mount+8)& (0+255),w,b
  1527  0008F8  E108               	bnz	l265
  1528  0008FA  C325  F306         	movff	??_pf_mount+37,??_pf_mount+6
  1529  0008FE  C326  F307         	movff	??_pf_mount+38,??_pf_mount+7
  1530  000902  C327  F308         	movff	??_pf_mount+39,??_pf_mount+8
  1531  000906  C328  F309         	movff	??_pf_mount+40,??_pf_mount+9
  1532  00090A                     l265:
  1533                           ; BSR set to: 3
  1534                           ;pff.c: 499: mclst = (tsect
  1535                           ;pff.c: 500: - (WORD)(*(WORD*)(BYTE*)(buf+14-13)
      +                          ) - fsize - fs->n_rootdir / 16
  1536                           ;pff.c: 501: ) / fs->csize + 2;
  1537  00090A  28E1               	incf	fsr1l,w,c
  1538  00090C  6EE9               	movwf	fsr0l,c
  1539  00090E  6AEA               	clrf	fsr0h,c
  1540  000910  50EF               	movf	indf0,w,c
  1541  000912  6F4D               	movwf	(?___lldiv+4)& (0+255),b
  1542  000914  6B4E               	clrf	(?___lldiv+5)& (0+255),b
  1543  000916  6B4F               	clrf	(?___lldiv+6)& (0+255),b
  1544  000918  6B50               	clrf	(?___lldiv+7)& (0+255),b
  1545  00091A  50E1               	movf	fsr1l,w,c
  1546  00091C  0F04               	addlw	4
  1547  00091E  6EE9               	movwf	fsr0l,c
  1548  000920  6AEA               	clrf	fsr0h,c
  1549  000922  CFEE F336          	movff	postinc0,??_pf_mount+54
  1550  000926  CFED F337          	movff	postdec0,??_pf_mount+55
  1551  00092A  0E04               	movlw	4
  1552  00092C  6F38               	movwf	(??_pf_mount+56)& (0+255),b
  1553  00092E                     u9175:
  1554  00092E  90D8               	bcf	status,0,c
  1555  000930  3337               	rrcf	(??_pf_mount+55)& (0+255),f,b
  1556  000932  3336               	rrcf	(??_pf_mount+54)& (0+255),f,b
  1557  000934  2F38               	decfsz	(??_pf_mount+56)& (0+255),f,b
  1558  000936  D7FB               	goto	u9175
  1559  000938  5136               	movf	(??_pf_mount+54)& (0+255),w,b
  1560  00093A  6F39               	movwf	(??_pf_mount+57)& (0+255),b
  1561  00093C  5137               	movf	(??_pf_mount+55)& (0+255),w,b
  1562  00093E  6F3A               	movwf	(??_pf_mount+58)& (0+255),b
  1563  000940  6B3B               	clrf	(??_pf_mount+59)& (0+255),b
  1564  000942  6B3C               	clrf	(??_pf_mount+60)& (0+255),b
  1565  000944  5113               	movf	(??_pf_mount+19)& (0+255),w,b
  1566  000946  6F3D               	movwf	(??_pf_mount+61)& (0+255),b
  1567  000948  5114               	movf	(??_pf_mount+20)& (0+255),w,b
  1568  00094A  6F3E               	movwf	(??_pf_mount+62)& (0+255),b
  1569  00094C  6B3F               	clrf	(??_pf_mount+63)& (0+255),b
  1570  00094E  6B40               	clrf	(??_pf_mount+64)& (0+255),b
  1571  000950  1F3D               	comf	(??_pf_mount+61)& (0+255),f,b
  1572  000952  1F3E               	comf	(??_pf_mount+62)& (0+255),f,b
  1573  000954  1F3F               	comf	(??_pf_mount+63)& (0+255),f,b
  1574  000956  1F40               	comf	(??_pf_mount+64)& (0+255),f,b
  1575  000958  2B3D               	incf	(??_pf_mount+61)& (0+255),f,b
  1576  00095A  0E00               	movlw	0
  1577  00095C  233E               	addwfc	(??_pf_mount+62)& (0+255),f,b
  1578  00095E  233F               	addwfc	(??_pf_mount+63)& (0+255),f,b
  1579  000960  2340               	addwfc	(??_pf_mount+64)& (0+255),f,b
  1580  000962  5139               	movf	(??_pf_mount+57)& (0+255),w,b
  1581  000964  5D3D               	subwf	(??_pf_mount+61)& (0+255),w,b
  1582  000966  6F41               	movwf	(??_pf_mount+65)& (0+255),b
  1583  000968  513A               	movf	(??_pf_mount+58)& (0+255),w,b
  1584  00096A  593E               	subwfb	(??_pf_mount+62)& (0+255),w,b
  1585  00096C  6F42               	movwf	(??_pf_mount+66)& (0+255),b
  1586  00096E  513B               	movf	(??_pf_mount+59)& (0+255),w,b
  1587  000970  593F               	subwfb	(??_pf_mount+63)& (0+255),w,b
  1588  000972  6F43               	movwf	(??_pf_mount+67)& (0+255),b
  1589  000974  513C               	movf	(??_pf_mount+60)& (0+255),w,b
  1590  000976  5940               	subwfb	(??_pf_mount+64)& (0+255),w,b
  1591  000978  6F44               	movwf	(??_pf_mount+68)& (0+255),b
  1592  00097A  510E               	movf	(??_pf_mount+14)& (0+255),w,b
  1593  00097C  5D41               	subwf	(??_pf_mount+65)& (0+255),w,b
  1594  00097E  6F45               	movwf	(??_pf_mount+69)& (0+255),b
  1595  000980  510F               	movf	(??_pf_mount+15)& (0+255),w,b
  1596  000982  5942               	subwfb	(??_pf_mount+66)& (0+255),w,b
  1597  000984  6F46               	movwf	(??_pf_mount+70)& (0+255),b
  1598  000986  5110               	movf	(??_pf_mount+16)& (0+255),w,b
  1599  000988  5943               	subwfb	(??_pf_mount+67)& (0+255),w,b
  1600  00098A  6F47               	movwf	(??_pf_mount+71)& (0+255),b
  1601  00098C  5111               	movf	(??_pf_mount+17)& (0+255),w,b
  1602  00098E  5944               	subwfb	(??_pf_mount+68)& (0+255),w,b
  1603  000990  6F48               	movwf	(??_pf_mount+72)& (0+255),b
  1604  000992  5106               	movf	(??_pf_mount+6)& (0+255),w,b
  1605  000994  2545               	addwf	(??_pf_mount+69)& (0+255),w,b
  1606  000996  6F49               	movwf	?___lldiv& (0+255),b
  1607  000998  5107               	movf	(??_pf_mount+7)& (0+255),w,b
  1608  00099A  2146               	addwfc	(??_pf_mount+70)& (0+255),w,b
  1609  00099C  6F4A               	movwf	(?___lldiv+1)& (0+255),b
  1610  00099E  5108               	movf	(??_pf_mount+8)& (0+255),w,b
  1611  0009A0  2147               	addwfc	(??_pf_mount+71)& (0+255),w,b
  1612  0009A2  6F4B               	movwf	(?___lldiv+2)& (0+255),b
  1613  0009A4  5109               	movf	(??_pf_mount+9)& (0+255),w,b
  1614  0009A6  2148               	addwfc	(??_pf_mount+72)& (0+255),w,b
  1615  0009A8  6F4C               	movwf	(?___lldiv+3)& (0+255),b
  1616  0009AA  ECB6  F012         	call	___lldiv	;wreg free
  1617  0009AE  0E02               	movlw	2
  1618  0009B0  2549               	addwf	?___lldiv& (0+255),w,b
  1619  0009B2  6F02               	movwf	(??_pf_mount+2)& (0+255),b
  1620  0009B4  0E00               	movlw	0
  1621  0009B6  214A               	addwfc	(?___lldiv+1)& (0+255),w,b
  1622  0009B8  6F03               	movwf	(??_pf_mount+3)& (0+255),b
  1623  0009BA  0E00               	movlw	0
  1624  0009BC  214B               	addwfc	(?___lldiv+2)& (0+255),w,b
  1625  0009BE  6F04               	movwf	(??_pf_mount+4)& (0+255),b
  1626  0009C0  0E00               	movlw	0
  1627  0009C2  214C               	addwfc	(?___lldiv+3)& (0+255),w,b
  1628  0009C4  6F05               	movwf	(??_pf_mount+5)& (0+255),b
  1629                           ;pff.c: 502: fs->max_clust = (DWORD)mclst;
  1630  0009C6  50E1               	movf	fsr1l,w,c
  1631  0009C8  0F08               	addlw	8
  1632  0009CA  6EE9               	movwf	fsr0l,c
  1633  0009CC  6AEA               	clrf	fsr0h,c
  1634  0009CE  C302  FFEE         	movff	??_pf_mount+2,postinc0
  1635  0009D2  C303  FFEE         	movff	??_pf_mount+3,postinc0
  1636  0009D6  C304  FFEE         	movff	??_pf_mount+4,postinc0
  1637  0009DA  C305  FFEE         	movff	??_pf_mount+5,postinc0
  1638                           ;pff.c: 504: fmt = 1;
  1639  0009DE  0E01               	movlw	1
  1640  0009E0  6EF3               	movwf	prodl,c
  1641                           ;pff.c: 505: if (mclst >= 0xFF7) fmt = 2;
  1642  0009E2  0EF7               	movlw	247
  1643  0009E4  5D02               	subwf	(??_pf_mount+2)& (0+255),w,b
  1644  0009E6  0E0F               	movlw	15
  1645  0009E8  EC74  F00B         	call	PL7
  1646  0009EC  E302               	bnc	l266
  1647  0009EE  0E02               	movlw	2
  1648  0009F0  6EF3               	movwf	prodl,c
  1649  0009F2                     l266:
  1650                           ; BSR set to: 3
  1651                           ;pff.c: 506: if (mclst >= 0xFFF7)
  1652  0009F2  0EF7               	movlw	247
  1653  0009F4  5D02               	subwf	(??_pf_mount+2)& (0+255),w,b
  1654  0009F6  0EFF               	movlw	255
  1655  0009F8  EC74  F00B         	call	PL7
  1656  0009FC  E302               	bnc	l267
  1657                           ;pff.c: 508: fmt = 3;
  1658  0009FE  0E03               	movlw	3
  1659  000A00  6EF3               	movwf	prodl,c
  1660  000A02                     l267:
  1661                           ; BSR set to: 3
  1662                           ;pff.c: 513: fs->fs_type = fmt;
  1663  000A02  50E1               	movf	fsr1l,w,c
  1664  000A04  6EE9               	movwf	fsr0l,c
  1665  000A06  6AEA               	clrf	fsr0h,c
  1666  000A08  CFF3 FFEF          	movff	prodl,indf0
  1667                           ;pff.c: 515: if (fmt == 3)
  1668  000A0C  50F3               	movf	prodl,w,c
  1669  000A0E  0A03               	xorlw	3
  1670  000A10  E10D               	bnz	l268
  1671                           ;pff.c: 516: fs->dirbase = (DWORD)(*(DWORD*)(BYT
      +                          E*)(buf+(44-13)));
  1672  000A12  50E1               	movf	fsr1l,w,c
  1673  000A14  0F10               	addlw	16
  1674  000A16  6EE9               	movwf	fsr0l,c
  1675  000A18  6AEA               	clrf	fsr0h,c
  1676  000A1A  C331  FFEE         	movff	??_pf_mount+49,postinc0
  1677  000A1E  C332  FFEE         	movff	??_pf_mount+50,postinc0
  1678  000A22  C333  FFEE         	movff	??_pf_mount+51,postinc0
  1679  000A26  C334  FFEE         	movff	??_pf_mount+52,postinc0
  1680  000A2A  D024               	goto	l269
  1681  000A2C                     l268:
  1682                           ; BSR set to: 3
  1683                           ;pff.c: 517: else
  1684                           ;pff.c: 519: fs->dirbase = fs->fatbase + fsize;
  1685  000A2C  50E1               	movf	fsr1l,w,c
  1686  000A2E  0F0C               	addlw	12
  1687  000A30  6EE9               	movwf	fsr0l,c
  1688  000A32  6AEA               	clrf	fsr0h,c
  1689  000A34  CFEE F336          	movff	postinc0,??_pf_mount+54
  1690  000A38  CFEE F337          	movff	postinc0,??_pf_mount+55
  1691  000A3C  CFEE F338          	movff	postinc0,??_pf_mount+56
  1692  000A40  CFEE F339          	movff	postinc0,??_pf_mount+57
  1693  000A44  510E               	movf	(??_pf_mount+14)& (0+255),w,b
  1694  000A46  2536               	addwf	(??_pf_mount+54)& (0+255),w,b
  1695  000A48  6F3A               	movwf	(??_pf_mount+58)& (0+255),b
  1696  000A4A  510F               	movf	(??_pf_mount+15)& (0+255),w,b
  1697  000A4C  2137               	addwfc	(??_pf_mount+55)& (0+255),w,b
  1698  000A4E  6F3B               	movwf	(??_pf_mount+59)& (0+255),b
  1699  000A50  5110               	movf	(??_pf_mount+16)& (0+255),w,b
  1700  000A52  2138               	addwfc	(??_pf_mount+56)& (0+255),w,b
  1701  000A54  6F3C               	movwf	(??_pf_mount+60)& (0+255),b
  1702  000A56  5111               	movf	(??_pf_mount+17)& (0+255),w,b
  1703  000A58  2139               	addwfc	(??_pf_mount+57)& (0+255),w,b
  1704  000A5A  6F3D               	movwf	(??_pf_mount+61)& (0+255),b
  1705  000A5C  50E1               	movf	fsr1l,w,c
  1706  000A5E  0F10               	addlw	16
  1707  000A60  6EE9               	movwf	fsr0l,c
  1708  000A62  6AEA               	clrf	fsr0h,c
  1709  000A64  C33A  FFEE         	movff	??_pf_mount+58,postinc0
  1710  000A68  C33B  FFEE         	movff	??_pf_mount+59,postinc0
  1711  000A6C  C33C  FFEE         	movff	??_pf_mount+60,postinc0
  1712  000A70  C33D  FFED         	movff	??_pf_mount+61,postdec0
  1713  000A74                     l269:
  1714                           ; BSR set to: 3
  1715                           ;pff.c: 520: fs->database = fs->fatbase + fsize 
      +                          + fs->n_rootdir / 16;
  1716  000A74  50E1               	movf	fsr1l,w,c
  1717  000A76  0F0C               	addlw	12
  1718  000A78  6EE9               	movwf	fsr0l,c
  1719  000A7A  6AEA               	clrf	fsr0h,c
  1720  000A7C  CFEE F336          	movff	postinc0,??_pf_mount+54
  1721  000A80  CFEE F337          	movff	postinc0,??_pf_mount+55
  1722  000A84  CFEE F338          	movff	postinc0,??_pf_mount+56
  1723  000A88  CFEE F339          	movff	postinc0,??_pf_mount+57
  1724  000A8C  50E1               	movf	fsr1l,w,c
  1725  000A8E  0F04               	addlw	4
  1726  000A90  6EE9               	movwf	fsr0l,c
  1727  000A92  6AEA               	clrf	fsr0h,c
  1728  000A94  CFEE F33A          	movff	postinc0,??_pf_mount+58
  1729  000A98  CFED F33B          	movff	postdec0,??_pf_mount+59
  1730  000A9C  0E04               	movlw	4
  1731  000A9E  6F3C               	movwf	(??_pf_mount+60)& (0+255),b
  1732  000AA0                     u9215:
  1733  000AA0  90D8               	bcf	status,0,c
  1734  000AA2  333B               	rrcf	(??_pf_mount+59)& (0+255),f,b
  1735  000AA4  333A               	rrcf	(??_pf_mount+58)& (0+255),f,b
  1736  000AA6  2F3C               	decfsz	(??_pf_mount+60)& (0+255),f,b
  1737  000AA8  D7FB               	goto	u9215
  1738  000AAA  513A               	movf	(??_pf_mount+58)& (0+255),w,b
  1739  000AAC  2536               	addwf	(??_pf_mount+54)& (0+255),w,b
  1740  000AAE  6F3D               	movwf	(??_pf_mount+61)& (0+255),b
  1741  000AB0  513B               	movf	(??_pf_mount+59)& (0+255),w,b
  1742  000AB2  2137               	addwfc	(??_pf_mount+55)& (0+255),w,b
  1743  000AB4  6F3E               	movwf	(??_pf_mount+62)& (0+255),b
  1744  000AB6  0E00               	movlw	0
  1745  000AB8  2138               	addwfc	(??_pf_mount+56)& (0+255),w,b
  1746  000ABA  6F3F               	movwf	(??_pf_mount+63)& (0+255),b
  1747  000ABC  0E00               	movlw	0
  1748  000ABE  2139               	addwfc	(??_pf_mount+57)& (0+255),w,b
  1749  000AC0  6F40               	movwf	(??_pf_mount+64)& (0+255),b
  1750  000AC2  510E               	movf	(??_pf_mount+14)& (0+255),w,b
  1751  000AC4  253D               	addwf	(??_pf_mount+61)& (0+255),w,b
  1752  000AC6  6F41               	movwf	(??_pf_mount+65)& (0+255),b
  1753  000AC8  510F               	movf	(??_pf_mount+15)& (0+255),w,b
  1754  000ACA  213E               	addwfc	(??_pf_mount+62)& (0+255),w,b
  1755  000ACC  6F42               	movwf	(??_pf_mount+66)& (0+255),b
  1756  000ACE  5110               	movf	(??_pf_mount+16)& (0+255),w,b
  1757  000AD0  213F               	addwfc	(??_pf_mount+63)& (0+255),w,b
  1758  000AD2  6F43               	movwf	(??_pf_mount+67)& (0+255),b
  1759  000AD4  5111               	movf	(??_pf_mount+17)& (0+255),w,b
  1760  000AD6  2140               	addwfc	(??_pf_mount+64)& (0+255),w,b
  1761  000AD8  6F44               	movwf	(??_pf_mount+68)& (0+255),b
  1762  000ADA  50E1               	movf	fsr1l,w,c
  1763  000ADC  0F14               	addlw	20
  1764  000ADE  6EE9               	movwf	fsr0l,c
  1765  000AE0  6AEA               	clrf	fsr0h,c
  1766  000AE2  C341  FFEE         	movff	??_pf_mount+65,postinc0
  1767  000AE6  C342  FFEE         	movff	??_pf_mount+66,postinc0
  1768  000AEA  C343  FFEE         	movff	??_pf_mount+67,postinc0
  1769  000AEE  C344  FFED         	movff	??_pf_mount+68,postdec0
  1770                           ;pff.c: 522: fs->flag = 0;
  1771  000AF2  50E1               	movf	fsr1l,w,c
  1772  000AF4  0F02               	addlw	2
  1773  000AF6  6EE9               	movwf	fsr0l,c
  1774  000AF8  6AEA               	clrf	fsr0h,c
  1775  000AFA  6AEF               	clrf	indf0,c
  1776                           ;pff.c: 523: FatFs = fs;
  1777  000AFC  CFE1 F009          	movff	fsr1l,9
  1778  000B00                     L3:
  1779                           ;pff.c: 525: return FR_OK;
  1780  000B00  0E00               	movlw	0
  1781                           ;pff.c: 526: }
  1782  000B02                     l254:
  1783                           ; BSR set to: ?
  1784  000B02  0012               	return	
  1785  000B04                     __end_of_pf_mount:
  1786                           	opt stack 0
  1787                           
  1788                           	psect	text6
  1789                           ; =============== function _pf_mount ends ======
      +                          ======
  1790                           ; *************** function _pwm_audio_init *****
      +                          ************
  1791                           ; Defined at:
  1792                           ;		line 104 in file "D:\ElabPh\SDMMC\PIC WAV Pla
      +                          yer\PIC18 SD WAV Audio Player\src_no_lcd\pwm_aud
      +                          io.c"
  1793                           ; Parameters:
  1794                           ;		None
  1795                           ; Auto variables:
  1796                           ;		None
  1797                           ; Return value:
  1798                           ;		type: void 
  1799                           ;		size: 0
  1800                           ; Registers used:
  1801                           ;		wreg, status,2, cstack
  1802                           ; Tracked objects:
  1803                           ;		On entry : 0/0
  1804                           ;		On exit  : 0/0
  1805                           ;		Unchanged: FFFFFFF0/0
  1806                           ; Data sizes:
  1807                           ;		Autos:    0
  1808                           ;		Params:   0
  1809                           ;		Temp:     0
  1810                           ;		Total:    0
  1811                           ; This function calls:
  1812                           ;		_pwm_init
  1813                           ;		_timer1_init
  1814                           ; This function is called by:
  1815                           ;		_main
  1816                           ; This function uses a non-reentrant model
  1817                           ; 
  1818  000000                     
  1819                           ;pwm_audio.c: 103: void pwm_audio_init(void)
  1820                           ;pwm_audio.c: 104: {
  1821  002A2C                     _pwm_audio_init:
  1822                           	opt stack 28
  1823                           ; BSR set to: ?
  1824  002A2C  EC00  F015         	call	_pwm_init	;wreg free
  1825                           ;pwm_audio.c: 106: timer1_init();
  1826  002A30  EC0D  F015         	call	_timer1_init	;wreg free
  1827                           ;pwm_audio.c: 108: pWAVIN = pWAVOUT = 0;
  1828  002A34  6A02               	clrf	2,c	;volatile
  1829  002A36  6A03               	clrf	3,c	;volatile
  1830  002A38  6A04               	clrf	4,c	;volatile
  1831  002A3A  6A05               	clrf	5,c	;volatile
  1832                           ;pwm_audio.c: 109: }
  1833                           ; BSR set to: ?
  1834  002A3C  0012               	return	
  1835  002A3E                     __end_of_pwm_audio_init:
  1836                           	opt stack 0
  1837                           
  1838                           	psect	text7
  1839                           ; =============== function _pwm_audio_init ends 
      +                          ============
  1840                           ; *************** function _delay **************
      +                          ***
  1841                           ; Defined at:
  1842                           ;		line 57 in file "D:\ElabPh\SDMMC\PIC WAV Play
      +                          er\PIC18 SD WAV Audio Player\src_no_lcd\main.c"
  1843                           ; Parameters:
  1844                           ;		None
  1845                           ; Auto variables:
  1846                           ;		i           	       	type: long 
  1847                           ; Return value:
  1848                           ;		type: void 
  1849                           ;		size: 0
  1850                           ; Registers used:
  1851                           ;		wreg, status,2, status,0
  1852                           ; Tracked objects:
  1853                           ;		On entry : 0/0
  1854                           ;		On exit  : 0/0
  1855                           ;		Unchanged: FFFFFFF0/0
  1856                           ; Data sizes:
  1857                           ;		Autos:    4
  1858                           ;		Params:   0
  1859                           ;		Temp:     0
  1860                           ;		Total:    4
  1861                           ; This function calls:
  1862                           ;		Nothing
  1863                           ; This function is called by:
  1864                           ;		_main
  1865                           ; This function uses a non-reentrant model
  1866                           ; 
  1867  000000                     
  1868                           ;main.c: 56: void delay(void)
  1869                           ;main.c: 57: {
  1870  00295C                     _delay:
  1871                           	opt stack 28
  1872                           ; BSR set to: ?
  1873  00295C  0103               	movlb	3	; () banked
  1874  00295E  6900               	setf	??_delay& (0+255),b
  1875  002960  6901               	setf	(??_delay+1)& (0+255),b
  1876  002962  0E07               	movlw	7
  1877  002964  6F02               	movwf	(??_delay+2)& (0+255),b
  1878  002966  6B03               	clrf	(??_delay+3)& (0+255),b
  1879                           ;main.c: 59: while(--i);
  1880  002968                     l153:
  1881                           ; BSR set to: ?
  1882  002968  0EFF               	movlw	255
  1883  00296A  0103               	movlb	3	; () banked
  1884  00296C  0700               	decf	??_delay& (0+255),f,b
  1885  00296E  2301               	addwfc	(??_delay+1)& (0+255),f,b
  1886  002970  2302               	addwfc	(??_delay+2)& (0+255),f,b
  1887  002972  2303               	addwfc	(??_delay+3)& (0+255),f,b
  1888  002974  5103               	movf	(??_delay+3)& (0+255),w,b
  1889  002976  1100               	iorwf	??_delay& (0+255),w,b
  1890  002978  1101               	iorwf	(??_delay+1)& (0+255),w,b
  1891  00297A  1102               	iorwf	(??_delay+2)& (0+255),w,b
  1892  00297C  B4D8               	btfsc	status,2,c
  1893                           ; BSR set to: ?
  1894                           ;main.c: 60: }
  1895                           ; BSR set to: ?
  1896  00297E  0012               	return	
  1897  002980  D7F3               	goto	l153
  1898  002982                     __end_of_delay:
  1899                           	opt stack 0
  1900                           
  1901                           	psect	text8
  1902                           ; =============== function _delay ends =========
      +                          ===
  1903                           ; *************** function _strlen *************
      +                          ****
  1904                           ; Defined at:
  1905                           ;		line 5 in file "C:\Program Files\HI-TECH Soft
      +                          ware\PICC-18\PRO\9.64\sources\strlen.c"
  1906                           ; Parameters:
  1907                           ;		s              size:   1reg:   wre	type: PTR 
      +                          const unsigned char ; Largest target is 5
  1908                           ;		 -> STR_2(5), 
  1909                           ; Auto variables:
  1910                           ;		cp          	       	type: PTR const unsigned
      +                           char ; Largest target is 5
  1911                           ;		 -> STR_2(5), 
  1912                           ; Return value:
  1913                           ;		type: unsigned int 
  1914                           ;		size: 2
  1915                           ; Registers used:
  1916                           ;		wreg, fsr1l, fsr2l, status,2, status,0, tblpt
      +                          rl, tblptrh, tblptru, tablat
  1917                           ; Tracked objects:
  1918                           ;		On entry : F/3
  1919                           ;		On exit  : F/3
  1920                           ;		Unchanged: FFFFFFF0/0
  1921                           ; Data sizes:
  1922                           ;		Autos:    0
  1923                           ;		Params:   2
  1924                           ;		Temp:     2
  1925                           ;		Total:    4
  1926                           ; This function calls:
  1927                           ;		Nothing
  1928                           ; This function is called by:
  1929                           ;		_strstr
  1930                           ; This function uses a non-reentrant model
  1931                           ; 
  1932  000000                     
  1933  0028C0                     _strlen:
  1934                           	opt stack 27
  1935                           ; BSR set to: 3
  1936                           ; strlen@s loaded to fsr1l
  1937  0028C0  CFE8 FFE1          	movff	wreg,fsr1l
  1938  0028C4  CFE1 FFD9          	movff	fsr1l,fsr2l
  1939  0028C8                     l1409:
  1940                           ; BSR set to: 3
  1941                           ; BSR set to: 3
  1942  0028C8  2AD9               	incf	fsr2l,f,c
  1943  0028CA  04D9               	decf	fsr2l,w,c
  1944  0028CC  6F05               	movwf	??_strlen& (0+255),b
  1945  0028CE  C305  FFF6         	movff	??_strlen,tblptrl
  1946  0028D2  0E04               	movlw	high __Lsmallconst
  1947  0028D4  6EF7               	movwf	tblptrh,c
  1948  0028D6  0008               	tblrd		*
  1949  0028D8  50F5               	movf	tablat,w,c
  1950  0028DA  E1F6               	bnz	l1409
  1951                           ; BSR set to: 3
  1952  0028DC  50E1               	movf	fsr1l,w,c
  1953  0028DE  CFD9 F305          	movff	fsr2l,??_strlen
  1954  0028E2  6B06               	clrf	(??_strlen+1)& (0+255),b
  1955  0028E4  5F05               	subwf	??_strlen& (0+255),f,b
  1956  0028E6  0E00               	movlw	0
  1957  0028E8  5B06               	subwfb	(??_strlen+1)& (0+255),f,b
  1958  0028EA  0EFF               	movlw	255
  1959  0028EC  2505               	addwf	??_strlen& (0+255),w,b
  1960  0028EE  6F03               	movwf	?_strlen& (0+255),b
  1961  0028F0  0EFF               	movlw	255
  1962  0028F2  2106               	addwfc	(??_strlen+1)& (0+255),w,b
  1963  0028F4  6F04               	movwf	(?_strlen+1)& (0+255),b
  1964                           ; BSR set to: 3
  1965  0028F6  0012               	return	
  1966  0028F8                     __end_of_strlen:
  1967                           	opt stack 0
  1968                           
  1969                           	psect	text9
  1970                           ; =============== function _strlen ends ========
      +                          ====
  1971                           ; *************** function _pf_open ************
      +                          *****
  1972                           ; Defined at:
  1973                           ;		line 538 in file "D:\ElabPh\SDMMC\PIC WAV Pla
      +                          yer\PIC18 SD WAV Audio Player\src_no_lcd\pff.c"
  1974                           ; Parameters:
  1975                           ;		path           size:   1reg:   wre	type: PTR 
      +                          const unsigned char ; Largest target is 22
  1976                           ;		 -> Fno(22), 
  1977                           ; Auto variables:
  1978                           ;		path        	       	type: PTR const unsigned
      +                           char ; Largest target is 22
  1979                           ;		 -> Fno(22), 
  1980                           ;		res         	       	type: enum E48
  1981                           ;		fs          	       	type: PTR struct _FATFS_
      +                          ; Largest target is 255
  1982                           ;		 -> RAM(255), Fs(44), 
  1983                           ;		sp          	       	type: unsigned char [12]
  1984                           ;		dj          	       	type: struct _DIR_
  1985                           ;		dir         	       	type: unsigned char [32]
  1986                           ; Return value:
  1987                           ;		type: enum E48
  1988                           ;		size: 1
  1989                           ; Registers used:
  1990                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2
      +                          h, status,2, status,0, tblptrl, tblptrh, tblptru
      +                          , tablat, prodl, prodh, cstack
  1991                           ; Tracked objects:
  1992                           ;		On entry : F/3
  1993                           ;		On exit  : F/3
  1994                           ;		Unchanged: FFFFFFF0/0
  1995                           ; Data sizes:
  1996                           ;		Autos:   63
  1997                           ;		Params:   0
  1998                           ;		Temp:     8
  1999                           ;		Total:   71
  2000                           ; This function calls:
  2001                           ;		_follow_path
  2002                           ; This function is called by:
  2003                           ;		_play_wave_file
  2004                           ; This function uses a non-reentrant model
  2005                           ; 
  2006  000000                     
  2007                           ;pff.c: 535: FRESULT pf_open (
  2008                           ;pff.c: 536: const char *path
  2009                           ;pff.c: 537: )
  2010                           ;pff.c: 538: {
  2011  00210A                     _pf_open:
  2012                           	opt stack 27
  2013                           ; BSR set to: 3
  2014                           ;pf_open@path stored from wreg
  2015  00210A  CFE8 F30D          	movff	wreg,??_pf_open
  2016                           ; pf_open@fs allocated to fsr1l
  2017  00210E  C009 FFE1          	movff	9,fsr1l
  2018                           ;pff.c: 545: if (!fs)
  2019  002112  66E1               	tstfsz	fsr1l,c
  2020  002114  D002               	goto	l271
  2021                           ;pff.c: 546: return FR_NOT_ENABLED;
  2022  002116  0E06               	movlw	6
  2023  002118  D06C               	goto	l270
  2024  00211A                     l271:
  2025                           ; BSR set to: 3
  2026                           ;pff.c: 548: fs->flag = 0;
  2027  00211A  50E1               	movf	fsr1l,w,c
  2028  00211C  0F02               	addlw	2
  2029  00211E  6EE9               	movwf	fsr0l,c
  2030  002120  6AEA               	clrf	fsr0h,c
  2031  002122  6AEF               	clrf	indf0,c
  2032                           ;pff.c: 549: fs->buf = dir;
  2033  002124  50E1               	movf	fsr1l,w,c
  2034  002126  0F06               	addlw	6
  2035  002128  6EE9               	movwf	fsr0l,c
  2036  00212A  6AEA               	clrf	fsr0h,c
  2037  00212C  0E2C               	movlw	low (??_pf_open+31)
  2038  00212E  6EEE               	movwf	postinc0,c
  2039  002130  0E03               	movlw	high (??_pf_open+31)
  2040  002132  6EED               	movwf	postdec0,c
  2041                           ;pf_open@fs stored from fsr1l
  2042  002134  CFE1 F30F          	movff	fsr1l,??_pf_open+2
  2043                           ;pff.c: 550: dj.fn = sp;
  2044  002138  0E10               	movlw	low (??_pf_open+3)
  2045  00213A  6F1E               	movwf	(??_pf_open+17)& (0+255),b
  2046  00213C  0E03               	movlw	high (??_pf_open+3)
  2047  00213E  6F1F               	movwf	(??_pf_open+18)& (0+255),b
  2048                           ;pff.c: 551: res = follow_path(&dj, path);
  2049  002140  C30D  F356         	movff	??_pf_open,?_follow_path+2
  2050  002144  0E0F               	movlw	15
  2051  002146  6F57               	movwf	(?_follow_path+3)& (0+255),b
  2052  002148  0E5F               	movlw	__accesstop+-1
  2053  00214A  6556               	cpfsgt	(?_follow_path+2)& (0+255),b
  2054  00214C  6B57               	clrf	(?_follow_path+3)& (0+255),b
  2055  00214E  0E1C               	movlw	low (??_pf_open+15)
  2056  002150  6F54               	movwf	?_follow_path& (0+255),b
  2057  002152  0E03               	movlw	high (??_pf_open+15)
  2058  002154  6F55               	movwf	(?_follow_path+1)& (0+255),b
  2059  002156  EC21  F00A         	call	_follow_path	;wreg free
  2060  00215A  6F0E               	movwf	(??_pf_open+1)& (0+255),b
  2061                           ;pff.c: 552: if (res != FR_OK) return res;
  2062  00215C  510E               	movf	(??_pf_open+1)& (0+255),w,b
  2063  00215E  E002               	bz	l272
  2064  002160  510E               	movf	(??_pf_open+1)& (0+255),w,b
  2065  002162  D047               	goto	l270
  2066  002164                     l272:
  2067                           ; BSR set to: 3
  2068                           ;pff.c: 553: if (!dir[0] || (dir[11] & 0x10))
  2069  002164  512C               	movf	(??_pf_open+31)& (0+255),w,b
  2070  002166  E002               	bz	l600000436
  2071  002168  A937               	btfss	(??_pf_open+42)& (0+255),4,b
  2072  00216A  D002               	goto	l273
  2073  00216C                     l600000436:
  2074                           ; BSR set to: 3
  2075                           ;pff.c: 554: return FR_NO_FILE;
  2076  00216C  0E03               	movlw	3
  2077  00216E  D041               	goto	l270
  2078  002170                     l273:
  2079                           ; BSR set to: 3
  2080                           ; pf_open@fs loaded to fsr2l
  2081  002170  C30F  FFD9         	movff	??_pf_open+2,fsr2l
  2082                           ;pff.c: 556: fs->org_clust =
  2083                           ;pff.c: 558: ((DWORD)(WORD)(*(WORD*)(BYTE*)(dir+
      +                          20)) << 16) |
  2084                           ;pff.c: 560: (WORD)(*(WORD*)(BYTE*)(dir+26));
  2085  002174  5140               	movf	(??_pf_open+51)& (0+255),w,b
  2086  002176  6F4C               	movwf	(??_pf_open+63)& (0+255),b
  2087  002178  5141               	movf	(??_pf_open+52)& (0+255),w,b
  2088  00217A  6F4D               	movwf	(??_pf_open+64)& (0+255),b
  2089  00217C  6B4E               	clrf	(??_pf_open+65)& (0+255),b
  2090  00217E  6B4F               	clrf	(??_pf_open+66)& (0+255),b
  2091  002180  C34D  F34F         	movff	??_pf_open+64,??_pf_open+66
  2092  002184  C34C  F34E         	movff	??_pf_open+63,??_pf_open+65
  2093  002188  6B4D               	clrf	(??_pf_open+64)& (0+255),b
  2094  00218A  6B4C               	clrf	(??_pf_open+63)& (0+255),b
  2095  00218C  5146               	movf	(??_pf_open+57)& (0+255),w,b
  2096  00218E  114C               	iorwf	(??_pf_open+63)& (0+255),w,b
  2097  002190  6F50               	movwf	(??_pf_open+67)& (0+255),b
  2098  002192  5147               	movf	(??_pf_open+58)& (0+255),w,b
  2099  002194  114D               	iorwf	(??_pf_open+64)& (0+255),w,b
  2100  002196  6F51               	movwf	(??_pf_open+68)& (0+255),b
  2101  002198  0E00               	movlw	0
  2102  00219A  114E               	iorwf	(??_pf_open+65)& (0+255),w,b
  2103  00219C  6F52               	movwf	(??_pf_open+69)& (0+255),b
  2104  00219E  0E00               	movlw	0
  2105  0021A0  114F               	iorwf	(??_pf_open+66)& (0+255),w,b
  2106  0021A2  6F53               	movwf	(??_pf_open+70)& (0+255),b
  2107  0021A4  50D9               	movf	fsr2l,w,c
  2108  0021A6  0F20               	addlw	32
  2109  0021A8  6EE9               	movwf	fsr0l,c
  2110  0021AA  6AEA               	clrf	fsr0h,c
  2111  0021AC  C350  FFEE         	movff	??_pf_open+67,postinc0
  2112  0021B0  C351  FFEE         	movff	??_pf_open+68,postinc0
  2113  0021B4  C352  FFEE         	movff	??_pf_open+69,postinc0
  2114  0021B8  C353  FFED         	movff	??_pf_open+70,postdec0
  2115                           ;pff.c: 561: fs->fsize = (DWORD)(*(DWORD*)(BYTE*
      +                          )(dir+28));
  2116  0021BC  50D9               	movf	fsr2l,w,c
  2117  0021BE  0F1C               	addlw	28
  2118  0021C0  6EE9               	movwf	fsr0l,c
  2119  0021C2  6AEA               	clrf	fsr0h,c
  2120  0021C4  C348  FFEE         	movff	??_pf_open+59,postinc0
  2121  0021C8  C349  FFEE         	movff	??_pf_open+60,postinc0
  2122  0021CC  C34A  FFEE         	movff	??_pf_open+61,postinc0
  2123  0021D0  C34B  FFEE         	movff	??_pf_open+62,postinc0
  2124                           ;pff.c: 562: fs->fptr = 0;
  2125  0021D4  50D9               	movf	fsr2l,w,c
  2126  0021D6  0F18               	addlw	24
  2127  0021D8  6EE9               	movwf	fsr0l,c
  2128  0021DA  6AEA               	clrf	fsr0h,c
  2129  0021DC  6AEE               	clrf	postinc0,c
  2130  0021DE  6AEE               	clrf	postinc0,c
  2131  0021E0  6AEE               	clrf	postinc0,c
  2132  0021E2  6AED               	clrf	postdec0,c
  2133                           ;pff.c: 563: fs->flag = 0x01;
  2134  0021E4  50D9               	movf	fsr2l,w,c
  2135  0021E6  0F02               	addlw	2
  2136  0021E8  6EE9               	movwf	fsr0l,c
  2137  0021EA  6AEA               	clrf	fsr0h,c
  2138  0021EC  0E01               	movlw	1
  2139  0021EE  6EEF               	movwf	indf0,c
  2140                           ;pff.c: 565: return FR_OK;
  2141  0021F0  0E00               	movlw	0
  2142                           ;pff.c: 566: }
  2143  0021F2                     l270:
  2144                           ; BSR set to: 3
  2145  0021F2  0012               	return	
  2146  0021F4                     __end_of_pf_open:
  2147                           	opt stack 0
  2148                           
  2149                           	psect	text10
  2150                           ; =============== function _pf_open ends =======
      +                          =====
  2151                           ; *************** function ___aslmul ***********
      +                          ******
  2152                           ; Defined at:
  2153                           ;		line 5 in file "C:\Program Files\HI-TECH Soft
      +                          ware\PICC-18\PRO\9.64\sources\aslmul.c"
  2154                           ; Parameters:
  2155                           ;		mp             size:   2offs:   0	type: PTR u
      +                          nsigned long ; Largest target is 4
  2156                           ;		 -> pf_mount@fsize(4), 
  2157                           ;		multiplicand   size:   4offs:   2	type: unsig
      +                          ned long 
  2158                           ; Auto variables:
  2159                           ;		None
  2160                           ; Return value:
  2161                           ;		type: unsigned long 
  2162                           ;		size: 4
  2163                           ; Registers used:
  2164                           ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
      +                          k
  2165                           ; Tracked objects:
  2166                           ;		On entry : F/3
  2167                           ;		On exit  : F/3
  2168                           ;		Unchanged: FFFFFFF0/0
  2169                           ; Data sizes:
  2170                           ;		Autos:    0
  2171                           ;		Params:   6
  2172                           ;		Temp:     0
  2173                           ;		Total:    6
  2174                           ; This function calls:
  2175                           ;		___lmul
  2176                           ; This function is called by:
  2177                           ;		_pf_mount
  2178                           ; This function uses a non-reentrant model
  2179                           ; 
  2180  000000                     
  2181  00287A                     ___aslmul:
  2182                           	opt stack 27
  2183                           ; BSR set to: 3
  2184  00287A  C34B  F389         	movff	?___aslmul+2,?___lmul+4
  2185  00287E  C34C  F38A         	movff	?___aslmul+3,?___lmul+5
  2186  002882  C34D  F38B         	movff	?___aslmul+4,?___lmul+6
  2187  002886  C34E  F38C         	movff	?___aslmul+5,?___lmul+7
  2188  00288A  C349  FFE9         	movff	?___aslmul,fsr0l
  2189  00288E  C34A  FFEA         	movff	?___aslmul+1,fsr0h
  2190  002892  CFEE F385          	movff	postinc0,?___lmul
  2191  002896  CFEE F386          	movff	postinc0,?___lmul+1
  2192  00289A  CFEE F387          	movff	postinc0,?___lmul+2
  2193  00289E  CFEE F388          	movff	postinc0,?___lmul+3
  2194  0028A2  ECCF  F013         	call	___lmul	;wreg free
  2195  0028A6  C349  FFE9         	movff	?___aslmul,fsr0l
  2196  0028AA  C34A  FFEA         	movff	?___aslmul+1,fsr0h
  2197  0028AE  C385  FFEE         	movff	?___lmul,postinc0
  2198  0028B2  C386  FFEE         	movff	?___lmul+1,postinc0
  2199  0028B6  C387  FFEE         	movff	?___lmul+2,postinc0
  2200  0028BA  C388  FFED         	movff	?___lmul+3,postdec0
  2201                           ; BSR set to: 3
  2202  0028BE  0012               	return	
  2203  0028C0                     __end_of___aslmul:
  2204                           	opt stack 0
  2205                           
  2206                           	psect	text11
  2207                           ; =============== function ___aslmul ends ======
      +                          ======
  2208                           ; *************** function _strchr *************
      +                          ****
  2209                           ; Defined at:
  2210                           ;		line 5 in file "C:\Program Files\HI-TECH Soft
      +                          ware\PICC-18\PRO\9.64\sources\strchr.c"
  2211                           ; Parameters:
  2212                           ;		ptr            size:   1reg:   wre	type: PTR 
      +                          const unsigned char ; Largest target is 255
  2213                           ;		 -> RAM(255), Fno(22), 
  2214                           ;		chr            size:   2offs:   0	type: int 
  2215                           ; Auto variables:
  2216                           ;		None
  2217                           ; Return value:
  2218                           ;		type: PTR unsigned char 
  2219                           ;		size: 1
  2220                           ; Registers used:
  2221                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
  2222                           ; Tracked objects:
  2223                           ;		On entry : F/3
  2224                           ;		On exit  : F/3
  2225                           ;		Unchanged: FFFFFFF0/0
  2226                           ; Data sizes:
  2227                           ;		Autos:    0
  2228                           ;		Params:   2
  2229                           ;		Temp:     0
  2230                           ;		Total:    2
  2231                           ; This function calls:
  2232                           ;		Nothing
  2233                           ; This function is called by:
  2234                           ;		_strstr
  2235                           ; This function uses a non-reentrant model
  2236                           ; 
  2237  000000                     
  2238  002982                     _strchr:
  2239                           	opt stack 27
  2240                           ; BSR set to: ?
  2241                           ; strchr@ptr loaded to fsr2l
  2242  002982  CFE8 FFD9          	movff	wreg,fsr2l
  2243  002986                     l1405:
  2244                           ; BSR set to: 3
  2245  002986  50D9               	movf	fsr2l,w,c
  2246  002988  6EE9               	movwf	fsr0l,c
  2247  00298A  6AEA               	clrf	fsr0h,c
  2248  00298C  5103               	movf	?_strchr& (0+255),w,b
  2249  00298E  62EF               	cpfseq	indf0,c
  2250  002990  D002               	goto	l1406
  2251  002992  50D9               	movf	fsr2l,w,c
  2252  002994  D007               	goto	l1402
  2253  002996                     l1406:
  2254                           ; BSR set to: 3
  2255  002996  2AD9               	incf	fsr2l,f,c
  2256  002998  04D9               	decf	fsr2l,w,c
  2257  00299A  6EE9               	movwf	fsr0l,c
  2258  00299C  6AEA               	clrf	fsr0h,c
  2259  00299E  50EF               	movf	indf0,w,c
  2260  0029A0  E1F2               	bnz	l1405
  2261                           ; BSR set to: 3
  2262  0029A2  0E00               	movlw	0
  2263  0029A4                     l1402:
  2264                           ; BSR set to: 3
  2265  0029A4  0012               	return	
  2266  0029A6                     __end_of_strchr:
  2267                           	opt stack 0
  2268                           
  2269                           	psect	text12
  2270                           ; =============== function _strchr ends ========
      +                          ====
  2271                           ; *************** function _strncmp ************
      +                          *****
  2272                           ; Defined at:
  2273                           ;		line 5 in file "C:\Program Files\HI-TECH Soft
      +                          ware\PICC-18\PRO\9.64\sources\strncmp.c"
  2274                           ; Parameters:
  2275                           ;		s1             size:   1reg:   wre	type: PTR 
      +                          const unsigned char ; Largest target is 255
  2276                           ;		 -> RAM(255), Fno(22), 
  2277                           ;		s2             size:   1offs:   0	type: PTR c
      +                          onst unsigned char ; Largest target is 5
  2278                           ;		 -> STR_2(5), 
  2279                           ;		len            size:   2offs:   1	type: unsig
      +                          ned int 
  2280                           ; Auto variables:
  2281                           ;		None
  2282                           ; Return value:
  2283                           ;		type: int 
  2284                           ;		size: 2
  2285                           ; Registers used:
  2286                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , tblptrl, tblptrh, tblptru, tablat
  2287                           ; Tracked objects:
  2288                           ;		On entry : F/3
  2289                           ;		On exit  : F/3
  2290                           ;		Unchanged: FFFFFFF0/0
  2291                           ; Data sizes:
  2292                           ;		Autos:    0
  2293                           ;		Params:   3
  2294                           ;		Temp:     1
  2295                           ;		Total:    4
  2296                           ; This function calls:
  2297                           ; This function is called by:
  2298                           ;		_strstr
  2299                           ; This function uses a non-reentrant model
  2300                           ; 
  2301  000000                     
  2302  0025E2                     _strncmp:
  2303                           	opt stack 27
  2304                           ; BSR set to: 3
  2305                           ; strncmp@s1 loaded to fsr2l
  2306  0025E2  CFE8 FFD9          	movff	wreg,fsr2l
  2307  0025E6                     l1412:
  2308                           ; BSR set to: 3
  2309  0025E6  0704               	decf	(?_strncmp+1)& (0+255),f,b
  2310  0025E8  A0D8               	btfss	status,0,c
  2311  0025EA  0705               	decf	(?_strncmp+2)& (0+255),f,b
  2312  0025EC  0103               	movlb	3	; () banked
  2313  0025EE  2904               	incf	(?_strncmp+1)& (0+255),w,b
  2314  0025F0  B4D8               	btfsc	status,2,c
  2315  0025F2  2905               	incf	(?_strncmp+2)& (0+255),w,b
  2316  0025F4  E026               	bz	u10980
  2317                           ; BSR set to: 3
  2318  0025F6  50D9               	movf	fsr2l,w,c
  2319  0025F8  6EE9               	movwf	fsr0l,c
  2320  0025FA  6AEA               	clrf	fsr0h,c
  2321  0025FC  50EF               	movf	indf0,w,c
  2322  0025FE  E00D               	bz	l600000455
  2323  002600  C303  FFF6         	movff	?_strncmp,tblptrl
  2324  002604  0E04               	movlw	high __Lsmallconst
  2325  002606  6EF7               	movwf	tblptrh,c
  2326  002608  0008               	tblrd		*
  2327  00260A  CFF5 F306          	movff	tablat,??_strncmp
  2328  00260E  50D9               	movf	fsr2l,w,c
  2329  002610  6EE9               	movwf	fsr0l,c
  2330  002612  6AEA               	clrf	fsr0h,c
  2331  002614  50EF               	movf	indf0,w,c
  2332  002616  1906               	xorwf	??_strncmp& (0+255),w,b
  2333  002618  E011               	bz	l1415
  2334  00261A                     l600000455:
  2335                           ; BSR set to: 3
  2336  00261A  50D9               	movf	fsr2l,w,c
  2337  00261C  6EE9               	movwf	fsr0l,c
  2338  00261E  6AEA               	clrf	fsr0h,c
  2339  002620  50EF               	movf	indf0,w,c
  2340  002622  6F06               	movwf	??_strncmp& (0+255),b
  2341  002624  C303  FFF6         	movff	?_strncmp,tblptrl
  2342  002628  0E04               	movlw	high __Lsmallconst
  2343  00262A  6EF7               	movwf	tblptrh,c
  2344  00262C  0008               	tblrd		*
  2345  00262E  50F5               	movf	tablat,w,c
  2346  002630  5D06               	subwf	??_strncmp& (0+255),w,b
  2347  002632  6F03               	movwf	?_strncmp& (0+255),b
  2348  002634  6B04               	clrf	(?_strncmp+1)& (0+255),b
  2349  002636  A0D8               	btfss	status,0,c
  2350  002638  0704               	decf	(?_strncmp+1)& (0+255),f,b
  2351  00263A  D005               	goto	l1411
  2352  00263C                     l1415:
  2353                           ; BSR set to: 3
  2354  00263C  2AD9               	incf	fsr2l,f,c
  2355  00263E  2B03               	incf	?_strncmp& (0+255),f,b
  2356  002640  D7D2               	goto	l1412
  2357  002642                     u10980:
  2358                           ; BSR set to: 3
  2359  002642  6B03               	clrf	?_strncmp& (0+255),b
  2360  002644  6B04               	clrf	(?_strncmp+1)& (0+255),b
  2361  002646                     l1411:
  2362                           ; BSR set to: 3
  2363  002646  0012               	return	
  2364  002648                     __end_of_strncmp:
  2365                           	opt stack 0
  2366                           
  2367                           	psect	text13
  2368                           ; =============== function _strncmp ends =======
      +                          =====
  2369                           ; *************** function _pwm_init ***********
      +                          ******
  2370                           ; Defined at:
  2371                           ;		line 28 in file "D:\ElabPh\SDMMC\PIC WAV Play
      +                          er\PIC18 SD WAV Audio Player\src_no_lcd\pwm_audi
      +                          o.c"
  2372                           ; Parameters:
  2373                           ;		None
  2374                           ; Auto variables:
  2375                           ;		None
  2376                           ; Return value:
  2377                           ;		type: void 
  2378                           ;		size: 0
  2379                           ; Registers used:
  2380                           ;		wreg, status,2
  2381                           ; Tracked objects:
  2382                           ;		On entry : 0/0
  2383                           ;		On exit  : 0/0
  2384                           ;		Unchanged: FFFFFFFF/0
  2385                           ; Data sizes:
  2386                           ;		Autos:    0
  2387                           ;		Params:   0
  2388                           ;		Temp:     0
  2389                           ;		Total:    0
  2390                           ; This function calls:
  2391                           ;		Nothing
  2392                           ; This function is called by:
  2393                           ;		_pwm_audio_init
  2394                           ; This function uses a non-reentrant model
  2395                           ; 
  2396  000000                     
  2397                           ;pwm_audio.c: 27: void pwm_init(void)
  2398                           ;pwm_audio.c: 28: {
  2399  002A00                     _pwm_init:
  2400                           	opt stack 27
  2401                           ; BSR set to: ?
  2402                           ;pwm_audio.c: 29: PR2 = 0b00111111 ;
  2403  002A00  0E3F               	movlw	63
  2404  002A02  6ECB               	movwf	4043,c	;volatile
  2405                           ;pwm_audio.c: 30: T2CON = 0b00000100 ;
  2406  002A04  0E04               	movlw	4
  2407  002A06  6ECA               	movwf	4042,c	;volatile
  2408                           ;pwm_audio.c: 33: CCPR1L = 0b00011111 ;
  2409  002A08  0E1F               	movlw	31
  2410  002A0A  6EBE               	movwf	4030,c	;volatile
  2411                           ;pwm_audio.c: 34: CCP1CON = 0b00111100 ;
  2412  002A0C  0E3C               	movlw	60
  2413  002A0E  6EBD               	movwf	4029,c	;volatile
  2414                           ;pwm_audio.c: 37: CCPR2L = 0b00011111 ;
  2415  002A10  0E1F               	movlw	31
  2416  002A12  6EBB               	movwf	4027,c	;volatile
  2417                           ;pwm_audio.c: 38: CCP2CON = 0b00111100 ;
  2418  002A14  0E3C               	movlw	60
  2419  002A16  6EBA               	movwf	4026,c	;volatile
  2420                           ;pwm_audio.c: 41: }
  2421                           ; BSR set to: ?
  2422  002A18  0C3C               	retlw	60
  2423  002A1A                     __end_of_pwm_init:
  2424                           	opt stack 0
  2425                           
  2426                           	psect	text14
  2427                           ; =============== function _pwm_init ends ======
      +                          ======
  2428                           ; *************** function _get_fileinfo *******
      +                          **********
  2429                           ; Defined at:
  2430                           ;		line 333 in file "D:\ElabPh\SDMMC\PIC WAV Pla
      +                          yer\PIC18 SD WAV Audio Player\src_no_lcd\pff.c"
  2431                           ; Parameters:
  2432                           ;		dj             size:   1reg:   wre	type: PTR 
      +                          struct _DIR_; Largest target is 17
  2433                           ;		 -> Dir(16), 
  2434                           ;		fno            size:   1offs:   0	type: PTR s
      +                          truct _FILINFO_; Largest target is 22
  2435                           ;		 -> Fno(22), 
  2436                           ; Auto variables:
  2437                           ;		c           	       	type: unsigned char 
  2438                           ;		i           	       	type: unsigned char 
  2439                           ;		p           	       	type: PTR unsigned char 
      +                          ; Largest target is 22
  2440                           ;		 -> Fno(22), 
  2441                           ;		dir         	       	type: PTR unsigned char 
      +                          ; Largest target is 32
  2442                           ;		 -> pf_readdir@dir(32), pf_opendir@dir(32), p
      +                          f_open@dir(32), 
  2443                           ; Return value:
  2444                           ;		type: void 
  2445                           ;		size: 0
  2446                           ; Registers used:
  2447                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, stat
      +                          us,2, status,0, prodl, prodh
  2448                           ; Tracked objects:
  2449                           ;		On entry : F/3
  2450                           ;		On exit  : F/3
  2451                           ;		Unchanged: FFFFFFF0/0
  2452                           ; Data sizes:
  2453                           ;		Autos:    2
  2454                           ;		Params:   1
  2455                           ;		Temp:     4
  2456                           ;		Total:    7
  2457                           ; This function calls:
  2458                           ;		Nothing
  2459                           ; This function is called by:
  2460                           ;		_pf_readdir
  2461                           ; This function uses a non-reentrant model
  2462                           ; 
  2463  000000                     
  2464                           ;pff.c: 328: static
  2465                           ;pff.c: 329: void get_fileinfo (
  2466                           ;pff.c: 330: DIR *dj,
  2467                           ;pff.c: 331: FILINFO *fno
  2468                           ;pff.c: 332: )
  2469                           ;pff.c: 333: {
  2470  001BC4                     _get_fileinfo:
  2471                           	opt stack 27
  2472                           ; BSR set to: 3
  2473                           ; get_fileinfo@dj loaded to prodh
  2474  001BC4  CFE8 FFF4          	movff	wreg,prodh
  2475                           ;pff.c: 334: BYTE i, c, *dir;
  2476                           ;pff.c: 335: char *p;
  2477                           ;pff.c: 338: p = fno->fname;
  2478  001BC8  512F               	movf	?_get_fileinfo& (0+255),w,b
  2479  001BCA  0F09               	addlw	9
  2480  001BCC  6ED9               	movwf	fsr2l,c
  2481                           ;pff.c: 339: if (dj->sect) {
  2482  001BCE  50F4               	movf	prodh,w,c
  2483  001BD0  0F0C               	addlw	12
  2484  001BD2  6EE9               	movwf	fsr0l,c
  2485  001BD4  6AEA               	clrf	fsr0h,c
  2486  001BD6  CFEE F332          	movff	postinc0,??_get_fileinfo+2
  2487  001BDA  CFEE F333          	movff	postinc0,??_get_fileinfo+3
  2488  001BDE  CFEE F334          	movff	postinc0,??_get_fileinfo+4
  2489  001BE2  CFEE F335          	movff	postinc0,??_get_fileinfo+5
  2490  001BE6  5135               	movf	(??_get_fileinfo+5)& (0+255),w,b
  2491  001BE8  1132               	iorwf	(??_get_fileinfo+2)& (0+255),w,b
  2492  001BEA  1133               	iorwf	(??_get_fileinfo+3)& (0+255),w,b
  2493  001BEC  1134               	iorwf	(??_get_fileinfo+4)& (0+255),w,b
  2494  001BEE  E101 D086          	bz	l223
  2495                           ;pff.c: 340: dir = FatFs->buf;
  2496  001BF2  5009               	movf	9,w,c
  2497  001BF4  0F06               	addlw	6
  2498  001BF6  6EE9               	movwf	fsr0l,c
  2499  001BF8  6AEA               	clrf	fsr0h,c
  2500  001BFA  CFEE F332          	movff	postinc0,??_get_fileinfo+2
  2501  001BFE  CFED F333          	movff	postdec0,??_get_fileinfo+3
  2502  001C02  C332  FFE1         	movff	??_get_fileinfo+2,fsr1l
  2503  001C06  C333  FFE2         	movff	??_get_fileinfo+3,fsr1h
  2504                           ; get_fileinfo@i allocated to prodh
  2505                           ;pff.c: 341: for (i = 0; i < 8; i++) {
  2506  001C0A  6AF4               	clrf	prodh,c
  2507  001C0C                     l224:
  2508                           ; BSR set to: ?
  2509                           ; get_fileinfo@c allocated to prodl
  2510                           ;pff.c: 342: c = dir[i];
  2511  001C0C  50F4               	movf	prodh,w,c
  2512  001C0E  24E1               	addwf	fsr1l,w,c
  2513  001C10  6EE9               	movwf	fsr0l,c
  2514  001C12  0E00               	movlw	0
  2515  001C14  20E2               	addwfc	fsr1h,w,c
  2516  001C16  6EEA               	movwf	fsr0h,c
  2517  001C18  50EF               	movf	indf0,w,c
  2518  001C1A  6EF3               	movwf	prodl,c
  2519                           ;pff.c: 343: if (c == ' ') break;
  2520  001C1C  50F3               	movf	prodl,w,c
  2521  001C1E  0A20               	xorlw	32
  2522  001C20  E00F               	bz	l225
  2523                           ; BSR set to: ?
  2524                           ;pff.c: 344: if (c == 0x05) c = 0xE5;
  2525  001C22  50F3               	movf	prodl,w,c
  2526  001C24  0A05               	xorlw	5
  2527  001C26  E102               	bnz	l228
  2528  001C28  0EE5               	movlw	229
  2529  001C2A  6EF3               	movwf	prodl,c
  2530  001C2C                     l228:
  2531                           ; BSR set to: ?
  2532  001C2C  50D9               	movf	fsr2l,w,c
  2533  001C2E  6EE9               	movwf	fsr0l,c
  2534  001C30  6AEA               	clrf	fsr0h,c
  2535  001C32  CFF3 FFEF          	movff	prodl,indf0
  2536                           ;pff.c: 345: *p++ = c;
  2537  001C36  2AD9               	incf	fsr2l,f,c
  2538  001C38  2AF4               	incf	prodh,f,c
  2539  001C3A  0E07               	movlw	7
  2540  001C3C  64F4               	cpfsgt	prodh,c
  2541  001C3E  D7E6               	goto	l224
  2542  001C40                     l225:
  2543                           ; BSR set to: ?
  2544                           ;get_fileinfo@dir stored from fsr1
  2545  001C40  CFE1 F330          	movff	fsr1l,??_get_fileinfo
  2546  001C44  CFE2 F331          	movff	fsr1h,??_get_fileinfo+1
  2547                           ;pff.c: 346: }
  2548                           ;pff.c: 347: if (dir[8] != ' ') {
  2549  001C48  0E08               	movlw	8
  2550  001C4A  24E1               	addwf	fsr1l,w,c
  2551  001C4C  6EE9               	movwf	fsr0l,c
  2552  001C4E  0E00               	movlw	0
  2553  001C50  20E2               	addwfc	fsr1h,w,c
  2554  001C52  6EEA               	movwf	fsr0h,c
  2555  001C54  50EF               	movf	indf0,w,c
  2556  001C56  0A20               	xorlw	32
  2557  001C58  E01E               	bz	l229
  2558  001C5A  50D9               	movf	fsr2l,w,c
  2559  001C5C  6EE9               	movwf	fsr0l,c
  2560  001C5E  6AEA               	clrf	fsr0h,c
  2561  001C60  0E2E               	movlw	46
  2562  001C62  6EEF               	movwf	indf0,c
  2563                           ;pff.c: 348: *p++ = '.';
  2564  001C64  2AD9               	incf	fsr2l,f,c
  2565                           ; get_fileinfo@i allocated to prodl
  2566                           ;pff.c: 349: for (i = 8; i < 11; i++) {
  2567  001C66  0E08               	movlw	8
  2568  001C68  6EF3               	movwf	prodl,c
  2569  001C6A                     l230:
  2570                           ; BSR set to: ?
  2571                           ; get_fileinfo@c allocated to fsr1l
  2572                           ;pff.c: 350: c = dir[i];
  2573  001C6A  50F3               	movf	prodl,w,c
  2574  001C6C  0103               	movlb	3	; () banked
  2575  001C6E  2530               	addwf	??_get_fileinfo& (0+255),w,b
  2576  001C70  6EE9               	movwf	fsr0l,c
  2577  001C72  0E00               	movlw	0
  2578  001C74  2131               	addwfc	(??_get_fileinfo+1)& (0+255),w,b
  2579  001C76  6EEA               	movwf	fsr0h,c
  2580  001C78  50EF               	movf	indf0,w,c
  2581  001C7A  6EE1               	movwf	fsr1l,c
  2582                           ;pff.c: 351: if (c == ' ') break;
  2583  001C7C  50E1               	movf	fsr1l,w,c
  2584  001C7E  0A20               	xorlw	32
  2585  001C80  E00A               	bz	l229
  2586                           ; BSR set to: 3
  2587  001C82  50D9               	movf	fsr2l,w,c
  2588  001C84  6EE9               	movwf	fsr0l,c
  2589  001C86  6AEA               	clrf	fsr0h,c
  2590  001C88  CFE1 FFEF          	movff	fsr1l,indf0
  2591                           ;pff.c: 352: *p++ = c;
  2592  001C8C  2AD9               	incf	fsr2l,f,c
  2593  001C8E  2AF3               	incf	prodl,f,c
  2594  001C90  0E0A               	movlw	10
  2595  001C92  64F3               	cpfsgt	prodl,c
  2596  001C94  D7EA               	goto	l230
  2597                           ; BSR set to: 3
  2598  001C96                     l229:
  2599                           ; BSR set to: ?
  2600                           ;pff.c: 353: }
  2601                           ;pff.c: 354: }
  2602                           ;pff.c: 355: fno->fattrib = dir[11];
  2603  001C96  0E0B               	movlw	11
  2604  001C98  0103               	movlb	3	; () banked
  2605  001C9A  2530               	addwf	??_get_fileinfo& (0+255),w,b
  2606  001C9C  6EE9               	movwf	fsr0l,c
  2607  001C9E  0E00               	movlw	0
  2608  001CA0  2131               	addwfc	(??_get_fileinfo+1)& (0+255),w,b
  2609  001CA2  6EEA               	movwf	fsr0h,c
  2610  001CA4  512F               	movf	?_get_fileinfo& (0+255),w,b
  2611  001CA6  0F08               	addlw	8
  2612  001CA8  6EE1               	movwf	fsr1l,c
  2613  001CAA  6AE2               	clrf	fsr1h,c
  2614  001CAC  CFEF FFE7          	movff	indf0,indf1
  2615                           ;pff.c: 356: fno->fsize = (DWORD)(*(DWORD*)(BYTE
      +                          *)(dir+28));
  2616  001CB0  0E1C               	movlw	28
  2617  001CB2  2530               	addwf	??_get_fileinfo& (0+255),w,b
  2618  001CB4  EC6E  F00B         	call	PL8
  2619  001CB8  6EE1               	movwf	fsr1l,c
  2620  001CBA  6AE2               	clrf	fsr1h,c
  2621  001CBC  CFEE FFE6          	movff	postinc0,postinc1
  2622  001CC0  CFEE FFE6          	movff	postinc0,postinc1
  2623  001CC4  CFEE FFE6          	movff	postinc0,postinc1
  2624  001CC8  CFED FFE5          	movff	postdec0,postdec1
  2625                           ;pff.c: 357: fno->fdate = (WORD)(*(WORD*)(BYTE*)
      +                          (dir+24));
  2626  001CCC  0E18               	movlw	24
  2627  001CCE  2530               	addwf	??_get_fileinfo& (0+255),w,b
  2628  001CD0  6EE9               	movwf	fsr0l,c
  2629  001CD2  0E00               	movlw	0
  2630  001CD4  2131               	addwfc	(??_get_fileinfo+1)& (0+255),w,b
  2631  001CD6  6EEA               	movwf	fsr0h,c
  2632  001CD8  512F               	movf	?_get_fileinfo& (0+255),w,b
  2633  001CDA  0F04               	addlw	4
  2634  001CDC  6EE1               	movwf	fsr1l,c
  2635  001CDE  6AE2               	clrf	fsr1h,c
  2636  001CE0  CFEE FFE6          	movff	postinc0,postinc1
  2637  001CE4  CFED FFE5          	movff	postdec0,postdec1
  2638                           ;pff.c: 358: fno->ftime = (WORD)(*(WORD*)(BYTE*)
      +                          (dir+22));
  2639  001CE8  0E16               	movlw	22
  2640  001CEA  2530               	addwf	??_get_fileinfo& (0+255),w,b
  2641  001CEC  EC6E  F00B         	call	PL8
  2642  001CF0  0F06               	addlw	6
  2643  001CF2  6EE1               	movwf	fsr1l,c
  2644  001CF4  6AE2               	clrf	fsr1h,c
  2645  001CF6  CFEE FFE6          	movff	postinc0,postinc1
  2646  001CFA  CFED FFE5          	movff	postdec0,postdec1
  2647  001CFE                     l223:
  2648                           ; BSR set to: 3
  2649                           ;pff.c: 359: }
  2650                           ;pff.c: 360: *p = 0;
  2651  001CFE  50D9               	movf	fsr2l,w,c
  2652  001D00  6EE9               	movwf	fsr0l,c
  2653  001D02  6AEA               	clrf	fsr0h,c
  2654  001D04  6AEF               	clrf	indf0,c
  2655                           ;pff.c: 361: }
  2656                           ; BSR set to: 3
  2657  001D06  0C00               	retlw	0
  2658  001D08                     __end_of_get_fileinfo:
  2659                           	opt stack 0
  2660                           
  2661                           	psect	text15
  2662                           ; =============== function _get_fileinfo ends ==
      +                          ==========
  2663                           ; *************** function _load_header ********
      +                          *********
  2664                           ; Defined at:
  2665                           ;		line 38 in file "D:\ElabPh\SDMMC\PIC WAV Play
      +                          er\PIC18 SD WAV Audio Player\src_no_lcd\wave_fil
      +                          e.c"
  2666                           ; Parameters:
  2667                           ;		None
  2668                           ; Auto variables:
  2669                           ;		ChunkID     	       	type: unsigned long 
  2670                           ;		SamplingRate	       	type: unsigned long 
  2671                           ;		sz          	       	type: unsigned long 
  2672                           ; Return value:
  2673                           ;		type: unsigned long 
  2674                           ;		size: 4
  2675                           ; Registers used:
  2676                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, prodl, prodh, cstack
  2677                           ; Tracked objects:
  2678                           ;		On entry : F/3
  2679                           ;		On exit  : F/3
  2680                           ;		Unchanged: FFFFFFF0/0
  2681                           ; Data sizes:
  2682                           ;		Autos:   12
  2683                           ;		Params:   4
  2684                           ;		Temp:     4
  2685                           ;		Total:   20
  2686                           ; This function calls:
  2687                           ;		_pf_read
  2688                           ;		_set_sampling_rate
  2689                           ;		_pf_lseek
  2690                           ; This function is called by:
  2691                           ;		_play_wave_file
  2692                           ; This function uses a non-reentrant model
  2693                           ; 
  2694  000000                     
  2695                           ;wave_file.c: 36: static
  2696                           ;wave_file.c: 37: DWORD load_header (void)
  2697                           ;wave_file.c: 38: {
  2698  001096                     _load_header:
  2699                           	opt stack 27
  2700                           ; BSR set to: 3
  2701  001096  6B25               	clrf	(?_pf_read+4)& (0+255),b
  2702  001098  0E0C               	movlw	12
  2703  00109A  6F23               	movwf	(?_pf_read+2)& (0+255),b
  2704  00109C  6B24               	clrf	(?_pf_read+3)& (0+255),b
  2705  00109E  EC69  F00B         	call	PL9
  2706  0010A2  EC82  F005         	call	_pf_read	;wreg free
  2707  0010A6  0900               	iorlw	0
  2708  0010A8  E007               	bz	l602
  2709  0010AA  0E01               	movlw	1
  2710  0010AC  6F0D               	movwf	?_load_header& (0+255),b
  2711  0010AE  0E00               	movlw	0
  2712  0010B0  6B0E               	clrf	(?_load_header+1)& (0+255),b
  2713  0010B2  6B0F               	clrf	(?_load_header+2)& (0+255),b
  2714  0010B4  6B10               	clrf	(?_load_header+3)& (0+255),b
  2715  0010B6  D0E5               	goto	l601
  2716  0010B8                     l602:
  2717                           ; BSR set to: 3
  2718                           ;wave_file.c: 42: if (rb != 12 || (DWORD)(*(DWOR
      +                          D*)(BYTE*)(Buff+8)) != (((DWORD)'E'<<24)+((DWORD
      +                          )'V'<<16)+((WORD)'A'<<8)+(BYTE)'W')) return 0;
  2719  0010B8  5000               	movf	0,w,c
  2720  0010BA  0A0C               	xorlw	12
  2721  0010BC  1001               	iorwf	1,w,c
  2722  0010BE  E10D               	bnz	l600000420
  2723  0010C0  0102               	movlb	2	; () banked
  2724  0010C2  510B               	movf	11,w,b
  2725  0010C4  0A45               	xorlw	69
  2726  0010C6  0E57               	movlw	87
  2727  0010C8  B4D8               	btfsc	status,2,c
  2728  0010CA  1908               	xorwf	8,w,b
  2729  0010CC  0E41               	movlw	65
  2730  0010CE  B4D8               	btfsc	status,2,c
  2731  0010D0  1909               	xorwf	9,w,b
  2732  0010D2  0E56               	movlw	86
  2733  0010D4  B4D8               	btfsc	status,2,c
  2734  0010D6  190A               	xorwf	10,w,b
  2735  0010D8  E06C               	bz	l605
  2736  0010DA                     l600000420:
  2737                           ; BSR set to: ?
  2738  0010DA  0103               	movlb	3	; () banked
  2739  0010DC  D0CE               	goto	L5
  2740                           ;wave_file.c: 50: switch (ChunkID) {
  2741                           ;wave_file.c: 51: case (((DWORD)' '<<24)+((DWORD
      +                          )'t'<<16)+((WORD)'m'<<8)+(BYTE)'f'):
  2742  0010DE                     l610:
  2743                           ; BSR set to: 3
  2744                           ;wave_file.c: 52: if (sz > 100 || sz < 16) retur
      +                          n 0;
  2745  0010DE  0E65               	movlw	101
  2746  0010E0  EC61  F00B         	call	PL10
  2747  0010E4  E301 D0C9          	bc	L5
  2748  0010E8  0E10               	movlw	16
  2749  0010EA  EC61  F00B         	call	PL10
  2750  0010EE  E201 D0C4          	bnc	L5
  2751                           ; BSR set to: 3
  2752                           ; BSR set to: 3
  2753                           ;wave_file.c: 53: pf_read(Buff, sz, &rb);
  2754  0010F2  6B25               	clrf	(?_pf_read+4)& (0+255),b
  2755  0010F4  C319  F323         	movff	??_load_header+8,?_pf_read+2
  2756  0010F8  C31A  F324         	movff	??_load_header+9,?_pf_read+3
  2757  0010FC  EC69  F00B         	call	PL9
  2758  001100  EC82  F005         	call	_pf_read	;wreg free
  2759                           ;wave_file.c: 54: if (rb != sz) return 0;
  2760  001104  5000               	movf	0,w,c
  2761  001106  6F1D               	movwf	(??_load_header+12)& (0+255),b
  2762  001108  5001               	movf	1,w,c
  2763  00110A  6F1E               	movwf	(??_load_header+13)& (0+255),b
  2764  00110C  6B1F               	clrf	(??_load_header+14)& (0+255),b
  2765  00110E  6B20               	clrf	(??_load_header+15)& (0+255),b
  2766  001110  511C               	movf	(??_load_header+11)& (0+255),w,b
  2767  001112  1920               	xorwf	(??_load_header+15)& (0+255),w,b
  2768  001114  E108               	bnz	u8435
  2769  001116  511B               	movf	(??_load_header+10)& (0+255),w,b
  2770  001118  191F               	xorwf	(??_load_header+14)& (0+255),w,b
  2771  00111A  E105               	bnz	u8435
  2772  00111C  511A               	movf	(??_load_header+9)& (0+255),w,b
  2773  00111E  191E               	xorwf	(??_load_header+13)& (0+255),w,b
  2774  001120  E102               	bnz	u8435
  2775  001122  5119               	movf	(??_load_header+8)& (0+255),w,b
  2776  001124  191D               	xorwf	(??_load_header+12)& (0+255),w,b
  2777  001126                     u8435:
  2778  001126  E001 D0A8          	bnz	L5
  2779                           ; BSR set to: 3
  2780                           ;wave_file.c: 55: if (Buff[0] != 1) return 0;
  2781  00112A  0102               	movlb	2	; () banked
  2782  00112C  0500               	decf	0,w,b
  2783  00112E  E002               	bz	l613
  2784  001130                     u8460:
  2785  001130  0103               	movlb	3	; () banked
  2786  001132  D0A3               	goto	L5
  2787  001134                     l613:
  2788                           ; BSR set to: 2
  2789                           ;wave_file.c: 57: NumChannels = Buff[2];
  2790  001134  C202 F04C          	movff	514,76
  2791  001138  6A4D               	clrf	77,c
  2792                           ;wave_file.c: 58: if (NumChannels != 1 && NumCha
      +                          nnels != 2)
  2793  00113A  044C               	decf	76,w,c
  2794  00113C  104D               	iorwf	77,w,c
  2795  00113E  E004               	bz	l614
  2796  001140  504C               	movf	76,w,c
  2797  001142  0A02               	xorlw	2
  2798  001144  104D               	iorwf	77,w,c
  2799  001146  E1F4               	bnz	u8460
  2800  001148                     l614:
  2801                           ; BSR set to: 2
  2802                           ;wave_file.c: 61: BitsPerSample = Buff[14];
  2803  001148  C20E F04E          	movff	526,78
  2804  00114C  6A4F               	clrf	79,c
  2805                           ;wave_file.c: 62: if (BitsPerSample != 8 && Bits
      +                          PerSample != 16)
  2806  00114E  504E               	movf	78,w,c
  2807  001150  0A08               	xorlw	8
  2808  001152  104F               	iorwf	79,w,c
  2809  001154  E004               	bz	l615
  2810  001156  504E               	movf	78,w,c
  2811  001158  0A10               	xorlw	16
  2812  00115A  104F               	iorwf	79,w,c
  2813  00115C  E1E9               	bnz	u8460
  2814  00115E                     l615:
  2815                           ; BSR set to: 2
  2816                           ;wave_file.c: 65: SamplingRate = (DWORD)(*(DWORD
      +                          *)(BYTE*)(Buff+4));
  2817  00115E  C204 F315          	movff	516,??_load_header+4
  2818  001162  C205 F316          	movff	517,??_load_header+5
  2819  001166  C206 F317          	movff	518,??_load_header+6
  2820  00116A  C207 F318          	movff	519,??_load_header+7
  2821                           ;wave_file.c: 66: set_sampling_rate( SamplingRat
      +                          e );
  2822  00116E  C315  F321         	movff	??_load_header+4,?_set_sampling_rate
  2823  001172  C316  F322         	movff	??_load_header+5,?_set_sampling_rate+1
  2824  001176  C317  F323         	movff	??_load_header+6,?_set_sampling_rate+2
  2825  00117A  C318  F324         	movff	??_load_header+7,?_set_sampling_rate+3
  2826  00117E  EC1A  F014         	call	_set_sampling_rate	;wreg free
  2827                           ;wave_file.c: 67: break;
  2828  001182  D017               	goto	l605
  2829                           ;wave_file.c: 69: case (((DWORD)'a'<<24)+((DWORD
      +                          )'t'<<16)+((WORD)'a'<<8)+(BYTE)'d'):
  2830  001184                     l616:
  2831                           ; BSR set to: 3
  2832  001184  C319  F30D         	movff	??_load_header+8,?_load_header
  2833  001188  C31A  F30E         	movff	??_load_header+9,?_load_header+1
  2834  00118C  C31B  F30F         	movff	??_load_header+10,?_load_header+2
  2835  001190  C31C  F310         	movff	??_load_header+11,?_load_header+3
  2836  001194  D076               	goto	l601
  2837  001196                     l618:
  2838                           ; BSR set to: 3
  2839                           ;wave_file.c: 74: case (((DWORD)'t'<<24)+((DWORD
      +                          )'c'<<16)+((WORD)'a'<<8)+(BYTE)'f'):
  2840                           ;wave_file.c: 75: pf_lseek(Fs.fptr + sz);
  2841  001196  5119               	movf	(??_load_header+8)& (0+255),w,b
  2842  001198  2422               	addwf	34,w,c
  2843  00119A  6F21               	movwf	?_pf_lseek& (0+255),b
  2844  00119C  511A               	movf	(??_load_header+9)& (0+255),w,b
  2845  00119E  2023               	addwfc	35,w,c
  2846  0011A0  6F22               	movwf	(?_pf_lseek+1)& (0+255),b
  2847  0011A2  511B               	movf	(??_load_header+10)& (0+255),w,b
  2848  0011A4  2024               	addwfc	36,w,c
  2849  0011A6  6F23               	movwf	(?_pf_lseek+2)& (0+255),b
  2850  0011A8  511C               	movf	(??_load_header+11)& (0+255),w,b
  2851  0011AA  2025               	addwfc	37,w,c
  2852  0011AC  6F24               	movwf	(?_pf_lseek+3)& (0+255),b
  2853  0011AE  EC04  F002         	call	_pf_lseek	;wreg free
  2854                           ;wave_file.c: 76: break;
  2855                           ;wave_file.c: 44: while(1) {
  2856  0011B2                     l605:
  2857                           ; BSR set to: ?
  2858                           ;wave_file.c: 45: pf_read(Buff, 8, &rb);
  2859  0011B2  0103               	movlb	3	; () banked
  2860  0011B4  6B25               	clrf	(?_pf_read+4)& (0+255),b
  2861  0011B6  0E08               	movlw	8
  2862  0011B8  6F23               	movwf	(?_pf_read+2)& (0+255),b
  2863  0011BA  6B24               	clrf	(?_pf_read+3)& (0+255),b
  2864  0011BC  6B21               	clrf	?_pf_read& (0+255),b
  2865  0011BE  0E02               	movlw	2
  2866  0011C0  6F22               	movwf	(?_pf_read+1)& (0+255),b
  2867  0011C2  EC82  F005         	call	_pf_read	;wreg free
  2868                           ;wave_file.c: 46: if (rb != 8) return 0;
  2869  0011C6  5000               	movf	0,w,c
  2870  0011C8  0A08               	xorlw	8
  2871  0011CA  1001               	iorwf	1,w,c
  2872  0011CC  E156               	bnz	L5
  2873                           ; BSR set to: 3
  2874                           ;wave_file.c: 47: ChunkID = (DWORD)(*(DWORD*)(BY
      +                          TE*)(&Buff[0]));
  2875  0011CE  C200 F311          	movff	512,??_load_header
  2876  0011D2  C201 F312          	movff	513,??_load_header+1
  2877  0011D6  C202 F313          	movff	514,??_load_header+2
  2878  0011DA  C203 F314          	movff	515,??_load_header+3
  2879                           ;wave_file.c: 48: sz = (DWORD)(*(DWORD*)(BYTE*)(
      +                          &Buff[4]));
  2880  0011DE  C204 F319          	movff	516,??_load_header+8
  2881  0011E2  C205 F31A          	movff	517,??_load_header+9
  2882  0011E6  C206 F31B          	movff	518,??_load_header+10
  2883  0011EA  C207 F31C          	movff	519,??_load_header+11
  2884                           ;wave_file.c: 78: default :
  2885                           ; BSR set to: 3
  2886                           ; BSR set to: 3
  2887  0011EE  C311  F31D         	movff	??_load_header,??_load_header+12
  2888  0011F2  C312  F31E         	movff	??_load_header+1,??_load_header+13
  2889  0011F6  C313  F31F         	movff	??_load_header+2,??_load_header+14
  2890  0011FA  C314  F320         	movff	??_load_header+3,??_load_header+15
  2891  0011FE  D034               	goto	l30230
  2892  001200                     l30218:
  2893  001200  D005               	goto	l30219
  2894  001202                     l30220:
  2895  001202  511D               	movf	(??_load_header+12)& (0+255),w,b
  2896  001204  0A66               	xorlw	102
  2897  001206  E101 D76A          	bz	l610
  2898  00120A  D037               	goto	L5
  2899  00120C                     l30219:
  2900  00120C  511E               	movf	(??_load_header+13)& (0+255),w,b
  2901  00120E  0A6D               	xorlw	109
  2902  001210  E0F8               	bz	l30220
  2903  001212  D033               	goto	L5
  2904  001214                     l30221:
  2905  001214  D003               	goto	l30222
  2906  001216                     l30223:
  2907  001216  511D               	movf	(??_load_header+12)& (0+255),w,b
  2908  001218  0A4C               	xorlw	76
  2909  00121A  D010               	goto	L6
  2910  00121C                     l30222:
  2911  00121C  511E               	movf	(??_load_header+13)& (0+255),w,b
  2912  00121E  0A49               	xorlw	73
  2913  001220  E0FA               	bz	l30223
  2914  001222  D02B               	goto	L5
  2915  001224                     l30224:
  2916  001224  D004               	goto	l30225
  2917  001226                     l30226:
  2918  001226  511D               	movf	(??_load_header+12)& (0+255),w,b
  2919  001228  0A64               	xorlw	100
  2920  00122A  E0AC               	bz	l616
  2921  00122C  D026               	goto	L5
  2922  00122E                     l30225:
  2923  00122E  511E               	movf	(??_load_header+13)& (0+255),w,b
  2924  001230  0A61               	xorlw	97
  2925  001232  E0F9               	bz	l30226
  2926  001234  D022               	goto	L5
  2927  001236                     l30227:
  2928  001236  D004               	goto	l30228
  2929  001238                     l30229:
  2930  001238  511D               	movf	(??_load_header+12)& (0+255),w,b
  2931  00123A  0A66               	xorlw	102
  2932  00123C                     L6:
  2933  00123C  E0AC               	bz	l618
  2934  00123E  D01D               	goto	L5
  2935  001240                     l30228:
  2936  001240  511E               	movf	(??_load_header+13)& (0+255),w,b
  2937  001242  0A61               	xorlw	97
  2938  001244  E0F9               	bz	l30229
  2939  001246  D019               	goto	L5
  2940  001248                     l30231:
  2941  001248  511F               	movf	(??_load_header+14)& (0+255),w,b
  2942  00124A  0A74               	xorlw	116
  2943  00124C  E0D9               	bz	l30218
  2944  00124E  D015               	goto	L5
  2945  001250                     l30232:
  2946  001250  511F               	movf	(??_load_header+14)& (0+255),w,b
  2947  001252  0A53               	xorlw	83
  2948  001254  E0DF               	bz	l30221
  2949  001256  D011               	goto	L5
  2950  001258                     l30233:
  2951  001258  511F               	movf	(??_load_header+14)& (0+255),w,b
  2952  00125A  0A74               	xorlw	116
  2953  00125C  E0E3               	bz	l30224
  2954  00125E  D00D               	goto	L5
  2955  001260                     l30234:
  2956  001260  511F               	movf	(??_load_header+14)& (0+255),w,b
  2957  001262  0A63               	xorlw	99
  2958  001264  E0E8               	bz	l30227
  2959  001266  D009               	goto	L5
  2960  001268                     l30230:
  2961  001268  5120               	movf	(??_load_header+15)& (0+255),w,b
  2962  00126A  0A20               	xorlw	32
  2963  00126C  E0ED               	bz	l30231
  2964  00126E  0A74               	xorlw	116
  2965  001270  E0EF               	bz	l30232
  2966  001272  0A35               	xorlw	53
  2967  001274  E0F1               	bz	l30233
  2968  001276  0A15               	xorlw	21
  2969  001278  E0F3               	bz	l30234
  2970  00127A                     L5:
  2971  00127A  6B0D               	clrf	?_load_header& (0+255),b
  2972  00127C  6B0E               	clrf	(?_load_header+1)& (0+255),b
  2973  00127E  6B0F               	clrf	(?_load_header+2)& (0+255),b
  2974  001280  6B10               	clrf	(?_load_header+3)& (0+255),b
  2975                           ; BSR set to: 3
  2976                           ;wave_file.c: 83: }
  2977  001282                     l601:
  2978                           ; BSR set to: 3
  2979  001282  0012               	return	
  2980  001284                     __end_of_load_header:
  2981                           	opt stack 0
  2982                           
  2983                           	psect	text16
  2984                           ; =============== function _load_header ends ===
      +                          =========
  2985                           ; *************** function _disk_initialize ****
      +                          *************
  2986                           ; Defined at:
  2987                           ;		line 145 in file "D:\ElabPh\SDMMC\PIC WAV Pla
      +                          yer\PIC18 SD WAV Audio Player\src_no_lcd\sd_mmc.
      +                          c"
  2988                           ; Parameters:
  2989                           ;		None
  2990                           ; Auto variables:
  2991                           ;		cmd         	       	type: unsigned char 
  2992                           ;		ty          	       	type: unsigned char 
  2993                           ;		n           	       	type: unsigned char 
  2994                           ;		tmr         	       	type: unsigned short 
  2995                           ;		ocr         	       	type: unsigned char [4]
  2996                           ; Return value:
  2997                           ;		type: unsigned char 
  2998                           ;		size: 1
  2999                           ; Registers used:
  3000                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, prodl, prodh, cstack
  3001                           ; Tracked objects:
  3002                           ;		On entry : 0/0
  3003                           ;		On exit  : 0/0
  3004                           ;		Unchanged: FFFFFFF0/0
  3005                           ; Data sizes:
  3006                           ;		Autos:    7
  3007                           ;		Params:   0
  3008                           ;		Temp:     1
  3009                           ;		Total:    8
  3010                           ; This function calls:
  3011                           ;		_init_spi
  3012                           ;		_rcv_spi
  3013                           ;		_send_cmd
  3014                           ;		_release_spi
  3015                           ; This function is called by:
  3016                           ;		_pf_mount
  3017                           ; This function uses a non-reentrant model
  3018                           ; 
  3019  000000                     
  3020                           ;sd_mmc.c: 144: DSTATUS disk_initialize (void)
  3021                           ;sd_mmc.c: 145: {
  3022  001A5E                     _disk_initialize:
  3023                           	opt stack 27
  3024                           ; BSR set to: ?
  3025  001A5E  ECE4  F014         	call	_init_spi	;wreg free
  3026                           ; disk_initialize@n allocated to fsr2l
  3027                           ;sd_mmc.c: 154: for (n = 100; n; n--) rcv_spi();
  3028  001A62  0E64               	movlw	100
  3029  001A64  6ED9               	movwf	fsr2l,c
  3030  001A66  D003               	goto	l963
  3031  001A68                     l960:
  3032                           ; BSR set to: ?
  3033  001A68  EC28  F015         	call	_rcv_spi	;wreg free
  3034  001A6C  06D9               	decf	fsr2l,f,c
  3035  001A6E                     l963:
  3036                           ; BSR set to: ?
  3037  001A6E  66D9               	tstfsz	fsr2l,c
  3038  001A70  D7FB               	goto	l960
  3039                           ; BSR set to: ?
  3040                           ;sd_mmc.c: 156: ty = 0;
  3041  001A72  6AF4               	clrf	prodh,c
  3042                           ;sd_mmc.c: 157: if (send_cmd((0x40+0), 0) == 1) 
      +                          {
  3043  001A74  0103               	movlb	3	; () banked
  3044  001A76  6BA4               	clrf	?_send_cmd& (0+255),b
  3045  001A78  6BA5               	clrf	(?_send_cmd+1)& (0+255),b
  3046  001A7A  6BA6               	clrf	(?_send_cmd+2)& (0+255),b
  3047  001A7C  6BA7               	clrf	(?_send_cmd+3)& (0+255),b
  3048  001A7E  0E40               	movlw	64
  3049  001A80  EC0F  F010         	call	_send_cmd
  3050  001A84  0103               	movlb	3	; () banked
  3051  001A86  6F50               	movwf	(??_disk_initialize+7)& (0+255),b
  3052  001A88  0550               	decf	(??_disk_initialize+7)& (0+255),w,b
  3053  001A8A  E001 D08D          	bnz	l964
  3054                           ;sd_mmc.c: 159: if (send_cmd((0x40+8), 0x1AA) ==
      +                           0) {
  3055  001A8E  0EAA               	movlw	170
  3056  001A90  6FA4               	movwf	?_send_cmd& (0+255),b
  3057  001A92  0E01               	movlw	1
  3058  001A94  6FA5               	movwf	(?_send_cmd+1)& (0+255),b
  3059  001A96  6BA6               	clrf	(?_send_cmd+2)& (0+255),b
  3060  001A98  6BA7               	clrf	(?_send_cmd+3)& (0+255),b
  3061  001A9A  0E48               	movlw	72
  3062  001A9C  EC0F  F010         	call	_send_cmd
  3063  001AA0  0900               	iorlw	0
  3064  001AA2  E149               	bnz	l965
  3065                           ;sd_mmc.c: 160: for (n = 0; n < 4; n++) ocr[n] =
      +                           rcv_spi();
  3066  001AA4  6AD9               	clrf	fsr2l,c
  3067  001AA6                     l966:
  3068                           ; BSR set to: ?
  3069  001AA6  0103               	movlb	3	; () banked
  3070  001AA8  0E4C               	movlw	low (??_disk_initialize+3)
  3071  001AAA  24D9               	addwf	fsr2l,w,c
  3072  001AAC  EC5C  F00B         	call	PL11
  3073  001AB0  EC28  F015         	call	_rcv_spi	;wreg free
  3074  001AB4  6EEF               	movwf	indf0,c
  3075  001AB6  2AD9               	incf	fsr2l,f,c
  3076  001AB8  0E03               	movlw	3
  3077  001ABA  64D9               	cpfsgt	fsr2l,c
  3078  001ABC  D7F4               	goto	l966
  3079                           ; BSR set to: 3
  3080                           ;sd_mmc.c: 161: if (ocr[2] == 0x01 && ocr[3] == 
      +                          0xAA) {
  3081  001ABE  054E               	decf	(??_disk_initialize+5)& (0+255),w,b
  3082  001AC0  E173               	bnz	l964
  3083  001AC2  514F               	movf	(??_disk_initialize+6)& (0+255),w,b
  3084  001AC4  0AAA               	xorlw	170
  3085  001AC6  E170               	bnz	l964
  3086                           ;sd_mmc.c: 162: for (tmr = 12000; tmr && send_cm
      +                          d((0xC0+41), 1UL << 30); tmr--) ;
  3087  001AC8  0EE0               	movlw	224
  3088  001ACA  6F4A               	movwf	(??_disk_initialize+1)& (0+255),b
  3089  001ACC  0E2E               	movlw	46
  3090  001ACE  6F4B               	movwf	(??_disk_initialize+2)& (0+255),b
  3091  001AD0  D00E               	goto	l973
  3092  001AD2                     u10390:
  3093  001AD2  6BA4               	clrf	?_send_cmd& (0+255),b
  3094  001AD4  6BA5               	clrf	(?_send_cmd+1)& (0+255),b
  3095  001AD6  6BA6               	clrf	(?_send_cmd+2)& (0+255),b
  3096  001AD8  0E40               	movlw	64
  3097  001ADA  6FA7               	movwf	(?_send_cmd+3)& (0+255),b
  3098  001ADC  0EE9               	movlw	233
  3099  001ADE  EC0F  F010         	call	_send_cmd
  3100  001AE2  0900               	iorlw	0
  3101  001AE4  E007               	bz	l971
  3102                           ; BSR set to: ?
  3103  001AE6  0103               	movlb	3	; () banked
  3104  001AE8  074A               	decf	(??_disk_initialize+1)& (0+255),f,b
  3105  001AEA  A0D8               	btfss	status,0,c
  3106  001AEC  074B               	decf	(??_disk_initialize+2)& (0+255),f,b
  3107  001AEE                     l973:
  3108                           ; BSR set to: 3
  3109  001AEE  514B               	movf	(??_disk_initialize+2)& (0+255),w,b
  3110  001AF0  114A               	iorwf	(??_disk_initialize+1)& (0+255),w,b
  3111  001AF2  E1EF               	bnz	u10390
  3112                           ; BSR set to: ?
  3113  001AF4                     l971:
  3114                           ; BSR set to: ?
  3115                           ;sd_mmc.c: 163: if (tmr && send_cmd((0x40+58), 0
      +                          ) == 0) {
  3116  001AF4  0103               	movlb	3	; () banked
  3117  001AF6  514B               	movf	(??_disk_initialize+2)& (0+255),w,b
  3118  001AF8  114A               	iorwf	(??_disk_initialize+1)& (0+255),w,b
  3119  001AFA  E056               	bz	l964
  3120  001AFC  6BA4               	clrf	?_send_cmd& (0+255),b
  3121  001AFE  6BA5               	clrf	(?_send_cmd+1)& (0+255),b
  3122  001B00  6BA6               	clrf	(?_send_cmd+2)& (0+255),b
  3123  001B02  6BA7               	clrf	(?_send_cmd+3)& (0+255),b
  3124  001B04  0E7A               	movlw	122
  3125  001B06  EC0F  F010         	call	_send_cmd
  3126  001B0A  0900               	iorlw	0
  3127  001B0C  E14D               	bnz	l964
  3128                           ; disk_initialize@n allocated to fsr1l
  3129                           ;sd_mmc.c: 164: for (n = 0; n < 4; n++) ocr[n] =
      +                           rcv_spi();
  3130  001B0E  6AE1               	clrf	fsr1l,c
  3131  001B10                     l975:
  3132                           ; BSR set to: ?
  3133  001B10  0103               	movlb	3	; () banked
  3134  001B12  0E4C               	movlw	low (??_disk_initialize+3)
  3135  001B14  24E1               	addwf	fsr1l,w,c
  3136  001B16  EC5C  F00B         	call	PL11
  3137  001B1A  EC28  F015         	call	_rcv_spi	;wreg free
  3138  001B1E  6EEF               	movwf	indf0,c
  3139  001B20  2AE1               	incf	fsr1l,f,c
  3140  001B22  0E03               	movlw	3
  3141  001B24  64E1               	cpfsgt	fsr1l,c
  3142  001B26  D7F4               	goto	l975
  3143                           ; BSR set to: 3
  3144                           ;sd_mmc.c: 165: ty = (ocr[0] & 0x40) ? 0x04 | 0x
      +                          08 : 0x04;
  3145  001B28  0E04               	movlw	4
  3146  001B2A  6EF4               	movwf	prodh,c
  3147  001B2C  AD4C               	btfss	(??_disk_initialize+3)& (0+255),6,b
  3148  001B2E  D03C               	goto	l964
  3149  001B30  0E0C               	movlw	12
  3150  001B32  6EF4               	movwf	prodh,c
  3151                           ; BSR set to: 3
  3152                           ; BSR set to: 3
  3153                           ; BSR set to: ?
  3154                           ;sd_mmc.c: 166: }
  3155                           ;sd_mmc.c: 167: }
  3156                           ;sd_mmc.c: 168: }
  3157  001B34  D039               	goto	l964
  3158  001B36                     l965:
  3159                           ; BSR set to: ?
  3160                           ;sd_mmc.c: 169: else {
  3161                           ;sd_mmc.c: 170: if (send_cmd((0xC0+41), 0) <= 1)
      +                           {
  3162  001B36  0103               	movlb	3	; () banked
  3163  001B38  6BA4               	clrf	?_send_cmd& (0+255),b
  3164  001B3A  6BA5               	clrf	(?_send_cmd+1)& (0+255),b
  3165  001B3C  6BA6               	clrf	(?_send_cmd+2)& (0+255),b
  3166  001B3E  6BA7               	clrf	(?_send_cmd+3)& (0+255),b
  3167  001B40  0EE9               	movlw	233
  3168  001B42  EC0F  F010         	call	_send_cmd
  3169  001B46  0103               	movlb	3	; () banked
  3170  001B48  6F50               	movwf	(??_disk_initialize+7)& (0+255),b
  3171  001B4A  0E02               	movlw	2
  3172  001B4C  5D50               	subwf	(??_disk_initialize+7)& (0+255),w,b
  3173  001B4E  E204               	bc	l979
  3174                           ;sd_mmc.c: 171: ty = 0x02; cmd = (0xC0+41);
  3175  001B50  0E02               	movlw	2
  3176  001B52  6EF4               	movwf	prodh,c
  3177  001B54  0EE9               	movlw	233
  3178  001B56  D003               	goto	L7
  3179                           ;sd_mmc.c: 172: } else {
  3180  001B58                     l979:
  3181                           ; BSR set to: 3
  3182                           ;sd_mmc.c: 173: ty = 0x01; cmd = (0x40+1);
  3183  001B58  0E01               	movlw	1
  3184  001B5A  6EF4               	movwf	prodh,c
  3185  001B5C  0E41               	movlw	65
  3186  001B5E                     L7:
  3187  001B5E  6F49               	movwf	??_disk_initialize& (0+255),b
  3188                           ; BSR set to: 3
  3189                           ;sd_mmc.c: 174: }
  3190                           ;sd_mmc.c: 175: for (tmr = 25000; tmr && send_cm
      +                          d(cmd, 0); tmr--) ;
  3191  001B60  0EA8               	movlw	168
  3192  001B62  6F4A               	movwf	(??_disk_initialize+1)& (0+255),b
  3193  001B64  0E61               	movlw	97
  3194  001B66  6F4B               	movwf	(??_disk_initialize+2)& (0+255),b
  3195  001B68  D00D               	goto	l984
  3196  001B6A                     u10470:
  3197  001B6A  6BA4               	clrf	?_send_cmd& (0+255),b
  3198  001B6C  6BA5               	clrf	(?_send_cmd+1)& (0+255),b
  3199  001B6E  6BA6               	clrf	(?_send_cmd+2)& (0+255),b
  3200  001B70  6BA7               	clrf	(?_send_cmd+3)& (0+255),b
  3201  001B72  5149               	movf	??_disk_initialize& (0+255),w,b
  3202  001B74  EC0F  F010         	call	_send_cmd
  3203  001B78  0900               	iorlw	0
  3204  001B7A  E007               	bz	l982
  3205                           ; BSR set to: ?
  3206  001B7C  0103               	movlb	3	; () banked
  3207  001B7E  074A               	decf	(??_disk_initialize+1)& (0+255),f,b
  3208  001B80  A0D8               	btfss	status,0,c
  3209  001B82  074B               	decf	(??_disk_initialize+2)& (0+255),f,b
  3210  001B84                     l984:
  3211                           ; BSR set to: 3
  3212  001B84  514B               	movf	(??_disk_initialize+2)& (0+255),w,b
  3213  001B86  114A               	iorwf	(??_disk_initialize+1)& (0+255),w,b
  3214  001B88  E1F0               	bnz	u10470
  3215                           ; BSR set to: ?
  3216  001B8A                     l982:
  3217                           ; BSR set to: ?
  3218                           ;sd_mmc.c: 176: if (!tmr || send_cmd((0x40+16), 
      +                          512) != 0)
  3219  001B8A  0103               	movlb	3	; () banked
  3220  001B8C  514B               	movf	(??_disk_initialize+2)& (0+255),w,b
  3221  001B8E  114A               	iorwf	(??_disk_initialize+1)& (0+255),w,b
  3222  001B90  E00A               	bz	l600000446
  3223  001B92  6BA4               	clrf	?_send_cmd& (0+255),b
  3224  001B94  0E02               	movlw	2
  3225  001B96  6FA5               	movwf	(?_send_cmd+1)& (0+255),b
  3226  001B98  6BA6               	clrf	(?_send_cmd+2)& (0+255),b
  3227  001B9A  6BA7               	clrf	(?_send_cmd+3)& (0+255),b
  3228  001B9C  0E50               	movlw	80
  3229  001B9E  EC0F  F010         	call	_send_cmd
  3230  001BA2  0900               	iorlw	0
  3231  001BA4  A4D8               	btfss	status,2,c
  3232  001BA6                     l600000446:
  3233                           ; BSR set to: ?
  3234                           ;sd_mmc.c: 177: ty = 0;
  3235  001BA6  6AF4               	clrf	prodh,c
  3236                           ; BSR set to: ?
  3237                           ; BSR set to: ?
  3238  001BA8                     l964:
  3239                           ; BSR set to: ?
  3240                           ;sd_mmc.c: 178: }
  3241                           ;sd_mmc.c: 179: }
  3242                           ;sd_mmc.c: 180: CardType = ty;
  3243  001BA8  CFF4 F006          	movff	prodh,6
  3244                           ;sd_mmc.c: 181: release_spi();
  3245  001BAC  EC2D  F015         	call	_release_spi	;wreg free
  3246                           ;sd_mmc.c: 183: if(ty) SSPCON1 &= 0b11110000;
  3247  001BB0  50F4               	movf	prodh,w,c
  3248  001BB2  E002               	bz	l986
  3249  001BB4  0EF0               	movlw	240
  3250  001BB6  16C6               	andwf	4038,f,c	;volatile
  3251  001BB8                     l986:
  3252                           ; BSR set to: ?
  3253                           ;sd_mmc.c: 185: return ty ? 0 : 0x01;
  3254  001BB8  50F4               	movf	prodh,w,c
  3255  001BBA  E102               	bnz	u10520
  3256  001BBC  0E01               	movlw	1
  3257  001BBE  D001               	goto	l959
  3258  001BC0                     u10520:
  3259  001BC0  0E00               	movlw	0
  3260                           ;sd_mmc.c: 186: }
  3261  001BC2                     l959:
  3262                           ; BSR set to: ?
  3263  001BC2  0012               	return	
  3264  001BC4                     __end_of_disk_initialize:
  3265                           	opt stack 0
  3266                           
  3267                           	psect	text17
  3268                           ; =============== function _disk_initialize ends
      +                           ============
  3269                           ; *************** function _dir_read ***********
      +                          ******
  3270                           ; Defined at:
  3271                           ;		line 243 in file "D:\ElabPh\SDMMC\PIC WAV Pla
      +                          yer\PIC18 SD WAV Audio Player\src_no_lcd\pff.c"
  3272                           ; Parameters:
  3273                           ;		dj             size:   1reg:   wre	type: PTR 
      +                          struct _DIR_; Largest target is 17
  3274                           ;		 -> Dir(16), 
  3275                           ; Auto variables:
  3276                           ;		a           	       	type: unsigned char 
  3277                           ;		c           	       	type: unsigned char 
  3278                           ;		dj          	       	type: PTR struct _DIR_; 
      +                          Largest target is 17
  3279                           ;		 -> Dir(16), 
  3280                           ;		res         	       	type: enum E48
  3281                           ;		dir         	       	type: PTR unsigned char 
      +                          ; Largest target is 32
  3282                           ;		 -> pf_readdir@dir(32), pf_opendir@dir(32), p
      +                          f_open@dir(32), 
  3283                           ; Return value:
  3284                           ;		type: enum E48
  3285                           ;		size: 1
  3286                           ; Registers used:
  3287                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, prodl, prodh, cstack
  3288                           ; Tracked objects:
  3289                           ;		On entry : F/3
  3290                           ;		On exit  : F/3
  3291                           ;		Unchanged: FFFFFFF0/0
  3292                           ; Data sizes:
  3293                           ;		Autos:    4
  3294                           ;		Params:   0
  3295                           ;		Temp:     4
  3296                           ;		Total:    8
  3297                           ; This function calls:
  3298                           ;		_disk_readp
  3299                           ;		_dir_next
  3300                           ; This function is called by:
  3301                           ;		_pf_readdir
  3302                           ; This function uses a non-reentrant model
  3303                           ; 
  3304  000000                     
  3305                           ;pff.c: 239: static
  3306                           ;pff.c: 240: FRESULT dir_read (
  3307                           ;pff.c: 241: DIR *dj
  3308                           ;pff.c: 242: )
  3309                           ;pff.c: 243: {
  3310  001E1C                     _dir_read:
  3311                           	opt stack 27
  3312                           ; BSR set to: 3
  3313                           ;dir_read@dj stored from wreg
  3314  001E1C  CFE8 F32F          	movff	wreg,??_dir_read
  3315  001E20  0E03               	movlw	3
  3316  001E22  6F30               	movwf	(??_dir_read+1)& (0+255),b
  3317                           ;pff.c: 249: dir = FatFs->buf;
  3318  001E24  5009               	movf	9,w,c
  3319  001E26  0F06               	addlw	6
  3320  001E28  6EE9               	movwf	fsr0l,c
  3321  001E2A  6AEA               	clrf	fsr0h,c
  3322  001E2C  CFEE F331          	movff	postinc0,??_dir_read+2
  3323  001E30  CFED F332          	movff	postdec0,??_dir_read+3
  3324                           ;pff.c: 250: while (dj->sect) {
  3325  001E34                     l204:
  3326                           ; BSR set to: 3
  3327  001E34  512F               	movf	??_dir_read& (0+255),w,b
  3328  001E36  0F0C               	addlw	12
  3329  001E38  6EE9               	movwf	fsr0l,c
  3330  001E3A  6AEA               	clrf	fsr0h,c
  3331  001E3C  CFEE F333          	movff	postinc0,??_dir_read+4
  3332  001E40  CFEE F334          	movff	postinc0,??_dir_read+5
  3333  001E44  CFEE F335          	movff	postinc0,??_dir_read+6
  3334  001E48  CFEE F336          	movff	postinc0,??_dir_read+7
  3335  001E4C  5136               	movf	(??_dir_read+7)& (0+255),w,b
  3336  001E4E  1133               	iorwf	(??_dir_read+4)& (0+255),w,b
  3337  001E50  1134               	iorwf	(??_dir_read+5)& (0+255),w,b
  3338  001E52  1135               	iorwf	(??_dir_read+6)& (0+255),w,b
  3339  001E54  E05A               	bz	l206
  3340                           ; BSR set to: 3
  3341                           ;pff.c: 251: res = disk_readp(dir, dj->sect, (WO
      +                          RD)((dj->index % 16) * 32), 32)
  3342                           ;pff.c: 252: ? FR_DISK_ERR : FR_OK;
  3343  001E56  0E20               	movlw	32
  3344  001E58  6F9E               	movwf	(?_disk_readp+8)& (0+255),b
  3345  001E5A  6B9F               	clrf	(?_disk_readp+9)& (0+255),b
  3346  001E5C  512F               	movf	??_dir_read& (0+255),w,b
  3347  001E5E  6EE9               	movwf	fsr0l,c
  3348  001E60  6AEA               	clrf	fsr0h,c
  3349  001E62  CFEE F333          	movff	postinc0,??_dir_read+4
  3350  001E66  CFED F334          	movff	postdec0,??_dir_read+5
  3351  001E6A  0E0F               	movlw	15
  3352  001E6C  1733               	andwf	(??_dir_read+4)& (0+255),f,b
  3353  001E6E  6B34               	clrf	(??_dir_read+5)& (0+255),b
  3354  001E70  0E05               	movlw	5
  3355  001E72                     u9795:
  3356  001E72  90D8               	bcf	status,0,c
  3357  001E74  3733               	rlcf	(??_dir_read+4)& (0+255),f,b
  3358  001E76  3734               	rlcf	(??_dir_read+5)& (0+255),f,b
  3359  001E78  2EE8               	decfsz	wreg,f,c
  3360  001E7A  D7FB               	goto	u9795
  3361  001E7C  C333  F39C         	movff	??_dir_read+4,?_disk_readp+6
  3362  001E80  C334  F39D         	movff	??_dir_read+5,?_disk_readp+7
  3363  001E84  512F               	movf	??_dir_read& (0+255),w,b
  3364  001E86  0F0C               	addlw	12
  3365  001E88  6EE9               	movwf	fsr0l,c
  3366  001E8A  6AEA               	clrf	fsr0h,c
  3367  001E8C  CFEE F398          	movff	postinc0,?_disk_readp+2
  3368  001E90  CFEE F399          	movff	postinc0,?_disk_readp+3
  3369  001E94  CFEE F39A          	movff	postinc0,?_disk_readp+4
  3370  001E98  CFEE F39B          	movff	postinc0,?_disk_readp+5
  3371  001E9C  C331  F396         	movff	??_dir_read+2,?_disk_readp
  3372  001EA0  C332  F397         	movff	??_dir_read+3,?_disk_readp+1
  3373  001EA4  ECFA  F010         	call	_disk_readp	;wreg free
  3374  001EA8  0900               	iorlw	0
  3375  001EAA  E002               	bz	u9800
  3376  001EAC  0E01               	movlw	1
  3377  001EAE  D001               	goto	u9806
  3378  001EB0                     u9800:
  3379  001EB0  0E00               	movlw	0
  3380  001EB2                     u9806:
  3381  001EB2  0103               	movlb	3	; () banked
  3382  001EB4  6F30               	movwf	(??_dir_read+1)& (0+255),b
  3383                           ;pff.c: 253: if (res != FR_OK) break;
  3384  001EB6  5130               	movf	(??_dir_read+1)& (0+255),w,b
  3385  001EB8  E128               	bnz	l206
  3386                           ; BSR set to: 3
  3387                           ;pff.c: 254: c = dir[0];
  3388  001EBA  C331  FFE9         	movff	??_dir_read+2,fsr0l
  3389  001EBE  C332  FFEA         	movff	??_dir_read+3,fsr0h
  3390  001EC2  50EF               	movf	indf0,w,c
  3391  001EC4  6ED9               	movwf	fsr2l,c
  3392                           ;pff.c: 255: if (c == 0) { res = FR_NO_FILE; bre
      +                          ak; }
  3393  001EC6  66D9               	tstfsz	fsr2l,c
  3394  001EC8  D003               	goto	l208
  3395  001ECA  0E03               	movlw	3
  3396  001ECC  6F30               	movwf	(??_dir_read+1)& (0+255),b
  3397  001ECE  D01D               	goto	l206
  3398  001ED0                     l208:
  3399                           ; BSR set to: 3
  3400                           ;pff.c: 256: a = dir[11] & 0x3F;
  3401  001ED0  0E0B               	movlw	11
  3402  001ED2  2531               	addwf	(??_dir_read+2)& (0+255),w,b
  3403  001ED4  6EE9               	movwf	fsr0l,c
  3404  001ED6  0E00               	movlw	0
  3405  001ED8  2132               	addwfc	(??_dir_read+3)& (0+255),w,b
  3406  001EDA  6EEA               	movwf	fsr0h,c
  3407  001EDC  50EF               	movf	indf0,w,c
  3408  001EDE  0B3F               	andlw	63
  3409  001EE0  6EE1               	movwf	fsr1l,c
  3410                           ;pff.c: 257: if (c != 0xE5 && c != '.' && !(a & 
      +                          0x08))
  3411  001EE2  50D9               	movf	fsr2l,w,c
  3412  001EE4  0AE5               	xorlw	229
  3413  001EE6  E005               	bz	l209
  3414  001EE8  50D9               	movf	fsr2l,w,c
  3415  001EEA  0A2E               	xorlw	46
  3416  001EEC  E002               	bz	l209
  3417  001EEE  A6E1               	btfss	fsr1l,3,c
  3418  001EF0  D00C               	goto	l206
  3419                           ;pff.c: 258: break;
  3420  001EF2                     l209:
  3421                           ; BSR set to: 3
  3422                           ;pff.c: 259: res = dir_next(dj);
  3423  001EF2  C32F  F36C         	movff	??_dir_read,?_dir_next
  3424  001EF6  0E0F               	movlw	15
  3425  001EF8  6F6D               	movwf	(?_dir_next+1)& (0+255),b
  3426  001EFA  0E5F               	movlw	__accesstop+-1
  3427  001EFC  656C               	cpfsgt	?_dir_next& (0+255),b
  3428  001EFE  6B6D               	clrf	(?_dir_next+1)& (0+255),b
  3429  001F00  EC6D  F00C         	call	_dir_next	;wreg free
  3430  001F04  6F30               	movwf	(??_dir_read+1)& (0+255),b
  3431                           ;pff.c: 260: if (res != FR_OK) break;
  3432  001F06  5130               	movf	(??_dir_read+1)& (0+255),w,b
  3433  001F08  E095               	bz	l204
  3434  001F0A                     l206:
  3435                           ; BSR set to: 3
  3436                           ;pff.c: 261: }
  3437                           ;pff.c: 263: if (res != FR_OK) dj->sect = 0;
  3438  001F0A  5130               	movf	(??_dir_read+1)& (0+255),w,b
  3439  001F0C  E008               	bz	l211
  3440  001F0E  512F               	movf	??_dir_read& (0+255),w,b
  3441  001F10  0F0C               	addlw	12
  3442  001F12  6EE9               	movwf	fsr0l,c
  3443  001F14  6AEA               	clrf	fsr0h,c
  3444  001F16  6AEE               	clrf	postinc0,c
  3445  001F18  6AEE               	clrf	postinc0,c
  3446  001F1A  6AEE               	clrf	postinc0,c
  3447  001F1C  6AED               	clrf	postdec0,c
  3448  001F1E                     l211:
  3449                           ; BSR set to: 3
  3450                           ;pff.c: 265: return res;
  3451  001F1E  5130               	movf	(??_dir_read+1)& (0+255),w,b
  3452                           ;pff.c: 266: }
  3453                           ; BSR set to: 3
  3454  001F20  0012               	return	
  3455  001F22                     __end_of_dir_read:
  3456                           	opt stack 0
  3457                           
  3458                           	psect	text18
  3459                           ; =============== function _dir_read ends ======
      +                          ======
  3460                           ; *************** function _check_fs ***********
      +                          ******
  3461                           ; Defined at:
  3462                           ;		line 426 in file "D:\ElabPh\SDMMC\PIC WAV Pla
      +                          yer\PIC18 SD WAV Audio Player\src_no_lcd\pff.c"
  3463                           ; Parameters:
  3464                           ;		buf            size:   2offs:   0	type: PTR u
      +                          nsigned char ; Largest target is 36
  3465                           ;		 -> pf_mount@buf(36), 
  3466                           ;		sect           size:   4offs:   2	type: unsig
      +                          ned long 
  3467                           ; Auto variables:
  3468                           ;		None
  3469                           ; Return value:
  3470                           ;		type: unsigned char 
  3471                           ;		size: 1
  3472                           ; Registers used:
  3473                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, prodl, prodh, cstack
  3474                           ; Tracked objects:
  3475                           ;		On entry : F/3
  3476                           ;		On exit  : 0/0
  3477                           ;		Unchanged: FFFFFFF0/0
  3478                           ; Data sizes:
  3479                           ;		Autos:    0
  3480                           ;		Params:   6
  3481                           ;		Temp:     0
  3482                           ;		Total:    6
  3483                           ; This function calls:
  3484                           ;		_disk_readp
  3485                           ; This function is called by:
  3486                           ;		_pf_mount
  3487                           ; This function uses a non-reentrant model
  3488                           ; 
  3489  000000                     
  3490                           ;pff.c: 421: static
  3491                           ;pff.c: 422: BYTE check_fs (
  3492                           ;pff.c: 423: BYTE *buf,
  3493                           ;pff.c: 424: DWORD sect
  3494                           ;pff.c: 425: )
  3495                           ;pff.c: 426: {
  3496  0024E2                     _check_fs:
  3497                           	opt stack 27
  3498                           ; BSR set to: 3
  3499  0024E2  0E02               	movlw	2
  3500  0024E4  6F9E               	movwf	(?_disk_readp+8)& (0+255),b
  3501  0024E6  6B9F               	clrf	(?_disk_readp+9)& (0+255),b
  3502  0024E8  0EFE               	movlw	254
  3503  0024EA  6F9C               	movwf	(?_disk_readp+6)& (0+255),b
  3504  0024EC  0E01               	movlw	1
  3505  0024EE  6F9D               	movwf	(?_disk_readp+7)& (0+255),b
  3506  0024F0  EC4F  F00B         	call	PL12
  3507  0024F4  ECFA  F010         	call	_disk_readp	;wreg free
  3508  0024F8  0900               	iorlw	0
  3509  0024FA  E002               	bz	l250
  3510                           ;pff.c: 428: return 3;
  3511  0024FC  0E03               	movlw	3
  3512  0024FE  D035               	goto	l249
  3513  002500                     l250:
  3514                           ; BSR set to: ?
  3515                           ;pff.c: 429: if ((WORD)(*(WORD*)(BYTE*)(buf)) !=
      +                           0xAA55)
  3516  002500  C349  FFE9         	movff	?_check_fs,fsr0l
  3517  002504  C34A  FFEA         	movff	?_check_fs+1,fsr0h
  3518  002508  52EE               	movf	postinc0,f,c
  3519  00250A  50ED               	movf	postdec0,w,c
  3520  00250C  0AAA               	xorlw	170
  3521  00250E  0E55               	movlw	85
  3522  002510  B4D8               	btfsc	status,2,c
  3523  002512  18EF               	xorwf	indf0,w,c
  3524                           ;pff.c: 430: return 2;
  3525  002514  0E02               	movlw	2
  3526  002516  E001               	bz	L8
  3527  002518  D028               	goto	l249
  3528                           ; BSR set to: ?
  3529                           ;pff.c: 432: if (!disk_readp(buf, sect, 54, 2) &
      +                          & (WORD)(*(WORD*)(BYTE*)(buf)) == 0x4146)
  3530  00251A                     L8:
  3531  00251A  0103               	movlb	3	; () banked
  3532  00251C  6F9E               	movwf	(?_disk_readp+8)& (0+255),b
  3533  00251E  6B9F               	clrf	(?_disk_readp+9)& (0+255),b
  3534  002520  0E36               	movlw	54
  3535  002522  6F9C               	movwf	(?_disk_readp+6)& (0+255),b
  3536  002524  0E00               	movlw	0
  3537  002526  6B9D               	clrf	(?_disk_readp+7)& (0+255),b
  3538  002528  EC4F  F00B         	call	PL12
  3539  00252C  ECFA  F010         	call	_disk_readp	;wreg free
  3540  002530  0900               	iorlw	0
  3541  002532  E105               	bnz	l252
  3542  002534  EC46  F00B         	call	PL13
  3543  002538  B4D8               	btfsc	status,2,c
  3544  00253A  18EF               	xorwf	indf0,w,c
  3545  00253C  E013               	bz	u10180
  3546                           ;pff.c: 433: return 0;
  3547  00253E                     l252:
  3548                           ; BSR set to: ?
  3549                           ;pff.c: 435: if (!disk_readp(buf, sect, 82, 2) &
      +                          & (WORD)(*(WORD*)(BYTE*)(buf)) == 0x4146)
  3550  00253E  0E02               	movlw	2
  3551  002540  0103               	movlb	3	; () banked
  3552  002542  6F9E               	movwf	(?_disk_readp+8)& (0+255),b
  3553  002544  6B9F               	clrf	(?_disk_readp+9)& (0+255),b
  3554  002546  0E52               	movlw	82
  3555  002548  6F9C               	movwf	(?_disk_readp+6)& (0+255),b
  3556  00254A  0E00               	movlw	0
  3557  00254C  6B9D               	clrf	(?_disk_readp+7)& (0+255),b
  3558  00254E  EC4F  F00B         	call	PL12
  3559  002552  ECFA  F010         	call	_disk_readp	;wreg free
  3560  002556  0900               	iorlw	0
  3561  002558  E107               	bnz	l253
  3562  00255A  EC46  F00B         	call	PL13
  3563  00255E  B4D8               	btfsc	status,2,c
  3564  002560  18EF               	xorwf	indf0,w,c
  3565  002562  E102               	bnz	l253
  3566  002564                     u10180:
  3567                           ;pff.c: 436: return 0;
  3568  002564  0E00               	movlw	0
  3569  002566  D001               	goto	l249
  3570  002568                     l253:
  3571                           ; BSR set to: ?
  3572                           ;pff.c: 438: return 1;
  3573  002568  0E01               	movlw	1
  3574                           ;pff.c: 439: }
  3575  00256A                     l249:
  3576                           ; BSR set to: ?
  3577  00256A  0012               	return	
  3578  00256C                     __end_of_check_fs:
  3579                           	opt stack 0
  3580                           
  3581                           	psect	text19
  3582                           ; =============== function _check_fs ends ======
      +                          ======
  3583                           ; *************** function _timer1_init ********
      +                          *********
  3584                           ; Defined at:
  3585                           ;		line 58 in file "D:\ElabPh\SDMMC\PIC WAV Play
      +                          er\PIC18 SD WAV Audio Player\src_no_lcd\pwm_audi
      +                          o.c"
  3586                           ; Parameters:
  3587                           ;		None
  3588                           ; Auto variables:
  3589                           ;		None
  3590                           ; Return value:
  3591                           ;		type: void 
  3592                           ;		size: 0
  3593                           ; Registers used:
  3594                           ;		None
  3595                           ; Tracked objects:
  3596                           ;		On entry : 0/0
  3597                           ;		On exit  : 0/0
  3598                           ;		Unchanged: FFFFFFF0/0
  3599                           ; Data sizes:
  3600                           ;		Autos:    0
  3601                           ;		Params:   0
  3602                           ;		Temp:     0
  3603                           ;		Total:    0
  3604                           ; This function calls:
  3605                           ;		Nothing
  3606                           ; This function is called by:
  3607                           ;		_pwm_audio_init
  3608                           ; This function uses a non-reentrant model
  3609                           ; 
  3610  000000                     
  3611                           ;pwm_audio.c: 57: void timer1_init(void)
  3612                           ;pwm_audio.c: 58: {
  3613  002A1A                     _timer1_init:
  3614                           	opt stack 27
  3615                           ; BSR set to: ?
  3616                           ;pwm_audio.c: 59: T1CONbits.RD16 = 1;
  3617  002A1A  8ECD               	bsf	4045,7,c	;volatile
  3618                           ;pwm_audio.c: 61: T1CONbits.TMR1CS = 0;
  3619  002A1C  92CD               	bcf	4045,1,c	;volatile
  3620                           ;pwm_audio.c: 63: TMR1H = 0;
  3621  002A1E  6ACF               	clrf	4047,c	;volatile
  3622                           ;pwm_audio.c: 64: TMR1L = 0;
  3623  002A20  6ACE               	clrf	4046,c	;volatile
  3624                           ;pwm_audio.c: 66: INTCONbits.GIE = 1;
  3625  002A22  8EF2               	bsf	intcon,7,c	;volatile
  3626                           ;pwm_audio.c: 67: INTCONbits.PEIE = 1;
  3627  002A24  8CF2               	bsf	intcon,6,c	;volatile
  3628                           ;pwm_audio.c: 69: PIR1bits.TMR1IF = 0;
  3629  002A26  909E               	bcf	3998,0,c	;volatile
  3630                           ;pwm_audio.c: 72: T1CONbits.TMR1ON = 1;
  3631  002A28  80CD               	bsf	4045,0,c	;volatile
  3632                           ;pwm_audio.c: 73: }
  3633                           ; BSR set to: ?
  3634  002A2A  0012               	return	
  3635  002A2C                     __end_of_timer1_init:
  3636                           	opt stack 0
  3637                           
  3638                           	psect	text20
  3639                           ; =============== function _timer1_init ends ===
      +                          =========
  3640                           ; *************** function _wav_putc ***********
      +                          ******
  3641                           ; Defined at:
  3642                           ;		line 136 in file "D:\ElabPh\SDMMC\PIC WAV Pla
      +                          yer\PIC18 SD WAV Audio Player\src_no_lcd\pwm_aud
      +                          io.c"
  3643                           ; Parameters:
  3644                           ;		c              size:   1reg:   wre	type: unsi
      +                          gned char 
  3645                           ; Auto variables:
  3646                           ;		None
  3647                           ; Return value:
  3648                           ;		type: void 
  3649                           ;		size: 0
  3650                           ; Registers used:
  3651                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
  3652                           ; Tracked objects:
  3653                           ;		On entry : F/3
  3654                           ;		On exit  : 0/0
  3655                           ;		Unchanged: FFFFFFF0/0
  3656                           ; Data sizes:
  3657                           ;		Autos:    0
  3658                           ;		Params:   0
  3659                           ;		Temp:     2
  3660                           ;		Total:    2
  3661                           ; This function calls:
  3662                           ;		Nothing
  3663                           ; This function is called by:
  3664                           ;		_play_wave_file
  3665                           ; This function uses a non-reentrant model
  3666                           ; 
  3667  000000                     
  3668                           ;pwm_audio.c: 135: void wav_putc(unsigned char c
      +                          )
  3669                           ;pwm_audio.c: 136: {
  3670  00292C                     _wav_putc:
  3671                           	opt stack 27
  3672                           ; BSR set to: 3
  3673                           ; wav_putc@c loaded to fsr2l
  3674  00292C  CFE8 FFD9          	movff	wreg,fsr2l
  3675  002930                     l800:
  3676                           ; BSR set to: 3
  3677  002930  2804               	incf	4,w,c	;volatile
  3678  002932  1802               	xorwf	2,w,c	;volatile
  3679  002934  E0FD               	bz	l800
  3680                           ; BSR set to: 3
  3681                           ;pwm_audio.c: 139: WAV_L_BUFF[pWAVIN] = c;
  3682  002936  0E00               	movlw	0
  3683  002938  2404               	addwf	4,w,c	;volatile
  3684  00293A  6EE9               	movwf	fsr0l,c
  3685  00293C  0E01               	movlw	1
  3686  00293E  2005               	addwfc	5,w,c	;volatile
  3687  002940  6EEA               	movwf	fsr0h,c
  3688  002942  CFD9 FFEF          	movff	fsr2l,indf0
  3689                           ;pwm_audio.c: 140: pWAVIN = (pWAVIN + 1) & (256-
      +                          1);
  3690  002946  2804               	incf	4,w,c	;volatile
  3691  002948  0103               	movlb	3	; () banked
  3692  00294A  6F0D               	movwf	??_wav_putc& (0+255),b
  3693  00294C  0E00               	movlw	0
  3694  00294E  2005               	addwfc	5,w,c	;volatile
  3695  002950  6F0E               	movwf	(??_wav_putc+1)& (0+255),b
  3696  002952  510D               	movf	??_wav_putc& (0+255),w,b
  3697  002954  6E04               	movwf	4,c	;volatile
  3698  002956  6A05               	clrf	5,c	;volatile
  3699                           ;pwm_audio.c: 142: PIE1bits.TMR1IE = 1;
  3700  002958  809D               	bsf	3997,0,c	;volatile
  3701                           ;pwm_audio.c: 143: }
  3702                           ; BSR set to: ?
  3703  00295A  0012               	return	
  3704  00295C                     __end_of_wav_putc:
  3705                           	opt stack 0
  3706                           
  3707                           	psect	text21
  3708                           ; =============== function _wav_putc ends ======
      +                          ======
  3709                           ; *************** function _pf_read ************
      +                          *****
  3710                           ; Defined at:
  3711                           ;		line 581 in file "D:\ElabPh\SDMMC\PIC WAV Pla
      +                          yer\PIC18 SD WAV Audio Player\src_no_lcd\pff.c"
  3712                           ; Parameters:
  3713                           ;		buff           size:   2offs:   0	type: PTR v
      +                          oid ; Largest target is 256
  3714                           ;		 -> Buff(256), 
  3715                           ;		btr            size:   2offs:   2	type: unsig
      +                          ned short 
  3716                           ;		br             size:   1offs:   4	type: PTR u
      +                          nsigned short ; Largest target is 2
  3717                           ;		 -> rb(2), 
  3718                           ; Auto variables:
  3719                           ;		dr          	       	type: enum E79
  3720                           ;		fs          	       	type: PTR struct _FATFS_
      +                          ; Largest target is 255
  3721                           ;		 -> RAM(255), Fs(44), 
  3722                           ;		rbuff       	       	type: PTR unsigned char 
      +                          ; Largest target is 256
  3723                           ;		 -> Buff(256), 
  3724                           ;		rcnt        	       	type: unsigned short 
  3725                           ;		remain      	       	type: unsigned long 
  3726                           ;		sect        	       	type: unsigned long 
  3727                           ;		clst        	       	type: unsigned long 
  3728                           ; Return value:
  3729                           ;		type: enum E48
  3730                           ;		size: 1
  3731                           ; Registers used:
  3732                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, prodl, prodh, cstack
  3733                           ; Tracked objects:
  3734                           ;		On entry : F/3
  3735                           ;		On exit  : F/3
  3736                           ;		Unchanged: FFFFFFF0/0
  3737                           ; Data sizes:
  3738                           ;		Autos:   18
  3739                           ;		Params:   5
  3740                           ;		Temp:     8
  3741                           ;		Total:   31
  3742                           ; This function calls:
  3743                           ;		___llmod
  3744                           ;		_get_fat
  3745                           ;		_clust2sect
  3746                           ;		_disk_readp
  3747                           ; This function is called by:
  3748                           ;		_load_header
  3749                           ;		_play_wave_file
  3750                           ; This function uses a non-reentrant model
  3751                           ; 
  3752  000000                     
  3753                           ;pff.c: 576: FRESULT pf_read (
  3754                           ;pff.c: 577: void* buff,
  3755                           ;pff.c: 578: WORD btr,
  3756                           ;pff.c: 579: WORD* br
  3757                           ;pff.c: 580: )
  3758                           ;pff.c: 581: {
  3759  000B04                     _pf_read:
  3760                           	opt stack 26
  3761                           ; BSR set to: 3
  3762  000B04  C321  F328         	movff	?_pf_read,??_pf_read+2
  3763  000B08  C322  F329         	movff	?_pf_read+1,??_pf_read+3
  3764                           ;pff.c: 586: WORD rcnt;
  3765                           ;pff.c: 587: FATFS *fs = FatFs;
  3766  000B0C  C009 FFE1          	movff	9,fsr1l
  3767                           ;pff.c: 590: *br = 0;
  3768  000B10  5125               	movf	(?_pf_read+4)& (0+255),w,b
  3769  000B12  6EE9               	movwf	fsr0l,c
  3770  000B14  6AEA               	clrf	fsr0h,c
  3771  000B16  0E00               	movlw	0
  3772  000B18  6AEE               	clrf	postinc0,c
  3773  000B1A  6AED               	clrf	postdec0,c
  3774                           ;pff.c: 591: if (!fs) return FR_NOT_ENABLED;
  3775  000B1C  66E1               	tstfsz	fsr1l,c
  3776  000B1E  D002               	goto	l275
  3777  000B20  0E06               	movlw	6
  3778  000B22  D181               	goto	l274
  3779  000B24                     l275:
  3780                           ; BSR set to: 3
  3781                           ;pff.c: 592: if (!(fs->flag & 0x01))
  3782  000B24  50E1               	movf	fsr1l,w,c
  3783  000B26  0F02               	addlw	2
  3784  000B28  6EE9               	movwf	fsr0l,c
  3785  000B2A  6AEA               	clrf	fsr0h,c
  3786  000B2C  50EF               	movf	indf0,w,c
  3787  000B2E  6F38               	movwf	(??_pf_read+18)& (0+255),b
  3788  000B30  B138               	btfsc	(??_pf_read+18)& (0+255),0,b
  3789  000B32  D002               	goto	l276
  3790                           ;pff.c: 593: return FR_NOT_OPENED;
  3791  000B34  0E05               	movlw	5
  3792  000B36  D177               	goto	l274
  3793  000B38                     l276:
  3794                           ; BSR set to: 3
  3795                           ;pff.c: 595: remain = fs->fsize - fs->fptr;
  3796  000B38  50E1               	movf	fsr1l,w,c
  3797  000B3A  0F18               	addlw	24
  3798  000B3C  6EE9               	movwf	fsr0l,c
  3799  000B3E  6AEA               	clrf	fsr0h,c
  3800  000B40  CFEE F338          	movff	postinc0,??_pf_read+18
  3801  000B44  CFEE F339          	movff	postinc0,??_pf_read+19
  3802  000B48  CFEE F33A          	movff	postinc0,??_pf_read+20
  3803  000B4C  CFEE F33B          	movff	postinc0,??_pf_read+21
  3804  000B50  50E1               	movf	fsr1l,w,c
  3805  000B52  0F1C               	addlw	28
  3806  000B54  6EE9               	movwf	fsr0l,c
  3807  000B56  6AEA               	clrf	fsr0h,c
  3808  000B58  CFEE F33C          	movff	postinc0,??_pf_read+22
  3809  000B5C  CFEE F33D          	movff	postinc0,??_pf_read+23
  3810  000B60  CFEE F33E          	movff	postinc0,??_pf_read+24
  3811  000B64  CFEE F33F          	movff	postinc0,??_pf_read+25
  3812  000B68  5138               	movf	(??_pf_read+18)& (0+255),w,b
  3813  000B6A  5D3C               	subwf	(??_pf_read+22)& (0+255),w,b
  3814  000B6C  6F2C               	movwf	(??_pf_read+6)& (0+255),b
  3815  000B6E  5139               	movf	(??_pf_read+19)& (0+255),w,b
  3816  000B70  593D               	subwfb	(??_pf_read+23)& (0+255),w,b
  3817  000B72  6F2D               	movwf	(??_pf_read+7)& (0+255),b
  3818  000B74  513A               	movf	(??_pf_read+20)& (0+255),w,b
  3819  000B76  593E               	subwfb	(??_pf_read+24)& (0+255),w,b
  3820  000B78  6F2E               	movwf	(??_pf_read+8)& (0+255),b
  3821  000B7A  513B               	movf	(??_pf_read+21)& (0+255),w,b
  3822  000B7C  593F               	subwfb	(??_pf_read+25)& (0+255),w,b
  3823  000B7E  6F2F               	movwf	(??_pf_read+9)& (0+255),b
  3824                           ;pff.c: 596: if (btr > remain) btr = (WORD)remai
      +                          n;
  3825  000B80  5123               	movf	(?_pf_read+2)& (0+255),w,b
  3826  000B82  6F38               	movwf	(??_pf_read+18)& (0+255),b
  3827  000B84  5124               	movf	(?_pf_read+3)& (0+255),w,b
  3828  000B86  6F39               	movwf	(??_pf_read+19)& (0+255),b
  3829  000B88  6B3A               	clrf	(??_pf_read+20)& (0+255),b
  3830  000B8A  6B3B               	clrf	(??_pf_read+21)& (0+255),b
  3831  000B8C  5138               	movf	(??_pf_read+18)& (0+255),w,b
  3832  000B8E  5D2C               	subwf	(??_pf_read+6)& (0+255),w,b
  3833  000B90  5139               	movf	(??_pf_read+19)& (0+255),w,b
  3834  000B92  592D               	subwfb	(??_pf_read+7)& (0+255),w,b
  3835  000B94  513A               	movf	(??_pf_read+20)& (0+255),w,b
  3836  000B96  592E               	subwfb	(??_pf_read+8)& (0+255),w,b
  3837  000B98  513B               	movf	(??_pf_read+21)& (0+255),w,b
  3838  000B9A  592F               	subwfb	(??_pf_read+9)& (0+255),w,b
  3839  000B9C  E204               	bc	l278
  3840  000B9E  C32C  F323         	movff	??_pf_read+6,?_pf_read+2
  3841  000BA2  C32D  F324         	movff	??_pf_read+7,?_pf_read+3
  3842                           ; BSR set to: 3
  3843                           ;pff.c: 598: while (btr) {
  3844  000BA6                     l278:
  3845                           ; BSR set to: 3
  3846  000BA6  5124               	movf	(?_pf_read+3)& (0+255),w,b
  3847  000BA8  1123               	iorwf	(?_pf_read+2)& (0+255),w,b
  3848  000BAA  E101 D134          	bz	u9030
  3849                           ; BSR set to: 3
  3850                           ;pff.c: 599: if ((fs->fptr % 512) == 0) {
  3851  000BAE  50E1               	movf	fsr1l,w,c
  3852  000BB0  0F18               	addlw	24
  3853  000BB2  6EE9               	movwf	fsr0l,c
  3854  000BB4  6AEA               	clrf	fsr0h,c
  3855  000BB6  CFEE F338          	movff	postinc0,??_pf_read+18
  3856  000BBA  CFED F339          	movff	postdec0,??_pf_read+19
  3857  000BBE  5138               	movf	(??_pf_read+18)& (0+255),w,b
  3858  000BC0  6F3A               	movwf	(??_pf_read+20)& (0+255),b
  3859  000BC2  0E01               	movlw	1
  3860  000BC4  1539               	andwf	(??_pf_read+19)& (0+255),w,b
  3861  000BC6  6F3B               	movwf	(??_pf_read+21)& (0+255),b
  3862  000BC8  513B               	movf	(??_pf_read+21)& (0+255),w,b
  3863  000BCA  113A               	iorwf	(??_pf_read+20)& (0+255),w,b
  3864  000BCC  E001 D0B9          	bnz	l281
  3865                           ;pf_read@fs stored from fsr1l
  3866  000BD0  CFE1 F327          	movff	fsr1l,??_pf_read+1
  3867                           ;pff.c: 600: if ((fs->fptr / 512 % fs->csize) ==
      +                           0) {
  3868  000BD4  28E1               	incf	fsr1l,w,c
  3869  000BD6  6EE9               	movwf	fsr0l,c
  3870  000BD8  6AEA               	clrf	fsr0h,c
  3871  000BDA  50EF               	movf	indf0,w,c
  3872  000BDC  6F44               	movwf	(?___llmod+4)& (0+255),b
  3873  000BDE  6B45               	clrf	(?___llmod+5)& (0+255),b
  3874  000BE0  6B46               	clrf	(?___llmod+6)& (0+255),b
  3875  000BE2  6B47               	clrf	(?___llmod+7)& (0+255),b
  3876  000BE4  50E1               	movf	fsr1l,w,c
  3877  000BE6  0F18               	addlw	24
  3878  000BE8  6EE9               	movwf	fsr0l,c
  3879  000BEA  6AEA               	clrf	fsr0h,c
  3880  000BEC  CFEE F338          	movff	postinc0,??_pf_read+18
  3881  000BF0  CFEE F339          	movff	postinc0,??_pf_read+19
  3882  000BF4  CFEE F33A          	movff	postinc0,??_pf_read+20
  3883  000BF8  CFEE F33B          	movff	postinc0,??_pf_read+21
  3884  000BFC  0E0A               	movlw	10
  3885  000BFE  D005               	goto	u8950
  3886  000C00                     u8955:
  3887  000C00  90D8               	bcf	status,0,c
  3888  000C02  333B               	rrcf	(??_pf_read+21)& (0+255),f,b
  3889  000C04  333A               	rrcf	(??_pf_read+20)& (0+255),f,b
  3890  000C06  3339               	rrcf	(??_pf_read+19)& (0+255),f,b
  3891  000C08  3338               	rrcf	(??_pf_read+18)& (0+255),f,b
  3892  000C0A                     u8950:
  3893  000C0A  2EE8               	decfsz	wreg,f,c
  3894  000C0C  D7F9               	goto	u8955
  3895  000C0E  C338  F340         	movff	??_pf_read+18,?___llmod
  3896  000C12  C339  F341         	movff	??_pf_read+19,?___llmod+1
  3897  000C16  C33A  F342         	movff	??_pf_read+20,?___llmod+2
  3898  000C1A  C33B  F343         	movff	??_pf_read+21,?___llmod+3
  3899  000C1E  EC80  F013         	call	___llmod	;wreg free
  3900  000C22  5143               	movf	(?___llmod+3)& (0+255),w,b
  3901  000C24  1140               	iorwf	?___llmod& (0+255),w,b
  3902  000C26  1141               	iorwf	(?___llmod+1)& (0+255),w,b
  3903  000C28  1142               	iorwf	(?___llmod+2)& (0+255),w,b
  3904  000C2A  E150               	bnz	l282
  3905                           ;pff.c: 601: clst = (fs->fptr == 0) ?
  3906                           ;pff.c: 602: fs->org_clust : get_fat(fs->curr_cl
      +                          ust);
  3907  000C2C  5127               	movf	(??_pf_read+1)& (0+255),w,b
  3908  000C2E  0F24               	addlw	36
  3909  000C30  6EE9               	movwf	fsr0l,c
  3910  000C32  6AEA               	clrf	fsr0h,c
  3911  000C34  CFEE F37D          	movff	postinc0,?_get_fat
  3912  000C38  CFEE F37E          	movff	postinc0,?_get_fat+1
  3913  000C3C  CFEE F37F          	movff	postinc0,?_get_fat+2
  3914  000C40  CFEE F380          	movff	postinc0,?_get_fat+3
  3915  000C44  EC14  F007         	call	_get_fat	;wreg free
  3916  000C48  C37D  F334         	movff	?_get_fat,??_pf_read+14
  3917  000C4C  C37E  F335         	movff	?_get_fat+1,??_pf_read+15
  3918  000C50  C37F  F336         	movff	?_get_fat+2,??_pf_read+16
  3919  000C54  C380  F337         	movff	?_get_fat+3,??_pf_read+17
  3920                           ; pf_read@fs loaded to fsr1l
  3921  000C58  C327  FFE1         	movff	??_pf_read+1,fsr1l
  3922  000C5C  50E1               	movf	fsr1l,w,c
  3923  000C5E  0F18               	addlw	24
  3924  000C60  6EE9               	movwf	fsr0l,c
  3925  000C62  6AEA               	clrf	fsr0h,c
  3926  000C64  CFEE F338          	movff	postinc0,??_pf_read+18
  3927  000C68  CFEE F339          	movff	postinc0,??_pf_read+19
  3928  000C6C  CFEE F33A          	movff	postinc0,??_pf_read+20
  3929  000C70  CFEE F33B          	movff	postinc0,??_pf_read+21
  3930  000C74  513B               	movf	(??_pf_read+21)& (0+255),w,b
  3931  000C76  1138               	iorwf	(??_pf_read+18)& (0+255),w,b
  3932  000C78  1139               	iorwf	(??_pf_read+19)& (0+255),w,b
  3933  000C7A  113A               	iorwf	(??_pf_read+20)& (0+255),w,b
  3934  000C7C  E10C               	bnz	l500000428
  3935  000C7E  50E1               	movf	fsr1l,w,c
  3936  000C80  0F20               	addlw	32
  3937  000C82  6EE9               	movwf	fsr0l,c
  3938  000C84  6AEA               	clrf	fsr0h,c
  3939  000C86  CFEE F334          	movff	postinc0,??_pf_read+14
  3940  000C8A  CFEE F335          	movff	postinc0,??_pf_read+15
  3941  000C8E  CFEE F336          	movff	postinc0,??_pf_read+16
  3942  000C92  CFEE F337          	movff	postinc0,??_pf_read+17
  3943  000C96                     l500000428:
  3944                           ; BSR set to: 3
  3945                           ;pff.c: 603: if (clst <= 1) goto fr_abort;
  3946  000C96  0E02               	movlw	2
  3947  000C98  5D34               	subwf	(??_pf_read+14)& (0+255),w,b
  3948  000C9A  0E00               	movlw	0
  3949  000C9C  5935               	subwfb	(??_pf_read+15)& (0+255),w,b
  3950  000C9E  0E00               	movlw	0
  3951  000CA0  5936               	subwfb	(??_pf_read+16)& (0+255),w,b
  3952  000CA2  0E00               	movlw	0
  3953  000CA4  5937               	subwfb	(??_pf_read+17)& (0+255),w,b
  3954  000CA6  E201 D0B8          	bnc	l284
  3955                           ; BSR set to: 3
  3956                           ;pff.c: 604: fs->curr_clust = clst;
  3957  000CAA  50E1               	movf	fsr1l,w,c
  3958  000CAC  0F24               	addlw	36
  3959  000CAE  6EE9               	movwf	fsr0l,c
  3960  000CB0  6AEA               	clrf	fsr0h,c
  3961  000CB2  C334  FFEE         	movff	??_pf_read+14,postinc0
  3962  000CB6  C335  FFEE         	movff	??_pf_read+15,postinc0
  3963  000CBA  C336  FFEE         	movff	??_pf_read+16,postinc0
  3964  000CBE  C337  FFEE         	movff	??_pf_read+17,postinc0
  3965                           ;pff.c: 605: fs->csect = 0;
  3966  000CC2  50E1               	movf	fsr1l,w,c
  3967  000CC4  0F03               	addlw	3
  3968  000CC6  6EE9               	movwf	fsr0l,c
  3969  000CC8  6AEA               	clrf	fsr0h,c
  3970  000CCA  6AEF               	clrf	indf0,c
  3971  000CCC                     l282:
  3972                           ; BSR set to: 3
  3973                           ; pf_read@fs loaded to fsr1l
  3974  000CCC  C327  FFE1         	movff	??_pf_read+1,fsr1l
  3975                           ;pff.c: 606: }
  3976                           ;pff.c: 607: sect = clust2sect(fs->curr_clust);
  3977  000CD0  50E1               	movf	fsr1l,w,c
  3978  000CD2  0F24               	addlw	36
  3979  000CD4  6EE9               	movwf	fsr0l,c
  3980  000CD6  6AEA               	clrf	fsr0h,c
  3981  000CD8  CFEE F37D          	movff	postinc0,?_clust2sect
  3982  000CDC  CFEE F37E          	movff	postinc0,?_clust2sect+1
  3983  000CE0  CFEE F37F          	movff	postinc0,?_clust2sect+2
  3984  000CE4  CFEE F380          	movff	postinc0,?_clust2sect+3
  3985  000CE8  EC20  F012         	call	_clust2sect	;wreg free
  3986  000CEC  C37D  F330         	movff	?_clust2sect,??_pf_read+10
  3987  000CF0  C37E  F331         	movff	?_clust2sect+1,??_pf_read+11
  3988  000CF4  C37F  F332         	movff	?_clust2sect+2,??_pf_read+12
  3989  000CF8  C380  F333         	movff	?_clust2sect+3,??_pf_read+13
  3990                           ;pff.c: 608: if (!sect) goto fr_abort;
  3991  000CFC  5133               	movf	(??_pf_read+13)& (0+255),w,b
  3992  000CFE  1130               	iorwf	(??_pf_read+10)& (0+255),w,b
  3993  000D00  1131               	iorwf	(??_pf_read+11)& (0+255),w,b
  3994  000D02  1132               	iorwf	(??_pf_read+12)& (0+255),w,b
  3995  000D04  E101 D089          	bz	l284
  3996                           ; BSR set to: 3
  3997                           ;pff.c: 609: fs->dsect = sect + fs->csect++;
  3998  000D08  50E1               	movf	fsr1l,w,c
  3999  000D0A  0F03               	addlw	3
  4000  000D0C  6EE9               	movwf	fsr0l,c
  4001  000D0E  6AEA               	clrf	fsr0h,c
  4002  000D10  50EF               	movf	indf0,w,c
  4003  000D12  2AEF               	incf	indf0,f,c
  4004  000D14  2530               	addwf	(??_pf_read+10)& (0+255),w,b
  4005  000D16  6F38               	movwf	(??_pf_read+18)& (0+255),b
  4006  000D18  0E00               	movlw	0
  4007  000D1A  2131               	addwfc	(??_pf_read+11)& (0+255),w,b
  4008  000D1C  6F39               	movwf	(??_pf_read+19)& (0+255),b
  4009  000D1E  0E00               	movlw	0
  4010  000D20  2132               	addwfc	(??_pf_read+12)& (0+255),w,b
  4011  000D22  6F3A               	movwf	(??_pf_read+20)& (0+255),b
  4012  000D24  0E00               	movlw	0
  4013  000D26  2133               	addwfc	(??_pf_read+13)& (0+255),w,b
  4014  000D28  6F3B               	movwf	(??_pf_read+21)& (0+255),b
  4015  000D2A  50E1               	movf	fsr1l,w,c
  4016  000D2C  0F28               	addlw	40
  4017  000D2E  6EE9               	movwf	fsr0l,c
  4018  000D30  6AEA               	clrf	fsr0h,c
  4019  000D32  C338  FFEE         	movff	??_pf_read+18,postinc0
  4020  000D36  C339  FFEE         	movff	??_pf_read+19,postinc0
  4021  000D3A  C33A  FFEE         	movff	??_pf_read+20,postinc0
  4022  000D3E  C33B  FFED         	movff	??_pf_read+21,postdec0
  4023  000D42                     l281:
  4024                           ; BSR set to: 3
  4025                           ;pff.c: 610: }
  4026                           ;pff.c: 611: rcnt = 512 - ((WORD)fs->fptr % 512)
      +                          ;
  4027  000D42  50E1               	movf	fsr1l,w,c
  4028  000D44  0F18               	addlw	24
  4029  000D46  6EE9               	movwf	fsr0l,c
  4030  000D48  6AEA               	clrf	fsr0h,c
  4031  000D4A  CFEE F338          	movff	postinc0,??_pf_read+18
  4032  000D4E  CFED F339          	movff	postdec0,??_pf_read+19
  4033  000D52  5138               	movf	(??_pf_read+18)& (0+255),w,b
  4034  000D54  6F3A               	movwf	(??_pf_read+20)& (0+255),b
  4035  000D56  0E01               	movlw	1
  4036  000D58  1539               	andwf	(??_pf_read+19)& (0+255),w,b
  4037  000D5A  6F3B               	movwf	(??_pf_read+21)& (0+255),b
  4038  000D5C  513A               	movf	(??_pf_read+20)& (0+255),w,b
  4039  000D5E  0800               	sublw	0
  4040  000D60  6F2A               	movwf	(??_pf_read+4)& (0+255),b
  4041  000D62  513B               	movf	(??_pf_read+21)& (0+255),w,b
  4042  000D64  A0D8               	btfss	status,0,c
  4043  000D66  2AE8               	incf	wreg,f,c
  4044  000D68  0802               	sublw	2
  4045  000D6A  6F2B               	movwf	(??_pf_read+5)& (0+255),b
  4046                           ;pff.c: 612: if (rcnt > btr) rcnt = btr;
  4047  000D6C  512A               	movf	(??_pf_read+4)& (0+255),w,b
  4048  000D6E  5D23               	subwf	(?_pf_read+2)& (0+255),w,b
  4049  000D70  512B               	movf	(??_pf_read+5)& (0+255),w,b
  4050  000D72  5924               	subwfb	(?_pf_read+3)& (0+255),w,b
  4051  000D74  E204               	bc	l286
  4052  000D76  C323  F32A         	movff	?_pf_read+2,??_pf_read+4
  4053  000D7A  C324  F32B         	movff	?_pf_read+3,??_pf_read+5
  4054  000D7E                     l286:
  4055                           ; BSR set to: 3
  4056                           ;pf_read@fs stored from fsr1l
  4057  000D7E  CFE1 F327          	movff	fsr1l,??_pf_read+1
  4058                           ;pff.c: 613: dr = disk_readp(!buff ? 0 : rbuff, 
      +                          fs->dsect, (WORD)(fs->fptr % 512), rcnt);
  4059  000D82  5122               	movf	(?_pf_read+1)& (0+255),w,b
  4060  000D84  1121               	iorwf	?_pf_read& (0+255),w,b
  4061  000D86  E005               	bz	l400000429
  4062  000D88  C328  F396         	movff	??_pf_read+2,?_disk_readp
  4063  000D8C  C329  F397         	movff	??_pf_read+3,?_disk_readp+1
  4064  000D90  D002               	goto	l400000430
  4065  000D92                     l400000429:
  4066                           ; BSR set to: 3
  4067  000D92  6B96               	clrf	?_disk_readp& (0+255),b
  4068  000D94  6B97               	clrf	(?_disk_readp+1)& (0+255),b
  4069  000D96                     l400000430:
  4070                           ; BSR set to: 3
  4071  000D96  C32A  F39E         	movff	??_pf_read+4,?_disk_readp+8
  4072  000D9A  C32B  F39F         	movff	??_pf_read+5,?_disk_readp+9
  4073  000D9E  5127               	movf	(??_pf_read+1)& (0+255),w,b
  4074  000DA0  0F18               	addlw	24
  4075  000DA2  6EE9               	movwf	fsr0l,c
  4076  000DA4  6AEA               	clrf	fsr0h,c
  4077  000DA6  CFEE F338          	movff	postinc0,??_pf_read+18
  4078  000DAA  CFED F339          	movff	postdec0,??_pf_read+19
  4079  000DAE  5138               	movf	(??_pf_read+18)& (0+255),w,b
  4080  000DB0  6F9C               	movwf	(?_disk_readp+6)& (0+255),b
  4081  000DB2  0E01               	movlw	1
  4082  000DB4  1539               	andwf	(??_pf_read+19)& (0+255),w,b
  4083  000DB6  6F9D               	movwf	(?_disk_readp+7)& (0+255),b
  4084  000DB8  5127               	movf	(??_pf_read+1)& (0+255),w,b
  4085  000DBA  0F28               	addlw	40
  4086  000DBC  6EE9               	movwf	fsr0l,c
  4087  000DBE  6AEA               	clrf	fsr0h,c
  4088  000DC0  CFEE F398          	movff	postinc0,?_disk_readp+2
  4089  000DC4  CFEE F399          	movff	postinc0,?_disk_readp+3
  4090  000DC8  CFEE F39A          	movff	postinc0,?_disk_readp+4
  4091  000DCC  CFEE F39B          	movff	postinc0,?_disk_readp+5
  4092  000DD0  ECFA  F010         	call	_disk_readp	;wreg free
  4093  000DD4  0103               	movlb	3	; () banked
  4094  000DD6  6F26               	movwf	??_pf_read& (0+255),b
  4095                           ; pf_read@fs loaded to fsr1l
  4096  000DD8  C327  FFE1         	movff	??_pf_read+1,fsr1l
  4097                           ;pff.c: 614: if (dr) goto fr_abort;
  4098  000DDC  5126               	movf	??_pf_read& (0+255),w,b
  4099  000DDE  E11D               	bnz	l284
  4100                           ; BSR set to: 3
  4101                           ;pff.c: 615: fs->fptr += rcnt; rbuff += rcnt;
  4102  000DE0  50E1               	movf	fsr1l,w,c
  4103  000DE2  0F18               	addlw	24
  4104  000DE4  6EE9               	movwf	fsr0l,c
  4105  000DE6  6AEA               	clrf	fsr0h,c
  4106  000DE8  512A               	movf	(??_pf_read+4)& (0+255),w,b
  4107  000DEA  26EE               	addwf	postinc0,f,c
  4108  000DEC  512B               	movf	(??_pf_read+5)& (0+255),w,b
  4109  000DEE  22EE               	addwfc	postinc0,f,c
  4110  000DF0  0E00               	movlw	0
  4111  000DF2  22EE               	addwfc	postinc0,f,c
  4112  000DF4  22ED               	addwfc	postdec0,f,c
  4113  000DF6  512A               	movf	(??_pf_read+4)& (0+255),w,b
  4114  000DF8  2728               	addwf	(??_pf_read+2)& (0+255),f,b
  4115  000DFA  512B               	movf	(??_pf_read+5)& (0+255),w,b
  4116  000DFC  2329               	addwfc	(??_pf_read+3)& (0+255),f,b
  4117                           ;pff.c: 616: btr -= rcnt; *br += rcnt;
  4118  000DFE  512A               	movf	(??_pf_read+4)& (0+255),w,b
  4119  000E00  5F23               	subwf	(?_pf_read+2)& (0+255),f,b
  4120  000E02  512B               	movf	(??_pf_read+5)& (0+255),w,b
  4121  000E04  5B24               	subwfb	(?_pf_read+3)& (0+255),f,b
  4122  000E06  5125               	movf	(?_pf_read+4)& (0+255),w,b
  4123  000E08  6EE9               	movwf	fsr0l,c
  4124  000E0A  6AEA               	clrf	fsr0h,c
  4125  000E0C  512A               	movf	(??_pf_read+4)& (0+255),w,b
  4126  000E0E  26EE               	addwf	postinc0,f,c
  4127  000E10  512B               	movf	(??_pf_read+5)& (0+255),w,b
  4128  000E12  22ED               	addwfc	postdec0,f,c
  4129  000E14  D6C8               	goto	l278
  4130  000E16                     u9030:
  4131                           ; BSR set to: 3
  4132                           ;pff.c: 617: }
  4133                           ;pff.c: 619: return FR_OK;
  4134  000E16  0E00               	movlw	0
  4135  000E18  D006               	goto	l274
  4136                           ;pff.c: 621: fr_abort:
  4137  000E1A                     l284:
  4138                           ; BSR set to: 3
  4139                           ;pff.c: 622: fs->flag = 0;
  4140  000E1A  50E1               	movf	fsr1l,w,c
  4141  000E1C  0F02               	addlw	2
  4142  000E1E  6EE9               	movwf	fsr0l,c
  4143  000E20  6AEA               	clrf	fsr0h,c
  4144  000E22  6AEF               	clrf	indf0,c
  4145                           ;pff.c: 623: return FR_DISK_ERR;
  4146  000E24  0E01               	movlw	1
  4147                           ;pff.c: 624: }
  4148  000E26                     l274:
  4149                           ; BSR set to: 3
  4150  000E26  0012               	return	
  4151  000E28                     __end_of_pf_read:
  4152                           	opt stack 0
  4153                           
  4154                           	psect	text22
  4155                           ; =============== function _pf_read ends =======
      +                          =====
  4156                           ; *************** function _pf_lseek ***********
      +                          ******
  4157                           ; Defined at:
  4158                           ;		line 707 in file "D:\ElabPh\SDMMC\PIC WAV Pla
      +                          yer\PIC18 SD WAV Audio Player\src_no_lcd\pff.c"
  4159                           ; Parameters:
  4160                           ;		ofs            size:   4offs:   0	type: unsig
      +                          ned long 
  4161                           ; Auto variables:
  4162                           ;		fs          	       	type: PTR struct _FATFS_
      +                          ; Largest target is 255
  4163                           ;		 -> RAM(255), Fs(44), 
  4164                           ;		sect        	       	type: unsigned long 
  4165                           ;		ifptr       	       	type: unsigned long 
  4166                           ;		bcs         	       	type: unsigned long 
  4167                           ;		clst        	       	type: unsigned long 
  4168                           ; Return value:
  4169                           ;		type: enum E48
  4170                           ;		size: 1
  4171                           ; Registers used:
  4172                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, prodl, prodh, cstack
  4173                           ; Tracked objects:
  4174                           ;		On entry : F/3
  4175                           ;		On exit  : F/3
  4176                           ;		Unchanged: FFFFFFF0/0
  4177                           ; Data sizes:
  4178                           ;		Autos:   17
  4179                           ;		Params:   4
  4180                           ;		Temp:    12
  4181                           ;		Total:   33
  4182                           ; This function calls:
  4183                           ;		___lldiv
  4184                           ;		_get_fat
  4185                           ;		_clust2sect
  4186                           ; This function is called by:
  4187                           ;		_load_header
  4188                           ; This function uses a non-reentrant model
  4189                           ; 
  4190  000000                     
  4191                           ;pff.c: 704: FRESULT pf_lseek (
  4192                           ;pff.c: 705: DWORD ofs
  4193                           ;pff.c: 706: )
  4194                           ;pff.c: 707: {
  4195  000408                     _pf_lseek:
  4196                           	opt stack 26
  4197                           ; BSR set to: 3
  4198                           ;pff.c: 708: DWORD clst;
  4199                           ;pff.c: 709: DWORD bcs, sect, ifptr;
  4200                           ;pff.c: 710: FATFS *fs = FatFs;
  4201  000408  C009 FFE1          	movff	9,fsr1l
  4202                           ;pff.c: 713: if (!fs) return FR_NOT_ENABLED;
  4203  00040C  66E1               	tstfsz	fsr1l,c
  4204  00040E  D001               	goto	l289
  4205  000410  D1CD               	goto	l288
  4206  000412                     l289:
  4207                           ; BSR set to: 3
  4208                           ;pff.c: 714: if (!(fs->flag & 0x01))
  4209  000412  50E1               	movf	fsr1l,w,c
  4210  000414  0F02               	addlw	2
  4211  000416  6EE9               	movwf	fsr0l,c
  4212  000418  6AEA               	clrf	fsr0h,c
  4213  00041A  50EF               	movf	indf0,w,c
  4214  00041C  6F36               	movwf	(??_pf_lseek+17)& (0+255),b
  4215  00041E  A136               	btfss	(??_pf_lseek+17)& (0+255),0,b
  4216  000420  D1C5               	goto	l288
  4217                           ; BSR set to: 3
  4218                           ;pff.c: 717: if (ofs > fs->fsize) ofs = fs->fsiz
      +                          e;
  4219  000422  50E1               	movf	fsr1l,w,c
  4220  000424  0F1C               	addlw	28
  4221  000426  6EE9               	movwf	fsr0l,c
  4222  000428  6AEA               	clrf	fsr0h,c
  4223  00042A  CFEE F336          	movff	postinc0,??_pf_lseek+17
  4224  00042E  CFEE F337          	movff	postinc0,??_pf_lseek+18
  4225  000432  CFEE F338          	movff	postinc0,??_pf_lseek+19
  4226  000436  CFEE F339          	movff	postinc0,??_pf_lseek+20
  4227  00043A  5121               	movf	?_pf_lseek& (0+255),w,b
  4228  00043C  5D36               	subwf	(??_pf_lseek+17)& (0+255),w,b
  4229  00043E  5122               	movf	(?_pf_lseek+1)& (0+255),w,b
  4230  000440  5937               	subwfb	(??_pf_lseek+18)& (0+255),w,b
  4231  000442  5123               	movf	(?_pf_lseek+2)& (0+255),w,b
  4232  000444  5938               	subwfb	(??_pf_lseek+19)& (0+255),w,b
  4233  000446  5124               	movf	(?_pf_lseek+3)& (0+255),w,b
  4234  000448  5939               	subwfb	(??_pf_lseek+20)& (0+255),w,b
  4235  00044A  E20C               	bc	l291
  4236  00044C  50E1               	movf	fsr1l,w,c
  4237  00044E  0F1C               	addlw	28
  4238  000450  6EE9               	movwf	fsr0l,c
  4239  000452  6AEA               	clrf	fsr0h,c
  4240  000454  CFEE F321          	movff	postinc0,?_pf_lseek
  4241  000458  CFEE F322          	movff	postinc0,?_pf_lseek+1
  4242  00045C  CFEE F323          	movff	postinc0,?_pf_lseek+2
  4243  000460  CFEE F324          	movff	postinc0,?_pf_lseek+3
  4244  000464                     l291:
  4245                           ; BSR set to: 3
  4246                           ;pff.c: 718: ifptr = fs->fptr;
  4247  000464  50E1               	movf	fsr1l,w,c
  4248  000466  0F18               	addlw	24
  4249  000468  6EE9               	movwf	fsr0l,c
  4250  00046A  6AEA               	clrf	fsr0h,c
  4251  00046C  CFEE F32A          	movff	postinc0,??_pf_lseek+5
  4252  000470  CFEE F32B          	movff	postinc0,??_pf_lseek+6
  4253  000474  CFEE F32C          	movff	postinc0,??_pf_lseek+7
  4254  000478  CFEE F32D          	movff	postinc0,??_pf_lseek+8
  4255                           ;pff.c: 719: fs->fptr = 0;
  4256  00047C  50E1               	movf	fsr1l,w,c
  4257  00047E  0F18               	addlw	24
  4258  000480  6EE9               	movwf	fsr0l,c
  4259  000482  6AEA               	clrf	fsr0h,c
  4260  000484  6AEE               	clrf	postinc0,c
  4261  000486  6AEE               	clrf	postinc0,c
  4262  000488  6AEE               	clrf	postinc0,c
  4263  00048A  6AED               	clrf	postdec0,c
  4264                           ;pff.c: 720: if (ofs > 0) {
  4265  00048C  5124               	movf	(?_pf_lseek+3)& (0+255),w,b
  4266  00048E  1121               	iorwf	?_pf_lseek& (0+255),w,b
  4267  000490  1122               	iorwf	(?_pf_lseek+1)& (0+255),w,b
  4268  000492  1123               	iorwf	(?_pf_lseek+2)& (0+255),w,b
  4269  000494  E101 D18A          	bz	l288
  4270                           ;pff.c: 721: bcs = (DWORD)fs->csize * 512;
  4271  000498  28E1               	incf	fsr1l,w,c
  4272  00049A  6EE9               	movwf	fsr0l,c
  4273  00049C  6AEA               	clrf	fsr0h,c
  4274  00049E  50EF               	movf	indf0,w,c
  4275  0004A0  6F36               	movwf	(??_pf_lseek+17)& (0+255),b
  4276  0004A2  C336  F337         	movff	??_pf_lseek+17,??_pf_lseek+18
  4277  0004A6  6B38               	clrf	(??_pf_lseek+19)& (0+255),b
  4278  0004A8  6B39               	clrf	(??_pf_lseek+20)& (0+255),b
  4279  0004AA  6B3A               	clrf	(??_pf_lseek+21)& (0+255),b
  4280  0004AC  0E09               	movlw	9
  4281  0004AE                     u8825:
  4282  0004AE  90D8               	bcf	status,0,c
  4283  0004B0  3737               	rlcf	(??_pf_lseek+18)& (0+255),f,b
  4284  0004B2  3738               	rlcf	(??_pf_lseek+19)& (0+255),f,b
  4285  0004B4  3739               	rlcf	(??_pf_lseek+20)& (0+255),f,b
  4286  0004B6  373A               	rlcf	(??_pf_lseek+21)& (0+255),f,b
  4287  0004B8  2EE8               	decfsz	wreg,f,c
  4288  0004BA  D7F9               	goto	u8825
  4289  0004BC  C337  F32E         	movff	??_pf_lseek+18,??_pf_lseek+9
  4290  0004C0  C338  F32F         	movff	??_pf_lseek+19,??_pf_lseek+10
  4291  0004C4  C339  F330         	movff	??_pf_lseek+20,??_pf_lseek+11
  4292  0004C8  C33A  F331         	movff	??_pf_lseek+21,??_pf_lseek+12
  4293                           ;pff.c: 722: if (ifptr > 0 &&
  4294                           ;pff.c: 723: (ofs - 1) / bcs >= (ifptr - 1) / bc
      +                          s) {
  4295  0004CC  512D               	movf	(??_pf_lseek+8)& (0+255),w,b
  4296  0004CE  112A               	iorwf	(??_pf_lseek+5)& (0+255),w,b
  4297  0004D0  112B               	iorwf	(??_pf_lseek+6)& (0+255),w,b
  4298  0004D2  112C               	iorwf	(??_pf_lseek+7)& (0+255),w,b
  4299  0004D4  E101 D08A          	bz	l293
  4300  0004D8  C32E  F34D         	movff	??_pf_lseek+9,?___lldiv+4
  4301  0004DC  C32F  F34E         	movff	??_pf_lseek+10,?___lldiv+5
  4302  0004E0  C330  F34F         	movff	??_pf_lseek+11,?___lldiv+6
  4303  0004E4  C331  F350         	movff	??_pf_lseek+12,?___lldiv+7
  4304  0004E8  0EFF               	movlw	255
  4305  0004EA  2521               	addwf	?_pf_lseek& (0+255),w,b
  4306  0004EC  6F49               	movwf	?___lldiv& (0+255),b
  4307  0004EE  0EFF               	movlw	255
  4308  0004F0  2122               	addwfc	(?_pf_lseek+1)& (0+255),w,b
  4309  0004F2  6F4A               	movwf	(?___lldiv+1)& (0+255),b
  4310  0004F4  0EFF               	movlw	255
  4311  0004F6  2123               	addwfc	(?_pf_lseek+2)& (0+255),w,b
  4312  0004F8  6F4B               	movwf	(?___lldiv+2)& (0+255),b
  4313  0004FA  0EFF               	movlw	255
  4314  0004FC  2124               	addwfc	(?_pf_lseek+3)& (0+255),w,b
  4315  0004FE  6F4C               	movwf	(?___lldiv+3)& (0+255),b
  4316  000500  ECB6  F012         	call	___lldiv	;wreg free
  4317  000504  C349  F336         	movff	?___lldiv,??_pf_lseek+17
  4318  000508  C34A  F337         	movff	?___lldiv+1,??_pf_lseek+18
  4319  00050C  C34B  F338         	movff	?___lldiv+2,??_pf_lseek+19
  4320  000510  C34C  F339         	movff	?___lldiv+3,??_pf_lseek+20
  4321  000514  C32E  F34D         	movff	??_pf_lseek+9,?___lldiv+4
  4322  000518  C32F  F34E         	movff	??_pf_lseek+10,?___lldiv+5
  4323  00051C  C330  F34F         	movff	??_pf_lseek+11,?___lldiv+6
  4324  000520  C331  F350         	movff	??_pf_lseek+12,?___lldiv+7
  4325  000524  0EFF               	movlw	255
  4326  000526  252A               	addwf	(??_pf_lseek+5)& (0+255),w,b
  4327  000528  6F49               	movwf	?___lldiv& (0+255),b
  4328  00052A  0EFF               	movlw	255
  4329  00052C  212B               	addwfc	(??_pf_lseek+6)& (0+255),w,b
  4330  00052E  6F4A               	movwf	(?___lldiv+1)& (0+255),b
  4331  000530  0EFF               	movlw	255
  4332  000532  212C               	addwfc	(??_pf_lseek+7)& (0+255),w,b
  4333  000534  6F4B               	movwf	(?___lldiv+2)& (0+255),b
  4334  000536  0EFF               	movlw	255
  4335  000538  212D               	addwfc	(??_pf_lseek+8)& (0+255),w,b
  4336  00053A  6F4C               	movwf	(?___lldiv+3)& (0+255),b
  4337  00053C  ECB6  F012         	call	___lldiv	;wreg free
  4338  000540  5149               	movf	?___lldiv& (0+255),w,b
  4339  000542  5D36               	subwf	(??_pf_lseek+17)& (0+255),w,b
  4340  000544  514A               	movf	(?___lldiv+1)& (0+255),w,b
  4341  000546  5937               	subwfb	(??_pf_lseek+18)& (0+255),w,b
  4342  000548  514B               	movf	(?___lldiv+2)& (0+255),w,b
  4343  00054A  5938               	subwfb	(??_pf_lseek+19)& (0+255),w,b
  4344  00054C  514C               	movf	(?___lldiv+3)& (0+255),w,b
  4345  00054E  5939               	subwfb	(??_pf_lseek+20)& (0+255),w,b
  4346  000550  E34D               	bnc	l293
  4347                           ;pff.c: 724: fs->fptr = (ifptr - 1) & ~(bcs - 1)
      +                          ;
  4348  000552  0EFF               	movlw	255
  4349  000554  252E               	addwf	(??_pf_lseek+9)& (0+255),w,b
  4350  000556  6F36               	movwf	(??_pf_lseek+17)& (0+255),b
  4351  000558  0EFF               	movlw	255
  4352  00055A  212F               	addwfc	(??_pf_lseek+10)& (0+255),w,b
  4353  00055C  6F37               	movwf	(??_pf_lseek+18)& (0+255),b
  4354  00055E  0EFF               	movlw	255
  4355  000560  2130               	addwfc	(??_pf_lseek+11)& (0+255),w,b
  4356  000562  6F38               	movwf	(??_pf_lseek+19)& (0+255),b
  4357  000564  0EFF               	movlw	255
  4358  000566  2131               	addwfc	(??_pf_lseek+12)& (0+255),w,b
  4359  000568  6F39               	movwf	(??_pf_lseek+20)& (0+255),b
  4360  00056A  1F36               	comf	(??_pf_lseek+17)& (0+255),f,b
  4361  00056C  1F37               	comf	(??_pf_lseek+18)& (0+255),f,b
  4362  00056E  1F38               	comf	(??_pf_lseek+19)& (0+255),f,b
  4363  000570  1F39               	comf	(??_pf_lseek+20)& (0+255),f,b
  4364  000572  0EFF               	movlw	255
  4365  000574  252A               	addwf	(??_pf_lseek+5)& (0+255),w,b
  4366  000576  6F3A               	movwf	(??_pf_lseek+21)& (0+255),b
  4367  000578  0EFF               	movlw	255
  4368  00057A  212B               	addwfc	(??_pf_lseek+6)& (0+255),w,b
  4369  00057C  6F3B               	movwf	(??_pf_lseek+22)& (0+255),b
  4370  00057E  0EFF               	movlw	255
  4371  000580  212C               	addwfc	(??_pf_lseek+7)& (0+255),w,b
  4372  000582  6F3C               	movwf	(??_pf_lseek+23)& (0+255),b
  4373  000584  0EFF               	movlw	255
  4374  000586  212D               	addwfc	(??_pf_lseek+8)& (0+255),w,b
  4375  000588  6F3D               	movwf	(??_pf_lseek+24)& (0+255),b
  4376  00058A  5136               	movf	(??_pf_lseek+17)& (0+255),w,b
  4377  00058C  153A               	andwf	(??_pf_lseek+21)& (0+255),w,b
  4378  00058E  6F3E               	movwf	(??_pf_lseek+25)& (0+255),b
  4379  000590  5137               	movf	(??_pf_lseek+18)& (0+255),w,b
  4380  000592  153B               	andwf	(??_pf_lseek+22)& (0+255),w,b
  4381  000594  6F3F               	movwf	(??_pf_lseek+26)& (0+255),b
  4382  000596  5138               	movf	(??_pf_lseek+19)& (0+255),w,b
  4383  000598  153C               	andwf	(??_pf_lseek+23)& (0+255),w,b
  4384  00059A  6F40               	movwf	(??_pf_lseek+27)& (0+255),b
  4385  00059C  5139               	movf	(??_pf_lseek+20)& (0+255),w,b
  4386  00059E  153D               	andwf	(??_pf_lseek+24)& (0+255),w,b
  4387  0005A0  6F41               	movwf	(??_pf_lseek+28)& (0+255),b
  4388  0005A2  50E1               	movf	fsr1l,w,c
  4389  0005A4  0F18               	addlw	24
  4390  0005A6  6EE9               	movwf	fsr0l,c
  4391  0005A8  6AEA               	clrf	fsr0h,c
  4392  0005AA  C33E  FFEE         	movff	??_pf_lseek+25,postinc0
  4393  0005AE  C33F  FFEE         	movff	??_pf_lseek+26,postinc0
  4394  0005B2  C340  FFEE         	movff	??_pf_lseek+27,postinc0
  4395  0005B6  C341  FFED         	movff	??_pf_lseek+28,postdec0
  4396                           ;pff.c: 725: ofs -= fs->fptr;
  4397  0005BA  50E1               	movf	fsr1l,w,c
  4398  0005BC  0F18               	addlw	24
  4399  0005BE  6EE9               	movwf	fsr0l,c
  4400  0005C0  6AEA               	clrf	fsr0h,c
  4401  0005C2  50EE               	movf	postinc0,w,c
  4402  0005C4  5F21               	subwf	?_pf_lseek& (0+255),f,b
  4403  0005C6  50EE               	movf	postinc0,w,c
  4404  0005C8  5B22               	subwfb	(?_pf_lseek+1)& (0+255),f,b
  4405  0005CA  50EE               	movf	postinc0,w,c
  4406  0005CC  5B23               	subwfb	(?_pf_lseek+2)& (0+255),f,b
  4407  0005CE  50ED               	movf	postdec0,w,c
  4408  0005D0  5B24               	subwfb	(?_pf_lseek+3)& (0+255),f,b
  4409                           ;pff.c: 726: clst = fs->curr_clust;
  4410  0005D2  50E1               	movf	fsr1l,w,c
  4411  0005D4  0F24               	addlw	36
  4412  0005D6  6EE9               	movwf	fsr0l,c
  4413  0005D8  6AEA               	clrf	fsr0h,c
  4414  0005DA  CFEE F332          	movff	postinc0,??_pf_lseek+13
  4415  0005DE  CFEE F333          	movff	postinc0,??_pf_lseek+14
  4416  0005E2  CFEE F334          	movff	postinc0,??_pf_lseek+15
  4417  0005E6  CFEE F335          	movff	postinc0,??_pf_lseek+16
  4418                           ;pff.c: 727: } else {
  4419  0005EA  D018               	goto	l294
  4420  0005EC                     l293:
  4421                           ; BSR set to: 3
  4422                           ;pff.c: 728: clst = fs->org_clust;
  4423  0005EC  50E1               	movf	fsr1l,w,c
  4424  0005EE  0F20               	addlw	32
  4425  0005F0  6EE9               	movwf	fsr0l,c
  4426  0005F2  6AEA               	clrf	fsr0h,c
  4427  0005F4  CFEE F332          	movff	postinc0,??_pf_lseek+13
  4428  0005F8  CFEE F333          	movff	postinc0,??_pf_lseek+14
  4429  0005FC  CFEE F334          	movff	postinc0,??_pf_lseek+15
  4430  000600  CFEE F335          	movff	postinc0,??_pf_lseek+16
  4431                           ;pff.c: 729: fs->curr_clust = clst;
  4432  000604  50E1               	movf	fsr1l,w,c
  4433  000606  0F24               	addlw	36
  4434  000608  6EE9               	movwf	fsr0l,c
  4435  00060A  6AEA               	clrf	fsr0h,c
  4436  00060C  C332  FFEE         	movff	??_pf_lseek+13,postinc0
  4437  000610  C333  FFEE         	movff	??_pf_lseek+14,postinc0
  4438  000614  C334  FFEE         	movff	??_pf_lseek+15,postinc0
  4439  000618  C335  FFEE         	movff	??_pf_lseek+16,postinc0
  4440  00061C                     l294:
  4441                           ; BSR set to: 3
  4442                           ;pf_lseek@fs stored from fsr1l
  4443  00061C  CFE1 F325          	movff	fsr1l,??_pf_lseek
  4444                           ;pff.c: 730: }
  4445                           ;pff.c: 731: while (ofs > bcs) {
  4446  000620                     l295:
  4447                           ; BSR set to: 3
  4448  000620  5121               	movf	?_pf_lseek& (0+255),w,b
  4449  000622  5D2E               	subwf	(??_pf_lseek+9)& (0+255),w,b
  4450  000624  5122               	movf	(?_pf_lseek+1)& (0+255),w,b
  4451  000626  592F               	subwfb	(??_pf_lseek+10)& (0+255),w,b
  4452  000628  5123               	movf	(?_pf_lseek+2)& (0+255),w,b
  4453  00062A  5930               	subwfb	(??_pf_lseek+11)& (0+255),w,b
  4454  00062C  5124               	movf	(?_pf_lseek+3)& (0+255),w,b
  4455  00062E  5931               	subwfb	(??_pf_lseek+12)& (0+255),w,b
  4456  000630  E255               	bc	u8870
  4457                           ; BSR set to: 3
  4458                           ;pff.c: 732: clst = get_fat(clst);
  4459  000632  C332  F37D         	movff	??_pf_lseek+13,?_get_fat
  4460  000636  C333  F37E         	movff	??_pf_lseek+14,?_get_fat+1
  4461  00063A  C334  F37F         	movff	??_pf_lseek+15,?_get_fat+2
  4462  00063E  C335  F380         	movff	??_pf_lseek+16,?_get_fat+3
  4463  000642  EC14  F007         	call	_get_fat	;wreg free
  4464  000646  C37D  F332         	movff	?_get_fat,??_pf_lseek+13
  4465  00064A  C37E  F333         	movff	?_get_fat+1,??_pf_lseek+14
  4466  00064E  C37F  F334         	movff	?_get_fat+2,??_pf_lseek+15
  4467  000652  C380  F335         	movff	?_get_fat+3,??_pf_lseek+16
  4468                           ; pf_lseek@fs loaded to fsr1l
  4469  000656  C325  FFE1         	movff	??_pf_lseek,fsr1l
  4470                           ;pff.c: 733: if (clst <= 1 || clst >= fs->max_cl
      +                          ust) goto fe_abort;
  4471  00065A  0E02               	movlw	2
  4472  00065C  5D32               	subwf	(??_pf_lseek+13)& (0+255),w,b
  4473  00065E  0E00               	movlw	0
  4474  000660  5933               	subwfb	(??_pf_lseek+14)& (0+255),w,b
  4475  000662  0E00               	movlw	0
  4476  000664  5934               	subwfb	(??_pf_lseek+15)& (0+255),w,b
  4477  000666  0E00               	movlw	0
  4478  000668  5935               	subwfb	(??_pf_lseek+16)& (0+255),w,b
  4479  00066A  E201 D099          	bnc	l299
  4480  00066E  50E1               	movf	fsr1l,w,c
  4481  000670  0F08               	addlw	8
  4482  000672  6EE9               	movwf	fsr0l,c
  4483  000674  6AEA               	clrf	fsr0h,c
  4484  000676  CFEE F336          	movff	postinc0,??_pf_lseek+17
  4485  00067A  CFEE F337          	movff	postinc0,??_pf_lseek+18
  4486  00067E  CFEE F338          	movff	postinc0,??_pf_lseek+19
  4487  000682  CFEE F339          	movff	postinc0,??_pf_lseek+20
  4488  000686  5136               	movf	(??_pf_lseek+17)& (0+255),w,b
  4489  000688  5D32               	subwf	(??_pf_lseek+13)& (0+255),w,b
  4490  00068A  5137               	movf	(??_pf_lseek+18)& (0+255),w,b
  4491  00068C  5933               	subwfb	(??_pf_lseek+14)& (0+255),w,b
  4492  00068E  5138               	movf	(??_pf_lseek+19)& (0+255),w,b
  4493  000690  5934               	subwfb	(??_pf_lseek+15)& (0+255),w,b
  4494  000692  5139               	movf	(??_pf_lseek+20)& (0+255),w,b
  4495  000694  5935               	subwfb	(??_pf_lseek+16)& (0+255),w,b
  4496  000696  E301 D083          	bc	l299
  4497                           ; BSR set to: 3
  4498                           ; BSR set to: 3
  4499                           ;pff.c: 734: fs->curr_clust = clst;
  4500  00069A  50E1               	movf	fsr1l,w,c
  4501  00069C  0F24               	addlw	36
  4502  00069E  6EE9               	movwf	fsr0l,c
  4503  0006A0  6AEA               	clrf	fsr0h,c
  4504  0006A2  C332  FFEE         	movff	??_pf_lseek+13,postinc0
  4505  0006A6  C333  FFEE         	movff	??_pf_lseek+14,postinc0
  4506  0006AA  C334  FFEE         	movff	??_pf_lseek+15,postinc0
  4507  0006AE  C335  FFEE         	movff	??_pf_lseek+16,postinc0
  4508                           ;pff.c: 735: fs->fptr += bcs;
  4509  0006B2  50E1               	movf	fsr1l,w,c
  4510  0006B4  0F18               	addlw	24
  4511  0006B6  6EE9               	movwf	fsr0l,c
  4512  0006B8  6AEA               	clrf	fsr0h,c
  4513  0006BA  512E               	movf	(??_pf_lseek+9)& (0+255),w,b
  4514  0006BC  26EE               	addwf	postinc0,f,c
  4515  0006BE  512F               	movf	(??_pf_lseek+10)& (0+255),w,b
  4516  0006C0  22EE               	addwfc	postinc0,f,c
  4517  0006C2  5130               	movf	(??_pf_lseek+11)& (0+255),w,b
  4518  0006C4  22EE               	addwfc	postinc0,f,c
  4519  0006C6  5131               	movf	(??_pf_lseek+12)& (0+255),w,b
  4520  0006C8  22ED               	addwfc	postdec0,f,c
  4521                           ;pff.c: 736: ofs -= bcs;
  4522  0006CA  512E               	movf	(??_pf_lseek+9)& (0+255),w,b
  4523  0006CC  5F21               	subwf	?_pf_lseek& (0+255),f,b
  4524  0006CE  512F               	movf	(??_pf_lseek+10)& (0+255),w,b
  4525  0006D0  5B22               	subwfb	(?_pf_lseek+1)& (0+255),f,b
  4526  0006D2  5130               	movf	(??_pf_lseek+11)& (0+255),w,b
  4527  0006D4  5B23               	subwfb	(?_pf_lseek+2)& (0+255),f,b
  4528  0006D6  5131               	movf	(??_pf_lseek+12)& (0+255),w,b
  4529  0006D8  5B24               	subwfb	(?_pf_lseek+3)& (0+255),f,b
  4530  0006DA  D7A2               	goto	l295
  4531  0006DC                     u8870:
  4532                           ; BSR set to: 3
  4533                           ; pf_lseek@fs loaded to fsr1l
  4534  0006DC  C325  FFE1         	movff	??_pf_lseek,fsr1l
  4535                           ;pff.c: 737: }
  4536                           ;pff.c: 738: fs->fptr += ofs;
  4537  0006E0  50E1               	movf	fsr1l,w,c
  4538  0006E2  0F18               	addlw	24
  4539  0006E4  6EE9               	movwf	fsr0l,c
  4540  0006E6  6AEA               	clrf	fsr0h,c
  4541  0006E8  5121               	movf	?_pf_lseek& (0+255),w,b
  4542  0006EA  26EE               	addwf	postinc0,f,c
  4543  0006EC  5122               	movf	(?_pf_lseek+1)& (0+255),w,b
  4544  0006EE  22EE               	addwfc	postinc0,f,c
  4545  0006F0  5123               	movf	(?_pf_lseek+2)& (0+255),w,b
  4546  0006F2  22EE               	addwfc	postinc0,f,c
  4547  0006F4  5124               	movf	(?_pf_lseek+3)& (0+255),w,b
  4548  0006F6  22ED               	addwfc	postdec0,f,c
  4549                           ;pff.c: 739: sect = clust2sect(clst);
  4550  0006F8  C332  F37D         	movff	??_pf_lseek+13,?_clust2sect
  4551  0006FC  C333  F37E         	movff	??_pf_lseek+14,?_clust2sect+1
  4552  000700  C334  F37F         	movff	??_pf_lseek+15,?_clust2sect+2
  4553  000704  C335  F380         	movff	??_pf_lseek+16,?_clust2sect+3
  4554  000708  EC20  F012         	call	_clust2sect	;wreg free
  4555  00070C  C37D  F326         	movff	?_clust2sect,??_pf_lseek+1
  4556  000710  C37E  F327         	movff	?_clust2sect+1,??_pf_lseek+2
  4557  000714  C37F  F328         	movff	?_clust2sect+2,??_pf_lseek+3
  4558  000718  C380  F329         	movff	?_clust2sect+3,??_pf_lseek+4
  4559                           ;pff.c: 740: if (!sect) goto fe_abort;
  4560  00071C  5129               	movf	(??_pf_lseek+4)& (0+255),w,b
  4561  00071E  1126               	iorwf	(??_pf_lseek+1)& (0+255),w,b
  4562  000720  1127               	iorwf	(??_pf_lseek+2)& (0+255),w,b
  4563  000722  1128               	iorwf	(??_pf_lseek+3)& (0+255),w,b
  4564  000724  E03D               	bz	l299
  4565                           ; BSR set to: 3
  4566                           ;pff.c: 741: fs->csect = (BYTE)(ofs / 512);
  4567  000726  50E1               	movf	fsr1l,w,c
  4568  000728  0F03               	addlw	3
  4569  00072A  6EE9               	movwf	fsr0l,c
  4570  00072C  6AEA               	clrf	fsr0h,c
  4571  00072E  C321  F336         	movff	?_pf_lseek,??_pf_lseek+17
  4572  000732  C322  F337         	movff	?_pf_lseek+1,??_pf_lseek+18
  4573  000736  C323  F338         	movff	?_pf_lseek+2,??_pf_lseek+19
  4574  00073A  C324  F339         	movff	?_pf_lseek+3,??_pf_lseek+20
  4575  00073E  0E0A               	movlw	10
  4576  000740  D005               	goto	u8890
  4577  000742                     u8895:
  4578  000742  90D8               	bcf	status,0,c
  4579  000744  3339               	rrcf	(??_pf_lseek+20)& (0+255),f,b
  4580  000746  3338               	rrcf	(??_pf_lseek+19)& (0+255),f,b
  4581  000748  3337               	rrcf	(??_pf_lseek+18)& (0+255),f,b
  4582  00074A  3336               	rrcf	(??_pf_lseek+17)& (0+255),f,b
  4583  00074C                     u8890:
  4584  00074C  2EE8               	decfsz	wreg,f,c
  4585  00074E  D7F9               	goto	u8895
  4586  000750  5136               	movf	(??_pf_lseek+17)& (0+255),w,b
  4587  000752  6EEF               	movwf	indf0,c
  4588                           ;pff.c: 742: if (ofs % 512)
  4589  000754  5121               	movf	?_pf_lseek& (0+255),w,b
  4590  000756  6F36               	movwf	(??_pf_lseek+17)& (0+255),b
  4591  000758  0E01               	movlw	1
  4592  00075A  1522               	andwf	(?_pf_lseek+1)& (0+255),w,b
  4593  00075C  6F37               	movwf	(??_pf_lseek+18)& (0+255),b
  4594  00075E  5137               	movf	(??_pf_lseek+18)& (0+255),w,b
  4595  000760  1136               	iorwf	(??_pf_lseek+17)& (0+255),w,b
  4596  000762  E024               	bz	l288
  4597                           ;pff.c: 743: fs->dsect = sect + fs->csect++;
  4598  000764  50E1               	movf	fsr1l,w,c
  4599  000766  0F03               	addlw	3
  4600  000768  6EE9               	movwf	fsr0l,c
  4601  00076A  6AEA               	clrf	fsr0h,c
  4602  00076C  50EF               	movf	indf0,w,c
  4603  00076E  2AEF               	incf	indf0,f,c
  4604  000770  2526               	addwf	(??_pf_lseek+1)& (0+255),w,b
  4605  000772  6F36               	movwf	(??_pf_lseek+17)& (0+255),b
  4606  000774  0E00               	movlw	0
  4607  000776  2127               	addwfc	(??_pf_lseek+2)& (0+255),w,b
  4608  000778  6F37               	movwf	(??_pf_lseek+18)& (0+255),b
  4609  00077A  0E00               	movlw	0
  4610  00077C  2128               	addwfc	(??_pf_lseek+3)& (0+255),w,b
  4611  00077E  6F38               	movwf	(??_pf_lseek+19)& (0+255),b
  4612  000780  0E00               	movlw	0
  4613  000782  2129               	addwfc	(??_pf_lseek+4)& (0+255),w,b
  4614  000784  6F39               	movwf	(??_pf_lseek+20)& (0+255),b
  4615  000786  50E1               	movf	fsr1l,w,c
  4616  000788  0F28               	addlw	40
  4617  00078A  6EE9               	movwf	fsr0l,c
  4618  00078C  6AEA               	clrf	fsr0h,c
  4619  00078E  C336  FFEE         	movff	??_pf_lseek+17,postinc0
  4620  000792  C337  FFEE         	movff	??_pf_lseek+18,postinc0
  4621  000796  C338  FFEE         	movff	??_pf_lseek+19,postinc0
  4622  00079A  C339  FFED         	movff	??_pf_lseek+20,postdec0
  4623                           ; BSR set to: 3
  4624                           ; BSR set to: 3
  4625  00079E  D006               	goto	l288
  4626                           ;pff.c: 748: fe_abort:
  4627  0007A0                     l299:
  4628                           ; BSR set to: 3
  4629                           ;pff.c: 749: fs->flag = 0;
  4630  0007A0  50E1               	movf	fsr1l,w,c
  4631  0007A2  0F02               	addlw	2
  4632  0007A4  6EE9               	movwf	fsr0l,c
  4633  0007A6  6AEA               	clrf	fsr0h,c
  4634  0007A8  0E00               	movlw	0
  4635  0007AA  6AEF               	clrf	indf0,c
  4636                           ;pff.c: 751: }
  4637  0007AC                     l288:
  4638                           ; BSR set to: 3
  4639  0007AC  0012               	return	
  4640  0007AE                     __end_of_pf_lseek:
  4641                           	opt stack 0
  4642                           
  4643                           	psect	text23
  4644                           ; =============== function _pf_lseek ends ======
      +                          ======
  4645                           ; *************** function _init_spi ***********
      +                          ******
  4646                           ; Defined at:
  4647                           ;		line 10 in file "D:\ElabPh\SDMMC\PIC WAV Play
      +                          er\PIC18 SD WAV Audio Player\src_no_lcd\spi_pic1
      +                          8.c"
  4648                           ; Parameters:
  4649                           ;		None
  4650                           ; Auto variables:
  4651                           ;		None
  4652                           ; Return value:
  4653                           ;		type: void 
  4654                           ;		size: 0
  4655                           ; Registers used:
  4656                           ;		wreg, status,2, status,0
  4657                           ; Tracked objects:
  4658                           ;		On entry : 0/0
  4659                           ;		On exit  : 0/0
  4660                           ;		Unchanged: FFFFFFF0/0
  4661                           ; Data sizes:
  4662                           ;		Autos:    0
  4663                           ;		Params:   0
  4664                           ;		Temp:     0
  4665                           ;		Total:    0
  4666                           ; This function calls:
  4667                           ;		Nothing
  4668                           ; This function is called by:
  4669                           ;		_disk_initialize
  4670                           ; This function uses a non-reentrant model
  4671                           ; 
  4672  000000                     
  4673                           ;spi_pic18.c: 9: void init_spi(void)
  4674                           ;spi_pic18.c: 10: {
  4675  0029C8                     _init_spi:
  4676                           	opt stack 26
  4677                           ; BSR set to: ?
  4678  0029C8  9C94               	bcf	3988,6,c	;volatile
  4679                           ;spi_pic18.c: 12: TRISCbits.TRISC7 = 0;
  4680  0029CA  9E94               	bcf	3988,7,c	;volatile
  4681                           ;spi_pic18.c: 13: TRISBbits.TRISB0 = 1;
  4682  0029CC  8093               	bsf	3987,0,c	;volatile
  4683                           ;spi_pic18.c: 14: TRISBbits.TRISB1 = 0;
  4684  0029CE  9293               	bcf	3987,1,c	;volatile
  4685                           ;spi_pic18.c: 16: ADCON1 = 0xFF;
  4686  0029D0  68C1               	setf	4033,c	;volatile
  4687                           ;spi_pic18.c: 18: SSPSTAT &= 0x3F;
  4688  0029D2  0E3F               	movlw	63
  4689  0029D4  16C7               	andwf	4039,f,c	;volatile
  4690                           ;spi_pic18.c: 19: SSPCON1 = 0x00;
  4691  0029D6  6AC6               	clrf	4038,c	;volatile
  4692                           ;spi_pic18.c: 21: SSPSTATbits.CKE = 1;
  4693  0029D8  8CC7               	bsf	4039,6,c	;volatile
  4694                           ;spi_pic18.c: 22: SSPSTATbits.SMP = 0;
  4695  0029DA  9EC7               	bcf	4039,7,c	;volatile
  4696                           ;spi_pic18.c: 24: SSPCON1 |= 0b00000010;
  4697  0029DC  82C6               	bsf	4038,1,c	;volatile
  4698                           ;spi_pic18.c: 25: SSPCON1 |= 0b00100000;
  4699  0029DE  8AC6               	bsf	4038,5,c	;volatile
  4700                           ;spi_pic18.c: 27: SSPCON1bits.WCOL = 0;
  4701  0029E0  9EC6               	bcf	4038,7,c	;volatile
  4702                           ;spi_pic18.c: 28: }
  4703                           ; BSR set to: ?
  4704  0029E2  0012               	return	
  4705  0029E4                     __end_of_init_spi:
  4706                           	opt stack 0
  4707                           
  4708                           	psect	text24
  4709                           ; =============== function _init_spi ends ======
      +                          ======
  4710                           ; *************** function _follow_path ********
      +                          *********
  4711                           ; Defined at:
  4712                           ;		line 375 in file "D:\ElabPh\SDMMC\PIC WAV Pla
      +                          yer\PIC18 SD WAV Audio Player\src_no_lcd\pff.c"
  4713                           ; Parameters:
  4714                           ;		dj             size:   2offs:   0	type: PTR s
      +                          truct _DIR_; Largest target is 17
  4715                           ;		 -> pf_open@dj(16), Dir(16), 
  4716                           ;		path           size:   2offs:   2	type: PTR c
      +                          onst unsigned char ; Largest target is 22
  4717                           ;		 -> STR_1(1), Fno(22), 
  4718                           ; Auto variables:
  4719                           ;		res         	       	type: enum E48
  4720                           ;		dir         	       	type: PTR unsigned char 
      +                          ; Largest target is 32
  4721                           ;		 -> pf_readdir@dir(32), pf_opendir@dir(32), p
      +                          f_open@dir(32), 
  4722                           ; Return value:
  4723                           ;		type: enum E48
  4724                           ;		size: 1
  4725                           ; Registers used:
  4726                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2
      +                          h, status,2, status,0, tblptrl, tblptrh, tblptru
      +                          , tablat, prodl, prodh, cstack
  4727                           ; Tracked objects:
  4728                           ;		On entry : F/3
  4729                           ;		On exit  : F/3
  4730                           ;		Unchanged: FFFFFFF0/0
  4731                           ; Data sizes:
  4732                           ;		Autos:    1
  4733                           ;		Params:   4
  4734                           ;		Temp:    12
  4735                           ;		Total:   17
  4736                           ; This function calls:
  4737                           ;		_dir_rewind
  4738                           ;		_create_name
  4739                           ;		_dir_find
  4740                           ; This function is called by:
  4741                           ;		_pf_open
  4742                           ;		_pf_opendir
  4743                           ; This function uses a non-reentrant model
  4744                           ; 
  4745  000000                     
  4746                           ;pff.c: 370: static
  4747                           ;pff.c: 371: FRESULT follow_path (
  4748                           ;pff.c: 372: DIR *dj,
  4749                           ;pff.c: 373: const char *path
  4750                           ;pff.c: 374: )
  4751                           ;pff.c: 375: {
  4752  001442                     _follow_path:
  4753                           	opt stack 26
  4754                           ; BSR set to: 3
  4755                           ;pff.c: 376: FRESULT res;
  4756                           ;pff.c: 377: BYTE *dir;
  4757                           ;pff.c: 380: while (*path == ' ') path++;
  4758  001442                     l235:
  4759                           ; BSR set to: 3
  4760  001442  5156               	movf	(?_follow_path+2)& (0+255),w,b
  4761  001444  EC40  F00B         	call	PL14
  4762  001448  64EA               	cpfsgt	fsr0h,c
  4763  00144A  D003               	bra	u9547
  4764  00144C  6EEA               	movwf	fsr0h,c
  4765  00144E  50EF               	movf	indf0,w,c
  4766  001450  D003               	bra	u9540
  4767  001452                     u9547:
  4768  001452  6EF7               	movwf	tblptrh,c
  4769  001454  0008               	tblrd		*
  4770  001456  50F5               	movf	tablat,w,c
  4771  001458                     u9540:
  4772  001458  0A20               	xorlw	32
  4773  00145A  E103               	bnz	u9550
  4774                           ; BSR set to: 3
  4775  00145C  4B56               	infsnz	(?_follow_path+2)& (0+255),f,b
  4776  00145E  2B57               	incf	(?_follow_path+3)& (0+255),f,b
  4777  001460  D7F0               	goto	l235
  4778  001462                     u9550:
  4779                           ; BSR set to: 3
  4780                           ;pff.c: 381: if (*path == '/') path++;
  4781  001462  5156               	movf	(?_follow_path+2)& (0+255),w,b
  4782  001464  EC40  F00B         	call	PL14
  4783  001468  64EA               	cpfsgt	fsr0h,c
  4784  00146A  D003               	bra	u9567
  4785  00146C  6EEA               	movwf	fsr0h,c
  4786  00146E  50EF               	movf	indf0,w,c
  4787  001470  D003               	bra	u9560
  4788  001472                     u9567:
  4789  001472  6EF7               	movwf	tblptrh,c
  4790  001474  0008               	tblrd		*
  4791  001476  50F5               	movf	tablat,w,c
  4792  001478                     u9560:
  4793  001478  0A2F               	xorlw	47
  4794  00147A  E102               	bnz	l238
  4795  00147C  4B56               	infsnz	(?_follow_path+2)& (0+255),f,b
  4796  00147E  2B57               	incf	(?_follow_path+3)& (0+255),f,b
  4797  001480                     l238:
  4798                           ; BSR set to: 3
  4799                           ;pff.c: 382: dj->sclust = 0;
  4800  001480  0E04               	movlw	4
  4801  001482  2554               	addwf	?_follow_path& (0+255),w,b
  4802  001484  6EE9               	movwf	fsr0l,c
  4803  001486  0E00               	movlw	0
  4804  001488  2155               	addwfc	(?_follow_path+1)& (0+255),w,b
  4805  00148A  6EEA               	movwf	fsr0h,c
  4806  00148C  6AEE               	clrf	postinc0,c
  4807  00148E  6AEE               	clrf	postinc0,c
  4808  001490  6AEE               	clrf	postinc0,c
  4809  001492  6AED               	clrf	postdec0,c
  4810                           ;pff.c: 384: if ((BYTE)*path <= ' ') {
  4811  001494  5156               	movf	(?_follow_path+2)& (0+255),w,b
  4812  001496  EC40  F00B         	call	PL14
  4813  00149A  64EA               	cpfsgt	fsr0h,c
  4814  00149C  D003               	bra	u9587
  4815  00149E  6EEA               	movwf	fsr0h,c
  4816  0014A0  50EF               	movf	indf0,w,c
  4817  0014A2  D003               	bra	u9580
  4818  0014A4                     u9587:
  4819  0014A4  6EF7               	movwf	tblptrh,c
  4820  0014A6  0008               	tblrd		*
  4821  0014A8  50F5               	movf	tablat,w,c
  4822  0014AA                     u9580:
  4823  0014AA  6F59               	movwf	(??_follow_path+1)& (0+255),b
  4824  0014AC  0E21               	movlw	33
  4825  0014AE  5D59               	subwf	(??_follow_path+1)& (0+255),w,b
  4826  0014B0  E215               	bc	l241
  4827                           ;pff.c: 385: res = dir_rewind(dj);
  4828  0014B2  C354  F36C         	movff	?_follow_path,?_dir_rewind
  4829  0014B6  C355  F36D         	movff	?_follow_path+1,?_dir_rewind+1
  4830  0014BA  EC84  F00E         	call	_dir_rewind	;wreg free
  4831  0014BE  6F58               	movwf	??_follow_path& (0+255),b
  4832                           ;pff.c: 386: FatFs->buf[0] = 0;
  4833  0014C0  5009               	movf	9,w,c
  4834  0014C2  0F06               	addlw	6
  4835  0014C4  6EE9               	movwf	fsr0l,c
  4836  0014C6  6AEA               	clrf	fsr0h,c
  4837  0014C8  CFEE F359          	movff	postinc0,??_follow_path+1
  4838  0014CC  CFED F35A          	movff	postdec0,??_follow_path+2
  4839  0014D0  C359  FFE9         	movff	??_follow_path+1,fsr0l
  4840  0014D4  C35A  FFEA         	movff	??_follow_path+2,fsr0h
  4841  0014D8  6AEF               	clrf	indf0,c
  4842                           ;pff.c: 388: } else {
  4843  0014DA  D076               	goto	l240
  4844                           ;pff.c: 389: for (;;) {
  4845  0014DC                     l241:
  4846                           ; BSR set to: 3
  4847                           ;pff.c: 390: res = create_name(dj, &path);
  4848  0014DC  0E56               	movlw	low (?_follow_path+2)
  4849  0014DE  6F67               	movwf	(?_create_name+2)& (0+255),b
  4850  0014E0  0E03               	movlw	high (?_follow_path+2)
  4851  0014E2  6F68               	movwf	(?_create_name+3)& (0+255),b
  4852  0014E4  C354  F365         	movff	?_follow_path,?_create_name
  4853  0014E8  C355  F366         	movff	?_follow_path+1,?_create_name+1
  4854  0014EC  ECAA  F00B         	call	_create_name	;wreg free
  4855  0014F0  6F58               	movwf	??_follow_path& (0+255),b
  4856                           ;pff.c: 391: if (res != FR_OK) break;
  4857  0014F2  5158               	movf	??_follow_path& (0+255),w,b
  4858  0014F4  E169               	bnz	l240
  4859                           ; BSR set to: 3
  4860                           ;pff.c: 392: res = dir_find(dj);
  4861  0014F6  C354  F365         	movff	?_follow_path,?_dir_find
  4862  0014FA  C355  F366         	movff	?_follow_path+1,?_dir_find+1
  4863  0014FE  EC91  F00F         	call	_dir_find	;wreg free
  4864  001502  6F58               	movwf	??_follow_path& (0+255),b
  4865                           ;pff.c: 393: if (res != FR_OK) {
  4866  001504  5158               	movf	??_follow_path& (0+255),w,b
  4867  001506  E008               	bz	l245
  4868                           ;pff.c: 394: if (res == FR_NO_FILE && !*(dj->fn+
      +                          11))
  4869  001508  5158               	movf	??_follow_path& (0+255),w,b
  4870  00150A  0A03               	xorlw	3
  4871  00150C  E15D               	bnz	l240
  4872  00150E  0E02               	movlw	2
  4873  001510  EC2F  F00B         	call	PL15
  4874  001514  E159               	bnz	l240
  4875  001516  D01A               	goto	u9650
  4876                           ;pff.c: 395: res = FR_NO_PATH;
  4877                           ; BSR set to: 3
  4878                           ;pff.c: 396: break;
  4879  001518                     l245:
  4880                           ; BSR set to: 3
  4881                           ;pff.c: 397: }
  4882                           ;pff.c: 398: if (*(dj->fn+11)) break;
  4883  001518  0E02               	movlw	2
  4884  00151A  EC2F  F00B         	call	PL15
  4885  00151E  E154               	bnz	l240
  4886                           ; BSR set to: 3
  4887                           ;pff.c: 399: dir = FatFs->buf;
  4888  001520  5009               	movf	9,w,c
  4889  001522  0F06               	addlw	6
  4890  001524  6EE9               	movwf	fsr0l,c
  4891  001526  6AEA               	clrf	fsr0h,c
  4892  001528  CFEE F359          	movff	postinc0,??_follow_path+1
  4893  00152C  CFED F35A          	movff	postdec0,??_follow_path+2
  4894  001530  C359  FFE1         	movff	??_follow_path+1,fsr1l
  4895  001534  C35A  FFE2         	movff	??_follow_path+2,fsr1h
  4896                           ;pff.c: 400: if (!(dir[11] & 0x10)) {
  4897  001538  0E0B               	movlw	11
  4898  00153A  24E1               	addwf	fsr1l,w,c
  4899  00153C  6EE9               	movwf	fsr0l,c
  4900  00153E  0E00               	movlw	0
  4901  001540  20E2               	addwfc	fsr1h,w,c
  4902  001542  6EEA               	movwf	fsr0h,c
  4903  001544  50EF               	movf	indf0,w,c
  4904  001546  6F59               	movwf	(??_follow_path+1)& (0+255),b
  4905  001548  B959               	btfsc	(??_follow_path+1)& (0+255),4,b
  4906  00154A  D003               	goto	l248
  4907  00154C                     u9650:
  4908                           ;pff.c: 401: res = FR_NO_PATH; break;
  4909  00154C  0E04               	movlw	4
  4910  00154E  6F58               	movwf	??_follow_path& (0+255),b
  4911  001550  D03B               	goto	l240
  4912  001552                     l248:
  4913                           ; BSR set to: 3
  4914                           ;pff.c: 402: }
  4915                           ;pff.c: 403: dj->sclust =
  4916                           ;pff.c: 405: ((DWORD)(WORD)(*(WORD*)(BYTE*)(dir+
      +                          20)) << 16) |
  4917                           ;pff.c: 407: (WORD)(*(WORD*)(BYTE*)(dir+26));
  4918  001552  0E1A               	movlw	26
  4919  001554  24E1               	addwf	fsr1l,w,c
  4920  001556  6EE9               	movwf	fsr0l,c
  4921  001558  0E00               	movlw	0
  4922  00155A  20E2               	addwfc	fsr1h,w,c
  4923  00155C  6EEA               	movwf	fsr0h,c
  4924  00155E  CFEE F359          	movff	postinc0,??_follow_path+1
  4925  001562  CFED F35A          	movff	postdec0,??_follow_path+2
  4926  001566  0E14               	movlw	20
  4927  001568  24E1               	addwf	fsr1l,w,c
  4928  00156A  6EE9               	movwf	fsr0l,c
  4929  00156C  0E00               	movlw	0
  4930  00156E  20E2               	addwfc	fsr1h,w,c
  4931  001570  6EEA               	movwf	fsr0h,c
  4932  001572  CFEE F35B          	movff	postinc0,??_follow_path+3
  4933  001576  CFED F35C          	movff	postdec0,??_follow_path+4
  4934  00157A  515B               	movf	(??_follow_path+3)& (0+255),w,b
  4935  00157C  6F5D               	movwf	(??_follow_path+5)& (0+255),b
  4936  00157E  515C               	movf	(??_follow_path+4)& (0+255),w,b
  4937  001580  6F5E               	movwf	(??_follow_path+6)& (0+255),b
  4938  001582  6B5F               	clrf	(??_follow_path+7)& (0+255),b
  4939  001584  6B60               	clrf	(??_follow_path+8)& (0+255),b
  4940  001586  C35E  F360         	movff	??_follow_path+6,??_follow_path+8
  4941  00158A  C35D  F35F         	movff	??_follow_path+5,??_follow_path+7
  4942  00158E  6B5E               	clrf	(??_follow_path+6)& (0+255),b
  4943  001590  6B5D               	clrf	(??_follow_path+5)& (0+255),b
  4944  001592  5159               	movf	(??_follow_path+1)& (0+255),w,b
  4945  001594  115D               	iorwf	(??_follow_path+5)& (0+255),w,b
  4946  001596  6F61               	movwf	(??_follow_path+9)& (0+255),b
  4947  001598  515A               	movf	(??_follow_path+2)& (0+255),w,b
  4948  00159A  115E               	iorwf	(??_follow_path+6)& (0+255),w,b
  4949  00159C  6F62               	movwf	(??_follow_path+10)& (0+255),b
  4950  00159E  0E00               	movlw	0
  4951  0015A0  115F               	iorwf	(??_follow_path+7)& (0+255),w,b
  4952  0015A2  6F63               	movwf	(??_follow_path+11)& (0+255),b
  4953  0015A4  0E00               	movlw	0
  4954  0015A6  1160               	iorwf	(??_follow_path+8)& (0+255),w,b
  4955  0015A8  6F64               	movwf	(??_follow_path+12)& (0+255),b
  4956  0015AA  0E04               	movlw	4
  4957  0015AC  2554               	addwf	?_follow_path& (0+255),w,b
  4958  0015AE  6EE9               	movwf	fsr0l,c
  4959  0015B0  0E00               	movlw	0
  4960  0015B2  2155               	addwfc	(?_follow_path+1)& (0+255),w,b
  4961  0015B4  6EEA               	movwf	fsr0h,c
  4962  0015B6  C361  FFEE         	movff	??_follow_path+9,postinc0
  4963  0015BA  C362  FFEE         	movff	??_follow_path+10,postinc0
  4964  0015BE  C363  FFEE         	movff	??_follow_path+11,postinc0
  4965  0015C2  C364  FFED         	movff	??_follow_path+12,postdec0
  4966                           ;pff.c: 408: }
  4967  0015C6  D78A               	goto	l241
  4968  0015C8                     l240:
  4969                           ; BSR set to: 3
  4970                           ;pff.c: 409: }
  4971                           ;pff.c: 411: return res;
  4972  0015C8  5158               	movf	??_follow_path& (0+255),w,b
  4973                           ;pff.c: 412: }
  4974                           ; BSR set to: 3
  4975  0015CA  0012               	return	
  4976  0015CC                     __end_of_follow_path:
  4977                           	opt stack 0
  4978                           
  4979                           	psect	text25
  4980                           ; =============== function _follow_path ends ===
      +                          =========
  4981                           ; *************** function _set_sampling_rate **
      +                          ***************
  4982                           ; Defined at:
  4983                           ;		line 127 in file "D:\ElabPh\SDMMC\PIC WAV Pla
      +                          yer\PIC18 SD WAV Audio Player\src_no_lcd\pwm_aud
      +                          io.c"
  4984                           ; Parameters:
  4985                           ;		rate           size:   4offs:   0	type: unsig
      +                          ned long 
  4986                           ; Auto variables:
  4987                           ;		preload     	       	type: unsigned long 
  4988                           ; Return value:
  4989                           ;		type: void 
  4990                           ;		size: 0
  4991                           ; Registers used:
  4992                           ;		wreg, fsr2l, status,2, status,0, cstack
  4993                           ; Tracked objects:
  4994                           ;		On entry : F/2
  4995                           ;		On exit  : F/3
  4996                           ;		Unchanged: FFFFFFF0/0
  4997                           ; Data sizes:
  4998                           ;		Autos:    4
  4999                           ;		Params:   4
  5000                           ;		Temp:     0
  5001                           ;		Total:    8
  5002                           ; This function calls:
  5003                           ;		___lldiv
  5004                           ; This function is called by:
  5005                           ;		_load_header
  5006                           ; This function uses a non-reentrant model
  5007                           ; 
  5008  000000                     
  5009                           ;pwm_audio.c: 126: void set_sampling_rate(unsign
      +                          ed long rate)
  5010                           ;pwm_audio.c: 127: {
  5011  002834                     _set_sampling_rate:
  5012                           	opt stack 26
  5013                           ; BSR set to: 2
  5014  002834  C321  F34D         	movff	?_set_sampling_rate,?___lldiv+4
  5015  002838  C322  F34E         	movff	?_set_sampling_rate+1,?___lldiv+5
  5016  00283C  C323  F34F         	movff	?_set_sampling_rate+2,?___lldiv+6
  5017  002840  C324  F350         	movff	?_set_sampling_rate+3,?___lldiv+7
  5018  002844  0103               	movlb	3	; () banked
  5019  002846  6B49               	clrf	?___lldiv& (0+255),b
  5020  002848  0E1B               	movlw	27
  5021  00284A  6F4A               	movwf	(?___lldiv+1)& (0+255),b
  5022  00284C  0EB7               	movlw	183
  5023  00284E  6F4B               	movwf	(?___lldiv+2)& (0+255),b
  5024  002850  0E00               	movlw	0
  5025  002852  6B4C               	clrf	(?___lldiv+3)& (0+255),b
  5026  002854  ECB6  F012         	call	___lldiv	;wreg free
  5027  002858  5149               	movf	?___lldiv& (0+255),w,b
  5028  00285A  0800               	sublw	0
  5029  00285C  6F25               	movwf	??_set_sampling_rate& (0+255),b
  5030  00285E  0E00               	movlw	0
  5031  002860  554A               	subfwb	(?___lldiv+1)& (0+255),w,b
  5032  002862  6F26               	movwf	(??_set_sampling_rate+1)& (0+255),b
  5033  002864  0E01               	movlw	1
  5034  002866  554B               	subfwb	(?___lldiv+2)& (0+255),w,b
  5035  002868  6F27               	movwf	(??_set_sampling_rate+2)& (0+255),b
  5036  00286A  0E00               	movlw	0
  5037  00286C  554C               	subfwb	(?___lldiv+3)& (0+255),w,b
  5038  00286E  6F28               	movwf	(??_set_sampling_rate+3)& (0+255),b
  5039                           ;pwm_audio.c: 131: TMR1H_preload = (unsigned cha
      +                          r)(preload>>8);
  5040  002870  C326  F008         	movff	??_set_sampling_rate+1,8
  5041                           ;pwm_audio.c: 132: TMR1L_preload = (unsigned cha
      +                          r)(preload & 0x00FF);
  5042  002874  C325  F007         	movff	??_set_sampling_rate,7
  5043                           ;pwm_audio.c: 133: }
  5044                           ; BSR set to: 3
  5045  002878  0012               	return	
  5046  00287A                     __end_of_set_sampling_rate:
  5047                           	opt stack 0
  5048                           
  5049                           	psect	text26
  5050                           ; =============== function _set_sampling_rate en
      +                          ds ============
  5051                           ; *************** function _dir_find ***********
      +                          ******
  5052                           ; Defined at:
  5053                           ;		line 209 in file "D:\ElabPh\SDMMC\PIC WAV Pla
      +                          yer\PIC18 SD WAV Audio Player\src_no_lcd\pff.c"
  5054                           ; Parameters:
  5055                           ;		dj             size:   2offs:   0	type: PTR s
      +                          truct _DIR_; Largest target is 17
  5056                           ;		 -> pf_open@dj(16), Dir(16), 
  5057                           ; Auto variables:
  5058                           ;		c           	       	type: unsigned char 
  5059                           ;		res         	       	type: enum E48
  5060                           ;		dir         	       	type: PTR unsigned char 
      +                          ; Largest target is 32
  5061                           ;		 -> pf_readdir@dir(32), pf_opendir@dir(32), p
      +                          f_open@dir(32), 
  5062                           ; Return value:
  5063                           ;		type: enum E48
  5064                           ;		size: 1
  5065                           ; Registers used:
  5066                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2
      +                          h, status,2, status,0, prodl, prodh, cstack
  5067                           ; Tracked objects:
  5068                           ;		On entry : F/3
  5069                           ;		On exit  : F/3
  5070                           ;		Unchanged: FFFFFFF0/0
  5071                           ; Data sizes:
  5072                           ;		Autos:    3
  5073                           ;		Params:   2
  5074                           ;		Temp:     2
  5075                           ;		Total:    7
  5076                           ; This function calls:
  5077                           ;		_dir_rewind
  5078                           ;		_disk_readp
  5079                           ;		_mem_cmp
  5080                           ;		_dir_next
  5081                           ; This function is called by:
  5082                           ;		_follow_path
  5083                           ; This function uses a non-reentrant model
  5084                           ; 
  5085  000000                     
  5086                           ;pff.c: 205: static
  5087                           ;pff.c: 206: FRESULT dir_find (
  5088                           ;pff.c: 207: DIR *dj
  5089                           ;pff.c: 208: )
  5090                           ;pff.c: 209: {
  5091  001F22                     _dir_find:
  5092                           	opt stack 25
  5093                           ; BSR set to: 3
  5094                           ;pff.c: 210: FRESULT res;
  5095                           ;pff.c: 211: BYTE c, *dir;
  5096                           ;pff.c: 214: res = dir_rewind(dj);
  5097  001F22  C365  F36C         	movff	?_dir_find,?_dir_rewind
  5098  001F26  C366  F36D         	movff	?_dir_find+1,?_dir_rewind+1
  5099  001F2A  EC84  F00E         	call	_dir_rewind	;wreg free
  5100  001F2E  6EE1               	movwf	fsr1l,c
  5101                           ;pff.c: 215: if (res != FR_OK) return res;
  5102  001F30  50E1               	movf	fsr1l,w,c
  5103  001F32  E002               	bz	l196
  5104  001F34  50E1               	movf	fsr1l,w,c
  5105  001F36  D072               	goto	l195
  5106  001F38                     l196:
  5107                           ; BSR set to: 3
  5108                           ;pff.c: 217: dir = FatFs->buf;
  5109  001F38  5009               	movf	9,w,c
  5110  001F3A  0F06               	addlw	6
  5111  001F3C  6EE9               	movwf	fsr0l,c
  5112  001F3E  6AEA               	clrf	fsr0h,c
  5113  001F40  CFEE F368          	movff	postinc0,??_dir_find+1
  5114  001F44  CFED F369          	movff	postdec0,??_dir_find+2
  5115                           ;pff.c: 218: do {
  5116  001F48                     l199:
  5117                           ; BSR set to: 3
  5118                           ;pff.c: 219: res = disk_readp(dir, dj->sect, (WO
      +                          RD)((dj->index % 16) * 32), 32)
  5119                           ;pff.c: 220: ? FR_DISK_ERR : FR_OK;
  5120  001F48  0E20               	movlw	32
  5121  001F4A  6F9E               	movwf	(?_disk_readp+8)& (0+255),b
  5122  001F4C  6B9F               	clrf	(?_disk_readp+9)& (0+255),b
  5123  001F4E  C365  FFE9         	movff	?_dir_find,fsr0l
  5124  001F52  C366  FFEA         	movff	?_dir_find+1,fsr0h
  5125  001F56  CFEE F36A          	movff	postinc0,??_dir_find+3
  5126  001F5A  CFED F36B          	movff	postdec0,??_dir_find+4
  5127  001F5E  0E0F               	movlw	15
  5128  001F60  176A               	andwf	(??_dir_find+3)& (0+255),f,b
  5129  001F62  6B6B               	clrf	(??_dir_find+4)& (0+255),b
  5130  001F64  0E05               	movlw	5
  5131  001F66                     u9475:
  5132  001F66  90D8               	bcf	status,0,c
  5133  001F68  376A               	rlcf	(??_dir_find+3)& (0+255),f,b
  5134  001F6A  376B               	rlcf	(??_dir_find+4)& (0+255),f,b
  5135  001F6C  2EE8               	decfsz	wreg,f,c
  5136  001F6E  D7FB               	goto	u9475
  5137  001F70  C36A  F39C         	movff	??_dir_find+3,?_disk_readp+6
  5138  001F74  C36B  F39D         	movff	??_dir_find+4,?_disk_readp+7
  5139  001F78  0E0C               	movlw	12
  5140  001F7A  2565               	addwf	?_dir_find& (0+255),w,b
  5141  001F7C  6EE9               	movwf	fsr0l,c
  5142  001F7E  0E00               	movlw	0
  5143  001F80  2166               	addwfc	(?_dir_find+1)& (0+255),w,b
  5144  001F82  6EEA               	movwf	fsr0h,c
  5145  001F84  CFEE F398          	movff	postinc0,?_disk_readp+2
  5146  001F88  CFEE F399          	movff	postinc0,?_disk_readp+3
  5147  001F8C  CFEE F39A          	movff	postinc0,?_disk_readp+4
  5148  001F90  CFEE F39B          	movff	postinc0,?_disk_readp+5
  5149  001F94  C368  F396         	movff	??_dir_find+1,?_disk_readp
  5150  001F98  C369  F397         	movff	??_dir_find+2,?_disk_readp+1
  5151  001F9C  ECFA  F010         	call	_disk_readp	;wreg free
  5152  001FA0  0900               	iorlw	0
  5153  001FA2  E002               	bz	u9480
  5154  001FA4  0E01               	movlw	1
  5155  001FA6  D001               	goto	u9486
  5156  001FA8                     u9480:
  5157  001FA8  0E00               	movlw	0
  5158  001FAA                     u9486:
  5159  001FAA  0103               	movlb	3	; () banked
  5160  001FAC  6F67               	movwf	??_dir_find& (0+255),b
  5161                           ;pff.c: 221: if (res != FR_OK) break;
  5162  001FAE  5167               	movf	??_dir_find& (0+255),w,b
  5163  001FB0  E134               	bnz	l198
  5164                           ; BSR set to: 3
  5165                           ;pff.c: 222: c = dir[0];
  5166  001FB2  C368  FFE9         	movff	??_dir_find+1,fsr0l
  5167  001FB6  C369  FFEA         	movff	??_dir_find+2,fsr0h
  5168  001FBA  50EF               	movf	indf0,w,c
  5169  001FBC  6ED9               	movwf	fsr2l,c
  5170                           ;pff.c: 223: if (c == 0) { res = FR_NO_FILE; bre
      +                          ak; }
  5171  001FBE  66D9               	tstfsz	fsr2l,c
  5172  001FC0  D003               	goto	l201
  5173  001FC2  0E03               	movlw	3
  5174  001FC4  6F67               	movwf	??_dir_find& (0+255),b
  5175  001FC6  D029               	goto	l198
  5176  001FC8                     l201:
  5177                           ; BSR set to: 3
  5178                           ;pff.c: 224: if (!(dir[11] & 0x08) && !mem_cmp(d
      +                          ir, dj->fn, 11))
  5179  001FC8  0E0B               	movlw	11
  5180  001FCA  2568               	addwf	(??_dir_find+1)& (0+255),w,b
  5181  001FCC  6EE9               	movwf	fsr0l,c
  5182  001FCE  0E00               	movlw	0
  5183  001FD0  2169               	addwfc	(??_dir_find+2)& (0+255),w,b
  5184  001FD2  6EEA               	movwf	fsr0h,c
  5185  001FD4  50EF               	movf	indf0,w,c
  5186  001FD6  6F6A               	movwf	(??_dir_find+3)& (0+255),b
  5187  001FD8  B76A               	btfsc	(??_dir_find+3)& (0+255),3,b
  5188  001FDA  D016               	goto	l202
  5189  001FDC  0E0B               	movlw	11
  5190  001FDE  6F70               	movwf	(?_mem_cmp+4)& (0+255),b
  5191  001FE0  6B71               	clrf	(?_mem_cmp+5)& (0+255),b
  5192  001FE2  0E02               	movlw	2
  5193  001FE4  2565               	addwf	?_dir_find& (0+255),w,b
  5194  001FE6  6EE9               	movwf	fsr0l,c
  5195  001FE8  0E00               	movlw	0
  5196  001FEA  2166               	addwfc	(?_dir_find+1)& (0+255),w,b
  5197  001FEC  6EEA               	movwf	fsr0h,c
  5198  001FEE  CFEE F36E          	movff	postinc0,?_mem_cmp+2
  5199  001FF2  CFED F36F          	movff	postdec0,?_mem_cmp+3
  5200  001FF6  C368  F36C         	movff	??_dir_find+1,?_mem_cmp
  5201  001FFA  C369  F36D         	movff	??_dir_find+2,?_mem_cmp+1
  5202  001FFE  EC24  F013         	call	_mem_cmp	;wreg free
  5203  002002  516D               	movf	(?_mem_cmp+1)& (0+255),w,b
  5204  002004  116C               	iorwf	?_mem_cmp& (0+255),w,b
  5205  002006  E009               	bz	l198
  5206                           ;pff.c: 225: break;
  5207  002008                     l202:
  5208                           ; BSR set to: 3
  5209                           ;pff.c: 226: res = dir_next(dj);
  5210  002008  C365  F36C         	movff	?_dir_find,?_dir_next
  5211  00200C  C366  F36D         	movff	?_dir_find+1,?_dir_next+1
  5212  002010  EC6D  F00C         	call	_dir_next	;wreg free
  5213  002014  6F67               	movwf	??_dir_find& (0+255),b
  5214                           ;pff.c: 227: } while (res == FR_OK);
  5215  002016  5167               	movf	??_dir_find& (0+255),w,b
  5216  002018  E097               	bz	l199
  5217  00201A                     l198:
  5218                           ; BSR set to: 3
  5219                           ;pff.c: 229: return res;
  5220  00201A  5167               	movf	??_dir_find& (0+255),w,b
  5221                           ;pff.c: 230: }
  5222  00201C                     l195:
  5223                           ; BSR set to: 3
  5224  00201C  0012               	return	
  5225  00201E                     __end_of_dir_find:
  5226                           	opt stack 0
  5227                           
  5228                           	psect	text27
  5229                           ; =============== function _dir_find ends ======
      +                          ======
  5230                           ; *************** function _create_name ********
      +                          *********
  5231                           ; Defined at:
  5232                           ;		line 284 in file "D:\ElabPh\SDMMC\PIC WAV Pla
      +                          yer\PIC18 SD WAV Audio Player\src_no_lcd\pff.c"
  5233                           ; Parameters:
  5234                           ;		dj             size:   2offs:   0	type: PTR s
      +                          truct _DIR_; Largest target is 17
  5235                           ;		 -> pf_open@dj(16), Dir(16), 
  5236                           ;		path           size:   2offs:   2	type: PTR P
      +                          TR const unsigned char ; Largest target is 3
  5237                           ;		 -> follow_path@path(2), 
  5238                           ; Auto variables:
  5239                           ;		d           	       	type: unsigned char 
  5240                           ;		ni          	       	type: unsigned char 
  5241                           ;		si          	       	type: unsigned char 
  5242                           ;		i           	       	type: unsigned char 
  5243                           ;		c           	       	type: unsigned char 
  5244                           ;		p           	       	type: PTR const unsigned
      +                           char ; Largest target is 22
  5245                           ;		 -> STR_1(1), Fno(22), 
  5246                           ;		sfn         	       	type: PTR unsigned char 
      +                          ; Largest target is 12
  5247                           ;		 -> pf_readdir@sp(12), pf_opendir@sp(12), pf_
      +                          open@sp(12), 
  5248                           ; Return value:
  5249                           ;		type: enum E48
  5250                           ;		size: 1
  5251                           ; Registers used:
  5252                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2
      +                          h, status,2, status,0, tblptrl, tblptrh, tblptru
      +                          , tablat, prodl, prodh, cstack
  5253                           ; Tracked objects:
  5254                           ;		On entry : F/3
  5255                           ;		On exit  : F/3
  5256                           ;		Unchanged: FFFFFFF0/0
  5257                           ; Data sizes:
  5258                           ;		Autos:    4
  5259                           ;		Params:   4
  5260                           ;		Temp:     5
  5261                           ;		Total:   13
  5262                           ; This function calls:
  5263                           ;		_mem_set
  5264                           ; This function is called by:
  5265                           ;		_follow_path
  5266                           ; This function uses a non-reentrant model
  5267                           ; 
  5268  000000                     
  5269                           ;pff.c: 279: static
  5270                           ;pff.c: 280: FRESULT create_name (
  5271                           ;pff.c: 281: DIR *dj,
  5272                           ;pff.c: 282: const char **path
  5273                           ;pff.c: 283: )
  5274                           ;pff.c: 284: {
  5275  001754                     _create_name:
  5276                           	opt stack 25
  5277                           ; BSR set to: 3
  5278  001754  0E02               	movlw	2
  5279  001756  2565               	addwf	?_create_name& (0+255),w,b
  5280  001758  6EE9               	movwf	fsr0l,c
  5281  00175A  0E00               	movlw	0
  5282  00175C  2166               	addwfc	(?_create_name+1)& (0+255),w,b
  5283  00175E  6EEA               	movwf	fsr0h,c
  5284  001760  CFEE F36D          	movff	postinc0,??_create_name+4
  5285  001764  CFED F36E          	movff	postdec0,??_create_name+5
  5286  001768  C36D  FFD9         	movff	??_create_name+4,fsr2l
  5287  00176C  C36E  FFDA         	movff	??_create_name+5,fsr2h
  5288                           ;pff.c: 290: mem_set(sfn, ' ', 11);
  5289  001770  0E0B               	movlw	11
  5290  001772  6F76               	movwf	(?_mem_set+4)& (0+255),b
  5291  001774  6B77               	clrf	(?_mem_set+5)& (0+255),b
  5292  001776  0E20               	movlw	32
  5293  001778  6F74               	movwf	(?_mem_set+2)& (0+255),b
  5294  00177A  0E00               	movlw	0
  5295  00177C  6B75               	clrf	(?_mem_set+3)& (0+255),b
  5296  00177E  CFD9 F372          	movff	fsr2l,?_mem_set
  5297  001782  CFDA F373          	movff	fsr2h,?_mem_set+1
  5298  001786  ECD3  F014         	call	_mem_set	;wreg free
  5299                           ;pff.c: 291: si = i = 0; ni = 8;
  5300  00178A  6AF3               	clrf	prodl,c
  5301  00178C  6AF4               	clrf	prodh,c
  5302  00178E  0E08               	movlw	8
  5303  001790  6F6A               	movwf	(??_create_name+1)& (0+255),b
  5304                           ;pff.c: 292: p = *path;
  5305  001792  C367  FFE9         	movff	?_create_name+2,fsr0l
  5306  001796  C368  FFEA         	movff	?_create_name+3,fsr0h
  5307  00179A  CFEE F36B          	movff	postinc0,??_create_name+2
  5308  00179E  CFED F36C          	movff	postdec0,??_create_name+3
  5309                           ;pff.c: 293: for (;;) {
  5310  0017A2                     l213:
  5311                           ; BSR set to: 3
  5312  0017A2  50F4               	movf	prodh,w,c
  5313  0017A4  256B               	addwf	(??_create_name+2)& (0+255),w,b
  5314  0017A6  6F6D               	movwf	(??_create_name+4)& (0+255),b
  5315  0017A8  6AE8               	clrf	wreg,c
  5316  0017AA  BEF4               	btfsc	prodh,7,c
  5317  0017AC  68E8               	setf	wreg,c
  5318  0017AE  EC26  F00B         	call	PL16
  5319  0017B2  64EA               	cpfsgt	fsr0h,c
  5320  0017B4  D003               	bra	u10587
  5321  0017B6  6EEA               	movwf	fsr0h,c
  5322  0017B8  50EF               	movf	indf0,w,c
  5323  0017BA  D003               	bra	u10580
  5324  0017BC                     u10587:
  5325  0017BC  6EF7               	movwf	tblptrh,c
  5326  0017BE  0008               	tblrd		*
  5327  0017C0  50F5               	movf	tablat,w,c
  5328  0017C2                     u10580:
  5329  0017C2  6EE1               	movwf	fsr1l,c
  5330                           ;pff.c: 294: c = p[si++];
  5331  0017C4  2AF4               	incf	prodh,f,c
  5332                           ;pff.c: 295: if (c <= ' ' || c == '/') break;
  5333  0017C6  0E20               	movlw	32
  5334  0017C8  64E1               	cpfsgt	fsr1l,c
  5335  0017CA  D068               	goto	l214
  5336  0017CC  50E1               	movf	fsr1l,w,c
  5337  0017CE  0A2F               	xorlw	47
  5338                           ; BSR set to: 3
  5339  0017D0  E065               	bz	l214
  5340                           ; BSR set to: 3
  5341                           ;pff.c: 296: if (c == '.' || i >= ni) {
  5342  0017D2  50E1               	movf	fsr1l,w,c
  5343  0017D4  0A2E               	xorlw	46
  5344  0017D6  E003               	bz	l600000449
  5345  0017D8  516A               	movf	(??_create_name+1)& (0+255),w,b
  5346  0017DA  5CF3               	subwf	prodl,w,c
  5347  0017DC  E30B               	bnc	l217
  5348  0017DE                     l600000449:
  5349                           ; BSR set to: 3
  5350                           ;pff.c: 297: if (ni != 8 || c != '.') break;
  5351  0017DE  516A               	movf	(??_create_name+1)& (0+255),w,b
  5352  0017E0  0A08               	xorlw	8
  5353  0017E2  E15C               	bnz	l214
  5354  0017E4  50E1               	movf	fsr1l,w,c
  5355  0017E6  0A2E               	xorlw	46
  5356  0017E8  E159               	bnz	l214
  5357                           ; BSR set to: 3
  5358                           ; BSR set to: 3
  5359                           ;pff.c: 298: i = 8; ni = 11;
  5360  0017EA  0E08               	movlw	8
  5361  0017EC  6EF3               	movwf	prodl,c
  5362  0017EE  0E0B               	movlw	11
  5363  0017F0  6F6A               	movwf	(??_create_name+1)& (0+255),b
  5364                           ;pff.c: 299: continue;
  5365  0017F2  D7D7               	goto	l213
  5366  0017F4                     l217:
  5367                           ; BSR set to: 3
  5368                           ;pff.c: 300: }
  5369                           ;pff.c: 305: if ((((BYTE)(c) >= 0x81 && (BYTE)(c
      +                          ) <= 0x9F) || ((BYTE)(c) >= 0xE0 && (BYTE)(c) <=
      +                           0xFC)) && i >= ni - 1) {
  5370  0017F4  0E80               	movlw	128
  5371  0017F6  64E1               	cpfsgt	fsr1l,c
  5372  0017F8  D003               	goto	l600000452
  5373  0017FA  0E9F               	movlw	159
  5374  0017FC  64E1               	cpfsgt	fsr1l,c
  5375  0017FE  D006               	goto	l600000451
  5376  001800                     l600000452:
  5377                           ; BSR set to: 3
  5378  001800  0EDF               	movlw	223
  5379  001802  64E1               	cpfsgt	fsr1l,c
  5380  001804  D03A               	goto	l219
  5381  001806  0EFD               	movlw	253
  5382  001808  60E1               	cpfslt	fsr1l,c
  5383  00180A  D037               	goto	l219
  5384  00180C                     l600000451:
  5385                           ; BSR set to: 3
  5386  00180C  0EFF               	movlw	255
  5387  00180E  256A               	addwf	(??_create_name+1)& (0+255),w,b
  5388  001810  6F6D               	movwf	(??_create_name+4)& (0+255),b
  5389  001812  6B6E               	clrf	(??_create_name+5)& (0+255),b
  5390  001814  0EFF               	movlw	255
  5391  001816  236E               	addwfc	(??_create_name+5)& (0+255),f,b
  5392  001818  CFF3 F36F          	movff	prodl,??_create_name+6
  5393  00181C  6B70               	clrf	(??_create_name+7)& (0+255),b
  5394  00181E  5170               	movf	(??_create_name+7)& (0+255),w,b
  5395  001820  0A80               	xorlw	128
  5396  001822  6F71               	movwf	(??_create_name+8)& (0+255),b
  5397  001824  516D               	movf	(??_create_name+4)& (0+255),w,b
  5398  001826  5D6F               	subwf	(??_create_name+6)& (0+255),w,b
  5399  001828  516E               	movf	(??_create_name+5)& (0+255),w,b
  5400  00182A  0A80               	xorlw	128
  5401  00182C  5971               	subwfb	(??_create_name+8)& (0+255),w,b
  5402  00182E  E325               	bnc	l219
  5403  001830  50F4               	movf	prodh,w,c
  5404  001832  256B               	addwf	(??_create_name+2)& (0+255),w,b
  5405  001834  6F6D               	movwf	(??_create_name+4)& (0+255),b
  5406  001836  6AE8               	clrf	wreg,c
  5407  001838  BEF4               	btfsc	prodh,7,c
  5408  00183A  68E8               	setf	wreg,c
  5409  00183C  EC26  F00B         	call	PL16
  5410  001840  64EA               	cpfsgt	fsr0h,c
  5411  001842  D003               	bra	u10707
  5412  001844  6EEA               	movwf	fsr0h,c
  5413  001846  50EF               	movf	indf0,w,c
  5414  001848  D003               	bra	u10700
  5415  00184A                     u10707:
  5416  00184A  6EF7               	movwf	tblptrh,c
  5417  00184C  0008               	tblrd		*
  5418  00184E  50F5               	movf	tablat,w,c
  5419  001850                     u10700:
  5420  001850  6F69               	movwf	??_create_name& (0+255),b
  5421                           ;pff.c: 306: d = p[si++];
  5422  001852  2AF4               	incf	prodh,f,c
  5423  001854  50F3               	movf	prodl,w,c
  5424  001856  24D9               	addwf	fsr2l,w,c
  5425  001858  6EE9               	movwf	fsr0l,c
  5426  00185A  0E00               	movlw	0
  5427  00185C  20DA               	addwfc	fsr2h,w,c
  5428  00185E  6EEA               	movwf	fsr0h,c
  5429  001860  CFE1 FFEF          	movff	fsr1l,indf0
  5430                           ;pff.c: 307: sfn[i++] = c;
  5431  001864  2AF3               	incf	prodl,f,c
  5432  001866  50F3               	movf	prodl,w,c
  5433  001868  24D9               	addwf	fsr2l,w,c
  5434  00186A  6EE9               	movwf	fsr0l,c
  5435  00186C  0E00               	movlw	0
  5436  00186E  20DA               	addwfc	fsr2h,w,c
  5437  001870  6EEA               	movwf	fsr0h,c
  5438  001872  C369  FFEF         	movff	??_create_name,indf0
  5439  001876                     L10:
  5440                           ;pff.c: 308: sfn[i++] = d;
  5441  001876  2AF3               	incf	prodl,f,c
  5442                           ;pff.c: 309: } else {
  5443  001878  D794               	goto	l213
  5444  00187A                     l219:
  5445                           ; BSR set to: 3
  5446                           ;pff.c: 310: if ((((c)>='a')&&((c)<='z'))) c -= 
      +                          0x20;
  5447  00187A  0E60               	movlw	96
  5448  00187C  64E1               	cpfsgt	fsr1l,c
  5449  00187E  D005               	goto	l221
  5450  001880  0E7B               	movlw	123
  5451  001882  60E1               	cpfslt	fsr1l,c
  5452  001884  D002               	goto	l221
  5453  001886  0E20               	movlw	32
  5454  001888  5EE1               	subwf	fsr1l,f,c
  5455  00188A                     l221:
  5456                           ; BSR set to: 3
  5457  00188A  50F3               	movf	prodl,w,c
  5458  00188C  24D9               	addwf	fsr2l,w,c
  5459  00188E  6EE9               	movwf	fsr0l,c
  5460  001890  0E00               	movlw	0
  5461  001892  20DA               	addwfc	fsr2h,w,c
  5462  001894  6EEA               	movwf	fsr0h,c
  5463  001896  CFE1 FFEF          	movff	fsr1l,indf0
  5464  00189A  D7ED               	goto	L10
  5465                           ;pff.c: 311: sfn[i++] = c;
  5466                           ; BSR set to: 3
  5467                           ; BSR set to: 3
  5468                           ;pff.c: 312: }
  5469                           ;pff.c: 313: }
  5470  00189C                     l214:
  5471                           ; BSR set to: 3
  5472                           ;pff.c: 314: *path = &p[si];
  5473  00189C  50F4               	movf	prodh,w,c
  5474  00189E  256B               	addwf	(??_create_name+2)& (0+255),w,b
  5475  0018A0  6F6D               	movwf	(??_create_name+4)& (0+255),b
  5476  0018A2  6AE8               	clrf	wreg,c
  5477  0018A4  BEF4               	btfsc	prodh,7,c
  5478  0018A6  68E8               	setf	wreg,c
  5479  0018A8  216C               	addwfc	(??_create_name+3)& (0+255),w,b
  5480  0018AA  6F6E               	movwf	(??_create_name+5)& (0+255),b
  5481  0018AC  C367  FFE9         	movff	?_create_name+2,fsr0l
  5482  0018B0  C368  FFEA         	movff	?_create_name+3,fsr0h
  5483  0018B4  C36D  FFEE         	movff	??_create_name+4,postinc0
  5484  0018B8  C36E  FFED         	movff	??_create_name+5,postdec0
  5485                           ;pff.c: 316: sfn[11] = (c <= ' ') ? 1 : 0;
  5486  0018BC  0E0B               	movlw	11
  5487  0018BE  24D9               	addwf	fsr2l,w,c
  5488  0018C0  6EE9               	movwf	fsr0l,c
  5489  0018C2  0E00               	movlw	0
  5490  0018C4  20DA               	addwfc	fsr2h,w,c
  5491  0018C6  6EEA               	movwf	fsr0h,c
  5492  0018C8  0E20               	movlw	32
  5493  0018CA  64E1               	cpfsgt	fsr1l,c
  5494  0018CC  D001               	goto	u10731
  5495  0018CE  D002               	goto	u10730
  5496  0018D0                     u10731:
  5497  0018D0  0E01               	movlw	1
  5498  0018D2  D001               	goto	u10736
  5499  0018D4                     u10730:
  5500  0018D4  0E00               	movlw	0
  5501  0018D6                     u10736:
  5502  0018D6  6EEF               	movwf	indf0,c
  5503                           ;pff.c: 318: return FR_OK;
  5504                           ;pff.c: 319: }
  5505                           ; BSR set to: 3
  5506  0018D8  0C00               	retlw	0
  5507  0018DA                     __end_of_create_name:
  5508                           	opt stack 0
  5509                           
  5510                           	psect	text28
  5511                           ; =============== function _create_name ends ===
      +                          =========
  5512                           ; *************** function ___llmod ************
      +                          *****
  5513                           ; Defined at:
  5514                           ;		line 5 in file "C:\Program Files\HI-TECH Soft
      +                          ware\PICC-18\PRO\9.64\sources\llmod.c"
  5515                           ; Parameters:
  5516                           ;		dividend       size:   4offs:   0	type: unsig
      +                          ned long 
  5517                           ;		divisor        size:   4offs:   4	type: unsig
      +                          ned long 
  5518                           ; Auto variables:
  5519                           ;		counter     	       	type: unsigned char 
  5520                           ; Return value:
  5521                           ;		type: unsigned long 
  5522                           ;		size: 4
  5523                           ; Registers used:
  5524                           ;		wreg, fsr2l, status,2, status,0
  5525                           ; Tracked objects:
  5526                           ;		On entry : F/3
  5527                           ;		On exit  : F/3
  5528                           ;		Unchanged: FFFFFFF0/0
  5529                           ; Data sizes:
  5530                           ;		Autos:    0
  5531                           ;		Params:   8
  5532                           ;		Temp:     0
  5533                           ;		Total:    8
  5534                           ; This function calls:
  5535                           ;		Nothing
  5536                           ; This function is called by:
  5537                           ;		_pf_read
  5538                           ; This function uses a non-reentrant model
  5539                           ; 
  5540  000000                     
  5541  002700                     ___llmod:
  5542                           	opt stack 25
  5543                           ; BSR set to: 3
  5544  002700  5147               	movf	(?___llmod+7)& (0+255),w,b
  5545  002702  1144               	iorwf	(?___llmod+4)& (0+255),w,b
  5546  002704  1145               	iorwf	(?___llmod+5)& (0+255),w,b
  5547  002706  1146               	iorwf	(?___llmod+6)& (0+255),w,b
  5548  002708  E023               	bz	l1297
  5549  00270A  0E01               	movlw	1
  5550  00270C  6ED9               	movwf	fsr2l,c
  5551  00270E                     l1298:
  5552                           ; BSR set to: 3
  5553  00270E  BF47               	btfsc	(?___llmod+7)& (0+255),7,b
  5554  002710  D007               	goto	l1303
  5555                           ; BSR set to: 3
  5556  002712  90D8               	bcf	status,0,c
  5557  002714  3744               	rlcf	(?___llmod+4)& (0+255),f,b
  5558  002716  3745               	rlcf	(?___llmod+5)& (0+255),f,b
  5559  002718  3746               	rlcf	(?___llmod+6)& (0+255),f,b
  5560  00271A  3747               	rlcf	(?___llmod+7)& (0+255),f,b
  5561  00271C  2AD9               	incf	fsr2l,f,c
  5562  00271E  D7F7               	goto	l1298
  5563                           ; BSR set to: 3
  5564  002720                     l1303:
  5565                           ; BSR set to: 3
  5566  002720  5144               	movf	(?___llmod+4)& (0+255),w,b
  5567  002722  5D40               	subwf	?___llmod& (0+255),w,b
  5568  002724  5145               	movf	(?___llmod+5)& (0+255),w,b
  5569  002726  5941               	subwfb	(?___llmod+1)& (0+255),w,b
  5570  002728  5146               	movf	(?___llmod+6)& (0+255),w,b
  5571  00272A  5942               	subwfb	(?___llmod+2)& (0+255),w,b
  5572  00272C  5147               	movf	(?___llmod+7)& (0+255),w,b
  5573  00272E  5943               	subwfb	(?___llmod+3)& (0+255),w,b
  5574  002730  E308               	bnc	l1304
  5575  002732  5144               	movf	(?___llmod+4)& (0+255),w,b
  5576  002734  5F40               	subwf	?___llmod& (0+255),f,b
  5577  002736  5145               	movf	(?___llmod+5)& (0+255),w,b
  5578  002738  5B41               	subwfb	(?___llmod+1)& (0+255),f,b
  5579  00273A  5146               	movf	(?___llmod+6)& (0+255),w,b
  5580  00273C  5B42               	subwfb	(?___llmod+2)& (0+255),f,b
  5581  00273E  5147               	movf	(?___llmod+7)& (0+255),w,b
  5582  002740  5B43               	subwfb	(?___llmod+3)& (0+255),f,b
  5583  002742                     l1304:
  5584                           ; BSR set to: 3
  5585  002742  90D8               	bcf	status,0,c
  5586  002744  3347               	rrcf	(?___llmod+7)& (0+255),f,b
  5587  002746  3346               	rrcf	(?___llmod+6)& (0+255),f,b
  5588  002748  3345               	rrcf	(?___llmod+5)& (0+255),f,b
  5589  00274A  3344               	rrcf	(?___llmod+4)& (0+255),f,b
  5590  00274C  2ED9               	decfsz	fsr2l,f,c
  5591  00274E  D7E8               	goto	l1303
  5592                           ; BSR set to: 3
  5593  002750                     l1297:
  5594                           ; BSR set to: 3
  5595                           ; BSR set to: 3
  5596  002750  0012               	return	
  5597  002752                     __end_of___llmod:
  5598                           	opt stack 0
  5599                           
  5600                           	psect	text29
  5601                           ; =============== function ___llmod ends =======
      +                          =====
  5602                           ; *************** function ___lldiv ************
      +                          *****
  5603                           ; Defined at:
  5604                           ;		line 5 in file "C:\Program Files\HI-TECH Soft
      +                          ware\PICC-18\PRO\9.64\sources\lldiv.c"
  5605                           ; Parameters:
  5606                           ;		dividend       size:   4offs:   0	type: unsig
      +                          ned long 
  5607                           ;		divisor        size:   4offs:   4	type: unsig
      +                          ned long 
  5608                           ; Auto variables:
  5609                           ;		counter     	       	type: unsigned char 
  5610                           ;		quotient    	       	type: unsigned long 
  5611                           ; Return value:
  5612                           ;		type: unsigned long 
  5613                           ;		size: 4
  5614                           ; Registers used:
  5615                           ;		wreg, fsr2l, status,2, status,0
  5616                           ; Tracked objects:
  5617                           ;		On entry : F/3
  5618                           ;		On exit  : F/3
  5619                           ;		Unchanged: FFFFFFF0/0
  5620                           ; Data sizes:
  5621                           ;		Autos:    4
  5622                           ;		Params:   8
  5623                           ;		Temp:     0
  5624                           ;		Total:   12
  5625                           ; This function calls:
  5626                           ;		Nothing
  5627                           ; This function is called by:
  5628                           ;		_pf_mount
  5629                           ;		_pf_lseek
  5630                           ;		_set_sampling_rate
  5631                           ; This function uses a non-reentrant model
  5632                           ; 
  5633  000000                     
  5634  00256C                     ___lldiv:
  5635                           	opt stack 25
  5636                           ; BSR set to: 3
  5637  00256C  6B51               	clrf	??___lldiv& (0+255),b
  5638  00256E  6B52               	clrf	(??___lldiv+1)& (0+255),b
  5639  002570  6B53               	clrf	(??___lldiv+2)& (0+255),b
  5640  002572  6B54               	clrf	(??___lldiv+3)& (0+255),b
  5641  002574  5150               	movf	(?___lldiv+7)& (0+255),w,b
  5642  002576  114D               	iorwf	(?___lldiv+4)& (0+255),w,b
  5643  002578  114E               	iorwf	(?___lldiv+5)& (0+255),w,b
  5644  00257A  114F               	iorwf	(?___lldiv+6)& (0+255),w,b
  5645  00257C  E029               	bz	l1288
  5646  00257E  0E01               	movlw	1
  5647  002580  6ED9               	movwf	fsr2l,c
  5648  002582                     l1289:
  5649                           ; BSR set to: 3
  5650  002582  90D8               	bcf	status,0,c
  5651                           ; BSR set to: 3
  5652  002584  BF50               	btfsc	(?___lldiv+7)& (0+255),7,b
  5653  002586  D007               	goto	L11
  5654  002588  374D               	rlcf	(?___lldiv+4)& (0+255),f,b
  5655  00258A  374E               	rlcf	(?___lldiv+5)& (0+255),f,b
  5656  00258C  374F               	rlcf	(?___lldiv+6)& (0+255),f,b
  5657  00258E  3750               	rlcf	(?___lldiv+7)& (0+255),f,b
  5658  002590  2AD9               	incf	fsr2l,f,c
  5659  002592  D7F7               	goto	l1289
  5660                           ; BSR set to: 3
  5661  002594                     l1294:
  5662                           ; BSR set to: 3
  5663  002594  90D8               	bcf	status,0,c
  5664  002596                     L11:
  5665  002596  3751               	rlcf	??___lldiv& (0+255),f,b
  5666  002598  3752               	rlcf	(??___lldiv+1)& (0+255),f,b
  5667  00259A  3753               	rlcf	(??___lldiv+2)& (0+255),f,b
  5668  00259C  3754               	rlcf	(??___lldiv+3)& (0+255),f,b
  5669  00259E  514D               	movf	(?___lldiv+4)& (0+255),w,b
  5670  0025A0  5D49               	subwf	?___lldiv& (0+255),w,b
  5671  0025A2  514E               	movf	(?___lldiv+5)& (0+255),w,b
  5672  0025A4  594A               	subwfb	(?___lldiv+1)& (0+255),w,b
  5673  0025A6  514F               	movf	(?___lldiv+6)& (0+255),w,b
  5674  0025A8  594B               	subwfb	(?___lldiv+2)& (0+255),w,b
  5675  0025AA  5150               	movf	(?___lldiv+7)& (0+255),w,b
  5676  0025AC  594C               	subwfb	(?___lldiv+3)& (0+255),w,b
  5677  0025AE  E309               	bnc	l1295
  5678  0025B0  514D               	movf	(?___lldiv+4)& (0+255),w,b
  5679  0025B2  5F49               	subwf	?___lldiv& (0+255),f,b
  5680  0025B4  514E               	movf	(?___lldiv+5)& (0+255),w,b
  5681  0025B6  5B4A               	subwfb	(?___lldiv+1)& (0+255),f,b
  5682  0025B8  514F               	movf	(?___lldiv+6)& (0+255),w,b
  5683  0025BA  5B4B               	subwfb	(?___lldiv+2)& (0+255),f,b
  5684  0025BC  5150               	movf	(?___lldiv+7)& (0+255),w,b
  5685  0025BE  5B4C               	subwfb	(?___lldiv+3)& (0+255),f,b
  5686  0025C0  8151               	bsf	??___lldiv& (0+255),0,b
  5687  0025C2                     l1295:
  5688                           ; BSR set to: 3
  5689  0025C2  90D8               	bcf	status,0,c
  5690  0025C4  3350               	rrcf	(?___lldiv+7)& (0+255),f,b
  5691  0025C6  334F               	rrcf	(?___lldiv+6)& (0+255),f,b
  5692  0025C8  334E               	rrcf	(?___lldiv+5)& (0+255),f,b
  5693  0025CA  334D               	rrcf	(?___lldiv+4)& (0+255),f,b
  5694  0025CC  2ED9               	decfsz	fsr2l,f,c
  5695  0025CE  D7E2               	goto	l1294
  5696                           ; BSR set to: 3
  5697  0025D0                     l1288:
  5698                           ; BSR set to: 3
  5699  0025D0  C351  F349         	movff	??___lldiv,?___lldiv
  5700  0025D4  C352  F34A         	movff	??___lldiv+1,?___lldiv+1
  5701  0025D8  C353  F34B         	movff	??___lldiv+2,?___lldiv+2
  5702  0025DC  C354  F34C         	movff	??___lldiv+3,?___lldiv+3
  5703                           ; BSR set to: 3
  5704  0025E0  0012               	return	
  5705  0025E2                     __end_of___lldiv:
  5706                           	opt stack 0
  5707                           
  5708                           	psect	text30
  5709                           ; =============== function ___lldiv ends =======
      +                          =====
  5710                           ; *************** function _dir_rewind *********
      +                          ********
  5711                           ; Defined at:
  5712                           ;		line 134 in file "D:\ElabPh\SDMMC\PIC WAV Pla
      +                          yer\PIC18 SD WAV Audio Player\src_no_lcd\pff.c"
  5713                           ; Parameters:
  5714                           ;		dj             size:   2offs:   0	type: PTR s
      +                          truct _DIR_; Largest target is 17
  5715                           ;		 -> pf_open@dj(16), Dir(16), 
  5716                           ; Auto variables:
  5717                           ;		fs          	       	type: PTR struct _FATFS_
      +                          ; Largest target is 255
  5718                           ;		 -> RAM(255), Fs(44), 
  5719                           ;		clst        	       	type: unsigned long 
  5720                           ; Return value:
  5721                           ;		type: enum E48
  5722                           ;		size: 1
  5723                           ; Registers used:
  5724                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , cstack
  5725                           ; Tracked objects:
  5726                           ;		On entry : F/3
  5727                           ;		On exit  : F/3
  5728                           ;		Unchanged: FFFFFFF0/0
  5729                           ; Data sizes:
  5730                           ;		Autos:    8
  5731                           ;		Params:   2
  5732                           ;		Temp:     4
  5733                           ;		Total:   14
  5734                           ; This function calls:
  5735                           ;		_clust2sect
  5736                           ; This function is called by:
  5737                           ;		_dir_find
  5738                           ;		_follow_path
  5739                           ;		_pf_opendir
  5740                           ;		_pf_readdir
  5741                           ; This function uses a non-reentrant model
  5742                           ; 
  5743  000000                     
  5744                           ;pff.c: 130: static
  5745                           ;pff.c: 131: FRESULT dir_rewind (
  5746                           ;pff.c: 132: DIR *dj
  5747                           ;pff.c: 133: )
  5748                           ;pff.c: 134: {
  5749  001D08                     _dir_rewind:
  5750                           	opt stack 24
  5751                           ; BSR set to: 3
  5752                           ;pff.c: 135: DWORD clst;
  5753                           ;pff.c: 136: FATFS *fs = FatFs;
  5754  001D08  C009 FFD9          	movff	9,fsr2l
  5755                           ;pff.c: 139: dj->index = 0;
  5756  001D0C  C36C  FFE9         	movff	?_dir_rewind,fsr0l
  5757  001D10  C36D  FFEA         	movff	?_dir_rewind+1,fsr0h
  5758  001D14  6AEE               	clrf	postinc0,c
  5759  001D16  6AED               	clrf	postdec0,c
  5760                           ;pff.c: 140: clst = dj->sclust;
  5761  001D18  0E04               	movlw	4
  5762  001D1A  256C               	addwf	?_dir_rewind& (0+255),w,b
  5763  001D1C  6EE9               	movwf	fsr0l,c
  5764  001D1E  0E00               	movlw	0
  5765  001D20  216D               	addwfc	(?_dir_rewind+1)& (0+255),w,b
  5766  001D22  6EEA               	movwf	fsr0h,c
  5767  001D24  CFEE F372          	movff	postinc0,??_dir_rewind+4
  5768  001D28  CFEE F373          	movff	postinc0,??_dir_rewind+5
  5769  001D2C  CFEE F374          	movff	postinc0,??_dir_rewind+6
  5770  001D30  CFEE F375          	movff	postinc0,??_dir_rewind+7
  5771                           ;pff.c: 141: if (clst == 1 || clst >= fs->max_cl
      +                          ust)
  5772  001D34  0572               	decf	(??_dir_rewind+4)& (0+255),w,b
  5773  001D36  1173               	iorwf	(??_dir_rewind+5)& (0+255),w,b
  5774  001D38  1174               	iorwf	(??_dir_rewind+6)& (0+255),w,b
  5775  001D3A  1175               	iorwf	(??_dir_rewind+7)& (0+255),w,b
  5776  001D3C  E015               	bz	l600000438
  5777  001D3E  50D9               	movf	fsr2l,w,c
  5778  001D40  0F08               	addlw	8
  5779  001D42  6EE9               	movwf	fsr0l,c
  5780  001D44  6AEA               	clrf	fsr0h,c
  5781  001D46  CFEE F376          	movff	postinc0,??_dir_rewind+8
  5782  001D4A  CFEE F377          	movff	postinc0,??_dir_rewind+9
  5783  001D4E  CFEE F378          	movff	postinc0,??_dir_rewind+10
  5784  001D52  CFEE F379          	movff	postinc0,??_dir_rewind+11
  5785  001D56  5176               	movf	(??_dir_rewind+8)& (0+255),w,b
  5786  001D58  5D72               	subwf	(??_dir_rewind+4)& (0+255),w,b
  5787  001D5A  5177               	movf	(??_dir_rewind+9)& (0+255),w,b
  5788  001D5C  5973               	subwfb	(??_dir_rewind+5)& (0+255),w,b
  5789  001D5E  5178               	movf	(??_dir_rewind+10)& (0+255),w,b
  5790  001D60  5974               	subwfb	(??_dir_rewind+6)& (0+255),w,b
  5791  001D62  5179               	movf	(??_dir_rewind+11)& (0+255),w,b
  5792  001D64  5975               	subwfb	(??_dir_rewind+7)& (0+255),w,b
  5793  001D66  E302               	bnc	l184
  5794  001D68                     l600000438:
  5795                           ; BSR set to: 3
  5796                           ;pff.c: 142: return FR_DISK_ERR;
  5797  001D68  0E01               	movlw	1
  5798  001D6A  D057               	goto	l183
  5799  001D6C                     l184:
  5800                           ; BSR set to: 3
  5801                           ;pff.c: 144: if (!clst && fs->fs_type == 3)
  5802  001D6C  5175               	movf	(??_dir_rewind+7)& (0+255),w,b
  5803  001D6E  1172               	iorwf	(??_dir_rewind+4)& (0+255),w,b
  5804  001D70  1173               	iorwf	(??_dir_rewind+5)& (0+255),w,b
  5805  001D72  1174               	iorwf	(??_dir_rewind+6)& (0+255),w,b
  5806  001D74  E112               	bnz	l185
  5807  001D76  50D9               	movf	fsr2l,w,c
  5808  001D78  6EE9               	movwf	fsr0l,c
  5809  001D7A  6AEA               	clrf	fsr0h,c
  5810  001D7C  0E03               	movlw	3
  5811  001D7E  62EF               	cpfseq	indf0,c
  5812  001D80  D00C               	goto	l185
  5813                           ;pff.c: 145: clst = fs->dirbase;
  5814  001D82  50D9               	movf	fsr2l,w,c
  5815  001D84  0F10               	addlw	16
  5816  001D86  6EE9               	movwf	fsr0l,c
  5817  001D88  6AEA               	clrf	fsr0h,c
  5818  001D8A  CFEE F372          	movff	postinc0,??_dir_rewind+4
  5819  001D8E  CFEE F373          	movff	postinc0,??_dir_rewind+5
  5820  001D92  CFEE F374          	movff	postinc0,??_dir_rewind+6
  5821  001D96  CFEE F375          	movff	postinc0,??_dir_rewind+7
  5822  001D9A                     l185:
  5823                           ; BSR set to: 3
  5824                           ;pff.c: 147: dj->clust = clst;
  5825  001D9A  0E08               	movlw	8
  5826  001D9C  256C               	addwf	?_dir_rewind& (0+255),w,b
  5827  001D9E  6EE9               	movwf	fsr0l,c
  5828  001DA0  0E00               	movlw	0
  5829  001DA2  216D               	addwfc	(?_dir_rewind+1)& (0+255),w,b
  5830  001DA4  6EEA               	movwf	fsr0h,c
  5831  001DA6  C372  FFEE         	movff	??_dir_rewind+4,postinc0
  5832  001DAA  C373  FFEE         	movff	??_dir_rewind+5,postinc0
  5833  001DAE  C374  FFEE         	movff	??_dir_rewind+6,postinc0
  5834  001DB2  C375  FFEE         	movff	??_dir_rewind+7,postinc0
  5835                           ;pff.c: 148: dj->sect = clst ? clust2sect(clst) 
      +                          : fs->dirbase;
  5836  001DB6  50D9               	movf	fsr2l,w,c
  5837  001DB8  0F10               	addlw	16
  5838  001DBA  6EE9               	movwf	fsr0l,c
  5839  001DBC  6AEA               	clrf	fsr0h,c
  5840  001DBE  CFEE F36E          	movff	postinc0,??_dir_rewind
  5841  001DC2  CFEE F36F          	movff	postinc0,??_dir_rewind+1
  5842  001DC6  CFEE F370          	movff	postinc0,??_dir_rewind+2
  5843  001DCA  CFEE F371          	movff	postinc0,??_dir_rewind+3
  5844  001DCE  5175               	movf	(??_dir_rewind+7)& (0+255),w,b
  5845  001DD0  1172               	iorwf	(??_dir_rewind+4)& (0+255),w,b
  5846  001DD2  1173               	iorwf	(??_dir_rewind+5)& (0+255),w,b
  5847  001DD4  1174               	iorwf	(??_dir_rewind+6)& (0+255),w,b
  5848  001DD6  E012               	bz	l500000439
  5849  001DD8  C372  F37D         	movff	??_dir_rewind+4,?_clust2sect
  5850  001DDC  C373  F37E         	movff	??_dir_rewind+5,?_clust2sect+1
  5851  001DE0  C374  F37F         	movff	??_dir_rewind+6,?_clust2sect+2
  5852  001DE4  C375  F380         	movff	??_dir_rewind+7,?_clust2sect+3
  5853  001DE8  EC20  F012         	call	_clust2sect	;wreg free
  5854  001DEC  C37D  F36E         	movff	?_clust2sect,??_dir_rewind
  5855  001DF0  C37E  F36F         	movff	?_clust2sect+1,??_dir_rewind+1
  5856  001DF4  C37F  F370         	movff	?_clust2sect+2,??_dir_rewind+2
  5857  001DF8  C380  F371         	movff	?_clust2sect+3,??_dir_rewind+3
  5858  001DFC                     l500000439:
  5859                           ; BSR set to: 3
  5860  001DFC  0E0C               	movlw	12
  5861  001DFE  256C               	addwf	?_dir_rewind& (0+255),w,b
  5862  001E00  6EE9               	movwf	fsr0l,c
  5863  001E02  0E00               	movlw	0
  5864  001E04  216D               	addwfc	(?_dir_rewind+1)& (0+255),w,b
  5865  001E06  6EEA               	movwf	fsr0h,c
  5866  001E08  C36E  FFEE         	movff	??_dir_rewind,postinc0
  5867  001E0C  C36F  FFEE         	movff	??_dir_rewind+1,postinc0
  5868  001E10  C370  FFEE         	movff	??_dir_rewind+2,postinc0
  5869  001E14  C371  FFEE         	movff	??_dir_rewind+3,postinc0
  5870                           ;pff.c: 150: return FR_OK;
  5871  001E18  0E00               	movlw	0
  5872                           ;pff.c: 151: }
  5873  001E1A                     l183:
  5874                           ; BSR set to: 3
  5875  001E1A  0012               	return	
  5876  001E1C                     __end_of_dir_rewind:
  5877                           	opt stack 0
  5878                           
  5879                           	psect	text31
  5880                           ; =============== function _dir_rewind ends ====
      +                          ========
  5881                           ; *************** function _dir_next ***********
      +                          ******
  5882                           ; Defined at:
  5883                           ;		line 164 in file "D:\ElabPh\SDMMC\PIC WAV Pla
      +                          yer\PIC18 SD WAV Audio Player\src_no_lcd\pff.c"
  5884                           ; Parameters:
  5885                           ;		dj             size:   2offs:   0	type: PTR s
      +                          truct _DIR_; Largest target is 17
  5886                           ;		 -> pf_open@dj(16), Dir(16), 
  5887                           ; Auto variables:
  5888                           ;		fs          	       	type: PTR struct _FATFS_
      +                          ; Largest target is 255
  5889                           ;		 -> RAM(255), Fs(44), 
  5890                           ;		i           	       	type: unsigned short 
  5891                           ;		clst        	       	type: unsigned long 
  5892                           ; Return value:
  5893                           ;		type: enum E48
  5894                           ;		size: 1
  5895                           ; Registers used:
  5896                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, prodl, prodh, cstack
  5897                           ; Tracked objects:
  5898                           ;		On entry : F/3
  5899                           ;		On exit  : F/3
  5900                           ;		Unchanged: FFFFFFF0/0
  5901                           ; Data sizes:
  5902                           ;		Autos:    7
  5903                           ;		Params:   2
  5904                           ;		Temp:     8
  5905                           ;		Total:   17
  5906                           ; This function calls:
  5907                           ;		_get_fat
  5908                           ;		_clust2sect
  5909                           ; This function is called by:
  5910                           ;		_dir_find
  5911                           ;		_dir_read
  5912                           ;		_pf_readdir
  5913                           ; This function uses a non-reentrant model
  5914                           ; 
  5915  000000                     
  5916                           ;pff.c: 160: static
  5917                           ;pff.c: 161: FRESULT dir_next (
  5918                           ;pff.c: 162: DIR *dj
  5919                           ;pff.c: 163: )
  5920                           ;pff.c: 164: {
  5921  0018DA                     _dir_next:
  5922                           	opt stack 24
  5923                           ; BSR set to: 3
  5924                           ;pff.c: 165: DWORD clst;
  5925                           ;pff.c: 166: WORD i;
  5926                           ;pff.c: 167: FATFS *fs = FatFs;
  5927  0018DA  C009 FFD9          	movff	9,fsr2l
  5928                           ;pff.c: 170: i = dj->index + 1;
  5929  0018DE  C36C  FFE9         	movff	?_dir_next,fsr0l
  5930  0018E2  C36D  FFEA         	movff	?_dir_next+1,fsr0h
  5931  0018E6  CFEE F375          	movff	postinc0,??_dir_next+7
  5932  0018EA  CFED F376          	movff	postdec0,??_dir_next+8
  5933  0018EE  2975               	incf	(??_dir_next+7)& (0+255),w,b
  5934  0018F0  6F6F               	movwf	(??_dir_next+1)& (0+255),b
  5935  0018F2  0E00               	movlw	0
  5936  0018F4  2176               	addwfc	(??_dir_next+8)& (0+255),w,b
  5937  0018F6  6F70               	movwf	(??_dir_next+2)& (0+255),b
  5938                           ;pff.c: 171: if (!i || !dj->sect)
  5939  0018F8  5170               	movf	(??_dir_next+2)& (0+255),w,b
  5940  0018FA  116F               	iorwf	(??_dir_next+1)& (0+255),w,b
  5941  0018FC  E07E               	bz	u9450
  5942  0018FE  0E0C               	movlw	12
  5943  001900  EC14  F00B         	call	PL17
  5944  001904  E07A               	bz	u9450
  5945                           ; BSR set to: 3
  5946                           ;pff.c: 172: return FR_NO_FILE;
  5947                           ; BSR set to: 3
  5948                           ;pff.c: 174: if (!(i & (16-1))) {
  5949  001906  516F               	movf	(??_dir_next+1)& (0+255),w,b
  5950  001908  0B0F               	andlw	15
  5951  00190A  E001 D09E          	bnz	l188
  5952                           ;pff.c: 175: dj->sect++;
  5953  00190E  0E0C               	movlw	12
  5954  001910  256C               	addwf	?_dir_next& (0+255),w,b
  5955  001912  6EE9               	movwf	fsr0l,c
  5956  001914  0E00               	movlw	0
  5957  001916  216D               	addwfc	(?_dir_next+1)& (0+255),w,b
  5958  001918  6EEA               	movwf	fsr0h,c
  5959  00191A  2AEE               	incf	postinc0,f,c
  5960  00191C  0E00               	movlw	0
  5961  00191E  22EE               	addwfc	postinc0,f,c
  5962  001920  22EE               	addwfc	postinc0,f,c
  5963  001922  22ED               	addwfc	postdec0,f,c
  5964                           ;pff.c: 177: if (dj->clust == 0) {
  5965  001924  0E08               	movlw	8
  5966  001926  EC14  F00B         	call	PL17
  5967  00192A  E10F               	bnz	l189
  5968                           ;pff.c: 178: if (i >= fs->n_rootdir)
  5969  00192C  50D9               	movf	fsr2l,w,c
  5970  00192E  0F04               	addlw	4
  5971  001930  6EE9               	movwf	fsr0l,c
  5972  001932  6AEA               	clrf	fsr0h,c
  5973  001934  CFEE F375          	movff	postinc0,??_dir_next+7
  5974  001938  CFED F376          	movff	postdec0,??_dir_next+8
  5975  00193C  5175               	movf	(??_dir_next+7)& (0+255),w,b
  5976  00193E  5D6F               	subwf	(??_dir_next+1)& (0+255),w,b
  5977  001940  5176               	movf	(??_dir_next+8)& (0+255),w,b
  5978  001942  5970               	subwfb	(??_dir_next+2)& (0+255),w,b
  5979  001944  E201 D081          	bnc	l188
  5980  001948  D058               	goto	u9450
  5981                           ;pff.c: 179: return FR_NO_FILE;
  5982                           ; BSR set to: 3
  5983                           ;pff.c: 180: }
  5984  00194A                     l189:
  5985                           ; BSR set to: 3
  5986                           ;dir_next@fs stored from fsr2l
  5987  00194A  CFD9 F36E          	movff	fsr2l,??_dir_next
  5988                           ;pff.c: 181: else {
  5989                           ;pff.c: 182: if (((i / 16) & (fs->csize-1)) == 0
      +                          ) {
  5990  00194E  C36F  F375         	movff	??_dir_next+1,??_dir_next+7
  5991  001952  C370  F376         	movff	??_dir_next+2,??_dir_next+8
  5992  001956  0E04               	movlw	4
  5993  001958  6F77               	movwf	(??_dir_next+9)& (0+255),b
  5994  00195A                     u9425:
  5995  00195A  90D8               	bcf	status,0,c
  5996  00195C  3376               	rrcf	(??_dir_next+8)& (0+255),f,b
  5997  00195E  3375               	rrcf	(??_dir_next+7)& (0+255),f,b
  5998  001960  2F77               	decfsz	(??_dir_next+9)& (0+255),f,b
  5999  001962  D7FB               	goto	u9425
  6000  001964  28D9               	incf	fsr2l,w,c
  6001  001966  6EE9               	movwf	fsr0l,c
  6002  001968  6AEA               	clrf	fsr0h,c
  6003  00196A  50EF               	movf	indf0,w,c
  6004  00196C  6F78               	movwf	(??_dir_next+10)& (0+255),b
  6005  00196E  0FFF               	addlw	255
  6006  001970  6F79               	movwf	(??_dir_next+11)& (0+255),b
  6007  001972  6B7A               	clrf	(??_dir_next+12)& (0+255),b
  6008  001974  0EFF               	movlw	255
  6009  001976  237A               	addwfc	(??_dir_next+12)& (0+255),f,b
  6010  001978  5175               	movf	(??_dir_next+7)& (0+255),w,b
  6011  00197A  1579               	andwf	(??_dir_next+11)& (0+255),w,b
  6012  00197C  6F7B               	movwf	(??_dir_next+13)& (0+255),b
  6013  00197E  5176               	movf	(??_dir_next+8)& (0+255),w,b
  6014  001980  157A               	andwf	(??_dir_next+12)& (0+255),w,b
  6015  001982  6F7C               	movwf	(??_dir_next+14)& (0+255),b
  6016  001984  517C               	movf	(??_dir_next+14)& (0+255),w,b
  6017  001986  117B               	iorwf	(??_dir_next+13)& (0+255),w,b
  6018  001988  E160               	bnz	l188
  6019                           ;pff.c: 183: clst = get_fat(dj->clust);
  6020  00198A  0E08               	movlw	8
  6021  00198C  256C               	addwf	?_dir_next& (0+255),w,b
  6022  00198E  6EE9               	movwf	fsr0l,c
  6023  001990  0E00               	movlw	0
  6024  001992  216D               	addwfc	(?_dir_next+1)& (0+255),w,b
  6025  001994  6EEA               	movwf	fsr0h,c
  6026  001996  CFEE F37D          	movff	postinc0,?_get_fat
  6027  00199A  CFEE F37E          	movff	postinc0,?_get_fat+1
  6028  00199E  CFEE F37F          	movff	postinc0,?_get_fat+2
  6029  0019A2  CFEE F380          	movff	postinc0,?_get_fat+3
  6030  0019A6  EC14  F007         	call	_get_fat	;wreg free
  6031  0019AA  C37D  F371         	movff	?_get_fat,??_dir_next+3
  6032  0019AE  C37E  F372         	movff	?_get_fat+1,??_dir_next+4
  6033  0019B2  C37F  F373         	movff	?_get_fat+2,??_dir_next+5
  6034  0019B6  C380  F374         	movff	?_get_fat+3,??_dir_next+6
  6035                           ;pff.c: 184: if (clst <= 1) return FR_DISK_ERR;
  6036  0019BA  0E02               	movlw	2
  6037  0019BC  5D71               	subwf	(??_dir_next+3)& (0+255),w,b
  6038  0019BE  0E00               	movlw	0
  6039  0019C0  5972               	subwfb	(??_dir_next+4)& (0+255),w,b
  6040  0019C2  0E00               	movlw	0
  6041  0019C4  5973               	subwfb	(??_dir_next+5)& (0+255),w,b
  6042  0019C6  0E00               	movlw	0
  6043  0019C8  5974               	subwfb	(??_dir_next+6)& (0+255),w,b
  6044  0019CA  E202               	bc	l193
  6045  0019CC  0E01               	movlw	1
  6046  0019CE  D046               	goto	l186
  6047  0019D0                     l193:
  6048                           ; BSR set to: 3
  6049                           ;pff.c: 185: if (clst >= fs->max_clust)
  6050  0019D0  516E               	movf	??_dir_next& (0+255),w,b
  6051  0019D2  0F08               	addlw	8
  6052  0019D4  6EE9               	movwf	fsr0l,c
  6053  0019D6  6AEA               	clrf	fsr0h,c
  6054  0019D8  CFEE F375          	movff	postinc0,??_dir_next+7
  6055  0019DC  CFEE F376          	movff	postinc0,??_dir_next+8
  6056  0019E0  CFEE F377          	movff	postinc0,??_dir_next+9
  6057  0019E4  CFEE F378          	movff	postinc0,??_dir_next+10
  6058  0019E8  5175               	movf	(??_dir_next+7)& (0+255),w,b
  6059  0019EA  5D71               	subwf	(??_dir_next+3)& (0+255),w,b
  6060  0019EC  5176               	movf	(??_dir_next+8)& (0+255),w,b
  6061  0019EE  5972               	subwfb	(??_dir_next+4)& (0+255),w,b
  6062  0019F0  5177               	movf	(??_dir_next+9)& (0+255),w,b
  6063  0019F2  5973               	subwfb	(??_dir_next+5)& (0+255),w,b
  6064  0019F4  5178               	movf	(??_dir_next+10)& (0+255),w,b
  6065  0019F6  5974               	subwfb	(??_dir_next+6)& (0+255),w,b
  6066  0019F8  E302               	bnc	l194
  6067  0019FA                     u9450:
  6068                           ;pff.c: 186: return FR_NO_FILE;
  6069  0019FA  0E03               	movlw	3
  6070  0019FC  D02F               	goto	l186
  6071  0019FE                     l194:
  6072                           ; BSR set to: 3
  6073                           ;pff.c: 187: dj->clust = clst;
  6074  0019FE  0E08               	movlw	8
  6075  001A00  256C               	addwf	?_dir_next& (0+255),w,b
  6076  001A02  6EE9               	movwf	fsr0l,c
  6077  001A04  0E00               	movlw	0
  6078  001A06  216D               	addwfc	(?_dir_next+1)& (0+255),w,b
  6079  001A08  6EEA               	movwf	fsr0h,c
  6080  001A0A  C371  FFEE         	movff	??_dir_next+3,postinc0
  6081  001A0E  C372  FFEE         	movff	??_dir_next+4,postinc0
  6082  001A12  C373  FFEE         	movff	??_dir_next+5,postinc0
  6083  001A16  C374  FFEE         	movff	??_dir_next+6,postinc0
  6084                           ;pff.c: 188: dj->sect = clust2sect(clst);
  6085  001A1A  C371  F37D         	movff	??_dir_next+3,?_clust2sect
  6086  001A1E  C372  F37E         	movff	??_dir_next+4,?_clust2sect+1
  6087  001A22  C373  F37F         	movff	??_dir_next+5,?_clust2sect+2
  6088  001A26  C374  F380         	movff	??_dir_next+6,?_clust2sect+3
  6089  001A2A  EC20  F012         	call	_clust2sect	;wreg free
  6090  001A2E  0E0C               	movlw	12
  6091  001A30  256C               	addwf	?_dir_next& (0+255),w,b
  6092  001A32  6EE9               	movwf	fsr0l,c
  6093  001A34  0E00               	movlw	0
  6094  001A36  216D               	addwfc	(?_dir_next+1)& (0+255),w,b
  6095  001A38  6EEA               	movwf	fsr0h,c
  6096  001A3A  C37D  FFEE         	movff	?_clust2sect,postinc0
  6097  001A3E  C37E  FFEE         	movff	?_clust2sect+1,postinc0
  6098  001A42  C37F  FFEE         	movff	?_clust2sect+2,postinc0
  6099  001A46  C380  FFED         	movff	?_clust2sect+3,postdec0
  6100                           ; BSR set to: 3
  6101                           ; BSR set to: 3
  6102  001A4A                     l188:
  6103                           ; BSR set to: 3
  6104                           ;pff.c: 189: }
  6105                           ;pff.c: 190: }
  6106                           ;pff.c: 191: }
  6107                           ;pff.c: 193: dj->index = i;
  6108  001A4A  C36C  FFE9         	movff	?_dir_next,fsr0l
  6109  001A4E  C36D  FFEA         	movff	?_dir_next+1,fsr0h
  6110  001A52  C36F  FFEE         	movff	??_dir_next+1,postinc0
  6111  001A56  C370  FFED         	movff	??_dir_next+2,postdec0
  6112                           ;pff.c: 195: return FR_OK;
  6113  001A5A  0E00               	movlw	0
  6114                           ;pff.c: 196: }
  6115  001A5C                     l186:
  6116                           ; BSR set to: 3
  6117  001A5C  0012               	return	
  6118  001A5E                     __end_of_dir_next:
  6119                           	opt stack 0
  6120                           
  6121                           	psect	text32
  6122                           ; =============== function _dir_next ends ======
      +                          ======
  6123                           ; *************** function _mem_cmp ************
      +                          *****
  6124                           ; Defined at:
  6125                           ;		line 51 in file "D:\ElabPh\SDMMC\PIC WAV Play
      +                          er\PIC18 SD WAV Audio Player\src_no_lcd\pff.c"
  6126                           ; Parameters:
  6127                           ;		dst            size:   2offs:   0	type: PTR c
      +                          onst void ; Largest target is 32
  6128                           ;		 -> pf_readdir@dir(32), pf_opendir@dir(32), p
      +                          f_open@dir(32), 
  6129                           ;		src            size:   2offs:   2	type: PTR c
      +                          onst void ; Largest target is 12
  6130                           ;		 -> pf_readdir@sp(12), pf_opendir@sp(12), pf_
      +                          open@sp(12), 
  6131                           ;		cnt            size:   2offs:   4	type: int 
  6132                           ; Auto variables:
  6133                           ;		d           	       	type: PTR const unsigned
      +                           char ; Largest target is 32
  6134                           ;		 -> pf_readdir@dir(32), pf_opendir@dir(32), p
      +                          f_open@dir(32), 
  6135                           ;		r           	       	type: int 
  6136                           ;		s           	       	type: PTR const unsigned
      +                           char ; Largest target is 12
  6137                           ;		 -> pf_readdir@sp(12), pf_opendir@sp(12), pf_
      +                          open@sp(12), 
  6138                           ; Return value:
  6139                           ;		type: int 
  6140                           ;		size: 2
  6141                           ; Registers used:
  6142                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2
      +                          h, status,2, status,0, prodl, prodh
  6143                           ; Tracked objects:
  6144                           ;		On entry : F/3
  6145                           ;		On exit  : F/3
  6146                           ;		Unchanged: FFFFFFF0/0
  6147                           ; Data sizes:
  6148                           ;		Autos:    0
  6149                           ;		Params:   6
  6150                           ;		Temp:     1
  6151                           ;		Total:    7
  6152                           ; This function calls:
  6153                           ;		Nothing
  6154                           ; This function is called by:
  6155                           ;		_dir_find
  6156                           ; This function uses a non-reentrant model
  6157                           ; 
  6158  000000                     
  6159                           ;pff.c: 50: static
  6160                           ;pff.c: 51: int mem_cmp (const void* dst, const 
      +                          void* src, int cnt) {
  6161  002648                     _mem_cmp:
  6162                           	opt stack 24
  6163                           ; BSR set to: 3
  6164                           ;pff.c: 52: const char *d = (const char *)dst, *
      +                          s = (const char *)src;
  6165  002648  C36C  FFE1         	movff	?_mem_cmp,fsr1l
  6166  00264C  C36D  FFE2         	movff	?_mem_cmp+1,fsr1h
  6167  002650  C36E  FFD9         	movff	?_mem_cmp+2,fsr2l
  6168  002654  C36F  FFDA         	movff	?_mem_cmp+3,fsr2h
  6169                           ;pff.c: 53: int r = 0;
  6170  002658  6AF3               	clrf	prodl,c
  6171  00265A  6AF4               	clrf	prodh,c
  6172  00265C  D017               	goto	l164
  6173  00265E                     u10740:
  6174  00265E  CFE1 FFE9          	movff	fsr1l,fsr0l
  6175  002662  CFE2 FFEA          	movff	fsr1h,fsr0h
  6176  002666  4AE1               	infsnz	fsr1l,f,c
  6177  002668  2AE2               	incf	fsr1h,f,c
  6178  00266A  50EF               	movf	indf0,w,c
  6179  00266C  6F72               	movwf	??_mem_cmp& (0+255),b
  6180  00266E  CFD9 FFE9          	movff	fsr2l,fsr0l
  6181  002672  CFDA FFEA          	movff	fsr2h,fsr0h
  6182  002676  4AD9               	infsnz	fsr2l,f,c
  6183  002678  2ADA               	incf	fsr2h,f,c
  6184  00267A  50EF               	movf	indf0,w,c
  6185  00267C  5D72               	subwf	??_mem_cmp& (0+255),w,b
  6186  00267E  6EF3               	movwf	prodl,c
  6187  002680  6AF4               	clrf	prodh,c
  6188  002682  A0D8               	btfss	status,0,c
  6189  002684  06F4               	decf	prodh,f,c
  6190  002686  50F4               	movf	prodh,w,c
  6191  002688  10F3               	iorwf	prodl,w,c
  6192  00268A  E108               	bnz	l166
  6193                           ;pff.c: 54: while (cnt-- && (r = *d++ - *s++) ==
      +                           0) ;
  6194  00268C                     l164:
  6195                           ; BSR set to: 3
  6196  00268C  0770               	decf	(?_mem_cmp+4)& (0+255),f,b
  6197  00268E  A0D8               	btfss	status,0,c
  6198  002690  0771               	decf	(?_mem_cmp+5)& (0+255),f,b
  6199  002692  0103               	movlb	3	; () banked
  6200  002694  2970               	incf	(?_mem_cmp+4)& (0+255),w,b
  6201  002696  B4D8               	btfsc	status,2,c
  6202  002698  2971               	incf	(?_mem_cmp+5)& (0+255),w,b
  6203  00269A  E1E1               	bnz	u10740
  6204                           ; BSR set to: 3
  6205  00269C                     l166:
  6206                           ; BSR set to: 3
  6207  00269C  CFF3 F36C          	movff	prodl,?_mem_cmp
  6208  0026A0  CFF4 F36D          	movff	prodh,?_mem_cmp+1
  6209                           ;pff.c: 56: }
  6210                           ; BSR set to: 3
  6211  0026A4  0012               	return	
  6212  0026A6                     __end_of_mem_cmp:
  6213                           	opt stack 0
  6214                           
  6215                           	psect	text33
  6216                           ; =============== function _mem_cmp ends =======
      +                          =====
  6217                           ; *************** function _mem_set ************
      +                          *****
  6218                           ; Defined at:
  6219                           ;		line 44 in file "D:\ElabPh\SDMMC\PIC WAV Play
      +                          er\PIC18 SD WAV Audio Player\src_no_lcd\pff.c"
  6220                           ; Parameters:
  6221                           ;		dst            size:   2offs:   0	type: PTR v
      +                          oid ; Largest target is 12
  6222                           ;		 -> pf_readdir@sp(12), pf_opendir@sp(12), pf_
      +                          open@sp(12), 
  6223                           ;		val            size:   2offs:   2	type: int 
  6224                           ;		cnt            size:   2offs:   4	type: int 
  6225                           ; Auto variables:
  6226                           ;		d           	       	type: PTR unsigned char 
      +                          ; Largest target is 12
  6227                           ;		 -> pf_readdir@sp(12), pf_opendir@sp(12), pf_
      +                          open@sp(12), 
  6228                           ; Return value:
  6229                           ;		type: void 
  6230                           ;		size: 0
  6231                           ; Registers used:
  6232                           ;		wreg, fsr1l, fsr1h, status,2, status,0
  6233                           ; Tracked objects:
  6234                           ;		On entry : F/3
  6235                           ;		On exit  : F/3
  6236                           ;		Unchanged: FFFFFFF0/0
  6237                           ; Data sizes:
  6238                           ;		Autos:    0
  6239                           ;		Params:   6
  6240                           ;		Temp:     0
  6241                           ;		Total:    6
  6242                           ; This function calls:
  6243                           ;		Nothing
  6244                           ; This function is called by:
  6245                           ;		_create_name
  6246                           ; This function uses a non-reentrant model
  6247                           ; 
  6248  000000                     
  6249                           ;pff.c: 43: static
  6250                           ;pff.c: 44: void mem_set (void* dst, int val, in
      +                          t cnt) {
  6251  0029A6                     _mem_set:
  6252                           	opt stack 24
  6253                           ; BSR set to: 3
  6254                           ;pff.c: 45: char *d = (char*)dst;
  6255  0029A6  C372  FFE1         	movff	?_mem_set,fsr1l
  6256  0029AA  C373  FFE2         	movff	?_mem_set+1,fsr1h
  6257                           ;pff.c: 46: while (cnt--) *d++ = (char)val;
  6258  0029AE                     l160:
  6259                           ; BSR set to: 3
  6260  0029AE  0776               	decf	(?_mem_set+4)& (0+255),f,b
  6261  0029B0  A0D8               	btfss	status,0,c
  6262  0029B2  0777               	decf	(?_mem_set+5)& (0+255),f,b
  6263  0029B4  0103               	movlb	3	; () banked
  6264  0029B6  2976               	incf	(?_mem_set+4)& (0+255),w,b
  6265  0029B8  B4D8               	btfsc	status,2,c
  6266  0029BA  2977               	incf	(?_mem_set+5)& (0+255),w,b
  6267  0029BC  E004               	bz	u10760
  6268                           ; BSR set to: 3
  6269  0029BE  C374  FFE7         	movff	?_mem_set+2,indf1
  6270  0029C2  52E6               	movf	postinc1,f,c
  6271  0029C4  D7F4               	goto	l160
  6272  0029C6                     u10760:
  6273                           ; BSR set to: 3
  6274                           ;pff.c: 47: }
  6275                           ; BSR set to: 3
  6276  0029C6  0012               	return	
  6277  0029C8                     __end_of_mem_set:
  6278                           	opt stack 0
  6279                           
  6280                           	psect	text34
  6281                           ; =============== function _mem_set ends =======
      +                          =====
  6282                           ; *************** function _clust2sect *********
      +                          ********
  6283                           ; Defined at:
  6284                           ;		line 114 in file "D:\ElabPh\SDMMC\PIC WAV Pla
      +                          yer\PIC18 SD WAV Audio Player\src_no_lcd\pff.c"
  6285                           ; Parameters:
  6286                           ;		clst           size:   4offs:   0	type: unsig
      +                          ned long 
  6287                           ; Auto variables:
  6288                           ;		fs          	       	type: PTR struct _FATFS_
      +                          ; Largest target is 255
  6289                           ;		 -> RAM(255), Fs(44), 
  6290                           ; Return value:
  6291                           ;		type: unsigned long 
  6292                           ;		size: 4
  6293                           ; Registers used:
  6294                           ;		wreg, fsr0l, fsr0h, fsr2l, status,2, status,0
      +                          , cstack
  6295                           ; Tracked objects:
  6296                           ;		On entry : F/3
  6297                           ;		On exit  : F/3
  6298                           ;		Unchanged: FFFFFFF0/0
  6299                           ; Data sizes:
  6300                           ;		Autos:    0
  6301                           ;		Params:   4
  6302                           ;		Temp:     4
  6303                           ;		Total:    8
  6304                           ; This function calls:
  6305                           ;		___lmul
  6306                           ; This function is called by:
  6307                           ;		_dir_rewind
  6308                           ;		_dir_next
  6309                           ;		_pf_read
  6310                           ;		_pf_lseek
  6311                           ; This function uses a non-reentrant model
  6312                           ; 
  6313  000000                     
  6314                           ;pff.c: 110: static
  6315                           ;pff.c: 111: DWORD clust2sect (
  6316                           ;pff.c: 112: DWORD clst
  6317                           ;pff.c: 113: )
  6318                           ;pff.c: 114: {
  6319  002440                     _clust2sect:
  6320                           	opt stack 23
  6321                           ; BSR set to: 3
  6322                           ;pff.c: 115: FATFS *fs = FatFs;
  6323  002440  C009 FFD9          	movff	9,fsr2l
  6324                           ;pff.c: 118: clst -= 2;
  6325  002444  0E02               	movlw	2
  6326  002446  5F7D               	subwf	?_clust2sect& (0+255),f,b
  6327  002448  0E00               	movlw	0
  6328  00244A  5B7E               	subwfb	(?_clust2sect+1)& (0+255),f,b
  6329  00244C  5B7F               	subwfb	(?_clust2sect+2)& (0+255),f,b
  6330  00244E  5B80               	subwfb	(?_clust2sect+3)& (0+255),f,b
  6331                           ;pff.c: 119: if (clst >= (fs->max_clust - 2)) re
      +                          turn 0;
  6332  002450  50D9               	movf	fsr2l,w,c
  6333  002452  0F08               	addlw	8
  6334  002454  6EE9               	movwf	fsr0l,c
  6335  002456  6AEA               	clrf	fsr0h,c
  6336  002458  0EFE               	movlw	254
  6337  00245A  24EE               	addwf	postinc0,w,c
  6338  00245C  6F81               	movwf	??_clust2sect& (0+255),b
  6339  00245E  0EFF               	movlw	255
  6340  002460  20EE               	addwfc	postinc0,w,c
  6341  002462  6F82               	movwf	(??_clust2sect+1)& (0+255),b
  6342  002464  0EFF               	movlw	255
  6343  002466  20EE               	addwfc	postinc0,w,c
  6344  002468  6F83               	movwf	(??_clust2sect+2)& (0+255),b
  6345  00246A  0EFF               	movlw	255
  6346  00246C  20EE               	addwfc	postinc0,w,c
  6347  00246E  6F84               	movwf	(??_clust2sect+3)& (0+255),b
  6348  002470  5181               	movf	??_clust2sect& (0+255),w,b
  6349  002472  5D7D               	subwf	?_clust2sect& (0+255),w,b
  6350  002474  5182               	movf	(??_clust2sect+1)& (0+255),w,b
  6351  002476  597E               	subwfb	(?_clust2sect+1)& (0+255),w,b
  6352  002478  5183               	movf	(??_clust2sect+2)& (0+255),w,b
  6353  00247A  597F               	subwfb	(?_clust2sect+2)& (0+255),w,b
  6354  00247C  5184               	movf	(??_clust2sect+3)& (0+255),w,b
  6355  00247E  5980               	subwfb	(?_clust2sect+3)& (0+255),w,b
  6356  002480  E305               	bnc	l182
  6357  002482  6B7D               	clrf	?_clust2sect& (0+255),b
  6358  002484  6B7E               	clrf	(?_clust2sect+1)& (0+255),b
  6359  002486  6B7F               	clrf	(?_clust2sect+2)& (0+255),b
  6360  002488  6B80               	clrf	(?_clust2sect+3)& (0+255),b
  6361  00248A  D02A               	goto	l181
  6362  00248C                     l182:
  6363                           ; BSR set to: 3
  6364  00248C  50D9               	movf	fsr2l,w,c
  6365  00248E  0F14               	addlw	20
  6366  002490  6EE9               	movwf	fsr0l,c
  6367  002492  6AEA               	clrf	fsr0h,c
  6368  002494  CFEE F381          	movff	postinc0,??_clust2sect
  6369  002498  CFEE F382          	movff	postinc0,??_clust2sect+1
  6370  00249C  CFEE F383          	movff	postinc0,??_clust2sect+2
  6371  0024A0  CFEE F384          	movff	postinc0,??_clust2sect+3
  6372  0024A4  C37D  F389         	movff	?_clust2sect,?___lmul+4
  6373  0024A8  C37E  F38A         	movff	?_clust2sect+1,?___lmul+5
  6374  0024AC  C37F  F38B         	movff	?_clust2sect+2,?___lmul+6
  6375  0024B0  C380  F38C         	movff	?_clust2sect+3,?___lmul+7
  6376  0024B4  28D9               	incf	fsr2l,w,c
  6377  0024B6  6EE9               	movwf	fsr0l,c
  6378  0024B8  6AEA               	clrf	fsr0h,c
  6379  0024BA  50EF               	movf	indf0,w,c
  6380  0024BC  6F85               	movwf	?___lmul& (0+255),b
  6381  0024BE  6B86               	clrf	(?___lmul+1)& (0+255),b
  6382  0024C0  6B87               	clrf	(?___lmul+2)& (0+255),b
  6383  0024C2  6B88               	clrf	(?___lmul+3)& (0+255),b
  6384  0024C4  ECCF  F013         	call	___lmul	;wreg free
  6385  0024C8  5181               	movf	??_clust2sect& (0+255),w,b
  6386  0024CA  2585               	addwf	?___lmul& (0+255),w,b
  6387  0024CC  6F7D               	movwf	?_clust2sect& (0+255),b
  6388  0024CE  5182               	movf	(??_clust2sect+1)& (0+255),w,b
  6389  0024D0  2186               	addwfc	(?___lmul+1)& (0+255),w,b
  6390  0024D2  6F7E               	movwf	(?_clust2sect+1)& (0+255),b
  6391  0024D4  5183               	movf	(??_clust2sect+2)& (0+255),w,b
  6392  0024D6  2187               	addwfc	(?___lmul+2)& (0+255),w,b
  6393  0024D8  6F7F               	movwf	(?_clust2sect+2)& (0+255),b
  6394  0024DA  5184               	movf	(??_clust2sect+3)& (0+255),w,b
  6395  0024DC  2188               	addwfc	(?___lmul+3)& (0+255),w,b
  6396  0024DE  6F80               	movwf	(?_clust2sect+3)& (0+255),b
  6397                           ;pff.c: 121: }
  6398  0024E0                     l181:
  6399                           ; BSR set to: 3
  6400  0024E0  0012               	return	
  6401  0024E2                     __end_of_clust2sect:
  6402                           	opt stack 0
  6403                           
  6404                           	psect	text35
  6405                           ; =============== function _clust2sect ends ====
      +                          ========
  6406                           ; *************** function _get_fat ************
      +                          *****
  6407                           ; Defined at:
  6408                           ;		line 68 in file "D:\ElabPh\SDMMC\PIC WAV Play
      +                          er\PIC18 SD WAV Audio Player\src_no_lcd\pff.c"
  6409                           ; Parameters:
  6410                           ;		clst           size:   4offs:   0	type: unsig
      +                          ned long 
  6411                           ; Auto variables:
  6412                           ;		fs          	       	type: PTR struct _FATFS_
      +                          ; Largest target is 255
  6413                           ;		 -> RAM(255), Fs(44), 
  6414                           ;		ofs         	       	type: unsigned short 
  6415                           ;		wc          	       	type: unsigned short 
  6416                           ;		bc          	       	type: unsigned short 
  6417                           ;		buf         	       	type: unsigned char [4]
  6418                           ; Return value:
  6419                           ;		type: unsigned long 
  6420                           ;		size: 4
  6421                           ; Registers used:
  6422                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, prodl, prodh, cstack
  6423                           ; Tracked objects:
  6424                           ;		On entry : F/3
  6425                           ;		On exit  : F/3
  6426                           ;		Unchanged: FFFFFFF0/0
  6427                           ; Data sizes:
  6428                           ;		Autos:   11
  6429                           ;		Params:   4
  6430                           ;		Temp:    10
  6431                           ;		Total:   25
  6432                           ; This function calls:
  6433                           ;		_disk_readp
  6434                           ; This function is called by:
  6435                           ;		_dir_next
  6436                           ;		_pf_read
  6437                           ;		_pf_lseek
  6438                           ; This function uses a non-reentrant model
  6439                           ; 
  6440  000000                     
  6441                           ;pff.c: 64: static
  6442                           ;pff.c: 65: DWORD get_fat (
  6443                           ;pff.c: 66: DWORD clst
  6444                           ;pff.c: 67: )
  6445                           ;pff.c: 68: {
  6446  000E28                     _get_fat:
  6447                           	opt stack 23
  6448                           ; BSR set to: 3
  6449  000E28  C009 FFD9          	movff	9,fsr2l
  6450                           ;pff.c: 74: if (clst < 2 || clst >= fs->max_clus
      +                          t)
  6451  000E2C  0E02               	movlw	2
  6452  000E2E  5D7D               	subwf	?_get_fat& (0+255),w,b
  6453  000E30  0E00               	movlw	0
  6454  000E32  597E               	subwfb	(?_get_fat+1)& (0+255),w,b
  6455  000E34  0E00               	movlw	0
  6456  000E36  597F               	subwfb	(?_get_fat+2)& (0+255),w,b
  6457  000E38  0E00               	movlw	0
  6458  000E3A  5980               	subwfb	(?_get_fat+3)& (0+255),w,b
  6459  000E3C  E316               	bnc	l600000433
  6460  000E3E  50D9               	movf	fsr2l,w,c
  6461  000E40  0F08               	addlw	8
  6462  000E42  6EE9               	movwf	fsr0l,c
  6463  000E44  6AEA               	clrf	fsr0h,c
  6464  000E46  CFEE F38C          	movff	postinc0,??_get_fat+11
  6465  000E4A  CFEE F38D          	movff	postinc0,??_get_fat+12
  6466  000E4E  CFEE F38E          	movff	postinc0,??_get_fat+13
  6467  000E52  CFEE F38F          	movff	postinc0,??_get_fat+14
  6468  000E56  518C               	movf	(??_get_fat+11)& (0+255),w,b
  6469  000E58  5D7D               	subwf	?_get_fat& (0+255),w,b
  6470  000E5A  518D               	movf	(??_get_fat+12)& (0+255),w,b
  6471  000E5C  597E               	subwfb	(?_get_fat+1)& (0+255),w,b
  6472  000E5E  518E               	movf	(??_get_fat+13)& (0+255),w,b
  6473  000E60  597F               	subwfb	(?_get_fat+2)& (0+255),w,b
  6474  000E62  518F               	movf	(??_get_fat+14)& (0+255),w,b
  6475  000E64  5980               	subwfb	(?_get_fat+3)& (0+255),w,b
  6476  000E66  E201 D100          	bnc	l170
  6477  000E6A                     l600000433:
  6478                           ; BSR set to: 3
  6479  000E6A  0E01               	movlw	1
  6480  000E6C  D10E               	goto	L16
  6481                           ; BSR set to: 3
  6482                           ;pff.c: 77: switch (fs->fs_type) {
  6483                           ;pff.c: 78: case 1 :
  6484  000E6E                     l171:
  6485                           ; BSR set to: 3
  6486                           ;pff.c: 79: bc = (WORD)clst; bc += bc / 2;
  6487  000E6E  C37D  F386         	movff	?_get_fat,??_get_fat+5
  6488  000E72  C37E  F387         	movff	?_get_fat+1,??_get_fat+6
  6489  000E76  90D8               	bcf	status,0,c
  6490  000E78  3187               	rrcf	(??_get_fat+6)& (0+255),w,b
  6491  000E7A  6F8D               	movwf	(??_get_fat+12)& (0+255),b
  6492  000E7C  3186               	rrcf	(??_get_fat+5)& (0+255),w,b
  6493  000E7E  6F8C               	movwf	(??_get_fat+11)& (0+255),b
  6494  000E80  518C               	movf	(??_get_fat+11)& (0+255),w,b
  6495  000E82  2786               	addwf	(??_get_fat+5)& (0+255),f,b
  6496  000E84  518D               	movf	(??_get_fat+12)& (0+255),w,b
  6497  000E86  2387               	addwfc	(??_get_fat+6)& (0+255),f,b
  6498                           ;pff.c: 80: ofs = bc % 512; bc /= 512;
  6499  000E88  5186               	movf	(??_get_fat+5)& (0+255),w,b
  6500  000E8A  6F84               	movwf	(??_get_fat+3)& (0+255),b
  6501  000E8C  0E01               	movlw	1
  6502  000E8E  1587               	andwf	(??_get_fat+6)& (0+255),w,b
  6503  000E90  6F85               	movwf	(??_get_fat+4)& (0+255),b
  6504  000E92  0E09               	movlw	9
  6505  000E94  6F8C               	movwf	(??_get_fat+11)& (0+255),b
  6506  000E96                     u9275:
  6507  000E96  90D8               	bcf	status,0,c
  6508  000E98  3387               	rrcf	(??_get_fat+6)& (0+255),f,b
  6509  000E9A  3386               	rrcf	(??_get_fat+5)& (0+255),f,b
  6510  000E9C  2F8C               	decfsz	(??_get_fat+11)& (0+255),f,b
  6511  000E9E  D7FB               	goto	u9275
  6512                           ;pff.c: 81: if (ofs != 511) {
  6513  000EA0  2984               	incf	(??_get_fat+3)& (0+255),w,b
  6514  000EA2  B4D8               	btfsc	status,2,c
  6515  000EA4  0585               	decf	(??_get_fat+4)& (0+255),w,b
  6516  000EA6  E00C               	bz	l172
  6517                           ;pff.c: 82: if (disk_readp(buf, fs->fatbase + bc
      +                          , ofs, 2)) break;
  6518  000EA8  0E02               	movlw	2
  6519  000EAA  6F9E               	movwf	(?_disk_readp+8)& (0+255),b
  6520  000EAC  6B9F               	clrf	(?_disk_readp+9)& (0+255),b
  6521  000EAE  C384  F39C         	movff	??_get_fat+3,?_disk_readp+6
  6522  000EB2  C385  F39D         	movff	??_get_fat+4,?_disk_readp+7
  6523  000EB6  ECF7  F00A         	call	PL18
  6524  000EBA  ECFA  F010         	call	_disk_readp	;wreg free
  6525  000EBE  D03B               	goto	L15
  6526                           ; BSR set to: ?
  6527                           ;pff.c: 83: } else {
  6528  000EC0                     l172:
  6529                           ; BSR set to: 3
  6530                           ;pff.c: 84: if (disk_readp(buf, fs->fatbase + bc
      +                          , 511, 1)) break;
  6531  000EC0  0E01               	movlw	1
  6532  000EC2  6F9E               	movwf	(?_disk_readp+8)& (0+255),b
  6533  000EC4  6B9F               	clrf	(?_disk_readp+9)& (0+255),b
  6534  000EC6  699C               	setf	(?_disk_readp+6)& (0+255),b
  6535  000EC8  6F9D               	movwf	(?_disk_readp+7)& (0+255),b
  6536  000ECA  ECF7  F00A         	call	PL18
  6537  000ECE  ECFA  F010         	call	_disk_readp	;wreg free
  6538  000ED2  0900               	iorlw	0
  6539  000ED4  E001 D0D7          	bnz	l169
  6540                           ; BSR set to: ?
  6541                           ;pff.c: 85: if (disk_readp(buf+1, fs->fatbase + 
      +                          bc + 1, 0, 1)) break;
  6542  000ED8  0E01               	movlw	1
  6543  000EDA  0103               	movlb	3	; () banked
  6544  000EDC  6F9E               	movwf	(?_disk_readp+8)& (0+255),b
  6545  000EDE  6B9F               	clrf	(?_disk_readp+9)& (0+255),b
  6546  000EE0  6B9C               	clrf	(?_disk_readp+6)& (0+255),b
  6547  000EE2  6B9D               	clrf	(?_disk_readp+7)& (0+255),b
  6548  000EE4  5183               	movf	(??_get_fat+2)& (0+255),w,b
  6549  000EE6  0F0C               	addlw	12
  6550  000EE8  6EE9               	movwf	fsr0l,c
  6551  000EEA  6AEA               	clrf	fsr0h,c
  6552  000EEC  CFEE F38C          	movff	postinc0,??_get_fat+11
  6553  000EF0  CFEE F38D          	movff	postinc0,??_get_fat+12
  6554  000EF4  CFEE F38E          	movff	postinc0,??_get_fat+13
  6555  000EF8  CFEE F38F          	movff	postinc0,??_get_fat+14
  6556  000EFC  5186               	movf	(??_get_fat+5)& (0+255),w,b
  6557  000EFE  258C               	addwf	(??_get_fat+11)& (0+255),w,b
  6558  000F00  6F90               	movwf	(??_get_fat+15)& (0+255),b
  6559  000F02  5187               	movf	(??_get_fat+6)& (0+255),w,b
  6560  000F04  218D               	addwfc	(??_get_fat+12)& (0+255),w,b
  6561  000F06  6F91               	movwf	(??_get_fat+16)& (0+255),b
  6562  000F08  0E00               	movlw	0
  6563  000F0A  218E               	addwfc	(??_get_fat+13)& (0+255),w,b
  6564  000F0C  6F92               	movwf	(??_get_fat+17)& (0+255),b
  6565  000F0E  0E00               	movlw	0
  6566  000F10  218F               	addwfc	(??_get_fat+14)& (0+255),w,b
  6567  000F12  6F93               	movwf	(??_get_fat+18)& (0+255),b
  6568  000F14  2990               	incf	(??_get_fat+15)& (0+255),w,b
  6569  000F16  6F98               	movwf	(?_disk_readp+2)& (0+255),b
  6570  000F18  0E00               	movlw	0
  6571  000F1A  2191               	addwfc	(??_get_fat+16)& (0+255),w,b
  6572  000F1C  6F99               	movwf	(?_disk_readp+3)& (0+255),b
  6573  000F1E  0E00               	movlw	0
  6574  000F20  2192               	addwfc	(??_get_fat+17)& (0+255),w,b
  6575  000F22  6F9A               	movwf	(?_disk_readp+4)& (0+255),b
  6576  000F24  0E00               	movlw	0
  6577  000F26  2193               	addwfc	(??_get_fat+18)& (0+255),w,b
  6578  000F28  6F9B               	movwf	(?_disk_readp+5)& (0+255),b
  6579  000F2A  0E89               	movlw	low (??_get_fat+8)
  6580  000F2C  6F96               	movwf	?_disk_readp& (0+255),b
  6581  000F2E  0E03               	movlw	high (??_get_fat+8)
  6582  000F30  6F97               	movwf	(?_disk_readp+1)& (0+255),b
  6583  000F32  ECFA  F010         	call	_disk_readp	;wreg free
  6584  000F36                     L15:
  6585  000F36  0900               	iorlw	0
  6586  000F38  E001 D0A5          	bnz	l169
  6587                           ; BSR set to: ?
  6588                           ;pff.c: 86: }
  6589                           ;pff.c: 87: wc = (WORD)(*(WORD*)(BYTE*)(buf));
  6590  000F3C  C388  FFF3         	movff	??_get_fat+7,prodl
  6591  000F40  C389  FFF4         	movff	??_get_fat+8,prodh
  6592  000F44  50F3               	movf	prodl,w,c
  6593  000F46  0103               	movlb	3	; () banked
  6594  000F48  6F81               	movwf	??_get_fat& (0+255),b
  6595  000F4A  0E0F               	movlw	15
  6596  000F4C  14F4               	andwf	prodh,w,c
  6597  000F4E  6F82               	movwf	(??_get_fat+1)& (0+255),b
  6598  000F50  A17D               	btfss	?_get_fat& (0+255),0,b
  6599  000F52  D00F               	goto	l500000434
  6600  000F54  CFF3 F38C          	movff	prodl,??_get_fat+11
  6601  000F58  CFF4 F38D          	movff	prodh,??_get_fat+12
  6602  000F5C  0E04               	movlw	4
  6603  000F5E  6F8E               	movwf	(??_get_fat+13)& (0+255),b
  6604  000F60                     u9335:
  6605  000F60  90D8               	bcf	status,0,c
  6606  000F62  338D               	rrcf	(??_get_fat+12)& (0+255),f,b
  6607  000F64  338C               	rrcf	(??_get_fat+11)& (0+255),f,b
  6608  000F66  2F8E               	decfsz	(??_get_fat+13)& (0+255),f,b
  6609  000F68  D7FB               	goto	u9335
  6610  000F6A  C38C  F381         	movff	??_get_fat+11,??_get_fat
  6611  000F6E  C38D  F382         	movff	??_get_fat+12,??_get_fat+1
  6612  000F72                     l500000434:
  6613                           ; BSR set to: 3
  6614  000F72  C381  F37D         	movff	??_get_fat,?_get_fat
  6615  000F76  C382  F37E         	movff	??_get_fat+1,?_get_fat+1
  6616  000F7A  D031               	goto	L13
  6617                           ;pff.c: 90: case 2 :
  6618  000F7C                     l177:
  6619                           ; BSR set to: 3
  6620                           ;pff.c: 91: if (disk_readp(buf, fs->fatbase + cl
      +                          st / 256, (WORD)(((WORD)clst % 256) * 2), 2)) br
      +                          eak;
  6621  000F7C  0E02               	movlw	2
  6622  000F7E  6F9E               	movwf	(?_disk_readp+8)& (0+255),b
  6623  000F80  6B9F               	clrf	(?_disk_readp+9)& (0+255),b
  6624  000F82  517D               	movf	?_get_fat& (0+255),w,b
  6625  000F84  6F8C               	movwf	(??_get_fat+11)& (0+255),b
  6626  000F86  6B8D               	clrf	(??_get_fat+12)& (0+255),b
  6627  000F88  90D8               	bcf	status,0,c
  6628  000F8A  358C               	rlcf	(??_get_fat+11)& (0+255),w,b
  6629  000F8C  6F9C               	movwf	(?_disk_readp+6)& (0+255),b
  6630  000F8E  358D               	rlcf	(??_get_fat+12)& (0+255),w,b
  6631  000F90  6F9D               	movwf	(?_disk_readp+7)& (0+255),b
  6632  000F92  5183               	movf	(??_get_fat+2)& (0+255),w,b
  6633  000F94  0F0C               	addlw	12
  6634  000F96  6EE9               	movwf	fsr0l,c
  6635  000F98  6AEA               	clrf	fsr0h,c
  6636  000F9A  CFEE F38E          	movff	postinc0,??_get_fat+13
  6637  000F9E  CFEE F38F          	movff	postinc0,??_get_fat+14
  6638  000FA2  CFEE F390          	movff	postinc0,??_get_fat+15
  6639  000FA6  CFEE F391          	movff	postinc0,??_get_fat+16
  6640  000FAA  C37D  F392         	movff	?_get_fat,??_get_fat+17
  6641  000FAE  C37E  F393         	movff	?_get_fat+1,??_get_fat+18
  6642  000FB2  C37F  F394         	movff	?_get_fat+2,??_get_fat+19
  6643  000FB6  C380  F395         	movff	?_get_fat+3,??_get_fat+20
  6644  000FBA  C393  F392         	movff	??_get_fat+18,??_get_fat+17
  6645  000FBE  C394  F393         	movff	??_get_fat+19,??_get_fat+18
  6646  000FC2  C395  F394         	movff	??_get_fat+20,??_get_fat+19
  6647  000FC6  6B95               	clrf	(??_get_fat+20)& (0+255),b
  6648  000FC8  ECE6  F00A         	call	PL19
  6649  000FCC  ECFA  F010         	call	_disk_readp	;wreg free
  6650  000FD0  0900               	iorlw	0
  6651  000FD2  E159               	bnz	l169
  6652                           ; BSR set to: ?
  6653  000FD4  0103               	movlb	3	; () banked
  6654  000FD6  C388  F37D         	movff	??_get_fat+7,?_get_fat
  6655  000FDA  C389  F37E         	movff	??_get_fat+8,?_get_fat+1
  6656  000FDE                     L13:
  6657  000FDE  6B7F               	clrf	(?_get_fat+2)& (0+255),b
  6658  000FE0  6B80               	clrf	(?_get_fat+3)& (0+255),b
  6659  000FE2  D058               	goto	l167
  6660                           ;pff.c: 94: case 3 :
  6661  000FE4                     l179:
  6662                           ; BSR set to: 3
  6663                           ;pff.c: 95: if (disk_readp(buf, fs->fatbase + cl
      +                          st / 128, (WORD)(((WORD)clst % 128) * 4), 4)) br
      +                          eak;
  6664  000FE4  0E04               	movlw	4
  6665  000FE6  6F9E               	movwf	(?_disk_readp+8)& (0+255),b
  6666  000FE8  6B9F               	clrf	(?_disk_readp+9)& (0+255),b
  6667  000FEA  0E7F               	movlw	127
  6668  000FEC  157D               	andwf	?_get_fat& (0+255),w,b
  6669  000FEE  6F8C               	movwf	(??_get_fat+11)& (0+255),b
  6670  000FF0  6B8D               	clrf	(??_get_fat+12)& (0+255),b
  6671  000FF2  90D8               	bcf	status,0,c
  6672  000FF4  378C               	rlcf	(??_get_fat+11)& (0+255),f,b
  6673  000FF6  378D               	rlcf	(??_get_fat+12)& (0+255),f,b
  6674  000FF8  90D8               	bcf	status,0,c
  6675  000FFA  378C               	rlcf	(??_get_fat+11)& (0+255),f,b
  6676  000FFC  378D               	rlcf	(??_get_fat+12)& (0+255),f,b
  6677  000FFE  C38C  F39C         	movff	??_get_fat+11,?_disk_readp+6
  6678  001002  C38D  F39D         	movff	??_get_fat+12,?_disk_readp+7
  6679  001006  5183               	movf	(??_get_fat+2)& (0+255),w,b
  6680  001008  0F0C               	addlw	12
  6681  00100A  6EE9               	movwf	fsr0l,c
  6682  00100C  6AEA               	clrf	fsr0h,c
  6683  00100E  CFEE F38E          	movff	postinc0,??_get_fat+13
  6684  001012  CFEE F38F          	movff	postinc0,??_get_fat+14
  6685  001016  CFEE F390          	movff	postinc0,??_get_fat+15
  6686  00101A  CFEE F391          	movff	postinc0,??_get_fat+16
  6687  00101E  C37D  F392         	movff	?_get_fat,??_get_fat+17
  6688  001022  C37E  F393         	movff	?_get_fat+1,??_get_fat+18
  6689  001026  C37F  F394         	movff	?_get_fat+2,??_get_fat+19
  6690  00102A  C380  F395         	movff	?_get_fat+3,??_get_fat+20
  6691  00102E  0E08               	movlw	8
  6692  001030  D005               	goto	u9350
  6693  001032                     u9355:
  6694  001032  90D8               	bcf	status,0,c
  6695  001034  3395               	rrcf	(??_get_fat+20)& (0+255),f,b
  6696  001036  3394               	rrcf	(??_get_fat+19)& (0+255),f,b
  6697  001038  3393               	rrcf	(??_get_fat+18)& (0+255),f,b
  6698  00103A  3392               	rrcf	(??_get_fat+17)& (0+255),f,b
  6699  00103C                     u9350:
  6700  00103C  2EE8               	decfsz	wreg,f,c
  6701  00103E  D7F9               	goto	u9355
  6702  001040  ECE6  F00A         	call	PL19
  6703  001044  ECFA  F010         	call	_disk_readp	;wreg free
  6704  001048  0900               	iorlw	0
  6705  00104A  E11D               	bnz	l169
  6706                           ; BSR set to: ?
  6707  00104C  0103               	movlb	3	; () banked
  6708  00104E  EE03  F088         	lfsr	0,??_get_fat+7
  6709  001052  0EFF               	movlw	255
  6710  001054  14EE               	andwf	postinc0,w,c
  6711  001056  6F7D               	movwf	?_get_fat& (0+255),b
  6712  001058  0EFF               	movlw	255
  6713  00105A  14EE               	andwf	postinc0,w,c
  6714  00105C  6F7E               	movwf	(?_get_fat+1)& (0+255),b
  6715  00105E  0EFF               	movlw	255
  6716  001060  14EE               	andwf	postinc0,w,c
  6717  001062  6F7F               	movwf	(?_get_fat+2)& (0+255),b
  6718  001064  0E0F               	movlw	15
  6719  001066  14EE               	andwf	postinc0,w,c
  6720  001068  D014               	goto	L14
  6721  00106A                     l170:
  6722                           ; BSR set to: 3
  6723                           ;get_fat@fs stored from fsr2l
  6724  00106A  CFD9 F383          	movff	fsr2l,??_get_fat+2
  6725  00106E  50D9               	movf	fsr2l,w,c
  6726  001070  6EE9               	movwf	fsr0l,c
  6727  001072  6AEA               	clrf	fsr0h,c
  6728  001074  50EF               	movf	indf0,w,c
  6729  001076  0A01               	xorlw	1
  6730  001078  E101 D6F9          	bz	l171
  6731  00107C  0A03               	xorlw	3
  6732  00107E  E101 D77D          	bz	l177
  6733  001082  0A01               	xorlw	1
  6734  001084  E0AF               	bz	l179
  6735  001086                     l169:
  6736                           ; BSR set to: ?
  6737  001086  0E01               	movlw	1
  6738  001088  0103               	movlb	3	; () banked
  6739  00108A                     L16:
  6740  00108A  6F7D               	movwf	?_get_fat& (0+255),b
  6741  00108C  0E00               	movlw	0
  6742  00108E  6B7E               	clrf	(?_get_fat+1)& (0+255),b
  6743  001090  6B7F               	clrf	(?_get_fat+2)& (0+255),b
  6744  001092                     L14:
  6745  001092  6F80               	movwf	(?_get_fat+3)& (0+255),b
  6746                           ;pff.c: 101: }
  6747  001094                     l167:
  6748                           ; BSR set to: 3
  6749  001094  0012               	return	
  6750  001096                     __end_of_get_fat:
  6751                           	opt stack 0
  6752                           
  6753                           	psect	text36
  6754                           ; =============== function _get_fat ends =======
      +                          =====
  6755                           ; *************** function _disk_readp *********
      +                          ********
  6756                           ; Defined at:
  6757                           ;		line 200 in file "D:\ElabPh\SDMMC\PIC WAV Pla
      +                          yer\PIC18 SD WAV Audio Player\src_no_lcd\sd_mmc.
      +                          c"
  6758                           ; Parameters:
  6759                           ;		buff           size:   2offs:   0	type: PTR u
      +                          nsigned char ; Largest target is 256
  6760                           ;		 -> RAM(255), pf_read@rbuff(2), pf_mount@buf(
      +                          36), get_fat@buf(4), 
  6761                           ;		 -> Buff(256), pf_readdir@dir(32), pf_opendir
      +                          @dir(32), pf_open@dir(32), 
  6762                           ;		lba            size:   4offs:   2	type: unsig
      +                          ned long 
  6763                           ;		ofs            size:   2offs:   6	type: unsig
      +                          ned short 
  6764                           ;		cnt            size:   2offs:   8	type: unsig
      +                          ned short 
  6765                           ; Auto variables:
  6766                           ;		rc          	       	type: unsigned char 
  6767                           ;		res         	       	type: enum E1128
  6768                           ;		bc          	       	type: unsigned short 
  6769                           ; Return value:
  6770                           ;		type: enum E79
  6771                           ;		size: 1
  6772                           ; Registers used:
  6773                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr2l, status,2, s
      +                          tatus,0, prodl, prodh, cstack
  6774                           ; Tracked objects:
  6775                           ;		On entry : F/3
  6776                           ;		On exit  : 0/0
  6777                           ;		Unchanged: FFFFFFF0/0
  6778                           ; Data sizes:
  6779                           ;		Autos:    2
  6780                           ;		Params:  10
  6781                           ;		Temp:     2
  6782                           ;		Total:   14
  6783                           ; This function calls:
  6784                           ;		_send_cmd
  6785                           ;		_rcv_spi
  6786                           ;		_release_spi
  6787                           ; This function is called by:
  6788                           ;		_get_fat
  6789                           ;		_dir_find
  6790                           ;		_dir_read
  6791                           ;		_check_fs
  6792                           ;		_pf_mount
  6793                           ;		_pf_read
  6794                           ; This function uses a non-reentrant model
  6795                           ; 
  6796  000000                     
  6797                           ;sd_mmc.c: 194: DRESULT disk_readp (
  6798                           ;sd_mmc.c: 195: BYTE *buff,
  6799                           ;sd_mmc.c: 196: DWORD lba,
  6800                           ;sd_mmc.c: 197: WORD ofs,
  6801                           ;sd_mmc.c: 198: WORD cnt
  6802                           ;sd_mmc.c: 199: )
  6803                           ;sd_mmc.c: 200: {
  6804  0021F4                     _disk_readp:
  6805                           	opt stack 22
  6806                           ; BSR set to: 3
  6807  0021F4  B606               	btfsc	6,3,c
  6808  0021F6  D008               	goto	l988
  6809  0021F8  0E09               	movlw	9
  6810  0021FA                     u10045:
  6811  0021FA  90D8               	bcf	status,0,c
  6812  0021FC  3798               	rlcf	(?_disk_readp+2)& (0+255),f,b
  6813  0021FE  3799               	rlcf	(?_disk_readp+3)& (0+255),f,b
  6814  002200  379A               	rlcf	(?_disk_readp+4)& (0+255),f,b
  6815  002202  379B               	rlcf	(?_disk_readp+5)& (0+255),f,b
  6816  002204  2EE8               	decfsz	wreg,f,c
  6817  002206  D7F9               	goto	u10045
  6818  002208                     l988:
  6819                           ; BSR set to: 3
  6820                           ;sd_mmc.c: 208: res = RES_ERROR;
  6821  002208  0E01               	movlw	1
  6822  00220A  6EF4               	movwf	prodh,c
  6823                           ;sd_mmc.c: 209: if (send_cmd((0x40+17), lba) == 
      +                          0) {
  6824  00220C  C398  F3A4         	movff	?_disk_readp+2,?_send_cmd
  6825  002210  C399  F3A5         	movff	?_disk_readp+3,?_send_cmd+1
  6826  002214  C39A  F3A6         	movff	?_disk_readp+4,?_send_cmd+2
  6827  002218  C39B  F3A7         	movff	?_disk_readp+5,?_send_cmd+3
  6828  00221C  0E51               	movlw	81
  6829  00221E  EC0F  F010         	call	_send_cmd
  6830  002222  0900               	iorlw	0
  6831  002224  E14C               	bnz	l989
  6832                           ;sd_mmc.c: 211: bc = 30000;
  6833  002226  0E30               	movlw	48
  6834  002228  0103               	movlb	3	; () banked
  6835  00222A  6FA0               	movwf	??_disk_readp& (0+255),b
  6836  00222C  0E75               	movlw	117
  6837  00222E  6FA1               	movwf	(??_disk_readp+1)& (0+255),b
  6838  002230  D007               	goto	l992
  6839  002232                     u10060:
  6840  002232  07A0               	decf	??_disk_readp& (0+255),f,b
  6841  002234  A0D8               	btfss	status,0,c
  6842  002236  07A1               	decf	(??_disk_readp+1)& (0+255),f,b
  6843  002238  0103               	movlb	3	; () banked
  6844  00223A  51A1               	movf	(??_disk_readp+1)& (0+255),w,b
  6845  00223C  11A0               	iorwf	??_disk_readp& (0+255),w,b
  6846  00223E  E005               	bz	l991
  6847                           ;sd_mmc.c: 212: do {
  6848  002240                     l992:
  6849                           ; BSR set to: 3
  6850                           ;sd_mmc.c: 213: rc = rcv_spi();
  6851  002240  EC28  F015         	call	_rcv_spi	;wreg free
  6852  002244  6ED9               	movwf	fsr2l,c
  6853                           ;sd_mmc.c: 214: } while (rc == 0xFF && --bc);
  6854  002246  28D9               	incf	fsr2l,w,c
  6855  002248  E0F4               	bz	u10060
  6856                           ; BSR set to: 3
  6857  00224A                     l991:
  6858                           ; BSR set to: 3
  6859                           ;sd_mmc.c: 216: if (rc == 0xFE) {
  6860  00224A  50D9               	movf	fsr2l,w,c
  6861  00224C  0AFE               	xorlw	254
  6862  00224E  E137               	bnz	l989
  6863                           ;sd_mmc.c: 217: bc = 514 - ofs - cnt;
  6864  002250  C39E  F3A2         	movff	?_disk_readp+8,??_disk_readp+2
  6865  002254  C39F  F3A3         	movff	?_disk_readp+9,??_disk_readp+3
  6866  002258  1FA2               	comf	(??_disk_readp+2)& (0+255),f,b
  6867  00225A  1FA3               	comf	(??_disk_readp+3)& (0+255),f,b
  6868  00225C  4BA2               	infsnz	(??_disk_readp+2)& (0+255),f,b
  6869  00225E  2BA3               	incf	(??_disk_readp+3)& (0+255),f,b
  6870  002260  519C               	movf	(?_disk_readp+6)& (0+255),w,b
  6871  002262  5FA2               	subwf	(??_disk_readp+2)& (0+255),f,b
  6872  002264  519D               	movf	(?_disk_readp+7)& (0+255),w,b
  6873  002266  5BA3               	subwfb	(??_disk_readp+3)& (0+255),f,b
  6874  002268  0E02               	movlw	2
  6875  00226A  25A2               	addwf	(??_disk_readp+2)& (0+255),w,b
  6876  00226C  6EF3               	movwf	prodl,c
  6877  00226E  0E02               	movlw	2
  6878  002270  21A3               	addwfc	(??_disk_readp+3)& (0+255),w,b
  6879  002272  6EF4               	movwf	prodh,c
  6880                           ;sd_mmc.c: 220: if (ofs) {
  6881  002274  519D               	movf	(?_disk_readp+7)& (0+255),w,b
  6882  002276  119C               	iorwf	(?_disk_readp+6)& (0+255),w,b
  6883  002278  E009               	bz	l1000
  6884                           ;sd_mmc.c: 221: do rcv_spi(); while (--ofs);
  6885  00227A                     l997:
  6886                           ; BSR set to: 3
  6887  00227A  EC28  F015         	call	_rcv_spi	;wreg free
  6888  00227E  079C               	decf	(?_disk_readp+6)& (0+255),f,b
  6889  002280  A0D8               	btfss	status,0,c
  6890  002282  079D               	decf	(?_disk_readp+7)& (0+255),f,b
  6891  002284  0103               	movlb	3	; () banked
  6892  002286  519D               	movf	(?_disk_readp+7)& (0+255),w,b
  6893  002288  119C               	iorwf	(?_disk_readp+6)& (0+255),w,b
  6894  00228A  E1F7               	bnz	l997
  6895                           ; BSR set to: 3
  6896                           ; BSR set to: 3
  6897                           ;sd_mmc.c: 222: }
  6898                           ;sd_mmc.c: 225: do
  6899  00228C                     l1000:
  6900                           ; BSR set to: 3
  6901  00228C  EC28  F015         	call	_rcv_spi	;wreg free
  6902  002290  C396  FFE9         	movff	?_disk_readp,fsr0l
  6903  002294  C397  FFEA         	movff	?_disk_readp+1,fsr0h
  6904  002298  6EEF               	movwf	indf0,c
  6905                           ;sd_mmc.c: 226: *buff++ = rcv_spi();
  6906  00229A  4B96               	infsnz	?_disk_readp& (0+255),f,b
  6907  00229C  2B97               	incf	(?_disk_readp+1)& (0+255),f,b
  6908                           ;sd_mmc.c: 227: while (--cnt);
  6909  00229E  079E               	decf	(?_disk_readp+8)& (0+255),f,b
  6910  0022A0  A0D8               	btfss	status,0,c
  6911  0022A2  079F               	decf	(?_disk_readp+9)& (0+255),f,b
  6912  0022A4  0103               	movlb	3	; () banked
  6913  0022A6  519F               	movf	(?_disk_readp+9)& (0+255),w,b
  6914  0022A8  119E               	iorwf	(?_disk_readp+8)& (0+255),w,b
  6915  0022AA  E1F0               	bnz	l1000
  6916                           ; BSR set to: 3
  6917                           ;sd_mmc.c: 230: do rcv_spi(); while (--bc);
  6918  0022AC                     l1003:
  6919                           ; BSR set to: ?
  6920  0022AC  EC28  F015         	call	_rcv_spi	;wreg free
  6921  0022B0  06F3               	decf	prodl,f,c
  6922  0022B2  A0D8               	btfss	status,0,c
  6923  0022B4  06F4               	decf	prodh,f,c
  6924  0022B6  50F4               	movf	prodh,w,c
  6925  0022B8  10F3               	iorwf	prodl,w,c
  6926  0022BA  E1F8               	bnz	l1003
  6927                           ; BSR set to: ?
  6928                           ;sd_mmc.c: 232: res = RES_OK;
  6929  0022BC  6AF4               	clrf	prodh,c
  6930                           ; BSR set to: ?
  6931  0022BE                     l989:
  6932                           ; BSR set to: ?
  6933                           ;sd_mmc.c: 233: }
  6934                           ;sd_mmc.c: 234: }
  6935                           ;sd_mmc.c: 236: release_spi();
  6936  0022BE  EC2D  F015         	call	_release_spi	;wreg free
  6937                           ;sd_mmc.c: 238: return res;
  6938  0022C2  50F4               	movf	prodh,w,c
  6939                           ;sd_mmc.c: 239: }
  6940                           ; BSR set to: ?
  6941  0022C4  0012               	return	
  6942  0022C6                     __end_of_disk_readp:
  6943                           	opt stack 0
  6944                           
  6945                           	psect	text37
  6946                           ; =============== function _disk_readp ends ====
      +                          ========
  6947                           ; *************** function ___lmul *************
      +                          ****
  6948                           ; Defined at:
  6949                           ;		line 3 in file "C:\Program Files\HI-TECH Soft
      +                          ware\PICC-18\PRO\9.64\sources\lmul.c"
  6950                           ; Parameters:
  6951                           ;		multiplier     size:   4offs:   0	type: unsig
      +                          ned long 
  6952                           ;		multiplicand   size:   4offs:   4	type: unsig
      +                          ned long 
  6953                           ; Auto variables:
  6954                           ;		product     	       	type: unsigned long 
  6955                           ; Return value:
  6956                           ;		type: unsigned long 
  6957                           ;		size: 4
  6958                           ; Registers used:
  6959                           ;		wreg, status,2, status,0
  6960                           ; Tracked objects:
  6961                           ;		On entry : F/3
  6962                           ;		On exit  : F/3
  6963                           ;		Unchanged: FFFFFFF0/0
  6964                           ; Data sizes:
  6965                           ;		Autos:    4
  6966                           ;		Params:   8
  6967                           ;		Temp:     0
  6968                           ;		Total:   12
  6969                           ; This function calls:
  6970                           ;		Nothing
  6971                           ; This function is called by:
  6972                           ;		_clust2sect
  6973                           ;		___aslmul
  6974                           ; This function uses a non-reentrant model
  6975                           ; 
  6976  000000                     
  6977  00279E                     ___lmul:
  6978                           	opt stack 22
  6979                           ; BSR set to: 3
  6980  00279E  6B8D               	clrf	??___lmul& (0+255),b
  6981  0027A0  6B8E               	clrf	(??___lmul+1)& (0+255),b
  6982  0027A2  6B8F               	clrf	(??___lmul+2)& (0+255),b
  6983  0027A4  6B90               	clrf	(??___lmul+3)& (0+255),b
  6984  0027A6                     l1315:
  6985                           ; BSR set to: 3
  6986  0027A6  A185               	btfss	?___lmul& (0+255),0,b
  6987  0027A8  D008               	goto	l1316
  6988  0027AA  5189               	movf	(?___lmul+4)& (0+255),w,b
  6989  0027AC  278D               	addwf	??___lmul& (0+255),f,b
  6990  0027AE  518A               	movf	(?___lmul+5)& (0+255),w,b
  6991  0027B0  238E               	addwfc	(??___lmul+1)& (0+255),f,b
  6992  0027B2  518B               	movf	(?___lmul+6)& (0+255),w,b
  6993  0027B4  238F               	addwfc	(??___lmul+2)& (0+255),f,b
  6994  0027B6  518C               	movf	(?___lmul+7)& (0+255),w,b
  6995  0027B8  2390               	addwfc	(??___lmul+3)& (0+255),f,b
  6996  0027BA                     l1316:
  6997                           ; BSR set to: 3
  6998  0027BA  90D8               	bcf	status,0,c
  6999  0027BC  3789               	rlcf	(?___lmul+4)& (0+255),f,b
  7000  0027BE  378A               	rlcf	(?___lmul+5)& (0+255),f,b
  7001  0027C0  378B               	rlcf	(?___lmul+6)& (0+255),f,b
  7002  0027C2  378C               	rlcf	(?___lmul+7)& (0+255),f,b
  7003  0027C4  90D8               	bcf	status,0,c
  7004  0027C6  3388               	rrcf	(?___lmul+3)& (0+255),f,b
  7005  0027C8  3387               	rrcf	(?___lmul+2)& (0+255),f,b
  7006  0027CA  3386               	rrcf	(?___lmul+1)& (0+255),f,b
  7007  0027CC  3385               	rrcf	?___lmul& (0+255),f,b
  7008  0027CE  5188               	movf	(?___lmul+3)& (0+255),w,b
  7009  0027D0  1185               	iorwf	?___lmul& (0+255),w,b
  7010  0027D2  1186               	iorwf	(?___lmul+1)& (0+255),w,b
  7011  0027D4  1187               	iorwf	(?___lmul+2)& (0+255),w,b
  7012  0027D6  E1E7               	bnz	l1315
  7013                           ; BSR set to: 3
  7014  0027D8  C38D  F385         	movff	??___lmul,?___lmul
  7015  0027DC  C38E  F386         	movff	??___lmul+1,?___lmul+1
  7016  0027E0  C38F  F387         	movff	??___lmul+2,?___lmul+2
  7017  0027E4  C390  F388         	movff	??___lmul+3,?___lmul+3
  7018                           ; BSR set to: 3
  7019  0027E8  0012               	return	
  7020  0027EA                     __end_of___lmul:
  7021                           	opt stack 0
  7022                           
  7023                           	psect	text38
  7024                           ; =============== function ___lmul ends ========
      +                          ====
  7025                           ; *************** function _send_cmd ***********
      +                          ******
  7026                           ; Defined at:
  7027                           ;		line 70 in file "D:\ElabPh\SDMMC\PIC WAV Play
      +                          er\PIC18 SD WAV Audio Player\src_no_lcd\sd_mmc.c
      +                          "
  7028                           ; Parameters:
  7029                           ;		cmd            size:   1reg:   wre	type: unsi
      +                          gned char 
  7030                           ;		arg            size:   4offs:   0	type: unsig
      +                          ned long 
  7031                           ; Auto variables:
  7032                           ;		res         	       	type: unsigned char 
  7033                           ;		n           	       	type: unsigned char 
  7034                           ; Return value:
  7035                           ;		type: unsigned char 
  7036                           ;		size: 1
  7037                           ; Registers used:
  7038                           ;		wreg, fsr0l, fsr1l, fsr2l, status,2, status,0
      +                          , prodl, cstack
  7039                           ; Tracked objects:
  7040                           ;		On entry : F/3
  7041                           ;		On exit  : 0/0
  7042                           ;		Unchanged: FFFFFFF0/0
  7043                           ; Data sizes:
  7044                           ;		Autos:    0
  7045                           ;		Params:   4
  7046                           ;		Temp:     1
  7047                           ;		Total:    5
  7048                           ; This function calls:
  7049                           ;		_wait_ready
  7050                           ;		_xmit_spi
  7051                           ;		_rcv_spi
  7052                           ; This function is called by:
  7053                           ;		_disk_initialize
  7054                           ;		_disk_readp
  7055                           ; This function uses a non-reentrant model
  7056                           ; 
  7057  000000                     
  7058                           ;sd_mmc.c: 65: static
  7059                           ;sd_mmc.c: 66: BYTE send_cmd (
  7060                           ;sd_mmc.c: 67: BYTE cmd,
  7061                           ;sd_mmc.c: 68: DWORD arg
  7062                           ;sd_mmc.c: 69: )
  7063                           ;sd_mmc.c: 70: {
  7064  00201E                     _send_cmd:
  7065                           	opt stack 21
  7066                           ; BSR set to: 3
  7067                           ; send_cmd@cmd loaded to fsr0l
  7068  00201E  CFE8 FFE9          	movff	wreg,fsr0l
  7069  002022  8C8B               	bsf	3979,6,c	;volatile
  7070                           ;sd_mmc.c: 75: LATCbits.LATC6 = 0;
  7071  002024  9C8B               	bcf	3979,6,c	;volatile
  7072                           ;sd_mmc.c: 77: if (wait_ready() != 0xFF) {
  7073  002026  EC7C  F014         	call	_wait_ready	;wreg free
  7074  00202A  0103               	movlb	3	; () banked
  7075  00202C  6FA8               	movwf	??_send_cmd& (0+255),b
  7076  00202E  29A8               	incf	??_send_cmd& (0+255),w,b
  7077  002030  E002               	bz	l944
  7078                           ;sd_mmc.c: 78: return 0xFF;
  7079  002032  0EFF               	movlw	255
  7080  002034  D069               	goto	l943
  7081  002036                     l944:
  7082                           ; BSR set to: 3
  7083                           ;sd_mmc.c: 79: }
  7084                           ;sd_mmc.c: 81: if (cmd & 0x80) {
  7085  002036  AEE9               	btfss	fsr0l,7,c
  7086  002038  D036               	goto	l945
  7087                           ;sd_mmc.c: 82: cmd &= 0x7F;
  7088  00203A  9EE9               	bcf	fsr0l,7,c
  7089                           ;sd_mmc.c: 87: xmit_spi(cmd);
  7090  00203C  50E9               	movf	fsr0l,w,c
  7091  00203E  EC1F  F015         	call	_xmit_spi
  7092                           ;sd_mmc.c: 88: xmit_spi((BYTE)(arg >> 24));
  7093  002042  0103               	movlb	3	; () banked
  7094  002044  51A7               	movf	(?_send_cmd+3)& (0+255),w,b
  7095  002046  EC1F  F015         	call	_xmit_spi
  7096                           ;sd_mmc.c: 89: xmit_spi((BYTE)(arg >> 16));
  7097  00204A  0103               	movlb	3	; () banked
  7098  00204C  51A6               	movf	(?_send_cmd+2)& (0+255),w,b
  7099  00204E  EC1F  F015         	call	_xmit_spi
  7100                           ;sd_mmc.c: 90: xmit_spi((BYTE)(arg >> 8));
  7101  002052  0103               	movlb	3	; () banked
  7102  002054  51A5               	movf	(?_send_cmd+1)& (0+255),w,b
  7103  002056  EC1F  F015         	call	_xmit_spi
  7104                           ;sd_mmc.c: 91: xmit_spi((BYTE)arg);
  7105  00205A  0103               	movlb	3	; () banked
  7106  00205C  51A4               	movf	?_send_cmd& (0+255),w,b
  7107  00205E  EC1F  F015         	call	_xmit_spi
  7108                           ; send_cmd@n allocated to fsr2l
  7109                           ;sd_mmc.c: 92: n = 0x01;
  7110  002062  0E01               	movlw	1
  7111  002064  6ED9               	movwf	fsr2l,c
  7112                           ;sd_mmc.c: 93: if (cmd == (0x40+0)) n = 0x95;
  7113  002066  50E9               	movf	fsr0l,w,c
  7114  002068  0A40               	xorlw	64
  7115  00206A  E102               	bnz	l946
  7116  00206C  0E95               	movlw	149
  7117  00206E  6ED9               	movwf	fsr2l,c
  7118  002070                     l946:
  7119                           ; BSR set to: ?
  7120                           ;sd_mmc.c: 94: if (cmd == (0x40+8)) n = 0x87;
  7121  002070  50E9               	movf	fsr0l,w,c
  7122  002072  0A48               	xorlw	72
  7123  002074  E102               	bnz	l947
  7124  002076  0E87               	movlw	135
  7125  002078  6ED9               	movwf	fsr2l,c
  7126  00207A                     l947:
  7127                           ; BSR set to: ?
  7128                           ;sd_mmc.c: 95: xmit_spi(n);
  7129  00207A  50D9               	movf	fsr2l,w,c
  7130  00207C  EC1F  F015         	call	_xmit_spi
  7131                           ;sd_mmc.c: 98: if (cmd == (0x40+12)) rcv_spi();
  7132  002080  50E9               	movf	fsr0l,w,c
  7133  002082  0A4C               	xorlw	76
  7134  002084  B4D8               	btfsc	status,2,c
  7135  002086  EC28  F015         	call	_rcv_spi	;wreg free
  7136                           ; BSR set to: ?
  7137                           ;sd_mmc.c: 100: n = 10;
  7138  00208A  0E0A               	movlw	10
  7139  00208C  6ED9               	movwf	fsr2l,c
  7140                           ;sd_mmc.c: 101: do
  7141  00208E                     l951:
  7142                           ; BSR set to: ?
  7143                           ; send_cmd@res allocated to fsr1l
  7144                           ;sd_mmc.c: 102: res = rcv_spi();
  7145  00208E  EC28  F015         	call	_rcv_spi	;wreg free
  7146  002092  6EE1               	movwf	fsr1l,c
  7147                           ;sd_mmc.c: 103: while ((res & 0x80) && --n);
  7148  002094  AEE1               	btfss	fsr1l,7,c
  7149  002096  D002               	goto	l950
  7150  002098  2ED9               	decfsz	fsr2l,f,c
  7151  00209A  D7F9               	goto	l951
  7152                           ; BSR set to: ?
  7153  00209C                     l950:
  7154                           ; BSR set to: ?
  7155                           ;sd_mmc.c: 105: if (res > 1) return res;
  7156  00209C  0E01               	movlw	1
  7157  00209E  64E1               	cpfsgt	fsr1l,c
  7158  0020A0  D002               	goto	l945
  7159  0020A2  50E1               	movf	fsr1l,w,c
  7160  0020A4  D031               	goto	l943
  7161  0020A6                     l945:
  7162                           ; BSR set to: ?
  7163                           ;sd_mmc.c: 106: }
  7164                           ;sd_mmc.c: 110: xmit_spi(cmd);
  7165  0020A6  50E9               	movf	fsr0l,w,c
  7166  0020A8  EC1F  F015         	call	_xmit_spi
  7167                           ;sd_mmc.c: 111: xmit_spi((BYTE)(arg >> 24));
  7168  0020AC  0103               	movlb	3	; () banked
  7169  0020AE  51A7               	movf	(?_send_cmd+3)& (0+255),w,b
  7170  0020B0  EC1F  F015         	call	_xmit_spi
  7171                           ;sd_mmc.c: 112: xmit_spi((BYTE)(arg >> 16));
  7172  0020B4  0103               	movlb	3	; () banked
  7173  0020B6  51A6               	movf	(?_send_cmd+2)& (0+255),w,b
  7174  0020B8  EC1F  F015         	call	_xmit_spi
  7175                           ;sd_mmc.c: 113: xmit_spi((BYTE)(arg >> 8));
  7176  0020BC  0103               	movlb	3	; () banked
  7177  0020BE  51A5               	movf	(?_send_cmd+1)& (0+255),w,b
  7178  0020C0  EC1F  F015         	call	_xmit_spi
  7179                           ;sd_mmc.c: 114: xmit_spi((BYTE)arg);
  7180  0020C4  0103               	movlb	3	; () banked
  7181  0020C6  51A4               	movf	?_send_cmd& (0+255),w,b
  7182  0020C8  EC1F  F015         	call	_xmit_spi
  7183                           ;sd_mmc.c: 115: n = 0x01;
  7184  0020CC  0E01               	movlw	1
  7185  0020CE  6ED9               	movwf	fsr2l,c
  7186                           ;sd_mmc.c: 116: if (cmd == (0x40+0)) n = 0x95;
  7187  0020D0  50E9               	movf	fsr0l,w,c
  7188  0020D2  0A40               	xorlw	64
  7189  0020D4  E102               	bnz	l953
  7190  0020D6  0E95               	movlw	149
  7191  0020D8  6ED9               	movwf	fsr2l,c
  7192  0020DA                     l953:
  7193                           ; BSR set to: ?
  7194                           ;sd_mmc.c: 117: if (cmd == (0x40+8)) n = 0x87;
  7195  0020DA  50E9               	movf	fsr0l,w,c
  7196  0020DC  0A48               	xorlw	72
  7197  0020DE  E102               	bnz	l954
  7198  0020E0  0E87               	movlw	135
  7199  0020E2  6ED9               	movwf	fsr2l,c
  7200  0020E4                     l954:
  7201                           ; BSR set to: ?
  7202                           ;sd_mmc.c: 118: xmit_spi(n);
  7203  0020E4  50D9               	movf	fsr2l,w,c
  7204  0020E6  EC1F  F015         	call	_xmit_spi
  7205                           ;sd_mmc.c: 121: if (cmd == (0x40+12)) rcv_spi();
  7206  0020EA  50E9               	movf	fsr0l,w,c
  7207  0020EC  0A4C               	xorlw	76
  7208  0020EE  B4D8               	btfsc	status,2,c
  7209  0020F0  EC28  F015         	call	_rcv_spi	;wreg free
  7210                           ; BSR set to: ?
  7211                           ; send_cmd@n allocated to fsr1l
  7212                           ;sd_mmc.c: 123: n = 10;
  7213  0020F4  0E0A               	movlw	10
  7214  0020F6  6EE1               	movwf	fsr1l,c
  7215                           ;sd_mmc.c: 124: do
  7216  0020F8                     l958:
  7217                           ; BSR set to: ?
  7218                           ; send_cmd@res allocated to prodl
  7219                           ;sd_mmc.c: 125: res = rcv_spi();
  7220  0020F8  EC28  F015         	call	_rcv_spi	;wreg free
  7221  0020FC  6EF3               	movwf	prodl,c
  7222                           ;sd_mmc.c: 126: while ((res & 0x80) && --n);
  7223  0020FE  AEF3               	btfss	prodl,7,c
  7224  002100  D002               	goto	l957
  7225  002102  2EE1               	decfsz	fsr1l,f,c
  7226  002104  D7F9               	goto	l958
  7227                           ; BSR set to: ?
  7228  002106                     l957:
  7229                           ; BSR set to: ?
  7230                           ;sd_mmc.c: 128: return res;
  7231  002106  50F3               	movf	prodl,w,c
  7232                           ;sd_mmc.c: 129: }
  7233  002108                     l943:
  7234                           ; BSR set to: ?
  7235  002108  0012               	return	
  7236  00210A                     __end_of_send_cmd:
  7237                           	opt stack 0
  7238                           
  7239                           	psect	text39
  7240                           ; =============== function _send_cmd ends ======
      +                          ======
  7241                           ; *************** function _release_spi ********
      +                          *********
  7242                           ; Defined at:
  7243                           ;		line 38 in file "D:\ElabPh\SDMMC\PIC WAV Play
      +                          er\PIC18 SD WAV Audio Player\src_no_lcd\sd_mmc.c
      +                          "
  7244                           ; Parameters:
  7245                           ;		None
  7246                           ; Auto variables:
  7247                           ;		None
  7248                           ; Return value:
  7249                           ;		type: void 
  7250                           ;		size: 0
  7251                           ; Registers used:
  7252                           ;		wreg, status,2, cstack
  7253                           ; Tracked objects:
  7254                           ;		On entry : 0/3
  7255                           ;		On exit  : 0/0
  7256                           ;		Unchanged: FFFFFFF0/0
  7257                           ; Data sizes:
  7258                           ;		Autos:    0
  7259                           ;		Params:   0
  7260                           ;		Temp:     0
  7261                           ;		Total:    0
  7262                           ; This function calls:
  7263                           ;		_rcv_spi
  7264                           ; This function is called by:
  7265                           ;		_disk_initialize
  7266                           ;		_disk_readp
  7267                           ; This function uses a non-reentrant model
  7268                           ; 
  7269  000000                     
  7270                           ;sd_mmc.c: 36: static
  7271                           ;sd_mmc.c: 37: void release_spi (void)
  7272                           ;sd_mmc.c: 38: {
  7273  002A5A                     _release_spi:
  7274                           	opt stack 21
  7275                           ; BSR set to: ?
  7276                           ;sd_mmc.c: 39: LATCbits.LATC6 = 1;
  7277  002A5A  8C8B               	bsf	3979,6,c	;volatile
  7278                           ;sd_mmc.c: 40: rcv_spi();
  7279  002A5C  EF28  F015         	goto	_rcv_spi	;wreg free
  7280                           ;sd_mmc.c: 41: }
  7281                           ; BSR set to: ?
  7282  002A60                     __end_of_release_spi:
  7283                           	opt stack 0
  7284                           
  7285                           	psect	text40
  7286                           ; =============== function _release_spi ends ===
      +                          =========
  7287                           ; *************** function _wait_ready *********
      +                          ********
  7288                           ; Defined at:
  7289                           ;		line 49 in file "D:\ElabPh\SDMMC\PIC WAV Play
      +                          er\PIC18 SD WAV Audio Player\src_no_lcd\sd_mmc.c
      +                          "
  7290                           ; Parameters:
  7291                           ;		None
  7292                           ; Auto variables:
  7293                           ;		res         	       	type: unsigned char 
  7294                           ;		timeout     	       	type: unsigned long 
  7295                           ; Return value:
  7296                           ;		type: unsigned char 
  7297                           ;		size: 1
  7298                           ; Registers used:
  7299                           ;		wreg, fsr1l, status,2, status,0, cstack
  7300                           ; Tracked objects:
  7301                           ;		On entry : 0/3
  7302                           ;		On exit  : 0/0
  7303                           ;		Unchanged: FFFFFFF0/0
  7304                           ; Data sizes:
  7305                           ;		Autos:    4
  7306                           ;		Params:   0
  7307                           ;		Temp:     0
  7308                           ;		Total:    4
  7309                           ; This function calls:
  7310                           ;		_rcv_spi
  7311                           ; This function is called by:
  7312                           ;		_send_cmd
  7313                           ; This function uses a non-reentrant model
  7314                           ; 
  7315  000000                     
  7316                           ;sd_mmc.c: 47: static
  7317                           ;sd_mmc.c: 48: BYTE wait_ready (void)
  7318                           ;sd_mmc.c: 49: {
  7319  0028F8                     _wait_ready:
  7320                           	opt stack 20
  7321                           ; BSR set to: ?
  7322  0028F8  0103               	movlb	3	; () banked
  7323  0028FA  69A9               	setf	??_wait_ready& (0+255),b
  7324  0028FC  0E7F               	movlw	127
  7325  0028FE  6FAA               	movwf	(??_wait_ready+1)& (0+255),b
  7326  002900  0E00               	movlw	0
  7327  002902  6BAB               	clrf	(??_wait_ready+2)& (0+255),b
  7328  002904  6BAC               	clrf	(??_wait_ready+3)& (0+255),b
  7329  002906  D00B               	goto	l942
  7330  002908                     u10530:
  7331  002908  0103               	movlb	3	; () banked
  7332  00290A  07A9               	decf	??_wait_ready& (0+255),f,b
  7333  00290C  0E00               	movlw	0
  7334  00290E  5BAA               	subwfb	(??_wait_ready+1)& (0+255),f,b
  7335  002910  5BAB               	subwfb	(??_wait_ready+2)& (0+255),f,b
  7336  002912  5BAC               	subwfb	(??_wait_ready+3)& (0+255),f,b
  7337  002914  51AC               	movf	(??_wait_ready+3)& (0+255),w,b
  7338  002916  11A9               	iorwf	??_wait_ready& (0+255),w,b
  7339  002918  11AA               	iorwf	(??_wait_ready+1)& (0+255),w,b
  7340  00291A  11AB               	iorwf	(??_wait_ready+2)& (0+255),w,b
  7341  00291C  E005               	bz	l941
  7342                           ;sd_mmc.c: 52: char msg[10];
  7343                           ;sd_mmc.c: 54: do
  7344  00291E                     l942:
  7345                           ; BSR set to: ?
  7346                           ;sd_mmc.c: 55: res = rcv_spi();
  7347  00291E  EC28  F015         	call	_rcv_spi	;wreg free
  7348  002922  6EE1               	movwf	fsr1l,c
  7349                           ;sd_mmc.c: 56: while ((res != 0xFF) && (--timeou
      +                          t));
  7350  002924  28E1               	incf	fsr1l,w,c
  7351  002926  E1F0               	bnz	u10530
  7352                           ; BSR set to: ?
  7353  002928                     l941:
  7354                           ; BSR set to: ?
  7355                           ;sd_mmc.c: 58: return res;
  7356  002928  50E1               	movf	fsr1l,w,c
  7357                           ;sd_mmc.c: 59: }
  7358                           ; BSR set to: ?
  7359  00292A  0012               	return	
  7360  00292C                     __end_of_wait_ready:
  7361                           	opt stack 0
  7362                           
  7363                           	psect	text41
  7364                           ; =============== function _wait_ready ends ====
      +                          ========
  7365                           ; *************** function _xmit_spi ***********
      +                          ******
  7366                           ; Defined at:
  7367                           ;		line 31 in file "D:\ElabPh\SDMMC\PIC WAV Play
      +                          er\PIC18 SD WAV Audio Player\src_no_lcd\spi_pic1
      +                          8.c"
  7368                           ; Parameters:
  7369                           ;		c              size:   1reg:   wre	type: unsi
      +                          gned char 
  7370                           ; Auto variables:
  7371                           ;		None
  7372                           ; Return value:
  7373                           ;		type: void 
  7374                           ;		size: 0
  7375                           ; Registers used:
  7376                           ;		wreg, fsr1l
  7377                           ; Tracked objects:
  7378                           ;		On entry : 0/3
  7379                           ;		On exit  : 0/0
  7380                           ;		Unchanged: FFFFFFF0/0
  7381                           ; Data sizes:
  7382                           ;		Autos:    0
  7383                           ;		Params:   0
  7384                           ;		Temp:     0
  7385                           ;		Total:    0
  7386                           ; This function calls:
  7387                           ;		Nothing
  7388                           ; This function is called by:
  7389                           ;		_send_cmd
  7390                           ; This function uses a non-reentrant model
  7391                           ; 
  7392  000000                     
  7393                           ;spi_pic18.c: 30: void xmit_spi(BYTE c)
  7394                           ;spi_pic18.c: 31: {
  7395  002A3E                     _xmit_spi:
  7396                           	opt stack 20
  7397                           ; BSR set to: ?
  7398                           ; xmit_spi@c loaded to fsr1l
  7399  002A3E  CFE8 FFE1          	movff	wreg,fsr1l
  7400  002A42  50C9               	movf	4041,w,c	;volatile
  7401                           ;spi_pic18.c: 34: PIR1bits.SSPIF = 0;
  7402  002A44  969E               	bcf	3998,3,c	;volatile
  7403                           ;spi_pic18.c: 36: SSPBUF = c;
  7404  002A46  CFE1 FFC9          	movff	fsr1l,4041	;volatile
  7405                           ;spi_pic18.c: 38: while( !PIR1bits.SSPIF );
  7406  002A4A                     l456:
  7407                           ; BSR set to: ?
  7408  002A4A  B69E               	btfsc	3998,3,c	;volatile
  7409                           ; BSR set to: ?
  7410                           ;spi_pic18.c: 39: }
  7411                           ; BSR set to: ?
  7412  002A4C  0012               	return	
  7413  002A4E  D7FD               	goto	l456
  7414  002A50                     __end_of_xmit_spi:
  7415                           	opt stack 0
  7416                           
  7417                           	psect	text42
  7418                           ; =============== function _xmit_spi ends ======
      +                          ======
  7419                           ; *************** function _rcv_spi ************
      +                          *****
  7420                           ; Defined at:
  7421                           ;		line 42 in file "D:\ElabPh\SDMMC\PIC WAV Play
      +                          er\PIC18 SD WAV Audio Player\src_no_lcd\spi_pic1
      +                          8.c"
  7422                           ; Parameters:
  7423                           ;		None
  7424                           ; Auto variables:
  7425                           ;		None
  7426                           ; Return value:
  7427                           ;		type: unsigned char 
  7428                           ;		size: 1
  7429                           ; Registers used:
  7430                           ;		wreg, status,2
  7431                           ; Tracked objects:
  7432                           ;		On entry : 0/0
  7433                           ;		On exit  : 0/0
  7434                           ;		Unchanged: FFFFFFFF/0
  7435                           ; Data sizes:
  7436                           ;		Autos:    0
  7437                           ;		Params:   0
  7438                           ;		Temp:     0
  7439                           ;		Total:    0
  7440                           ; This function calls:
  7441                           ;		Nothing
  7442                           ; This function is called by:
  7443                           ;		_release_spi
  7444                           ;		_wait_ready
  7445                           ;		_send_cmd
  7446                           ;		_disk_initialize
  7447                           ;		_disk_readp
  7448                           ; This function uses a non-reentrant model
  7449                           ; 
  7450  000000                     
  7451                           ;spi_pic18.c: 41: BYTE rcv_spi (void)
  7452                           ;spi_pic18.c: 42: {
  7453  002A50                     _rcv_spi:
  7454                           	opt stack 19
  7455                           ; BSR set to: ?
  7456                           ;spi_pic18.c: 46: SSPBUF = 0xFF;
  7457  002A50  68C9               	setf	4041,c	;volatile
  7458                           ;spi_pic18.c: 47: while ( !SSPSTATbits.BF );
  7459  002A52                     l460:
  7460                           ; BSR set to: ?
  7461  002A52  A0C7               	btfss	4039,0,c	;volatile
  7462  002A54  D7FE               	goto	l460
  7463                           ; BSR set to: ?
  7464                           ;spi_pic18.c: 49: return ( SSPBUF );
  7465  002A56  50C9               	movf	4041,w,c	;volatile
  7466                           ;spi_pic18.c: 51: }
  7467                           ; BSR set to: ?
  7468  002A58  0012               	return	
  7469  002A5A                     __end_of_rcv_spi:
  7470                           	opt stack 0
  7471                           
  7472                           	psect	text43
  7473                           ; =============== function _rcv_spi ends =======
      +                          =====
  7474                           ; *************** function _isr ****************
      +                          *
  7475                           ; Defined at:
  7476                           ;		line 77 in file "D:\ElabPh\SDMMC\PIC WAV Play
      +                          er\PIC18 SD WAV Audio Player\src_no_lcd\pwm_audi
      +                          o.c"
  7477                           ; Parameters:
  7478                           ;		None
  7479                           ; Auto variables:
  7480                           ;		None
  7481                           ; Return value:
  7482                           ;		type: void 
  7483                           ;		size: 0
  7484                           ; Registers used:
  7485                           ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
      +                          k
  7486                           ; Tracked objects:
  7487                           ;		On entry : 0/0
  7488                           ;		On exit  : 0/0
  7489                           ;		Unchanged: FFFFFFF0/0
  7490                           ; Data sizes:
  7491                           ;		Autos:    0
  7492                           ;		Params:   0
  7493                           ;		Temp:     2
  7494                           ;		Total:    2
  7495                           ; This function calls:
  7496                           ;		_set_pwm1_duty
  7497                           ; This function is called by:
  7498                           ;		Interrupt level 2
  7499                           ; This function uses a non-reentrant model
  7500                           ; 
  7501  000000                     
  7502                           ;pwm_audio.c: 76: void interrupt isr(void)
  7503                           ;pwm_audio.c: 77: {
  7504  0027EA                     _isr:
  7505                           	opt stack 0
  7506                           ; BSR set to: ?
  7507  0027EA  0006               	pop		; remove dummy address from shadow registe
      +                          r refresh
  7508                           ;pwm_audio.c: 79: if((PIE1bits.TMR1IE)&&(PIR1bit
      +                          s.TMR1IF))
  7509  0027EC  B09D               	btfsc	3997,0,c	;volatile
  7510  0027EE  A09E               	btfss	3998,0,c	;volatile
  7511  0027F0  D01C               	goto	i2l795
  7512                           ;pwm_audio.c: 80: {
  7513                           ;pwm_audio.c: 81: TMR1H = TMR1H_preload;
  7514  0027F2  C008 FFCF          	movff	8,4047	;volatile
  7515                           ;pwm_audio.c: 82: TMR1L = TMR1L_preload;
  7516  0027F6  C007 FFCE          	movff	7,4046	;volatile
  7517                           ;pwm_audio.c: 84: set_pwm1_duty ( WAV_L_BUFF[pWA
      +                          VOUT] );
  7518  0027FA  0101               	movlb	1	; () banked
  7519  0027FC  0E00               	movlw	0
  7520  0027FE  2402               	addwf	2,w,c	;volatile
  7521  002800  6EE9               	movwf	fsr0l,c
  7522  002802  0E01               	movlw	1
  7523  002804  2003               	addwfc	3,w,c	;volatile
  7524  002806  6EEA               	movwf	fsr0h,c
  7525  002808  50EF               	movf	indf0,w,c
  7526  00280A  ECF2  F014         	call	_set_pwm1_duty
  7527                           ;pwm_audio.c: 86: ++pWAVOUT;
  7528  00280E  4A02               	infsnz	2,f,c	;volatile
  7529  002810  2A03               	incf	3,f,c	;volatile
  7530                           ;pwm_audio.c: 87: pWAVOUT &= (256-1);
  7531  002812  0EFF               	movlw	255
  7532  002814  1602               	andwf	2,f,c	;volatile
  7533  002816  0E00               	movlw	0
  7534  002818  1603               	andwf	3,f,c	;volatile
  7535                           ;pwm_audio.c: 89: if(pWAVOUT == pWAVIN)
  7536  00281A  5005               	movf	5,w,c	;volatile
  7537  00281C  1803               	xorwf	3,w,c	;volatile
  7538  00281E  E102               	bnz	i2u10795
  7539  002820  5004               	movf	4,w,c	;volatile
  7540  002822  1802               	xorwf	2,w,c	;volatile
  7541  002824                     i2u10795:
  7542  002824  B4D8               	btfsc	status,2,c
  7543                           ;pwm_audio.c: 90: {
  7544                           ;pwm_audio.c: 92: PIE1bits.TMR1IE = 1;
  7545  002826  809D               	bsf	3997,0,c	;volatile
  7546                           ; BSR set to: ?
  7547                           ;pwm_audio.c: 93: }
  7548                           ;pwm_audio.c: 95: PIR1bits.TMR1IF=0;
  7549  002828  909E               	bcf	3998,0,c	;volatile
  7550  00282A                     i2l795:
  7551                           ; BSR set to: ?
  7552                           ;pwm_audio.c: 96: }
  7553                           ;pwm_audio.c: 98: }
  7554                           ; BSR set to: ?
  7555  00282A  C3AE  FFEA         	movff	??_isr+1,fsr0h
  7556  00282E  C3AD  FFE9         	movff	??_isr,fsr0l
  7557  002832  0011               	retfie		f
  7558  002834                     __end_of_isr:
  7559                           	opt stack 0
  7560                           
  7561                           	psect	intcode
  7562  000008                     int_func:
  7563                           	opt stack 31
  7564  000008  CFE9 F3AD          	movff	fsr0l,??_isr
  7565  00000C  CFEA F3AE          	movff	fsr0h,??_isr+1
  7566  000010  EDF5  F013         	call	_isr,f	;refresh shadow registers
  7567                           
  7568                           	psect	text44
  7569                           ; =============== function _isr ends ===========
      +                          =
  7570                           ; *************** function _set_pwm1_duty ******
      +                          ***********
  7571                           ; Defined at:
  7572                           ;		line 44 in file "D:\ElabPh\SDMMC\PIC WAV Play
      +                          er\PIC18 SD WAV Audio Player\src_no_lcd\pwm_audi
      +                          o.c"
  7573                           ; Parameters:
  7574                           ;		duty1          size:   1reg:   wre	type: unsi
      +                          gned char 
  7575                           ; Auto variables:
  7576                           ;		duty1       	       	type: unsigned char 
  7577                           ; Return value:
  7578                           ;		type: void 
  7579                           ;		size: 0
  7580                           ; Registers used:
  7581                           ;		wreg, status,2, status,0
  7582                           ; Tracked objects:
  7583                           ;		On entry : F/1
  7584                           ;		On exit  : F/3
  7585                           ;		Unchanged: FFFFFFF0/0
  7586                           ; Data sizes:
  7587                           ;		Autos:    1
  7588                           ;		Params:   0
  7589                           ;		Temp:     0
  7590                           ;		Total:    1
  7591                           ; This function calls:
  7592                           ;		Nothing
  7593                           ; This function is called by:
  7594                           ;		_isr
  7595                           ; This function uses a non-reentrant model
  7596                           ; 
  7597  000000                     
  7598                           ;pwm_audio.c: 43: void set_pwm1_duty(unsigned ch
      +                          ar duty1)
  7599                           ;pwm_audio.c: 44: {
  7600  0029E4                     _set_pwm1_duty:
  7601                           	opt stack 30
  7602                           ; BSR set to: 1
  7603                           ;set_pwm1_duty@duty1 stored from wreg
  7604  0029E4  CFE8 F3AF          	movff	wreg,??_set_pwm1_duty
  7605  0029E8  0103               	movlb	3	; () banked
  7606  0029EA  41AF               	rrncf	??_set_pwm1_duty& (0+255),w,b
  7607  0029EC  42E8               	rrncf	wreg,f,c
  7608  0029EE  0B3F               	andlw	63
  7609  0029F0  6EBE               	movwf	4030,c	;volatile
  7610                           ;pwm_audio.c: 46: CCP1CON &= 0b11001111;
  7611  0029F2  0ECF               	movlw	207
  7612  0029F4  16BD               	andwf	4029,f,c	;volatile
  7613                           ;pwm_audio.c: 47: CCP1CON |= (duty1<<4)&0b001100
      +                          00;
  7614  0029F6  39AF               	swapf	??_set_pwm1_duty& (0+255),w,b
  7615  0029F8  0BF0               	andlw	240
  7616  0029FA  0B30               	andlw	48
  7617  0029FC  12BD               	iorwf	4029,f,c	;volatile
  7618                           ;pwm_audio.c: 48: }
  7619                           ; BSR set to: 3
  7620  0029FE  0012               	return	
  7621  002A00                     __end_of_set_pwm1_duty:
  7622                           	opt stack 0
  7623                           
  7624                           	psect	smallconst
  7625                           ; =============== function _set_pwm1_duty ends =
      +                          ===========
  7626  000400  00                 	db	0	;reserve
  7627  000000                     	;_Buff
  7628  000000                     	;_WAV_L_BUFF
  7629  000000                     	;_Fs
  7630  000000                     	;_Fno
  7631  000000                     	;_Dir
  7632  000000                     	;_BitsPerSample
  7633  000000                     	;_NumChannels
  7634  000000                     	;_pWAVIN
  7635  000000                     	;_pWAVOUT
  7636  000000                     	;_rb
  7637  000000                     	;_CardType
  7638  000000                     	;_FatFs
  7639  000000                     	;_TMR1H_preload
  7640  000000                     	;_TMR1L_preload
  7641  000000                     
  7642  000000                     
  7643  000000                     
  7644  000000                     
  7645  000000                     
  7646  000000                     
  7647  000000                     
  7648  000000                     
  7649  000000                     
  7650  000000                     
  7651  000000                     
  7652  000000                     
  7653  000000                     
  7654  000000                     
  7655  000000                     
  7656  000000                     
  7657  000000                     
  7658  000000                     
  7659  000000                     
  7660  000000                     
  7661  000000                     
  7662  000000                     
  7663  000401                     STR_2:
  7664                           ; BSR set to: 3
  7665  000401  2E                 	db	46
  7666  000402  57                 	db	87	;'W'
  7667  000403  41                 	db	65	;'A'
  7668  000404  56                 	db	86	;'V'
  7669  000405  00                 	db	0
  7670  000000                     
  7671                           ; #pragma config settings
  7672  000000                     
  7673  000000                     
  7674  000000                     
  7675  000000                     
  7676  000000                     
  7677  000000                     
  7678  000000                     
  7679  000000                     
  7680  000000                     
  7681  000406  00                 	db	0	; dummy byte at the end
  7682                           
  7683                           	psect	param3
  7684  000000                     
  7685  000000                     
  7686  000000                     
  7687  000000                     
  7688  000000                     
  7689  000000                     
  7690                           
  7691                           	psect	pa_nodes
  7692  0015CC                     PL19:
  7693  0015CC  518E               	movf	(??_get_fat+13)& (0+255),w,b
  7694  0015CE  2592               	addwf	(??_get_fat+17)& (0+255),w,b
  7695  0015D0  6F98               	movwf	(?_disk_readp+2)& (0+255),b
  7696  0015D2  518F               	movf	(??_get_fat+14)& (0+255),w,b
  7697  0015D4  2193               	addwfc	(??_get_fat+18)& (0+255),w,b
  7698  0015D6  6F99               	movwf	(?_disk_readp+3)& (0+255),b
  7699  0015D8  5190               	movf	(??_get_fat+15)& (0+255),w,b
  7700  0015DA  2194               	addwfc	(??_get_fat+19)& (0+255),w,b
  7701  0015DC  6F9A               	movwf	(?_disk_readp+4)& (0+255),b
  7702  0015DE  5191               	movf	(??_get_fat+16)& (0+255),w,b
  7703  0015E0  2195               	addwfc	(??_get_fat+20)& (0+255),w,b
  7704  0015E2  6F9B               	movwf	(?_disk_readp+5)& (0+255),b
  7705  0015E4  0E88               	movlw	low (??_get_fat+7)
  7706  0015E6  6F96               	movwf	?_disk_readp& (0+255),b
  7707  0015E8  0E03               	movlw	high (??_get_fat+7)
  7708  0015EA  6F97               	movwf	(?_disk_readp+1)& (0+255),b
  7709  0015EC  0012               	return	
  7710  0015EE                     PL18:
  7711  0015EE  5183               	movf	(??_get_fat+2)& (0+255),w,b
  7712  0015F0  0F0C               	addlw	12
  7713  0015F2  6EE9               	movwf	fsr0l,c
  7714  0015F4  6AEA               	clrf	fsr0h,c
  7715  0015F6  CFEE F38C          	movff	postinc0,??_get_fat+11
  7716  0015FA  CFEE F38D          	movff	postinc0,??_get_fat+12
  7717  0015FE  CFEE F38E          	movff	postinc0,??_get_fat+13
  7718  001602  CFEE F38F          	movff	postinc0,??_get_fat+14
  7719  001606  5186               	movf	(??_get_fat+5)& (0+255),w,b
  7720  001608  258C               	addwf	(??_get_fat+11)& (0+255),w,b
  7721  00160A  6F98               	movwf	(?_disk_readp+2)& (0+255),b
  7722  00160C  5187               	movf	(??_get_fat+6)& (0+255),w,b
  7723  00160E  218D               	addwfc	(??_get_fat+12)& (0+255),w,b
  7724  001610  6F99               	movwf	(?_disk_readp+3)& (0+255),b
  7725  001612  0E00               	movlw	0
  7726  001614  218E               	addwfc	(??_get_fat+13)& (0+255),w,b
  7727  001616  6F9A               	movwf	(?_disk_readp+4)& (0+255),b
  7728  001618  0E00               	movlw	0
  7729  00161A  218F               	addwfc	(??_get_fat+14)& (0+255),w,b
  7730  00161C  6F9B               	movwf	(?_disk_readp+5)& (0+255),b
  7731  00161E  0E88               	movlw	low (??_get_fat+7)
  7732  001620  6F96               	movwf	?_disk_readp& (0+255),b
  7733  001622  0E03               	movlw	high (??_get_fat+7)
  7734  001624  6F97               	movwf	(?_disk_readp+1)& (0+255),b
  7735  001626  0012               	return	
  7736  001628                     PL17:
  7737  001628  256C               	addwf	?_dir_next& (0+255),w,b
  7738  00162A  6EE9               	movwf	fsr0l,c
  7739  00162C  0E00               	movlw	0
  7740  00162E  216D               	addwfc	(?_dir_next+1)& (0+255),w,b
  7741  001630  6EEA               	movwf	fsr0h,c
  7742  001632  CFEE F375          	movff	postinc0,??_dir_next+7
  7743  001636  CFEE F376          	movff	postinc0,??_dir_next+8
  7744  00163A  CFEE F377          	movff	postinc0,??_dir_next+9
  7745  00163E  CFEE F378          	movff	postinc0,??_dir_next+10
  7746  001642  5178               	movf	(??_dir_next+10)& (0+255),w,b
  7747  001644  1175               	iorwf	(??_dir_next+7)& (0+255),w,b
  7748  001646  1176               	iorwf	(??_dir_next+8)& (0+255),w,b
  7749  001648  1177               	iorwf	(??_dir_next+9)& (0+255),w,b
  7750  00164A  0012               	return	
  7751  00164C                     PL16:
  7752  00164C  216C               	addwfc	(??_create_name+3)& (0+255),w,b
  7753  00164E  6F6E               	movwf	(??_create_name+5)& (0+255),b
  7754  001650  516D               	movf	(??_create_name+4)& (0+255),w,b
  7755  001652  6EF6               	movwf	tblptrl,c
  7756  001654  6EE9               	movwf	fsr0l,c
  7757  001656  0E03               	movlw	(high __ramtop+-1)
  7758  001658  6EEA               	movwf	fsr0h,c
  7759  00165A  516E               	movf	(??_create_name+5)& (0+255),w,b
  7760  00165C  0012               	return	
  7761  00165E                     PL15:
  7762  00165E  2554               	addwf	?_follow_path& (0+255),w,b
  7763  001660  6EE9               	movwf	fsr0l,c
  7764  001662  0E00               	movlw	0
  7765  001664  2155               	addwfc	(?_follow_path+1)& (0+255),w,b
  7766  001666  6EEA               	movwf	fsr0h,c
  7767  001668  CFEE F359          	movff	postinc0,??_follow_path+1
  7768  00166C  CFED F35A          	movff	postdec0,??_follow_path+2
  7769  001670  0E0B               	movlw	11
  7770  001672  2559               	addwf	(??_follow_path+1)& (0+255),w,b
  7771  001674  6EE9               	movwf	fsr0l,c
  7772  001676  0E00               	movlw	0
  7773  001678  215A               	addwfc	(??_follow_path+2)& (0+255),w,b
  7774  00167A  6EEA               	movwf	fsr0h,c
  7775  00167C  50EF               	movf	indf0,w,c
  7776  00167E  0012               	return	
  7777  001680                     PL14:
  7778  001680  6EF6               	movwf	tblptrl,c
  7779  001682  6EE9               	movwf	fsr0l,c
  7780  001684  0E03               	movlw	(high __ramtop+-1)
  7781  001686  6EEA               	movwf	fsr0h,c
  7782  001688  5157               	movf	(?_follow_path+3)& (0+255),w,b
  7783  00168A  0012               	return	
  7784  00168C                     PL13:
  7785  00168C  C349  FFE9         	movff	?_check_fs,fsr0l
  7786  001690  C34A  FFEA         	movff	?_check_fs+1,fsr0h
  7787  001694  52EE               	movf	postinc0,f,c
  7788  001696  50ED               	movf	postdec0,w,c
  7789  001698  0A41               	xorlw	65
  7790  00169A  0E46               	movlw	70
  7791  00169C  0012               	return	
  7792  00169E                     PL12:
  7793  00169E  C34B  F398         	movff	?_check_fs+2,?_disk_readp+2
  7794  0016A2  C34C  F399         	movff	?_check_fs+3,?_disk_readp+3
  7795  0016A6  C34D  F39A         	movff	?_check_fs+4,?_disk_readp+4
  7796  0016AA  C34E  F39B         	movff	?_check_fs+5,?_disk_readp+5
  7797  0016AE  C349  F396         	movff	?_check_fs,?_disk_readp
  7798  0016B2  C34A  F397         	movff	?_check_fs+1,?_disk_readp+1
  7799  0016B6  0012               	return	
  7800  0016B8                     PL11:
  7801  0016B8  6EE9               	movwf	fsr0l,c
  7802  0016BA  6AEA               	clrf	fsr0h,c
  7803  0016BC  0E03               	movlw	high (??_disk_initialize+3)
  7804  0016BE  22EA               	addwfc	fsr0h,f,c
  7805  0016C0  0012               	return	
  7806  0016C2                     PL10:
  7807  0016C2  5D19               	subwf	(??_load_header+8)& (0+255),w,b
  7808  0016C4  0E00               	movlw	0
  7809  0016C6  591A               	subwfb	(??_load_header+9)& (0+255),w,b
  7810  0016C8  0E00               	movlw	0
  7811  0016CA  591B               	subwfb	(??_load_header+10)& (0+255),w,b
  7812  0016CC  0E00               	movlw	0
  7813  0016CE  591C               	subwfb	(??_load_header+11)& (0+255),w,b
  7814  0016D0  0012               	return	
  7815  0016D2                     PL9:
  7816  0016D2  0103               	movlb	3	; () banked
  7817  0016D4  6B21               	clrf	?_pf_read& (0+255),b
  7818  0016D6  0E02               	movlw	2
  7819  0016D8  6F22               	movwf	(?_pf_read+1)& (0+255),b
  7820  0016DA  0012               	return	
  7821  0016DC                     PL8:
  7822  0016DC  6EE9               	movwf	fsr0l,c
  7823  0016DE  0E00               	movlw	0
  7824  0016E0  2131               	addwfc	(??_get_fileinfo+1)& (0+255),w,b
  7825  0016E2  6EEA               	movwf	fsr0h,c
  7826  0016E4  512F               	movf	?_get_fileinfo& (0+255),w,b
  7827  0016E6  0012               	return	
  7828  0016E8                     PL7:
  7829  0016E8  5903               	subwfb	(??_pf_mount+3)& (0+255),w,b
  7830  0016EA  0E00               	movlw	0
  7831  0016EC  5904               	subwfb	(??_pf_mount+4)& (0+255),w,b
  7832  0016EE  0E00               	movlw	0
  7833  0016F0  5905               	subwfb	(??_pf_mount+5)& (0+255),w,b
  7834  0016F2  0012               	return	
  7835  0016F4                     PL6:
  7836  0016F4  C30A  F398         	movff	??_pf_mount+10,?_disk_readp+2
  7837  0016F8  C30B  F399         	movff	??_pf_mount+11,?_disk_readp+3
  7838  0016FC  C30C  F39A         	movff	??_pf_mount+12,?_disk_readp+4
  7839  001700  C30D  F39B         	movff	??_pf_mount+13,?_disk_readp+5
  7840  001704  0E12               	movlw	low (??_pf_mount+18)
  7841  001706  6F96               	movwf	?_disk_readp& (0+255),b
  7842  001708  0E03               	movlw	high (??_pf_mount+18)
  7843  00170A  6F97               	movwf	(?_disk_readp+1)& (0+255),b
  7844  00170C  0012               	return	
  7845  00170E                     PL5:
  7846  00170E  C30B  F34C         	movff	??_pf_mount+11,?_check_fs+3
  7847  001712  C30C  F34D         	movff	??_pf_mount+12,?_check_fs+4
  7848  001716  C30D  F34E         	movff	??_pf_mount+13,?_check_fs+5
  7849  00171A  0E12               	movlw	low (??_pf_mount+18)
  7850  00171C  6F49               	movwf	?_check_fs& (0+255),b
  7851  00171E  0E03               	movlw	high (??_pf_mount+18)
  7852  001720  6F4A               	movwf	(?_check_fs+1)& (0+255),b
  7853  001722  0012               	return	
  7854  001724                     PL4:
  7855  001724  0103               	movlb	3	; () banked
  7856  001726  2B07               	incf	(??_play_wave_file+7)& (0+255),f,b
  7857  001728  0E00               	movlw	0
  7858  00172A  2308               	addwfc	(??_play_wave_file+8)& (0+255),f,b
  7859  00172C  2309               	addwfc	(??_play_wave_file+9)& (0+255),f,b
  7860  00172E  230A               	addwfc	(??_play_wave_file+10)& (0+255),f,b
  7861  001730  0E80               	movlw	128
  7862  001732  0012               	return	
  7863  001734                     PL3:
  7864  001734  5D07               	subwf	(??_play_wave_file+7)& (0+255),w,b
  7865  001736  0E00               	movlw	0
  7866  001738  5908               	subwfb	(??_play_wave_file+8)& (0+255),w,b
  7867  00173A  0E00               	movlw	0
  7868  00173C  5909               	subwfb	(??_play_wave_file+9)& (0+255),w,b
  7869  00173E  0E00               	movlw	0
  7870  001740  590A               	subwfb	(??_play_wave_file+10)& (0+255),w,b
  7871  001742  0012               	return	
  7872  001744                     PL2:
  7873  001744  6B23               	clrf	(?_pf_read+2)& (0+255),b
  7874  001746  0E01               	movlw	1
  7875  001748  6F24               	movwf	(?_pf_read+3)& (0+255),b
  7876  00174A  0103               	movlb	3	; () banked
  7877  00174C  6B21               	clrf	?_pf_read& (0+255),b
  7878  00174E  0E02               	movlw	2
  7879  001750  6F22               	movwf	(?_pf_read+1)& (0+255),b
  7880  001752  0012               	return	
  7881                           tblptrh	equ	0xFF7
  7882                           tblptrl	equ	0xFF6
  7883                           tablat	equ	0xFF5
  7884                           prodh	equ	0xFF4
  7885                           prodl	equ	0xFF3
  7886                           intcon	equ	0xFF2
  7887                           indf0	equ	0xFEF
  7888                           postinc0	equ	0xFEE
  7889                           postdec0	equ	0xFED
  7890                           fsr0h	equ	0xFEA
  7891                           fsr0l	equ	0xFE9
  7892                           wreg	equ	0xFE8
  7893                           indf1	equ	0xFE7
  7894                           postinc1	equ	0xFE6
  7895                           postdec1	equ	0xFE5
  7896                           fsr1h	equ	0xFE2
  7897                           fsr1l	equ	0xFE1
  7898                           fsr2h	equ	0xFDA
  7899                           fsr2l	equ	0xFD9
  7900                           status	equ	0xFD8


HI-TECH Software PICC-18 Macro Assembler V9.64 build 5495 
Symbol Table                                           Sat May 22 08:49:08 2010

            _pwm_audio_init 2A2C                 get_fat@clst 037D  
              create_name@d 0369                create_name@p 036B  
               _SSPSTATbits 000FC7                          _Fs 00000A  
                        _rb 000000               pf_mount@bsect 030A  
             pf_mount@mclst 0302               pf_mount@fsize 030E  
             create_name@dj 0365               pf_mount@tsect 0306  
             create_name@ni 036A                         l201 1FC8  
                       l202 2008                         l211 1F1E  
                       l204 1E34                         l221 188A  
                       l213 17A2                         l141 2756  
                       l214 189C                         l206 1F0A  
                       l230 1C6A                         l223 1CFE  
                       l303 22D6                         l160 29AE  
                       l240 15C8                         l208 1ED0  
                       l224 1C0C                         l304 2392  
                       l312 23A6                         l217 17F4  
                       l241 14DC                         l209 1EF2  
                       l225 1C40                         l153 2968  
                       l305 2388                         l313 243C  
                       l145 2764                         l170 106A  
                       l250 2500                         l306 2370  
                       l314 23E0                         l171 0E6E  
                       l219 187A                         l235 1442  
                       l307 236C                         l172 0EC0  
                       l164 268C                         l252 253E  
                       l228 1C2C                         l316 2402  
                       l148 278A                         l181 24E0  
                       l245 1518                         l253 2568  
                       l229 1C96                         l149 2776  
                       l182 248C                         l166 269C  
                       l238 1480                         l270 21F2  
                       l262 083C                         l254 0B02  
                       l167 1094                         l183 1E1A  
                       l271 211A                         l263 0858  
                       l255 07BE                         l184 1D6C  
                       l248 1552                         l272 2164  
                       l264 0884                         l256 07CE  
                       l177 0F7C                         l169 1086  
                       l193 19D0                         l185 1D9A  
                       l281 0D42                         l249 256A  
                       l601 1282                         l273 2170  
                       l265 090A                         l257 082E  
                       l194 19FE                         l186 1A5C  
                       l282 0CCC                         l274 0E26  
                       l610 10DE                         l602 10B8  
                       l266 09F2                         l258 0808  
                       l179 0FE4                         l195 201C  
                       l291 0464                         l275 0B24  
                       l267 0A02                         l460 2A52  
                       l188 1A4A                         l196 1F38  
                       l284 0E1A                         l276 0B38  
                       l268 0A2C                         l620 1440  
                       l189 194A                         l293 05EC  
                       l613 1134                         l605 11B2  
                       l269 0A74                         l198 201A  
                       l294 061C                         l286 0D7E  
                       l278 0BA6                         l614 1148  
                       l630 1312                         l199 1F48  
                       l295 0620                         l615 115E  
                       l631 143C                         l623 1336  
                       l456 2A4A                         l288 07AC  
                       l800 2930                         l616 1184  
                       l632 1394                         l289 0412  
                       l641 13E6                         l618 1196  
                       l626 12D0                         l299 07A0  
                       l635 1344                         l627 12E2  
                       l652 13F4                         l644 13A4  
                       l636 1356                         l653 1406  
                       l645 13B6                         l639 137C  
                       l941 2928                         l942 291E  
                       l950 209C                         l951 208E  
                       l943 2108                         l944 2036  
                       l960 1A68                         l953 20DA  
                       l945 20A6                         l954 20E4  
                       l946 2070                         l947 207A  
                       l971 1AF4                         l963 1A6E  
                       l964 1BA8                         l957 2106  
                       l973 1AEE                         l965 1B36  
                       l958 20F8                         l982 1B8A  
                       l966 1AA6                         l991 224A  
                       l959 1BC2                         l975 1B10  
                       l992 2240                         l984 1B84  
                       l986 1BB8                         l979 1B58  
                       l988 2208                         l997 227A  
                       l989 22BE                         _PR2 000FCB  
                       _Dir 000050                         _Fno 000036  
                       _isr 27EA                         prod 000FF3  
                       wreg 000FE8                disk_readp@bc 03A0  
                      l1000 228C                        l1003 22AC  
                      l1004 26FE                        l1005 26EE  
                      l1006 26AC                        l1007 26FC  
                      l1008 26D6                        l1303 2720  
                      l1304 2742                        l1402 29A4  
                      l1315 27A6                        l1411 2646  
                      l1316 27BA                        l1412 25E6  
                      l1405 2986                        l1406 2996  
                      l1415 263C                        l1409 28C8  
                      l1294 2594                        l1295 25C2  
                      l1288 25D0                        l1289 2582  
                      l1297 2750                        l1298 270E  
                      ?_isr 03AD                        STR_1 0405  
                      STR_2 0401                        u9030 0E16  
                      u9140 0854                        u9215 0AA0  
                      u8435 1126                        u8460 1130  
                      u9350 103C                        u9335 0F60  
                      u9175 092E                        u9425 195A  
                      u9450 19FA                        u9355 1032  
                      u9275 0E96                        u9540 1458  
                      u9550 1462                        u9480 1FA8  
                      u9560 1478                        u9800 1EB0  
                      u8825 04AE                        u9650 154C  
                      u9475 1F66                        u9547 1452  
                      u9580 14AA                        u9486 1FAA  
                      u8870 06DC                        u8950 0C0A  
                      u9806 1EB2                        u9567 1472  
            ??_get_fileinfo 0330                        u8890 074C  
                      u9587 14A4                        u8955 0C00  
                      u8895 0742                        u9795 1E72  
                      _Buff 000200                        _main 2752  
                      fsr0h 000FEA                        fsr1h 000FE2  
                      indf0 000FEF                        fsr0l 000FE9  
                      indf1 000FE7                        fsr1l 000FE1  
                      fsr2l 000FD9                        prodh 000FF4  
                      prodl 000FF3                        start 0014  
        load_header@ChunkID 0311      __end_of_pwm_audio_init 2A3E  
             disk_readp@lba 0398               disk_readp@cnt 039E  
             disk_readp@ofs 039C          disk_initialize@cmd 0349  
              ?_follow_path 0354          disk_initialize@ocr 034C  
        disk_initialize@tmr 034A             create_name@path 0367  
                     ??_isr 03AD                 _strstr$1150 0301  
              ?_load_header 030D                       l30220 1202  
                     l30221 1214                       l30230 1268  
                     l30222 121C                       l30231 1248  
                     l30223 1216                       l30232 1250  
                     l30224 1224                       l30233 1258  
                     l30225 122E                       l30234 1260  
                     l30226 1226                       l30218 1200  
                     l30227 1236                       l30219 120C  
                     l30228 1240                       l30229 1238  
                     ?_main 0300             __end_of___lldiv 25E2  
                     u10060 2232                       u10045 21FA  
                     u10180 2564                       u10520 1BC0  
                     u10530 2908                       u10700 1850  
                     u10470 1B6A                       u10390 1AD2  
           __end_of___llmod 2752                       u10730 18D4  
                     u10731 18D0                       u10707 184A  
                     u10740 265E                       u10580 17C2  
                     _T2CON 000FCA                       u10760 29C6  
                     u10736 18D6                       u10587 17BC  
                     u10980 2642                       i2l795 282A  
                     _TMR1H 000FCF                       _TMR1L 000FCE  
                     _TRISC 000F94                       _FatFs 000009  
     set_sampling_rate@rate 0321         ___lmul@multiplicand 0389  
           __end_of_get_fat 1096                       _delay 295C  
           __end_of_mem_cmp 26A6             __end_of_mem_set 29C8  
           __end_of_pf_read 0E28             __end_of_pf_open 21F4  
           __end_of_rcv_spi 2A5A                       tablat 000FF5  
                     status 000FD8             __end_of_strncmp 2648  
            disk_readp@buff 0396             ?_pwm_audio_init 0300  
              __end_of_main 279E                      ??_main 0300  
              ?_release_spi 03A4               __activetblptr 000002  
                    ?_delay 0300                      _ADCON1 000FC1  
          ___llmod@dividend 0340                      _CCPR1L 000FBE  
                    _CCPR2L 000FBB            __end_of___aslmul 28C0  
         _set_sampling_rate 2834                      _SSPBUF 000FC9  
          __end_of_check_fs 256C          ?_set_sampling_rate 0321  
                    __Ldata 000000            __end_of_dir_find 201E  
          __end_of_dir_read 1F22            __end_of_dir_next 1A5E  
                    _pWAVIN 000004                      ___lmul 279E  
                 ??___lldiv 0351                   ??___llmod 0348  
              ?_timer1_init 0300         ??_set_sampling_rate 0325  
                    delay@i 0300            __end_of_init_spi 29E4  
          __end_of_pf_lseek 07AE            __end_of_pf_mount 0B04  
      __end_of_get_fileinfo 1D08                 pf_read@buff 0321  
               pf_read@clst 0334          set_pwm1_duty@duty1 03AF  
               pf_read@sect 0330                 pf_read@rcnt 032A  
                 ??_get_fat 0381                      _strchr 2982  
                    _strlen 28C0             play_wave_file@i 0307  
                    _strstr 26A6            __end_of_send_cmd 210A  
                 ??_mem_cmp 0372                   ??_mem_set 0378  
                 ??_pf_read 0326                   ??_pf_open 030D  
              __mediumconst 0408                   ??_rcv_spi 03AD  
                    tblptrh 000FF7                      tblptrl 000FF6  
               pf_lseek@bcs 032E            __end_of_wav_putc 295C  
               pf_lseek@ofs 0321            __end_of_pwm_init 2A1A  
               pf_open@path 030D                   ??_strncmp 0306  
     ___aslmul@multiplicand 034B   __end_of_set_sampling_rate 287A  
          __end_of_xmit_spi 2A50             __config_LVP$OFF 000001  
                __accesstop 0060                 pf_mount@buf 0312  
               pf_mount@fmt 0300             __config_WDT$OFF 000001  
           __config_PWRT$ON 000001               __end_of_delay 2982  
  __config_CPUDIV$OSC1_PLL2 000001              _play_wave_file 1284  
     __end_of_set_pwm1_duty 2A00                     ??_delay 0300  
           get_fileinfo@dir 0330             get_fileinfo@fno 032F  
                   ?___lmul 0385                   l400000430 0D96  
                 l400000429 0D92                   l500000434 0F72  
                 l500000428 0C96                   l500000439 1DFC  
    __end_of_play_wave_file 1442                     _CCP1CON 000FBD  
                   _CCP2CON 000FBA           ??_disk_initialize 0349  
                 l600000420 10DA                   l600000433 0E6A  
                 l600000451 180C                   l600000452 1800  
                 l600000436 216C                   l600000438 1D68  
                 l600000446 1BA6                   l600000455 261A  
                 l600000449 17DE                   ?___aslmul 0349  
            ___lmul@product 038D                 _NumChannels 00004C  
                   ?_strchr 0303                     ?_strlen 0303  
                   ?_strstr 0300                  _dir_rewind 1D08  
                 ?_check_fs 0349                  _disk_readp 21F4  
                   i2u10795 2824              follow_path@res 0358  
   load_header@SamplingRate 0315                 send_cmd@arg 03A4  
                 ?_dir_find 0365                   ?_dir_read 032F  
                 ?_dir_next 036C                     _SSPCON1 000FC6  
                   _SSPSTAT 000FC7                  _clust2sect 2440  
          ??_pwm_audio_init 0300                   ?_init_spi 0351  
                 ?_pf_lseek 0321                   ?_pf_mount 0300  
                 ?_send_cmd 03A4                     __Hparam 03B0  
                   __Lparam 0300             _dir_rewind$1149 036E  
                   _pWAVOUT 000002                   ?_wav_putc 030D  
                   ___lldiv 256C                     ___llmod 2700  
                 ?_pwm_init 0300             ?_play_wave_file 0300  
                ??___aslmul 034F                  _pf_readdir 2396  
              _get_fat$1147 0381                     __ramtop 0400  
                 ?_xmit_spi 03A9                     _get_fat 0E28  
                _pf_opendir 22C6                   _T1CONbits 000FCD  
                   _mem_cmp 2648                     _mem_set 29A6  
                   _pf_read 0B04                     _pf_open 210A  
                ??_check_fs 034F                     _rcv_spi 2A50  
                ??_dir_find 0367                  ??_dir_read 032F  
                ??_dir_next 036E                pf_read@rbuff 0328  
                   _strncmp 25E2            play_wave_file@fn 0300  
          play_wave_file@sz 0303                _get_fileinfo 1BC4  
             __Lmediumconst 0408                     int_func 0008  
                ??_init_spi 0351                  ??_pf_lseek 0325  
              pf_readdir@dj 0301                  ??_pf_mount 0300  
              pf_readdir@sp 0303             ___lldiv@divisor 034D  
                ??_send_cmd 03A8                pf_lseek@clst 0332  
              pf_lseek@sect 0326            __config_DEBUG$ON 000001  
                   postdec0 000FED                     postdec1 000FE5  
                   postinc0 000FEE                     postinc1 000FE6  
                ??_wav_putc 030D                  ??_pwm_init 0300  
                _wait_ready 28F8                  dir_find@dj 0365  
                ??_xmit_spi 03A9                  dir_read@dj 032F  
               ?_dir_rewind 036C                  dir_next@dj 036C  
                dir_next@fs 036E                pf_opendir@dj 0301  
               ?_disk_readp 0396                pf_opendir@sp 0303  
                 _TRISBbits 000F93                   _TRISCbits 000F94  
                get_fat@buf 0388                  get_fat@ofs 0384  
          __config_PLLDIV$5 000001                 ?_clust2sect 037D  
               ___aslmul@mp 0349               ??_create_name 0369  
     __config_FOSC$HSPLL_HS 000001              __end_of___lmul 27EA  
               ?_pf_readdir 0300              clust2sect@clst 037D  
               ?_pf_opendir 0300              __end_of_strchr 29A6  
            __end_of_strlen 28F8              __end_of_strstr 2700  
               __end_of_isr 2834                   __Habsbss0 000060  
                 __Habsbss1 000300                  mem_cmp@cnt 0370  
                mem_cmp@dst 036C                  mem_cmp@src 036E  
                 __Labsbss0 000000                   __Labsbss1 000100  
           ___llmod@divisor 0344             _disk_initialize 1A5E  
                mem_set@cnt 0376                  mem_set@dst 0372  
                mem_set@val 0374           wait_ready@timeout 03A9  
             _BitsPerSample 00004E               ??_follow_path 0358  
       __end_of_create_name 18DA                    ??___lmul 038D  
                pf_read@btr 0323                 ?_wait_ready 03A9  
             ??_load_header 0311                  pf_lseek@fs 0325  
            __config_BOR$ON 000001                  pf_open@dir 032C  
                pf_open@res 030E              __config_BORV$2 000001  
                  ??_strchr 0305                    ??_strlen 0305  
                  ??_strstr 0301                  pf_mount@fs 0301  
              check_fs@sect 034B            ??_play_wave_file 0300  
                  ?___lldiv 0349                    ?___llmod 0340  
             follow_path@dj 0354         __end_of_follow_path 15CC  
             ??_release_spi 03A4                    ?_get_fat 037D  
               __smallconst 0400                    ?_mem_cmp 036C  
                  ?_mem_set 0372     play_wave_file@amplitude 0301  
                  ?_pf_read 0321                    ?_pf_open 030D  
       __end_of_load_header 1284                    ?_rcv_spi 03AD  
             _TMR1H_preload 000008     __end_of_disk_initialize 1BC4  
                  ?_strncmp 0303               _TMR1L_preload 000007  
               _create_name 1754                    _LATCbits 000F8B  
                  _PIE1bits 000F9D             follow_path@path 0356  
                  _PIR1bits 000F9E               ??_timer1_init 0300  
                 dir_next@i 036F                   get_fat@bc 0386  
                 get_fat@fs 0383                ??_dir_rewind 036E  
             _set_pwm1_duty 29E4                    _CardType 000006  
              ??_disk_readp 03A0         __end_of_release_spi 2A60  
              ??_clust2sect 0381           ___lmul@multiplier 0385  
  set_sampling_rate@preload 0325               load_header@sz 0319  
                  __Hparam3 03B0                    __Lparam3 0300  
        __end_of_dir_rewind 1E1C                 _follow_path 1442  
              __Lsmallconst 0400          __end_of_disk_readp 22C6  
                 pf_read@br 0325                   pf_read@dr 0326  
                 pf_read@fs 0327                   pf_open@dj 031C  
                 pf_open@fs 030F                   pf_open@sp 0310  
              ??_pf_readdir 0301                    ___aslmul 287A  
               _load_header 1096          __end_of_clust2sect 24E2  
              ??_pf_opendir 0301                 check_fs@buf 0349  
            ?_set_pwm1_duty 03AF         __end_of_timer1_init 2A2C  
                  _check_fs 24E2                    _dir_find 1F22  
                  _dir_read 1E1C                    _dir_next 18DA  
          ?_disk_initialize 0349                    _init_spi 29C8  
                  _pf_lseek 0408                    _pf_mount 07AE  
        __end_of_pf_readdir 2440                  strncmp@len 0304  
        __end_of_pf_opendir 2396                    _send_cmd 201E  
                  _wav_putc 292C                    _pwm_init 2A00  
              ??_wait_ready 03A9               pf_read@remain 032C  
                  _xmit_spi 2A3E                 _release_spi 2A5A  
                _INTCONbits 000FF2               pf_readdir@dir 030F  
             pf_readdir@fno 0300               pf_readdir@res 0302  
                  intlevel2 2A60                   strchr@chr 0303  
        __end_of_wait_ready 292C            ___lldiv@dividend 0349  
                 strncmp@s2 0303               pf_lseek@ifptr 032A  
               _timer1_init 2A1A             ??_set_pwm1_duty 03AF  
          ___lldiv@quotient 0351              dir_rewind@clst 0372  
               dir_find@dir 0368                 dir_find@res 0367  
               _SSPCON1bits 000FC6                    strstr@s2 0300  
              dir_next@clst 0371                 dir_read@dir 0331  
               dir_read@res 0330              pf_opendir@path 0300  
             ?_get_fileinfo 032F                ?_create_name 0365  
                _WAV_L_BUFF 000100               pf_opendir@dir 030F  
              dir_rewind@dj 036C               pf_opendir@res 0302  
