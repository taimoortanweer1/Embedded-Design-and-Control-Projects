

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Mar 04 18:40:15 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    60  0000                     _ADCON1	set	4033
    61  0000                     _CCP1CON	set	4029
    62  0000                     _CCP2CON	set	4026
    63  0000                     _CCPR1L	set	4030
    64  0000                     _CCPR2L	set	4027
    65  0000                     _INTCONbits	set	4082
    66  0000                     _LATCbits	set	3979
    67  0000                     _PIE1bits	set	3997
    68  0000                     _PIR1bits	set	3998
    69  0000                     _PR2	set	4043
    70  0000                     _SSPBUF	set	4041
    71  0000                     _SSPCON1	set	4038
    72  0000                     _SSPCON1bits	set	4038
    73  0000                     _SSPSTAT	set	4039
    74  0000                     _SSPSTATbits	set	4039
    75  0000                     _T1CONbits	set	4045
    76  0000                     _T2CON	set	4042
    77  0000                     _TMR1H	set	4047
    78  0000                     _TMR1L	set	4046
    79  0000                     _TRISBbits	set	3987
    80  0000                     _TRISC	set	3988
    81  0000                     _TRISCbits	set	3988
    82                           
    83                           	psect	smallconst
    84  000800                     __psmallconst:
    85                           	opt stack 0
    86  000800  00                 	db	0
    87  000801                     __stringdata:
    88                           	opt stack 0
    89  000801                     STR_2:
    90  000801  2E                 	db	46
    91  000802  57                 	db	87	;'W'
    92  000803  41                 	db	65	;'A'
    93  000804  56                 	db	86	;'V'
    94  000805  00                 	db	0
    95  000806                     __end_of__stringdata:
    96                           	opt stack 0
    97                           
    98                           ; #config settings
    99  000806  00                 	db	0	; dummy byte at the end
   100  0000                     
   101                           	psect	cinit
   102  003AA2                     __pcinit:
   103                           	opt stack 0
   104  003AA2                     start_initialization:
   105                           	opt stack 0
   106  003AA2                     __initialization:
   107                           	opt stack 0
   108                           
   109                           ; Clear objects allocated to BANK3 (256 bytes)
   110  003AA2  EE03  F000         	lfsr	0,__pbssBANK3
   111  003AA6  EE11 F000          	lfsr	1,256
   112  003AAA                     clear_0:
   113  003AAA  6AEE               	clrf	postinc0,c
   114  003AAC  50E5               	movf	postdec1,w,c
   115  003AAE  50E1               	movf	fsr1l,w,c
   116  003AB0  E1FC               	bnz	clear_0
   117  003AB2  50E2               	movf	fsr1h,w,c
   118  003AB4  E1FA               	bnz	clear_0
   119                           
   120                           ; Clear objects allocated to BANK2 (256 bytes)
   121  003AB6  EE02  F000         	lfsr	0,__pbssBANK2
   122  003ABA  EE11 F000          	lfsr	1,256
   123  003ABE                     clear_1:
   124  003ABE  6AEE               	clrf	postinc0,c
   125  003AC0  50E5               	movf	postdec1,w,c
   126  003AC2  50E1               	movf	fsr1l,w,c
   127  003AC4  E1FC               	bnz	clear_1
   128  003AC6  50E2               	movf	fsr1h,w,c
   129  003AC8  E1FA               	bnz	clear_1
   130                           
   131                           ; Clear objects allocated to BANK1 (66 bytes)
   132  003ACA  EE01  F000         	lfsr	0,__pbssBANK1
   133  003ACE  0E42               	movlw	66
   134  003AD0                     clear_2:
   135  003AD0  6AEE               	clrf	postinc0,c
   136  003AD2  06E8               	decf	wreg,f,c
   137  003AD4  E1FD               	bnz	clear_2
   138                           
   139                           ; Clear objects allocated to BANK0 (22 bytes)
   140  003AD6  EE00  F0E7         	lfsr	0,__pbssBANK0
   141  003ADA  0E16               	movlw	22
   142  003ADC                     clear_3:
   143  003ADC  6AEE               	clrf	postinc0,c
   144  003ADE  06E8               	decf	wreg,f,c
   145  003AE0  E1FD               	bnz	clear_3
   146                           
   147                           ; Clear objects allocated to COMRAM (9 bytes)
   148  003AE2  EE00  F048         	lfsr	0,__pbssCOMRAM
   149  003AE6  0E09               	movlw	9
   150  003AE8                     clear_4:
   151  003AE8  6AEE               	clrf	postinc0,c
   152  003AEA  06E8               	decf	wreg,f,c
   153  003AEC  E1FD               	bnz	clear_4
   154  003AEE                     end_of_initialization:
   155                           	opt stack 0
   156  003AEE                     __end_of__initialization:
   157                           	opt stack 0
   158  003AEE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   159  003AF0  6EF8               	movwf	tblptru,c
   160  003AF2  0100               	movlb	0
   161  003AF4  EF46  F01B         	goto	_main	;jump to C main() function
   162                           tblptru	equ	0xFF8
   163                           postinc0	equ	0xFEE
   164                           wreg	equ	0xFE8
   165                           postdec1	equ	0xFE5
   166                           fsr1h	equ	0xFE2
   167                           fsr1l	equ	0xFE1
   168                           
   169                           	psect	bssCOMRAM
   170  000048                     __pbssCOMRAM:
   171                           	opt stack 0
   172  000048                     _FatFs:
   173                           	opt stack 0
   174  000048                     	ds	2
   175  00004A                     _pWAVIN:
   176                           	opt stack 0
   177  00004A                     	ds	2
   178  00004C                     _pWAVOUT:
   179                           	opt stack 0
   180  00004C                     	ds	2
   181  00004E                     _CardType:
   182                           	opt stack 0
   183  00004E                     	ds	1
   184  00004F                     _TMR1H_preload:
   185                           	opt stack 0
   186  00004F                     	ds	1
   187  000050                     _TMR1L_preload:
   188                           	opt stack 0
   189  000050                     	ds	1
   190                           tblptru	equ	0xFF8
   191                           postinc0	equ	0xFEE
   192                           wreg	equ	0xFE8
   193                           postdec1	equ	0xFE5
   194                           fsr1h	equ	0xFE2
   195                           fsr1l	equ	0xFE1
   196                           
   197                           	psect	bssBANK0
   198  0000E7                     __pbssBANK0:
   199                           	opt stack 0
   200  0000E7                     _BitsPerSample:
   201                           	opt stack 0
   202  0000E7                     	ds	2
   203  0000E9                     _NumChannels:
   204                           	opt stack 0
   205  0000E9                     	ds	2
   206  0000EB                     _Dir1:
   207                           	opt stack 0
   208  0000EB                     	ds	16
   209  0000FB                     _rb:
   210                           	opt stack 0
   211  0000FB                     	ds	2
   212                           tblptru	equ	0xFF8
   213                           postinc0	equ	0xFEE
   214                           wreg	equ	0xFE8
   215                           postdec1	equ	0xFE5
   216                           fsr1h	equ	0xFE2
   217                           fsr1l	equ	0xFE1
   218                           
   219                           	psect	bssBANK1
   220  000100                     __pbssBANK1:
   221                           	opt stack 0
   222  000100                     _Fs:
   223                           	opt stack 0
   224  000100                     	ds	44
   225  00012C                     _Fno:
   226                           	opt stack 0
   227  00012C                     	ds	22
   228                           tblptru	equ	0xFF8
   229                           postinc0	equ	0xFEE
   230                           wreg	equ	0xFE8
   231                           postdec1	equ	0xFE5
   232                           fsr1h	equ	0xFE2
   233                           fsr1l	equ	0xFE1
   234                           
   235                           	psect	bssBANK2
   236  000200                     __pbssBANK2:
   237                           	opt stack 0
   238  000200                     _Buff:
   239                           	opt stack 0
   240  000200                     	ds	256
   241                           tblptru	equ	0xFF8
   242                           postinc0	equ	0xFEE
   243                           wreg	equ	0xFE8
   244                           postdec1	equ	0xFE5
   245                           fsr1h	equ	0xFE2
   246                           fsr1l	equ	0xFE1
   247                           
   248                           	psect	bssBANK3
   249  000300                     __pbssBANK3:
   250                           	opt stack 0
   251  000300                     _WAV_L_BUFF:
   252                           	opt stack 0
   253  000300                     	ds	256
   254                           tblptru	equ	0xFF8
   255                           postinc0	equ	0xFEE
   256                           wreg	equ	0xFE8
   257                           postdec1	equ	0xFE5
   258                           fsr1h	equ	0xFE2
   259                           fsr1l	equ	0xFE1
   260                           
   261                           	psect	cstackBANK0
   262  000060                     __pcstackBANK0:
   263                           	opt stack 0
   264  000060                     _get_fat$110:
   265                           	opt stack 0
   266  000060                     pf_mount@buf:
   267                           	opt stack 0
   268                           
   269                           ; 36 bytes @ 0x0
   270  000060                     	ds	2
   271  000062                     get_fat@buf:
   272                           	opt stack 0
   273                           
   274                           ; 4 bytes @ 0x2
   275  000062                     	ds	4
   276  000066                     get_fat@wc:
   277                           	opt stack 0
   278                           
   279                           ; 2 bytes @ 0x6
   280  000066                     	ds	2
   281  000068                     get_fat@ofs:
   282                           	opt stack 0
   283                           
   284                           ; 2 bytes @ 0x8
   285  000068                     	ds	2
   286  00006A                     get_fat@bc:
   287                           	opt stack 0
   288                           
   289                           ; 2 bytes @ 0xA
   290  00006A                     	ds	2
   291  00006C                     get_fat@fs:
   292                           	opt stack 0
   293                           
   294                           ; 2 bytes @ 0xC
   295  00006C                     	ds	2
   296  00006E                     ??_pf_read:
   297  00006E                     ??_pf_lseek:
   298  00006E                     dir_next@fs:
   299                           	opt stack 0
   300                           
   301                           ; 2 bytes @ 0xE
   302  00006E                     	ds	2
   303  000070                     dir_next@clst:
   304                           	opt stack 0
   305                           
   306                           ; 4 bytes @ 0x10
   307  000070                     	ds	4
   308  000074                     dir_next@i:
   309                           	opt stack 0
   310                           
   311                           ; 2 bytes @ 0x14
   312  000074                     	ds	2
   313  000076                     ??_dir_read:
   314  000076                     dir_find@c:
   315                           	opt stack 0
   316                           
   317                           ; 1 bytes @ 0x16
   318  000076                     	ds	1
   319  000077                     pf_read@dr:
   320                           	opt stack 0
   321  000077                     dir_find@dir:
   322                           	opt stack 0
   323                           
   324                           ; 2 bytes @ 0x17
   325  000077                     	ds	1
   326  000078                     pf_read@rbuff:
   327                           	opt stack 0
   328                           
   329                           ; 2 bytes @ 0x18
   330  000078                     	ds	1
   331  000079                     dir_find@res:
   332                           	opt stack 0
   333                           
   334                           ; 1 bytes @ 0x19
   335  000079                     	ds	1
   336  00007A                     dir_read@a:
   337                           	opt stack 0
   338  00007A                     follow_path@dj:
   339                           	opt stack 0
   340  00007A                     _pf_read$348:
   341                           	opt stack 0
   342  00007A                     pf_lseek@sect:
   343                           	opt stack 0
   344                           
   345                           ; 4 bytes @ 0x1A
   346  00007A                     	ds	1
   347  00007B                     dir_read@dir:
   348                           	opt stack 0
   349                           
   350                           ; 2 bytes @ 0x1B
   351  00007B                     	ds	1
   352  00007C                     follow_path@path:
   353                           	opt stack 0
   354  00007C                     pf_read@sect:
   355                           	opt stack 0
   356                           
   357                           ; 4 bytes @ 0x1C
   358  00007C                     	ds	1
   359  00007D                     dir_read@c:
   360                           	opt stack 0
   361                           
   362                           ; 1 bytes @ 0x1D
   363  00007D                     	ds	1
   364  00007E                     ??_follow_path:
   365  00007E                     dir_read@res:
   366                           	opt stack 0
   367  00007E                     pf_lseek@ifptr:
   368                           	opt stack 0
   369                           
   370                           ; 4 bytes @ 0x1E
   371  00007E                     	ds	1
   372  00007F                     pf_readdir@dj:
   373                           	opt stack 0
   374                           
   375                           ; 2 bytes @ 0x1F
   376  00007F                     	ds	1
   377  000080                     pf_read@remain:
   378                           	opt stack 0
   379                           
   380                           ; 4 bytes @ 0x20
   381  000080                     	ds	1
   382  000081                     pf_readdir@fno:
   383                           	opt stack 0
   384                           
   385                           ; 2 bytes @ 0x21
   386  000081                     	ds	1
   387  000082                     pf_lseek@bcs:
   388                           	opt stack 0
   389                           
   390                           ; 4 bytes @ 0x22
   391  000082                     	ds	1
   392  000083                     pf_readdir@dir:
   393                           	opt stack 0
   394                           
   395                           ; 32 bytes @ 0x23
   396  000083                     	ds	1
   397  000084                     pf_mount@tsect:
   398                           	opt stack 0
   399  000084                     pf_read@clst:
   400                           	opt stack 0
   401                           
   402                           ; 4 bytes @ 0x24
   403  000084                     	ds	2
   404  000086                     pf_lseek@clst:
   405                           	opt stack 0
   406                           
   407                           ; 4 bytes @ 0x26
   408  000086                     	ds	2
   409  000088                     pf_read@rcnt:
   410                           	opt stack 0
   411  000088                     pf_mount@mclst:
   412                           	opt stack 0
   413                           
   414                           ; 4 bytes @ 0x28
   415  000088                     	ds	2
   416  00008A                     follow_path@dir:
   417                           	opt stack 0
   418  00008A                     pf_read@fs:
   419                           	opt stack 0
   420  00008A                     pf_lseek@fs:
   421                           	opt stack 0
   422                           
   423                           ; 2 bytes @ 0x2A
   424  00008A                     	ds	2
   425  00008C                     ?_load_header:
   426                           	opt stack 0
   427  00008C                     follow_path@res:
   428                           	opt stack 0
   429  00008C                     pf_mount@bsect:
   430                           	opt stack 0
   431                           
   432                           ; 4 bytes @ 0x2C
   433  00008C                     	ds	1
   434  00008D                     pf_open@path:
   435                           	opt stack 0
   436  00008D                     pf_opendir@dj:
   437                           	opt stack 0
   438                           
   439                           ; 2 bytes @ 0x2D
   440  00008D                     	ds	2
   441  00008F                     ??_pf_open:
   442  00008F                     pf_opendir@path:
   443                           	opt stack 0
   444                           
   445                           ; 2 bytes @ 0x2F
   446  00008F                     	ds	1
   447  000090                     pf_mount@fsize:
   448                           	opt stack 0
   449  000090                     load_header@ChunkID:
   450                           	opt stack 0
   451                           
   452                           ; 4 bytes @ 0x30
   453  000090                     	ds	1
   454  000091                     ??_pf_opendir:
   455                           
   456                           ; 0 bytes @ 0x31
   457  000091                     	ds	3
   458  000094                     pf_mount@fmt:
   459                           	opt stack 0
   460  000094                     load_header@SamplingRate:
   461                           	opt stack 0
   462                           
   463                           ; 4 bytes @ 0x34
   464  000094                     	ds	3
   465  000097                     pf_open@sp:
   466                           	opt stack 0
   467                           
   468                           ; 12 bytes @ 0x37
   469  000097                     	ds	1
   470  000098                     load_header@sz:
   471                           	opt stack 0
   472                           
   473                           ; 4 bytes @ 0x38
   474  000098                     	ds	1
   475  000099                     pf_opendir@dir:
   476                           	opt stack 0
   477                           
   478                           ; 32 bytes @ 0x39
   479  000099                     	ds	10
   480  0000A3                     pf_readdir@sp:
   481                           	opt stack 0
   482  0000A3                     pf_open@dir:
   483                           	opt stack 0
   484                           
   485                           ; 32 bytes @ 0x43
   486  0000A3                     	ds	12
   487  0000AF                     pf_readdir@fs:
   488                           	opt stack 0
   489                           
   490                           ; 2 bytes @ 0x4F
   491  0000AF                     	ds	2
   492  0000B1                     pf_readdir@res:
   493                           	opt stack 0
   494                           
   495                           ; 1 bytes @ 0x51
   496  0000B1                     	ds	8
   497  0000B9                     pf_opendir@sp:
   498                           	opt stack 0
   499                           
   500                           ; 12 bytes @ 0x59
   501  0000B9                     	ds	10
   502  0000C3                     pf_open@res:
   503                           	opt stack 0
   504                           
   505                           ; 1 bytes @ 0x63
   506  0000C3                     	ds	1
   507  0000C4                     pf_open@fs:
   508                           	opt stack 0
   509                           
   510                           ; 2 bytes @ 0x64
   511  0000C4                     	ds	1
   512  0000C5                     pf_opendir@fs:
   513                           	opt stack 0
   514                           
   515                           ; 2 bytes @ 0x65
   516  0000C5                     	ds	1
   517  0000C6                     pf_open@dj:
   518                           	opt stack 0
   519                           
   520                           ; 16 bytes @ 0x66
   521  0000C6                     	ds	1
   522  0000C7                     pf_opendir@res:
   523                           	opt stack 0
   524                           
   525                           ; 1 bytes @ 0x67
   526  0000C7                     	ds	15
   527  0000D6                     play_wave_file@fn:
   528                           	opt stack 0
   529                           
   530                           ; 2 bytes @ 0x76
   531  0000D6                     	ds	2
   532  0000D8                     ??_play_wave_file:
   533                           
   534                           ; 0 bytes @ 0x78
   535  0000D8                     	ds	4
   536  0000DC                     play_wave_file@res:
   537                           	opt stack 0
   538                           
   539                           ; 1 bytes @ 0x7C
   540  0000DC                     	ds	1
   541  0000DD                     play_wave_file@sz:
   542                           	opt stack 0
   543                           
   544                           ; 4 bytes @ 0x7D
   545  0000DD                     	ds	4
   546  0000E1                     play_wave_file@amplitude:
   547                           	opt stack 0
   548                           
   549                           ; 2 bytes @ 0x81
   550  0000E1                     	ds	2
   551  0000E3                     play_wave_file@i:
   552                           	opt stack 0
   553                           
   554                           ; 4 bytes @ 0x83
   555  0000E3                     	ds	4
   556                           tblptru	equ	0xFF8
   557                           postinc0	equ	0xFEE
   558                           wreg	equ	0xFE8
   559                           postdec1	equ	0xFE5
   560                           fsr1h	equ	0xFE2
   561                           fsr1l	equ	0xFE1
   562                           
   563                           	psect	cstackCOMRAM
   564  000001                     __pcstackCOMRAM:
   565                           	opt stack 0
   566  000001                     set_pwm1_duty@duty1:
   567                           	opt stack 0
   568                           
   569                           ; 1 bytes @ 0x0
   570  000001                     	ds	1
   571  000002                     ??_isr:
   572                           
   573                           ; 0 bytes @ 0x1
   574  000002                     	ds	14
   575  000010                     ??_wav_putc:
   576  000010                     ?_strlen:
   577                           	opt stack 0
   578  000010                     ?_strchr:
   579                           	opt stack 0
   580  000010                     ?_mem_cmp:
   581                           	opt stack 0
   582  000010                     ?___lmul:
   583                           	opt stack 0
   584  000010                     ?___lldiv:
   585                           	opt stack 0
   586  000010                     ?___llmod:
   587                           	opt stack 0
   588  000010                     xmit_spi@temp:
   589                           	opt stack 0
   590  000010                     mem_set@dst:
   591                           	opt stack 0
   592  000010                     mem_cmp@dst:
   593                           	opt stack 0
   594  000010                     get_fileinfo@dj:
   595                           	opt stack 0
   596  000010                     strchr@ptr:
   597                           	opt stack 0
   598  000010                     strlen@s:
   599                           	opt stack 0
   600  000010                     wait_ready@timeout:
   601                           	opt stack 0
   602  000010                     ___lmul@multiplier:
   603                           	opt stack 0
   604  000010                     ___lldiv@dividend:
   605                           	opt stack 0
   606  000010                     ___llmod@dividend:
   607                           	opt stack 0
   608                           
   609                           ; 4 bytes @ 0xF
   610  000010                     	ds	1
   611  000011                     xmit_spi@c:
   612                           	opt stack 0
   613                           
   614                           ; 1 bytes @ 0x10
   615  000011                     	ds	1
   616  000012                     ??_strlen:
   617  000012                     wav_putc@c:
   618                           	opt stack 0
   619  000012                     mem_set@val:
   620                           	opt stack 0
   621  000012                     mem_cmp@src:
   622                           	opt stack 0
   623  000012                     get_fileinfo@fno:
   624                           	opt stack 0
   625  000012                     strchr@chr:
   626                           	opt stack 0
   627                           
   628                           ; 2 bytes @ 0x11
   629  000012                     	ds	2
   630  000014                     ??_get_fileinfo:
   631  000014                     wait_ready@res:
   632                           	opt stack 0
   633  000014                     mem_set@cnt:
   634                           	opt stack 0
   635  000014                     mem_cmp@cnt:
   636                           	opt stack 0
   637  000014                     strlen@cp:
   638                           	opt stack 0
   639  000014                     ___lmul@multiplicand:
   640                           	opt stack 0
   641  000014                     ___lldiv@divisor:
   642                           	opt stack 0
   643  000014                     ___llmod@divisor:
   644                           	opt stack 0
   645                           
   646                           ; 4 bytes @ 0x13
   647  000014                     	ds	1
   648  000015                     send_cmd@arg:
   649                           	opt stack 0
   650                           
   651                           ; 4 bytes @ 0x14
   652  000015                     	ds	1
   653  000016                     ??_mem_cmp:
   654  000016                     ?_strncmp:
   655                           	opt stack 0
   656  000016                     mem_set@d:
   657                           	opt stack 0
   658  000016                     strncmp@s1:
   659                           	opt stack 0
   660                           
   661                           ; 2 bytes @ 0x15
   662  000016                     	ds	2
   663  000018                     ___llmod@counter:
   664                           	opt stack 0
   665  000018                     create_name@dj:
   666                           	opt stack 0
   667  000018                     get_fileinfo@p:
   668                           	opt stack 0
   669  000018                     strncmp@s2:
   670                           	opt stack 0
   671  000018                     ___lmul@product:
   672                           	opt stack 0
   673  000018                     ___lldiv@quotient:
   674                           	opt stack 0
   675                           
   676                           ; 4 bytes @ 0x17
   677  000018                     	ds	1
   678  000019                     ??_send_cmd:
   679  000019                     mem_cmp@d:
   680                           	opt stack 0
   681                           
   682                           ; 2 bytes @ 0x18
   683  000019                     	ds	1
   684  00001A                     get_fileinfo@c:
   685                           	opt stack 0
   686  00001A                     send_cmd@res:
   687                           	opt stack 0
   688  00001A                     create_name@path:
   689                           	opt stack 0
   690  00001A                     strncmp@len:
   691                           	opt stack 0
   692                           
   693                           ; 2 bytes @ 0x19
   694  00001A                     	ds	1
   695  00001B                     send_cmd@n:
   696                           	opt stack 0
   697  00001B                     mem_cmp@s:
   698                           	opt stack 0
   699  00001B                     get_fileinfo@dir:
   700                           	opt stack 0
   701                           
   702                           ; 2 bytes @ 0x1A
   703  00001B                     	ds	1
   704  00001C                     ??_strncmp:
   705  00001C                     ??_create_name:
   706  00001C                     ?_clust2sect:
   707                           	opt stack 0
   708  00001C                     send_cmd@cmd:
   709                           	opt stack 0
   710  00001C                     ___lldiv@counter:
   711                           	opt stack 0
   712  00001C                     clust2sect@clst:
   713                           	opt stack 0
   714                           
   715                           ; 4 bytes @ 0x1B
   716  00001C                     	ds	1
   717  00001D                     ??_disk_initialize:
   718  00001D                     get_fileinfo@i:
   719                           	opt stack 0
   720  00001D                     mem_cmp@r:
   721                           	opt stack 0
   722  00001D                     disk_readp@buff:
   723                           	opt stack 0
   724  00001D                     set_sampling_rate@rate:
   725                           	opt stack 0
   726                           
   727                           ; 4 bytes @ 0x1C
   728  00001D                     	ds	1
   729  00001E                     disk_initialize@ocr:
   730                           	opt stack 0
   731                           
   732                           ; 4 bytes @ 0x1D
   733  00001E                     	ds	1
   734  00001F                     ?_strstr:
   735                           	opt stack 0
   736  00001F                     strstr@s1:
   737                           	opt stack 0
   738  00001F                     disk_readp@lba:
   739                           	opt stack 0
   740                           
   741                           ; 4 bytes @ 0x1E
   742  00001F                     	ds	1
   743  000020                     ??_clust2sect:
   744                           
   745                           ; 0 bytes @ 0x1F
   746  000020                     	ds	1
   747  000021                     ??_set_sampling_rate:
   748  000021                     strstr@s2:
   749                           	opt stack 0
   750                           
   751                           ; 2 bytes @ 0x20
   752  000021                     	ds	1
   753  000022                     _disk_initialize$807:
   754                           	opt stack 0
   755                           
   756                           ; 2 bytes @ 0x21
   757  000022                     	ds	1
   758  000023                     create_name@d:
   759                           	opt stack 0
   760  000023                     disk_readp@ofs:
   761                           	opt stack 0
   762                           
   763                           ; 2 bytes @ 0x22
   764  000023                     	ds	1
   765  000024                     disk_initialize@cmd:
   766                           	opt stack 0
   767  000024                     create_name@p:
   768                           	opt stack 0
   769                           
   770                           ; 2 bytes @ 0x23
   771  000024                     	ds	1
   772  000025                     disk_initialize@ty:
   773                           	opt stack 0
   774  000025                     disk_readp@cnt:
   775                           	opt stack 0
   776  000025                     set_sampling_rate@preload:
   777                           	opt stack 0
   778                           
   779                           ; 4 bytes @ 0x24
   780  000025                     	ds	1
   781  000026                     create_name@ni:
   782                           	opt stack 0
   783  000026                     disk_initialize@tmr:
   784                           	opt stack 0
   785                           
   786                           ; 2 bytes @ 0x25
   787  000026                     	ds	1
   788  000027                     ??_disk_readp:
   789  000027                     create_name@si:
   790                           	opt stack 0
   791                           
   792                           ; 1 bytes @ 0x26
   793  000027                     	ds	1
   794  000028                     disk_initialize@n:
   795                           	opt stack 0
   796  000028                     create_name@sfn:
   797                           	opt stack 0
   798                           
   799                           ; 2 bytes @ 0x27
   800  000028                     	ds	1
   801  000029                     disk_readp@res:
   802                           	opt stack 0
   803  000029                     clust2sect@fs:
   804                           	opt stack 0
   805                           
   806                           ; 2 bytes @ 0x28
   807  000029                     	ds	1
   808  00002A                     create_name@i:
   809                           	opt stack 0
   810  00002A                     disk_readp@rc:
   811                           	opt stack 0
   812                           
   813                           ; 1 bytes @ 0x29
   814  00002A                     	ds	1
   815  00002B                     create_name@c:
   816                           	opt stack 0
   817  00002B                     dir_rewind@dj:
   818                           	opt stack 0
   819  00002B                     disk_readp@bc:
   820                           	opt stack 0
   821                           
   822                           ; 2 bytes @ 0x2A
   823  00002B                     	ds	2
   824  00002D                     ??_dir_rewind:
   825  00002D                     ?_get_fat:
   826                           	opt stack 0
   827  00002D                     check_fs@buf:
   828                           	opt stack 0
   829  00002D                     get_fat@clst:
   830                           	opt stack 0
   831                           
   832                           ; 4 bytes @ 0x2C
   833  00002D                     	ds	2
   834  00002F                     check_fs@sect:
   835                           	opt stack 0
   836                           
   837                           ; 4 bytes @ 0x2E
   838  00002F                     	ds	2
   839  000031                     ??_get_fat:
   840  000031                     _dir_rewind$154:
   841                           	opt stack 0
   842                           
   843                           ; 4 bytes @ 0x30
   844  000031                     	ds	2
   845  000033                     pf_mount@fs:
   846                           	opt stack 0
   847                           
   848                           ; 2 bytes @ 0x32
   849  000033                     	ds	2
   850  000035                     ??_pf_mount:
   851  000035                     dir_rewind@fs:
   852                           	opt stack 0
   853                           
   854                           ; 2 bytes @ 0x34
   855  000035                     	ds	2
   856  000037                     dir_rewind@clst:
   857                           	opt stack 0
   858                           
   859                           ; 4 bytes @ 0x36
   860  000037                     	ds	4
   861  00003B                     dir_next@dj:
   862                           	opt stack 0
   863  00003B                     pf_read@buff:
   864                           	opt stack 0
   865  00003B                     pf_lseek@ofs:
   866                           	opt stack 0
   867                           
   868                           ; 4 bytes @ 0x3A
   869  00003B                     	ds	2
   870  00003D                     ??_dir_next:
   871  00003D                     pf_read@btr:
   872                           	opt stack 0
   873                           
   874                           ; 2 bytes @ 0x3C
   875  00003D                     	ds	2
   876  00003F                     pf_read@br:
   877                           	opt stack 0
   878                           
   879                           ; 2 bytes @ 0x3E
   880  00003F                     	ds	2
   881  000041                     ??_load_header:
   882                           
   883                           ; 0 bytes @ 0x40
   884  000041                     	ds	3
   885  000044                     dir_find@dj:
   886                           	opt stack 0
   887  000044                     dir_read@dj:
   888                           	opt stack 0
   889                           
   890                           ; 2 bytes @ 0x43
   891  000044                     	ds	2
   892  000046                     ??_dir_find:
   893  000046                     
   894                           ; 0 bytes @ 0x45
   895  000046                     	ds	2
   896  000048                     tblptru	equ	0xFF8
   897                           postinc0	equ	0xFEE
   898                           wreg	equ	0xFE8
   899                           postdec1	equ	0xFE5
   900                           fsr1h	equ	0xFE2
   901                           fsr1l	equ	0xFE1
   902                           
   903                           ; 0 bytes @ 0x47
   904 ;;
   905 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   906 ;;
   907 ;; *************** function _main *****************
   908 ;; Defined at:
   909 ;;		line 101 in file "../../../PIC18F/main.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;		None
   912 ;; Auto vars:     Size  Location     Type
   913 ;;		None
   914 ;; Return value:  Size  Location     Type
   915 ;;		None               void
   916 ;; Registers used:
   917 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   918 ;; Tracked objects:
   919 ;;		On entry : 0/0
   920 ;;		On exit  : 0/0
   921 ;;		Unchanged: 0/0
   922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   923 ;;      Params:         0       0       0       0       0       0       0       0       0
   924 ;;      Locals:         0       0       0       0       0       0       0       0       0
   925 ;;      Temps:          0       0       0       0       0       0       0       0       0
   926 ;;      Totals:         0       0       0       0       0       0       0       0       0
   927 ;;Total ram usage:        0 bytes
   928 ;; Hardware stack levels required when called:   12
   929 ;; This function calls:
   930 ;;		_pf_mount
   931 ;;		_pf_opendir
   932 ;;		_pf_readdir
   933 ;;		_play_wave_file
   934 ;;		_pwm_audio_init
   935 ;;		_strstr
   936 ;; This function is called by:
   937 ;;		Startup code after reset
   938 ;; This function uses a non-reentrant model
   939 ;;
   940                           
   941                           	psect	text0
   942  00368C                     __ptext0:
   943                           	opt stack 0
   944  00368C                     _main:
   945                           	opt stack 19
   946                           
   947                           ;main.c: 110: pwm_audio_init();
   948                           
   949                           ;incstack = 0
   950  00368C  EC47  F01E         	call	_pwm_audio_init	;wreg free
   951  003690                     l5886:
   952                           
   953                           ;main.c: 114: if (pf_mount(&Fs) ) continue;
   954  003690  0101               	movlb	1	; () banked
   955  003692  0E01               	movlw	high _Fs
   956  003694  6E34               	movwf	pf_mount@fs+1,c
   957  003696  0101               	movlb	1	; () banked
   958  003698  0E00               	movlw	low _Fs
   959  00369A  6E33               	movwf	pf_mount@fs,c
   960  00369C  EC66  F009         	call	_pf_mount	;wreg free
   961  0036A0  0900               	iorlw	0
   962  0036A2  A4D8               	btfss	status,2,c
   963  0036A4  D7F5               	goto	l5886
   964  0036A6                     l5890:
   965                           
   966                           ;main.c: 116: if (pf_opendir(&Dir1, "")) break;
   967  0036A6  0100               	movlb	0	; () banked
   968  0036A8  0E00               	movlw	high _Dir1
   969  0036AA  0100               	movlb	0	; () banked
   970  0036AC  6F8E               	movwf	(pf_opendir@dj+1)& (0+255),b
   971  0036AE  0100               	movlb	0	; () banked
   972  0036B0  0EEB               	movlw	low _Dir1
   973  0036B2  0100               	movlb	0	; () banked
   974  0036B4  6F8D               	movwf	pf_opendir@dj& (0+255),b
   975  0036B6  0E08               	movlw	high (STR_2+4)
   976  0036B8  0100               	movlb	0	; () banked
   977  0036BA  6F90               	movwf	(pf_opendir@path+1)& (0+255),b
   978  0036BC  0E05               	movlw	low (STR_2+4)
   979  0036BE  0100               	movlb	0	; () banked
   980  0036C0  6F8F               	movwf	pf_opendir@path& (0+255),b
   981  0036C2  EC30  F017         	call	_pf_opendir	;wreg free
   982  0036C6  0900               	iorlw	0
   983  0036C8  A4D8               	btfss	status,2,c
   984  0036CA  D7E2               	goto	l5886
   985  0036CC  D01A               	goto	l5898
   986  0036CE                     l5894:
   987                           
   988                           ;main.c: 118: if( strstr(Fno.fname, ".WAV") ){
   989  0036CE  0101               	movlb	1	; () banked
   990  0036D0  0E01               	movlw	high (_Fno+9)
   991  0036D2  6E20               	movwf	strstr@s1+1,c
   992  0036D4  0101               	movlb	1	; () banked
   993  0036D6  0E35               	movlw	low (_Fno+9)
   994  0036D8  6E1F               	movwf	strstr@s1,c
   995  0036DA  0E08               	movlw	high STR_2
   996  0036DC  6E22               	movwf	strstr@s2+1,c
   997  0036DE  0E01               	movlw	low STR_2
   998  0036E0  6E21               	movwf	strstr@s2,c
   999  0036E2  ECEE  F01B         	call	_strstr	;wreg free
  1000  0036E6  5020               	movf	?_strstr+1,w,c
  1001  0036E8  101F               	iorwf	?_strstr,w,c
  1002  0036EA  B4D8               	btfsc	status,2,c
  1003  0036EC  D00A               	goto	l5898
  1004                           
  1005                           ;main.c: 119: play_wave_file(Fno.fname);
  1006  0036EE  0101               	movlb	1	; () banked
  1007  0036F0  0E01               	movlw	high (_Fno+9)
  1008  0036F2  0100               	movlb	0	; () banked
  1009  0036F4  6FD7               	movwf	(play_wave_file@fn+1)& (0+255),b
  1010  0036F6  0101               	movlb	1	; () banked
  1011  0036F8  0E35               	movlw	low (_Fno+9)
  1012  0036FA  0100               	movlb	0	; () banked
  1013  0036FC  6FD6               	movwf	play_wave_file@fn& (0+255),b
  1014  0036FE  ECA5  F00D         	call	_play_wave_file	;wreg free
  1015  003702                     l5898:
  1016  003702  0100               	movlb	0	; () banked
  1017  003704  0E00               	movlw	high _Dir1
  1018  003706  0100               	movlb	0	; () banked
  1019  003708  6F80               	movwf	(pf_readdir@dj+1)& (0+255),b
  1020  00370A  0100               	movlb	0	; () banked
  1021  00370C  0EEB               	movlw	low _Dir1
  1022  00370E  0100               	movlb	0	; () banked
  1023  003710  6F7F               	movwf	pf_readdir@dj& (0+255),b
  1024  003712  0101               	movlb	1	; () banked
  1025  003714  0E01               	movlw	high _Fno
  1026  003716  0100               	movlb	0	; () banked
  1027  003718  6F82               	movwf	(pf_readdir@fno+1)& (0+255),b
  1028  00371A  0101               	movlb	1	; () banked
  1029  00371C  0E2C               	movlw	low _Fno
  1030  00371E  0100               	movlb	0	; () banked
  1031  003720  6F81               	movwf	pf_readdir@fno& (0+255),b
  1032  003722  ECFF  F018         	call	_pf_readdir	;wreg free
  1033  003726  0900               	iorlw	0
  1034  003728  A4D8               	btfss	status,2,c
  1035  00372A  D7BD               	goto	l5890
  1036  00372C  0101               	movlb	1	; () banked
  1037  00372E  6735               	tstfsz	(_Fno+9)& (0+255),b
  1038  003730  D7CE               	goto	l5894
  1039  003732  D7B9               	goto	l5890
  1040  003734                     __end_of_main:
  1041                           	opt stack 0
  1042                           tblptru	equ	0xFF8
  1043                           postinc0	equ	0xFEE
  1044                           wreg	equ	0xFE8
  1045                           postdec1	equ	0xFE5
  1046                           fsr1h	equ	0xFE2
  1047                           fsr1l	equ	0xFE1
  1048                           status	equ	0xFD8
  1049                           
  1050 ;; *************** function _strstr *****************
  1051 ;; Defined at:
  1052 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\strstr.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;  s1              2   30[COMRAM] PTR const unsigned char 
  1055 ;;		 -> Fno.fname(13), Fno(22), NULL(0), 
  1056 ;;  s2              2   32[COMRAM] PTR const unsigned char 
  1057 ;;		 -> STR_2(5), 
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;		None
  1060 ;; Return value:  Size  Location     Type
  1061 ;;                  2   30[COMRAM] PTR unsigned char 
  1062 ;; Registers used:
  1063 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1064 ;; Tracked objects:
  1065 ;;		On entry : 0/0
  1066 ;;		On exit  : 0/0
  1067 ;;		Unchanged: 0/0
  1068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1069 ;;      Params:         4       0       0       0       0       0       0       0       0
  1070 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1071 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1072 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1073 ;;Total ram usage:        4 bytes
  1074 ;; Hardware stack levels used:    1
  1075 ;; Hardware stack levels required when called:    3
  1076 ;; This function calls:
  1077 ;;		_strchr
  1078 ;;		_strlen
  1079 ;;		_strncmp
  1080 ;; This function is called by:
  1081 ;;		_main
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085                           	psect	text1
  1086  0037DC                     __ptext1:
  1087                           	opt stack 0
  1088  0037DC                     _strstr:
  1089                           	opt stack 27
  1090                           
  1091                           ; BSR set to: 1
  1092                           ;incstack = 0
  1093  0037DC  D031               	goto	l4404
  1094  0037DE                     l4396:
  1095  0037DE  C020  F017         	movff	strstr@s1+1,strncmp@s1+1
  1096  0037E2  C01F  F016         	movff	strstr@s1,strncmp@s1
  1097  0037E6  C022  F019         	movff	strstr@s2+1,strncmp@s2+1
  1098  0037EA  C021  F018         	movff	strstr@s2,strncmp@s2
  1099  0037EE  C022  F011         	movff	strstr@s2+1,strlen@s+1
  1100  0037F2  C021  F010         	movff	strstr@s2,strlen@s
  1101  0037F6  ECCE  F01D         	call	_strlen	;wreg free
  1102  0037FA  C010  F01A         	movff	?_strlen,strncmp@len
  1103  0037FE  C011  F01B         	movff	?_strlen+1,strncmp@len+1
  1104  003802  EC30  F01C         	call	_strncmp	;wreg free
  1105  003806  5017               	movf	?_strncmp+1,w,c
  1106  003808  1016               	iorwf	?_strncmp,w,c
  1107  00380A  A4D8               	btfss	status,2,c
  1108  00380C  D005               	goto	l4402
  1109  00380E  C020  F020         	movff	strstr@s1+1,?_strstr+1
  1110  003812  C01F  F01F         	movff	strstr@s1,?_strstr
  1111  003816  D023               	goto	l1098
  1112  003818                     l4402:
  1113  003818  0E01               	movlw	1
  1114  00381A  241F               	addwf	strstr@s1,w,c
  1115  00381C  6E10               	movwf	strchr@ptr,c
  1116  00381E  0E00               	movlw	0
  1117  003820  2020               	addwfc	strstr@s1+1,w,c
  1118  003822  6E11               	movwf	strchr@ptr+1,c
  1119  003824  C021  FFF6         	movff	strstr@s2,tblptrl
  1120  003828  C022  FFF7         	movff	strstr@s2+1,tblptrh
  1121  00382C                     	if	0	;tblptru may be non-zero
  1122  00382C                     	endif
  1123  00382C                     	if	0	;tblptru may be non-zero
  1124  00382C                     	endif
  1125  00382C  0008               	tblrd		*
  1126  00382E  50F5               	movf	tablat,w,c
  1127  003830  6E12               	movwf	strchr@chr,c
  1128  003832  6A13               	clrf	strchr@chr+1,c
  1129  003834  EC08  F01E         	call	_strchr	;wreg free
  1130  003838  C010  F01F         	movff	?_strchr,strstr@s1
  1131  00383C  C011  F020         	movff	?_strchr+1,strstr@s1+1
  1132  003840                     l4404:
  1133  003840  5020               	movf	strstr@s1+1,w,c
  1134  003842  101F               	iorwf	strstr@s1,w,c
  1135  003844  B4D8               	btfsc	status,2,c
  1136  003846  D007               	goto	l4408
  1137  003848  C01F  FFD9         	movff	strstr@s1,fsr2l
  1138  00384C  C020  FFDA         	movff	strstr@s1+1,fsr2h
  1139  003850  50DF               	movf	indf2,w,c
  1140  003852  A4D8               	btfss	status,2,c
  1141  003854  D7C4               	goto	l4396
  1142  003856                     l4408:
  1143  003856  0E00               	movlw	0
  1144  003858  6E20               	movwf	?_strstr+1,c
  1145  00385A  0E00               	movlw	0
  1146  00385C  6E1F               	movwf	?_strstr,c
  1147  00385E                     l1098:
  1148  00385E  0012               	return	
  1149  003860                     __end_of_strstr:
  1150                           	opt stack 0
  1151                           tblptru	equ	0xFF8
  1152                           tblptrh	equ	0xFF7
  1153                           tblptrl	equ	0xFF6
  1154                           tablat	equ	0xFF5
  1155                           postinc0	equ	0xFEE
  1156                           wreg	equ	0xFE8
  1157                           postdec1	equ	0xFE5
  1158                           fsr1h	equ	0xFE2
  1159                           fsr1l	equ	0xFE1
  1160                           indf2	equ	0xFDF
  1161                           fsr2h	equ	0xFDA
  1162                           fsr2l	equ	0xFD9
  1163                           status	equ	0xFD8
  1164                           
  1165 ;; *************** function _strncmp *****************
  1166 ;; Defined at:
  1167 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\strncmp.c"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;  s1              2   21[COMRAM] PTR const unsigned char 
  1170 ;;		 -> Fno.fname(13), Fno(22), NULL(0), 
  1171 ;;  s2              2   23[COMRAM] PTR const unsigned char 
  1172 ;;		 -> STR_2(5), 
  1173 ;;  len             2   25[COMRAM] unsigned int 
  1174 ;; Auto vars:     Size  Location     Type
  1175 ;;		None
  1176 ;; Return value:  Size  Location     Type
  1177 ;;                  2   21[COMRAM] int 
  1178 ;; Registers used:
  1179 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1180 ;; Tracked objects:
  1181 ;;		On entry : 0/0
  1182 ;;		On exit  : 0/0
  1183 ;;		Unchanged: 0/0
  1184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1185 ;;      Params:         6       0       0       0       0       0       0       0       0
  1186 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1187 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1188 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1189 ;;Total ram usage:        9 bytes
  1190 ;; Hardware stack levels used:    1
  1191 ;; Hardware stack levels required when called:    2
  1192 ;; This function calls:
  1193 ;;		Nothing
  1194 ;; This function is called by:
  1195 ;;		_strstr
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199                           	psect	text2
  1200  003860                     __ptext2:
  1201                           	opt stack 0
  1202  003860                     _strncmp:
  1203                           	opt stack 27
  1204                           
  1205                           ;incstack = 0
  1206  003860  D033               	goto	l4110
  1207  003862                     l4100:
  1208  003862  C016  FFD9         	movff	strncmp@s1,fsr2l
  1209  003866  C017  FFDA         	movff	strncmp@s1+1,fsr2h
  1210  00386A  50DF               	movf	indf2,w,c
  1211  00386C  B4D8               	btfsc	status,2,c
  1212  00386E  D00F               	goto	l4104
  1213  003870  C018  FFF6         	movff	strncmp@s2,tblptrl
  1214  003874  C019  FFF7         	movff	strncmp@s2+1,tblptrh
  1215  003878                     	if	0	;tblptru may be non-zero
  1216  003878                     	endif
  1217  003878                     	if	0	;tblptru may be non-zero
  1218  003878                     	endif
  1219  003878  0008               	tblrd		*
  1220  00387A  CFF5 F01C          	movff	tablat,??_strncmp
  1221  00387E  C016  FFD9         	movff	strncmp@s1,fsr2l
  1222  003882  C017  FFDA         	movff	strncmp@s1+1,fsr2h
  1223  003886  50DF               	movf	indf2,w,c
  1224  003888  181C               	xorwf	??_strncmp,w,c
  1225  00388A  B4D8               	btfsc	status,2,c
  1226  00388C  D019               	goto	l4108
  1227  00388E                     l4104:
  1228  00388E  C018  FFF6         	movff	strncmp@s2,tblptrl
  1229  003892  C019  FFF7         	movff	strncmp@s2+1,tblptrh
  1230  003896                     	if	0	;tblptru may be non-zero
  1231  003896                     	endif
  1232  003896                     	if	0	;tblptru may be non-zero
  1233  003896                     	endif
  1234  003896  0008               	tblrd		*
  1235  003898  50F5               	movf	tablat,w,c
  1236  00389A  6E1C               	movwf	??_strncmp& (0+255),c
  1237  00389C  6A1D               	clrf	(??_strncmp+1)& (0+255),c
  1238  00389E  1E1C               	comf	??_strncmp,f,c
  1239  0038A0  1E1D               	comf	??_strncmp+1,f,c
  1240  0038A2  4A1C               	infsnz	??_strncmp,f,c
  1241  0038A4  2A1D               	incf	??_strncmp+1,f,c
  1242  0038A6  C016  FFD9         	movff	strncmp@s1,fsr2l
  1243  0038AA  C017  FFDA         	movff	strncmp@s1+1,fsr2h
  1244  0038AE  50DF               	movf	indf2,w,c
  1245  0038B0  6E1E               	movwf	(??_strncmp+2)& (0+255),c
  1246  0038B2  501E               	movf	??_strncmp+2,w,c
  1247  0038B4  241C               	addwf	??_strncmp,w,c
  1248  0038B6  6E16               	movwf	?_strncmp,c
  1249  0038B8  0E00               	movlw	0
  1250  0038BA  201D               	addwfc	??_strncmp+1,w,c
  1251  0038BC  6E17               	movwf	?_strncmp+1,c
  1252  0038BE  D010               	goto	l1121
  1253  0038C0                     l4108:
  1254  0038C0  4A16               	infsnz	strncmp@s1,f,c
  1255  0038C2  2A17               	incf	strncmp@s1+1,f,c
  1256  0038C4  4A18               	infsnz	strncmp@s2,f,c
  1257  0038C6  2A19               	incf	strncmp@s2+1,f,c
  1258  0038C8                     l4110:
  1259  0038C8  061A               	decf	strncmp@len,f,c
  1260  0038CA  A0D8               	btfss	status,0,c
  1261  0038CC  061B               	decf	strncmp@len+1,f,c
  1262  0038CE  281A               	incf	strncmp@len& (0+255),w,c
  1263  0038D0  B4D8               	btfsc	status,2,c
  1264  0038D2  281B               	incf	(strncmp@len+1)& (0+255),w,c
  1265  0038D4  A4D8               	btfss	status,2,c
  1266  0038D6  D7C5               	goto	l4100
  1267  0038D8  0E00               	movlw	0
  1268  0038DA  6E17               	movwf	?_strncmp+1,c
  1269  0038DC  0E00               	movlw	0
  1270  0038DE  6E16               	movwf	?_strncmp,c
  1271  0038E0                     l1121:
  1272  0038E0  0012               	return	
  1273  0038E2                     __end_of_strncmp:
  1274                           	opt stack 0
  1275                           tblptru	equ	0xFF8
  1276                           tblptrh	equ	0xFF7
  1277                           tblptrl	equ	0xFF6
  1278                           tablat	equ	0xFF5
  1279                           postinc0	equ	0xFEE
  1280                           wreg	equ	0xFE8
  1281                           postdec1	equ	0xFE5
  1282                           fsr1h	equ	0xFE2
  1283                           fsr1l	equ	0xFE1
  1284                           indf2	equ	0xFDF
  1285                           fsr2h	equ	0xFDA
  1286                           fsr2l	equ	0xFD9
  1287                           status	equ	0xFD8
  1288                           
  1289 ;; *************** function _strlen *****************
  1290 ;; Defined at:
  1291 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\strlen.c"
  1292 ;; Parameters:    Size  Location     Type
  1293 ;;  s               2   15[COMRAM] PTR const unsigned char 
  1294 ;;		 -> STR_2(5), 
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;  cp              2   19[COMRAM] PTR const unsigned char 
  1297 ;;		 -> STR_2(5), 
  1298 ;; Return value:  Size  Location     Type
  1299 ;;                  2   15[COMRAM] unsigned int 
  1300 ;; Registers used:
  1301 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1302 ;; Tracked objects:
  1303 ;;		On entry : 0/0
  1304 ;;		On exit  : 0/0
  1305 ;;		Unchanged: 0/0
  1306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1307 ;;      Params:         2       0       0       0       0       0       0       0       0
  1308 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1309 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1310 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1311 ;;Total ram usage:        6 bytes
  1312 ;; Hardware stack levels used:    1
  1313 ;; Hardware stack levels required when called:    2
  1314 ;; This function calls:
  1315 ;;		Nothing
  1316 ;; This function is called by:
  1317 ;;		_strstr
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321                           	psect	text3
  1322  003B9C                     __ptext3:
  1323                           	opt stack 0
  1324  003B9C                     _strlen:
  1325                           	opt stack 27
  1326                           
  1327                           ;incstack = 0
  1328  003B9C  C011  F015         	movff	strlen@s+1,strlen@cp+1
  1329  003BA0  C010  F014         	movff	strlen@s,strlen@cp
  1330  003BA4  D002               	goto	l4092
  1331  003BA6                     l4090:
  1332  003BA6  4A14               	infsnz	strlen@cp,f,c
  1333  003BA8  2A15               	incf	strlen@cp+1,f,c
  1334  003BAA                     l4092:
  1335  003BAA  C014  FFF6         	movff	strlen@cp,tblptrl
  1336  003BAE  C015  FFF7         	movff	strlen@cp+1,tblptrh
  1337  003BB2                     	if	0	;tblptru may be non-zero
  1338  003BB2                     	endif
  1339  003BB2                     	if	0	;tblptru may be non-zero
  1340  003BB2                     	endif
  1341  003BB2  0008               	tblrd		*
  1342  003BB4  50F5               	movf	tablat,w,c
  1343  003BB6  0900               	iorlw	0
  1344  003BB8  A4D8               	btfss	status,2,c
  1345  003BBA  D7F5               	goto	l4090
  1346  003BBC  C010  F012         	movff	strlen@s,??_strlen
  1347  003BC0  C011  F013         	movff	strlen@s+1,??_strlen+1
  1348  003BC4  1E12               	comf	??_strlen,f,c
  1349  003BC6  1E13               	comf	??_strlen+1,f,c
  1350  003BC8  4A12               	infsnz	??_strlen,f,c
  1351  003BCA  2A13               	incf	??_strlen+1,f,c
  1352  003BCC  5014               	movf	strlen@cp,w,c
  1353  003BCE  2412               	addwf	??_strlen,w,c
  1354  003BD0  6E10               	movwf	?_strlen,c
  1355  003BD2  5015               	movf	strlen@cp+1,w,c
  1356  003BD4  2013               	addwfc	??_strlen+1,w,c
  1357  003BD6  6E11               	movwf	?_strlen+1,c
  1358  003BD8  0012               	return	
  1359  003BDA                     __end_of_strlen:
  1360                           	opt stack 0
  1361                           tblptru	equ	0xFF8
  1362                           tblptrh	equ	0xFF7
  1363                           tblptrl	equ	0xFF6
  1364                           tablat	equ	0xFF5
  1365                           postinc0	equ	0xFEE
  1366                           wreg	equ	0xFE8
  1367                           postdec1	equ	0xFE5
  1368                           fsr1h	equ	0xFE2
  1369                           fsr1l	equ	0xFE1
  1370                           indf2	equ	0xFDF
  1371                           fsr2h	equ	0xFDA
  1372                           fsr2l	equ	0xFD9
  1373                           status	equ	0xFD8
  1374                           
  1375 ;; *************** function _strchr *****************
  1376 ;; Defined at:
  1377 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\strchr.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;  ptr             2   15[COMRAM] PTR const unsigned char 
  1380 ;;		 -> Fno.fname(13), Fno(22), NULL(0), 
  1381 ;;  chr             2   17[COMRAM] int 
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;		None
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  2   15[COMRAM] PTR unsigned char 
  1386 ;; Registers used:
  1387 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1393 ;;      Params:         4       0       0       0       0       0       0       0       0
  1394 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1395 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1396 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1397 ;;Total ram usage:        4 bytes
  1398 ;; Hardware stack levels used:    1
  1399 ;; Hardware stack levels required when called:    2
  1400 ;; This function calls:
  1401 ;;		Nothing
  1402 ;; This function is called by:
  1403 ;;		_strstr
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           	psect	text4
  1408  003C10                     __ptext4:
  1409                           	opt stack 0
  1410  003C10                     _strchr:
  1411                           	opt stack 27
  1412  003C10                     l1104:
  1413  003C10  5012               	movf	strchr@chr,w,c
  1414  003C12  C010  FFD9         	movff	strchr@ptr,fsr2l
  1415  003C16  C011  FFDA         	movff	strchr@ptr+1,fsr2h
  1416  003C1A  62DF               	cpfseq	indf2,c
  1417  003C1C  D005               	goto	l4122
  1418  003C1E  C011  F011         	movff	strchr@ptr+1,?_strchr+1
  1419  003C22  C010  F010         	movff	strchr@ptr,?_strchr
  1420  003C26  D00D               	goto	l1106
  1421  003C28                     l4122:
  1422  003C28  C010  FFD9         	movff	strchr@ptr,fsr2l
  1423  003C2C  C011  FFDA         	movff	strchr@ptr+1,fsr2h
  1424  003C30  4A10               	infsnz	strchr@ptr,f,c
  1425  003C32  2A11               	incf	strchr@ptr+1,f,c
  1426  003C34  50DF               	movf	indf2,w,c
  1427  003C36  A4D8               	btfss	status,2,c
  1428  003C38  D7EB               	goto	l1104
  1429  003C3A  0E00               	movlw	0
  1430  003C3C  6E11               	movwf	?_strchr+1,c
  1431  003C3E  0E00               	movlw	0
  1432  003C40  6E10               	movwf	?_strchr,c
  1433  003C42                     l1106:
  1434  003C42  0012               	return	
  1435  003C44                     __end_of_strchr:
  1436                           	opt stack 0
  1437                           tblptru	equ	0xFF8
  1438                           tblptrh	equ	0xFF7
  1439                           tblptrl	equ	0xFF6
  1440                           tablat	equ	0xFF5
  1441                           postinc0	equ	0xFEE
  1442                           wreg	equ	0xFE8
  1443                           postdec1	equ	0xFE5
  1444                           fsr1h	equ	0xFE2
  1445                           fsr1l	equ	0xFE1
  1446                           indf2	equ	0xFDF
  1447                           fsr2h	equ	0xFDA
  1448                           fsr2l	equ	0xFD9
  1449                           status	equ	0xFD8
  1450                           
  1451 ;; *************** function _pwm_audio_init *****************
  1452 ;; Defined at:
  1453 ;;		line 103 in file "../../../PIC18F/pwm_audio.c"
  1454 ;; Parameters:    Size  Location     Type
  1455 ;;		None
  1456 ;; Auto vars:     Size  Location     Type
  1457 ;;		None
  1458 ;; Return value:  Size  Location     Type
  1459 ;;		None               void
  1460 ;; Registers used:
  1461 ;;		wreg, status,2, cstack
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1467 ;;      Params:         0       0       0       0       0       0       0       0       0
  1468 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1469 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1470 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1471 ;;Total ram usage:        0 bytes
  1472 ;; Hardware stack levels used:    1
  1473 ;; Hardware stack levels required when called:    3
  1474 ;; This function calls:
  1475 ;;		_pwm_init
  1476 ;;		_timer1_init
  1477 ;; This function is called by:
  1478 ;;		_main
  1479 ;; This function uses a non-reentrant model
  1480 ;;
  1481                           
  1482                           	psect	text5
  1483  003C8E                     __ptext5:
  1484                           	opt stack 0
  1485  003C8E                     _pwm_audio_init:
  1486                           	opt stack 27
  1487                           
  1488                           ;pwm_audio.c: 105: pwm_init();
  1489                           
  1490                           ;incstack = 0
  1491  003C8E  EC54  F01E         	call	_pwm_init	;wreg free
  1492                           
  1493                           ;pwm_audio.c: 106: timer1_init();
  1494  003C92  EC6D  F01E         	call	_timer1_init	;wreg free
  1495                           
  1496                           ;pwm_audio.c: 108: pWAVIN = pWAVOUT = 0;
  1497  003C96  0E00               	movlw	0
  1498  003C98  6E4D               	movwf	_pWAVOUT+1,c	;volatile
  1499  003C9A  0E00               	movlw	0
  1500  003C9C  6E4C               	movwf	_pWAVOUT,c	;volatile
  1501  003C9E  C04C  F04A         	movff	_pWAVOUT,_pWAVIN	;volatile
  1502  003CA2  C04D  F04B         	movff	_pWAVOUT+1,_pWAVIN+1	;volatile
  1503  003CA6  0012               	return	
  1504  003CA8                     __end_of_pwm_audio_init:
  1505                           	opt stack 0
  1506                           tblptru	equ	0xFF8
  1507                           tblptrh	equ	0xFF7
  1508                           tblptrl	equ	0xFF6
  1509                           tablat	equ	0xFF5
  1510                           postinc0	equ	0xFEE
  1511                           wreg	equ	0xFE8
  1512                           postdec1	equ	0xFE5
  1513                           fsr1h	equ	0xFE2
  1514                           fsr1l	equ	0xFE1
  1515                           indf2	equ	0xFDF
  1516                           fsr2h	equ	0xFDA
  1517                           fsr2l	equ	0xFD9
  1518                           status	equ	0xFD8
  1519                           
  1520 ;; *************** function _timer1_init *****************
  1521 ;; Defined at:
  1522 ;;		line 57 in file "../../../PIC18F/pwm_audio.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;		None
  1525 ;; Auto vars:     Size  Location     Type
  1526 ;;		None
  1527 ;; Return value:  Size  Location     Type
  1528 ;;		None               void
  1529 ;; Registers used:
  1530 ;;		wreg, status,2
  1531 ;; Tracked objects:
  1532 ;;		On entry : 0/0
  1533 ;;		On exit  : 0/0
  1534 ;;		Unchanged: 0/0
  1535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1536 ;;      Params:         0       0       0       0       0       0       0       0       0
  1537 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1538 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1539 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1540 ;;Total ram usage:        0 bytes
  1541 ;; Hardware stack levels used:    1
  1542 ;; Hardware stack levels required when called:    2
  1543 ;; This function calls:
  1544 ;;		Nothing
  1545 ;; This function is called by:
  1546 ;;		_pwm_audio_init
  1547 ;; This function uses a non-reentrant model
  1548 ;;
  1549                           
  1550                           	psect	text6
  1551  003CDA                     __ptext6:
  1552                           	opt stack 0
  1553  003CDA                     _timer1_init:
  1554                           	opt stack 27
  1555                           
  1556                           ;pwm_audio.c: 59: T1CONbits.RD16 = 1;
  1557                           
  1558                           ;incstack = 0
  1559  003CDA  8ECD               	bsf	4045,7,c	;volatile
  1560                           
  1561                           ;pwm_audio.c: 61: T1CONbits.TMR1CS = 0;
  1562  003CDC  92CD               	bcf	4045,1,c	;volatile
  1563                           
  1564                           ;pwm_audio.c: 63: TMR1H = 0;
  1565  003CDE  0E00               	movlw	0
  1566  003CE0  6ECF               	movwf	4047,c	;volatile
  1567                           
  1568                           ;pwm_audio.c: 64: TMR1L = 0;
  1569  003CE2  0E00               	movlw	0
  1570  003CE4  6ECE               	movwf	4046,c	;volatile
  1571                           
  1572                           ;pwm_audio.c: 66: INTCONbits.GIE = 1;
  1573  003CE6  8EF2               	bsf	intcon,7,c	;volatile
  1574                           
  1575                           ;pwm_audio.c: 67: INTCONbits.PEIE = 1;
  1576  003CE8  8CF2               	bsf	intcon,6,c	;volatile
  1577                           
  1578                           ;pwm_audio.c: 69: PIR1bits.TMR1IF = 0;
  1579  003CEA  909E               	bcf	3998,0,c	;volatile
  1580                           
  1581                           ;pwm_audio.c: 72: T1CONbits.TMR1ON = 1;
  1582  003CEC  80CD               	bsf	4045,0,c	;volatile
  1583  003CEE  0012               	return	
  1584  003CF0                     __end_of_timer1_init:
  1585                           	opt stack 0
  1586                           tblptru	equ	0xFF8
  1587                           tblptrh	equ	0xFF7
  1588                           tblptrl	equ	0xFF6
  1589                           tablat	equ	0xFF5
  1590                           intcon	equ	0xFF2
  1591                           postinc0	equ	0xFEE
  1592                           wreg	equ	0xFE8
  1593                           postdec1	equ	0xFE5
  1594                           fsr1h	equ	0xFE2
  1595                           fsr1l	equ	0xFE1
  1596                           indf2	equ	0xFDF
  1597                           fsr2h	equ	0xFDA
  1598                           fsr2l	equ	0xFD9
  1599                           status	equ	0xFD8
  1600                           
  1601 ;; *************** function _pwm_init *****************
  1602 ;; Defined at:
  1603 ;;		line 27 in file "../../../PIC18F/pwm_audio.c"
  1604 ;; Parameters:    Size  Location     Type
  1605 ;;		None
  1606 ;; Auto vars:     Size  Location     Type
  1607 ;;		None
  1608 ;; Return value:  Size  Location     Type
  1609 ;;		None               void
  1610 ;; Registers used:
  1611 ;;		wreg, status,2
  1612 ;; Tracked objects:
  1613 ;;		On entry : 0/0
  1614 ;;		On exit  : 0/0
  1615 ;;		Unchanged: 0/0
  1616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1617 ;;      Params:         0       0       0       0       0       0       0       0       0
  1618 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1619 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1620 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1621 ;;Total ram usage:        0 bytes
  1622 ;; Hardware stack levels used:    1
  1623 ;; Hardware stack levels required when called:    2
  1624 ;; This function calls:
  1625 ;;		Nothing
  1626 ;; This function is called by:
  1627 ;;		_pwm_audio_init
  1628 ;; This function uses a non-reentrant model
  1629 ;;
  1630                           
  1631                           	psect	text7
  1632  003CA8                     __ptext7:
  1633                           	opt stack 0
  1634  003CA8                     _pwm_init:
  1635                           	opt stack 27
  1636                           
  1637                           ;pwm_audio.c: 29: PR2 = 0b00111111 ;
  1638                           
  1639                           ;incstack = 0
  1640  003CA8  0E3F               	movlw	63
  1641  003CAA  6ECB               	movwf	4043,c	;volatile
  1642                           
  1643                           ;pwm_audio.c: 30: T2CON = 0b00000100 ;
  1644  003CAC  0E04               	movlw	4
  1645  003CAE  6ECA               	movwf	4042,c	;volatile
  1646                           
  1647                           ;pwm_audio.c: 33: CCPR1L = 0b00011111 ;
  1648  003CB0  0E1F               	movlw	31
  1649  003CB2  6EBE               	movwf	4030,c	;volatile
  1650                           
  1651                           ;pwm_audio.c: 34: CCP1CON = 0b00111100 ;
  1652  003CB4  0E3C               	movlw	60
  1653  003CB6  6EBD               	movwf	4029,c	;volatile
  1654                           
  1655                           ;pwm_audio.c: 37: CCPR2L = 0b00011111 ;
  1656  003CB8  0E1F               	movlw	31
  1657  003CBA  6EBB               	movwf	4027,c	;volatile
  1658                           
  1659                           ;pwm_audio.c: 38: CCP2CON = 0b00111100 ;
  1660  003CBC  0E3C               	movlw	60
  1661  003CBE  6EBA               	movwf	4026,c	;volatile
  1662  003CC0  0012               	return	
  1663  003CC2                     __end_of_pwm_init:
  1664                           	opt stack 0
  1665                           tblptru	equ	0xFF8
  1666                           tblptrh	equ	0xFF7
  1667                           tblptrl	equ	0xFF6
  1668                           tablat	equ	0xFF5
  1669                           intcon	equ	0xFF2
  1670                           postinc0	equ	0xFEE
  1671                           wreg	equ	0xFE8
  1672                           postdec1	equ	0xFE5
  1673                           fsr1h	equ	0xFE2
  1674                           fsr1l	equ	0xFE1
  1675                           indf2	equ	0xFDF
  1676                           fsr2h	equ	0xFDA
  1677                           fsr2l	equ	0xFD9
  1678                           status	equ	0xFD8
  1679                           
  1680 ;; *************** function _play_wave_file *****************
  1681 ;; Defined at:
  1682 ;;		line 85 in file "../../../PIC18F/wave_file.c"
  1683 ;; Parameters:    Size  Location     Type
  1684 ;;  fn              2  118[BANK0 ] PTR const unsigned char 
  1685 ;;		 -> Fno.fname(13), Fno(22), 
  1686 ;; Auto vars:     Size  Location     Type
  1687 ;;  i               4  131[BANK0 ] unsigned long 
  1688 ;;  sz              4  125[BANK0 ] unsigned long 
  1689 ;;  amplitude       2  129[BANK0 ] unsigned short 
  1690 ;;  res             1  124[BANK0 ] enum E4814
  1691 ;; Return value:  Size  Location     Type
  1692 ;;                  2  118[BANK0 ] unsigned int 
  1693 ;; Registers used:
  1694 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1695 ;; Tracked objects:
  1696 ;;		On entry : 0/0
  1697 ;;		On exit  : 0/0
  1698 ;;		Unchanged: 0/0
  1699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1700 ;;      Params:         0       2       0       0       0       0       0       0       0
  1701 ;;      Locals:         0      11       0       0       0       0       0       0       0
  1702 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1703 ;;      Totals:         0      17       0       0       0       0       0       0       0
  1704 ;;Total ram usage:       17 bytes
  1705 ;; Hardware stack levels used:    1
  1706 ;; Hardware stack levels required when called:   11
  1707 ;; This function calls:
  1708 ;;		_load_header
  1709 ;;		_pf_open
  1710 ;;		_pf_read
  1711 ;;		_wav_putc
  1712 ;; This function is called by:
  1713 ;;		_main
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           	psect	text8
  1718  001B4A                     __ptext8:
  1719                           	opt stack 0
  1720  001B4A                     _play_wave_file:
  1721                           	opt stack 19
  1722                           
  1723                           ;wave_file.c: 87: DWORD sz, i;
  1724                           ;wave_file.c: 88: WORD amplitude;
  1725                           ;wave_file.c: 89: FRESULT res;
  1726                           ;wave_file.c: 91: if ((res = pf_open(fn)) == FR_OK) {
  1727                           
  1728                           ;incstack = 0
  1729  001B4A  0100               	movlb	0	; () banked
  1730  001B4C  C0D7  F08E         	movff	play_wave_file@fn+1,pf_open@path+1
  1731  001B50  0100               	movlb	0	; () banked
  1732  001B52  C0D6  F08D         	movff	play_wave_file@fn,pf_open@path
  1733  001B56  ECCC  F015         	call	_pf_open	;wreg free
  1734  001B5A  0100               	movlb	0	; () banked
  1735  001B5C  6FDC               	movwf	play_wave_file@res& (0+255),b
  1736  001B5E  0100               	movlb	0	; () banked
  1737  001B60  67DC               	tstfsz	play_wave_file@res& (0+255),b
  1738  001B62  D1CE               	goto	l478
  1739                           
  1740                           ; BSR set to: 0
  1741                           ;wave_file.c: 93: sz = load_header();
  1742  001B64  EC81  F00F         	call	_load_header	;wreg free
  1743  001B68  C08C  F0DD         	movff	?_load_header,play_wave_file@sz
  1744  001B6C  C08D  F0DE         	movff	?_load_header+1,play_wave_file@sz+1
  1745  001B70  C08E  F0DF         	movff	?_load_header+2,play_wave_file@sz+2
  1746  001B74  C08F  F0E0         	movff	?_load_header+3,play_wave_file@sz+3
  1747                           
  1748                           ;wave_file.c: 94: if (sz < 256) return (UINT)sz;
  1749  001B78  0E00               	movlw	0
  1750  001B7A  0100               	movlb	0	; () banked
  1751  001B7C  6FD8               	movwf	??_play_wave_file& (0+255),b
  1752  001B7E  0E01               	movlw	1
  1753  001B80  6FD9               	movwf	(??_play_wave_file+1)& (0+255),b
  1754  001B82  0E00               	movlw	0
  1755  001B84  6FDA               	movwf	(??_play_wave_file+2)& (0+255),b
  1756  001B86  0E00               	movlw	0
  1757  001B88  6FDB               	movwf	(??_play_wave_file+3)& (0+255),b
  1758  001B8A  0100               	movlb	0	; () banked
  1759  001B8C  51D8               	movf	??_play_wave_file& (0+255),w,b
  1760  001B8E  0100               	movlb	0	; () banked
  1761  001B90  5DDD               	subwf	play_wave_file@sz& (0+255),w,b
  1762  001B92  0100               	movlb	0	; () banked
  1763  001B94  51D9               	movf	(??_play_wave_file+1)& (0+255),w,b
  1764  001B96  0100               	movlb	0	; () banked
  1765  001B98  59DE               	subwfb	(play_wave_file@sz+1)& (0+255),w,b
  1766  001B9A  0100               	movlb	0	; () banked
  1767  001B9C  51DA               	movf	(??_play_wave_file+2)& (0+255),w,b
  1768  001B9E  0100               	movlb	0	; () banked
  1769  001BA0  59DF               	subwfb	(play_wave_file@sz+2)& (0+255),w,b
  1770  001BA2  0100               	movlb	0	; () banked
  1771  001BA4  51DB               	movf	(??_play_wave_file+3)& (0+255),w,b
  1772  001BA6  0100               	movlb	0	; () banked
  1773  001BA8  59E0               	subwfb	(play_wave_file@sz+3)& (0+255),w,b
  1774  001BAA  A0D8               	btfss	status,0,c
  1775  001BAC  D1A9               	goto	l478
  1776                           
  1777                           ; BSR set to: 0
  1778                           ;wave_file.c: 95: TRISC &= 0b11111001;
  1779                           
  1780                           ; BSR set to: 0
  1781                           
  1782                           ; BSR set to: 0
  1783                           ;	Return value of _play_wave_file is never used
  1784  001BAE  0EF9               	movlw	249
  1785  001BB0  1694               	andwf	3988,f,c	;volatile
  1786                           
  1787                           ;wave_file.c: 96: if( (NumChannels==2) && (BitsPerSample==16) ){
  1788  001BB2  0100               	movlb	0	; () banked
  1789  001BB4  51E9               	movf	_NumChannels& (0+255),w,b
  1790  001BB6  0A02               	xorlw	2
  1791  001BB8  11EA               	iorwf	(_NumChannels+1)& (0+255),w,b
  1792  001BBA  A4D8               	btfss	status,2,c
  1793  001BBC  D076               	goto	l5814
  1794                           
  1795                           ; BSR set to: 0
  1796  001BBE  0100               	movlb	0	; () banked
  1797  001BC0  51E7               	movf	_BitsPerSample& (0+255),w,b
  1798  001BC2  0A10               	xorlw	16
  1799  001BC4  11E8               	iorwf	(_BitsPerSample+1)& (0+255),w,b
  1800  001BC6  A4D8               	btfss	status,2,c
  1801  001BC8  D070               	goto	l5814
  1802  001BCA                     l5792:
  1803                           
  1804                           ; BSR set to: 0
  1805                           ;wave_file.c: 98: pf_read(Buff, 256, &rb);
  1806  001BCA  0102               	movlb	2	; () banked
  1807  001BCC  0E02               	movlw	high _Buff
  1808  001BCE  6E3C               	movwf	pf_read@buff+1,c
  1809  001BD0  0102               	movlb	2	; () banked
  1810  001BD2  0E00               	movlw	low _Buff
  1811  001BD4  6E3B               	movwf	pf_read@buff,c
  1812  001BD6  0E01               	movlw	1
  1813  001BD8  6E3E               	movwf	pf_read@btr+1,c
  1814  001BDA  0E00               	movlw	0
  1815  001BDC  6E3D               	movwf	pf_read@btr,c
  1816  001BDE  0100               	movlb	0	; () banked
  1817  001BE0  0E00               	movlw	high _rb
  1818  001BE2  6E40               	movwf	pf_read@br+1,c
  1819  001BE4  0100               	movlb	0	; () banked
  1820  001BE6  0EFB               	movlw	low _rb
  1821  001BE8  6E3F               	movwf	pf_read@br,c
  1822  001BEA  ECD1  F006         	call	_pf_read	;wreg free
  1823                           
  1824                           ;wave_file.c: 100: for(i=0; i<(256>>2); i++){
  1825  001BEE  0E00               	movlw	0
  1826  001BF0  0100               	movlb	0	; () banked
  1827  001BF2  6FE3               	movwf	play_wave_file@i& (0+255),b
  1828  001BF4  0E00               	movlw	0
  1829  001BF6  0100               	movlb	0	; () banked
  1830  001BF8  6FE4               	movwf	(play_wave_file@i+1)& (0+255),b
  1831  001BFA  0E00               	movlw	0
  1832  001BFC  0100               	movlb	0	; () banked
  1833  001BFE  6FE5               	movwf	(play_wave_file@i+2)& (0+255),b
  1834  001C00  0E00               	movlw	0
  1835  001C02  0100               	movlb	0	; () banked
  1836  001C04  6FE6               	movwf	(play_wave_file@i+3)& (0+255),b
  1837  001C06                     
  1838                           ; BSR set to: 0
  1839  001C06  0E40               	movlw	64
  1840  001C08  0100               	movlb	0	; () banked
  1841  001C0A  5DE3               	subwf	play_wave_file@i& (0+255),w,b
  1842  001C0C  0E00               	movlw	0
  1843  001C0E  0100               	movlb	0	; () banked
  1844  001C10  59E4               	subwfb	(play_wave_file@i+1)& (0+255),w,b
  1845  001C12  0E00               	movlw	0
  1846  001C14  0100               	movlb	0	; () banked
  1847  001C16  59E5               	subwfb	(play_wave_file@i+2)& (0+255),w,b
  1848  001C18  0E00               	movlw	0
  1849  001C1A  0100               	movlb	0	; () banked
  1850  001C1C  59E6               	subwfb	(play_wave_file@i+3)& (0+255),w,b
  1851  001C1E  B0D8               	btfsc	status,0,c
  1852  001C20  D03E               	goto	l5812
  1853                           
  1854                           ; BSR set to: 0
  1855                           ;wave_file.c: 101: amplitude = Buff[(i<<2)+1];
  1856                           
  1857                           ; BSR set to: 0
  1858                           
  1859                           ; BSR set to: 0
  1860  001C22  0100               	movlb	0	; () banked
  1861  001C24  C0E3  F0D8         	movff	play_wave_file@i,??_play_wave_file
  1862  001C28  0100               	movlb	0	; () banked
  1863  001C2A  C0E4  F0D9         	movff	play_wave_file@i+1,??_play_wave_file+1
  1864  001C2E  0100               	movlb	0	; () banked
  1865  001C30  90D8               	bcf	status,0,c
  1866  001C32  37D8               	rlcf	??_play_wave_file& (0+255),f,b
  1867  001C34  37D9               	rlcf	(??_play_wave_file+1)& (0+255),f,b
  1868  001C36  0100               	movlb	0	; () banked
  1869  001C38  90D8               	bcf	status,0,c
  1870  001C3A  37D8               	rlcf	??_play_wave_file& (0+255),f,b
  1871  001C3C  37D9               	rlcf	(??_play_wave_file+1)& (0+255),f,b
  1872  001C3E  0E01               	movlw	1
  1873  001C40  0100               	movlb	0	; () banked
  1874  001C42  27D8               	addwf	??_play_wave_file& (0+255),f,b
  1875  001C44  0E00               	movlw	0
  1876  001C46  23D9               	addwfc	(??_play_wave_file+1)& (0+255),f,b
  1877  001C48  0102               	movlb	2	; () banked
  1878  001C4A  0E00               	movlw	low _Buff
  1879  001C4C  0100               	movlb	0	; () banked
  1880  001C4E  25D8               	addwf	??_play_wave_file& (0+255),w,b
  1881  001C50  6ED9               	movwf	fsr2l,c
  1882  001C52  0102               	movlb	2	; () banked
  1883  001C54  0E02               	movlw	high _Buff
  1884  001C56  0100               	movlb	0	; () banked
  1885  001C58  21D9               	addwfc	(??_play_wave_file+1)& (0+255),w,b
  1886  001C5A  6EDA               	movwf	fsr2h,c
  1887  001C5C  50DF               	movf	indf2,w,c
  1888  001C5E  0100               	movlb	0	; () banked
  1889  001C60  6FDA               	movwf	(??_play_wave_file+2)& (0+255),b
  1890  001C62  0100               	movlb	0	; () banked
  1891  001C64  51DA               	movf	(??_play_wave_file+2)& (0+255),w,b
  1892  001C66  0100               	movlb	0	; () banked
  1893  001C68  6FE1               	movwf	play_wave_file@amplitude& (0+255),b
  1894  001C6A  0100               	movlb	0	; () banked
  1895  001C6C  6BE2               	clrf	(play_wave_file@amplitude+1)& (0+255),b
  1896                           
  1897                           ; BSR set to: 0
  1898                           ;wave_file.c: 103: if(amplitude&0x80) amplitude = 0;
  1899  001C6E  0100               	movlb	0	; () banked
  1900  001C70  AFE1               	btfss	play_wave_file@amplitude& (0+255),7,b
  1901  001C72  D006               	goto	l5806
  1902                           
  1903                           ; BSR set to: 0
  1904  001C74  0E00               	movlw	0
  1905  001C76  0100               	movlb	0	; () banked
  1906  001C78  6FE2               	movwf	(play_wave_file@amplitude+1)& (0+255),b
  1907  001C7A  0E00               	movlw	0
  1908  001C7C  0100               	movlb	0	; () banked
  1909  001C7E  6FE1               	movwf	play_wave_file@amplitude& (0+255),b
  1910  001C80                     l5806:
  1911                           
  1912                           ; BSR set to: 0
  1913                           ;wave_file.c: 105: wav_putc( amplitude );
  1914  001C80  0100               	movlb	0	; () banked
  1915  001C82  51E1               	movf	play_wave_file@amplitude& (0+255),w,b
  1916  001C84  ECA7  F01D         	call	_wav_putc
  1917  001C88  0E01               	movlw	1
  1918  001C8A  0100               	movlb	0	; () banked
  1919  001C8C  27E3               	addwf	play_wave_file@i& (0+255),f,b
  1920  001C8E  0E00               	movlw	0
  1921  001C90  0100               	movlb	0	; () banked
  1922  001C92  23E4               	addwfc	(play_wave_file@i+1)& (0+255),f,b
  1923  001C94  0100               	movlb	0	; () banked
  1924  001C96  23E5               	addwfc	(play_wave_file@i+2)& (0+255),f,b
  1925  001C98  0100               	movlb	0	; () banked
  1926  001C9A  23E6               	addwfc	(play_wave_file@i+3)& (0+255),f,b
  1927  001C9C  D7B4               	goto	L1
  1928  001C9E                     l5812:
  1929                           
  1930                           ; BSR set to: 0
  1931                           ;wave_file.c: 106: }
  1932                           ;wave_file.c: 107: }while(rb==256);
  1933  001C9E  0100               	movlb	0	; () banked
  1934  001CA0  05FC               	decf	(_rb+1)& (0+255),w,b
  1935  001CA2  11FB               	iorwf	_rb& (0+255),w,b
  1936  001CA4  A4D8               	btfss	status,2,c
  1937  001CA6  D12A               	goto	l5880
  1938  001CA8  D790               	goto	l5792
  1939  001CAA                     l5814:
  1940                           
  1941                           ; BSR set to: 0
  1942                           ;wave_file.c: 109: else if( (NumChannels==1) && (BitsPerSample==16) ){
  1943  001CAA  0100               	movlb	0	; () banked
  1944  001CAC  05E9               	decf	_NumChannels& (0+255),w,b
  1945  001CAE  11EA               	iorwf	(_NumChannels+1)& (0+255),w,b
  1946  001CB0  A4D8               	btfss	status,2,c
  1947  001CB2  D072               	goto	l5840
  1948                           
  1949                           ; BSR set to: 0
  1950  001CB4  0100               	movlb	0	; () banked
  1951  001CB6  51E7               	movf	_BitsPerSample& (0+255),w,b
  1952  001CB8  0A10               	xorlw	16
  1953  001CBA  11E8               	iorwf	(_BitsPerSample+1)& (0+255),w,b
  1954  001CBC  A4D8               	btfss	status,2,c
  1955  001CBE  D06C               	goto	l5840
  1956  001CC0                     l5818:
  1957                           
  1958                           ; BSR set to: 0
  1959                           ;wave_file.c: 111: pf_read(Buff, 256, &rb);
  1960  001CC0  0102               	movlb	2	; () banked
  1961  001CC2  0E02               	movlw	high _Buff
  1962  001CC4  6E3C               	movwf	pf_read@buff+1,c
  1963  001CC6  0102               	movlb	2	; () banked
  1964  001CC8  0E00               	movlw	low _Buff
  1965  001CCA  6E3B               	movwf	pf_read@buff,c
  1966  001CCC  0E01               	movlw	1
  1967  001CCE  6E3E               	movwf	pf_read@btr+1,c
  1968  001CD0  0E00               	movlw	0
  1969  001CD2  6E3D               	movwf	pf_read@btr,c
  1970  001CD4  0100               	movlb	0	; () banked
  1971  001CD6  0E00               	movlw	high _rb
  1972  001CD8  6E40               	movwf	pf_read@br+1,c
  1973  001CDA  0100               	movlb	0	; () banked
  1974  001CDC  0EFB               	movlw	low _rb
  1975  001CDE  6E3F               	movwf	pf_read@br,c
  1976  001CE0  ECD1  F006         	call	_pf_read	;wreg free
  1977                           
  1978                           ;wave_file.c: 113: for(i=0; i<(256>>1); i++){
  1979  001CE4  0E00               	movlw	0
  1980  001CE6  0100               	movlb	0	; () banked
  1981  001CE8  6FE3               	movwf	play_wave_file@i& (0+255),b
  1982  001CEA  0E00               	movlw	0
  1983  001CEC  0100               	movlb	0	; () banked
  1984  001CEE  6FE4               	movwf	(play_wave_file@i+1)& (0+255),b
  1985  001CF0  0E00               	movlw	0
  1986  001CF2  0100               	movlb	0	; () banked
  1987  001CF4  6FE5               	movwf	(play_wave_file@i+2)& (0+255),b
  1988  001CF6  0E00               	movlw	0
  1989  001CF8  0100               	movlb	0	; () banked
  1990  001CFA  6FE6               	movwf	(play_wave_file@i+3)& (0+255),b
  1991  001CFC                     
  1992                           ; BSR set to: 0
  1993  001CFC  0E80               	movlw	128
  1994  001CFE  0100               	movlb	0	; () banked
  1995  001D00  5DE3               	subwf	play_wave_file@i& (0+255),w,b
  1996  001D02  0E00               	movlw	0
  1997  001D04  0100               	movlb	0	; () banked
  1998  001D06  59E4               	subwfb	(play_wave_file@i+1)& (0+255),w,b
  1999  001D08  0E00               	movlw	0
  2000  001D0A  0100               	movlb	0	; () banked
  2001  001D0C  59E5               	subwfb	(play_wave_file@i+2)& (0+255),w,b
  2002  001D0E  0E00               	movlw	0
  2003  001D10  0100               	movlb	0	; () banked
  2004  001D12  59E6               	subwfb	(play_wave_file@i+3)& (0+255),w,b
  2005  001D14  B0D8               	btfsc	status,0,c
  2006  001D16  D03A               	goto	l5838
  2007                           
  2008                           ; BSR set to: 0
  2009                           ;wave_file.c: 114: amplitude = Buff[(i<<1)+1];
  2010                           
  2011                           ; BSR set to: 0
  2012                           
  2013                           ; BSR set to: 0
  2014  001D18  0100               	movlb	0	; () banked
  2015  001D1A  C0E3  F0D8         	movff	play_wave_file@i,??_play_wave_file
  2016  001D1E  0100               	movlb	0	; () banked
  2017  001D20  C0E4  F0D9         	movff	play_wave_file@i+1,??_play_wave_file+1
  2018  001D24  90D8               	bcf	status,0,c
  2019  001D26  0100               	movlb	0	; () banked
  2020  001D28  37D8               	rlcf	??_play_wave_file& (0+255),f,b
  2021  001D2A  37D9               	rlcf	(??_play_wave_file+1)& (0+255),f,b
  2022  001D2C  0E01               	movlw	1
  2023  001D2E  0100               	movlb	0	; () banked
  2024  001D30  27D8               	addwf	??_play_wave_file& (0+255),f,b
  2025  001D32  0E00               	movlw	0
  2026  001D34  23D9               	addwfc	(??_play_wave_file+1)& (0+255),f,b
  2027  001D36  0102               	movlb	2	; () banked
  2028  001D38  0E00               	movlw	low _Buff
  2029  001D3A  0100               	movlb	0	; () banked
  2030  001D3C  25D8               	addwf	??_play_wave_file& (0+255),w,b
  2031  001D3E  6ED9               	movwf	fsr2l,c
  2032  001D40  0102               	movlb	2	; () banked
  2033  001D42  0E02               	movlw	high _Buff
  2034  001D44  0100               	movlb	0	; () banked
  2035  001D46  21D9               	addwfc	(??_play_wave_file+1)& (0+255),w,b
  2036  001D48  6EDA               	movwf	fsr2h,c
  2037  001D4A  50DF               	movf	indf2,w,c
  2038  001D4C  0100               	movlb	0	; () banked
  2039  001D4E  6FDA               	movwf	(??_play_wave_file+2)& (0+255),b
  2040  001D50  0100               	movlb	0	; () banked
  2041  001D52  51DA               	movf	(??_play_wave_file+2)& (0+255),w,b
  2042  001D54  0100               	movlb	0	; () banked
  2043  001D56  6FE1               	movwf	play_wave_file@amplitude& (0+255),b
  2044  001D58  0100               	movlb	0	; () banked
  2045  001D5A  6BE2               	clrf	(play_wave_file@amplitude+1)& (0+255),b
  2046                           
  2047                           ; BSR set to: 0
  2048                           ;wave_file.c: 116: if(amplitude&0x80) amplitude = 0;
  2049  001D5C  0100               	movlb	0	; () banked
  2050  001D5E  AFE1               	btfss	play_wave_file@amplitude& (0+255),7,b
  2051  001D60  D006               	goto	l5832
  2052                           
  2053                           ; BSR set to: 0
  2054  001D62  0E00               	movlw	0
  2055  001D64  0100               	movlb	0	; () banked
  2056  001D66  6FE2               	movwf	(play_wave_file@amplitude+1)& (0+255),b
  2057  001D68  0E00               	movlw	0
  2058  001D6A  0100               	movlb	0	; () banked
  2059  001D6C  6FE1               	movwf	play_wave_file@amplitude& (0+255),b
  2060  001D6E                     l5832:
  2061                           
  2062                           ; BSR set to: 0
  2063                           ;wave_file.c: 118: wav_putc( amplitude );
  2064  001D6E  0100               	movlb	0	; () banked
  2065  001D70  51E1               	movf	play_wave_file@amplitude& (0+255),w,b
  2066  001D72  ECA7  F01D         	call	_wav_putc
  2067  001D76  0E01               	movlw	1
  2068  001D78  0100               	movlb	0	; () banked
  2069  001D7A  27E3               	addwf	play_wave_file@i& (0+255),f,b
  2070  001D7C  0E00               	movlw	0
  2071  001D7E  0100               	movlb	0	; () banked
  2072  001D80  23E4               	addwfc	(play_wave_file@i+1)& (0+255),f,b
  2073  001D82  0100               	movlb	0	; () banked
  2074  001D84  23E5               	addwfc	(play_wave_file@i+2)& (0+255),f,b
  2075  001D86  0100               	movlb	0	; () banked
  2076  001D88  23E6               	addwfc	(play_wave_file@i+3)& (0+255),f,b
  2077  001D8A  D7B8               	goto	L2
  2078  001D8C                     l5838:
  2079                           
  2080                           ; BSR set to: 0
  2081                           ;wave_file.c: 119: }
  2082                           ;wave_file.c: 120: }while(rb==256);
  2083  001D8C  0100               	movlb	0	; () banked
  2084  001D8E  05FC               	decf	(_rb+1)& (0+255),w,b
  2085  001D90  11FB               	iorwf	_rb& (0+255),w,b
  2086  001D92  A4D8               	btfss	status,2,c
  2087  001D94  D0B3               	goto	l5880
  2088  001D96  D794               	goto	l5818
  2089  001D98                     l5840:
  2090                           
  2091                           ; BSR set to: 0
  2092                           ;wave_file.c: 122: else if( (NumChannels==2) && (BitsPerSample==8) ){
  2093  001D98  0100               	movlb	0	; () banked
  2094  001D9A  51E9               	movf	_NumChannels& (0+255),w,b
  2095  001D9C  0A02               	xorlw	2
  2096  001D9E  11EA               	iorwf	(_NumChannels+1)& (0+255),w,b
  2097  001DA0  A4D8               	btfss	status,2,c
  2098  001DA2  D058               	goto	l5860
  2099                           
  2100                           ; BSR set to: 0
  2101  001DA4  0100               	movlb	0	; () banked
  2102  001DA6  51E7               	movf	_BitsPerSample& (0+255),w,b
  2103  001DA8  0A08               	xorlw	8
  2104  001DAA  11E8               	iorwf	(_BitsPerSample+1)& (0+255),w,b
  2105  001DAC  A4D8               	btfss	status,2,c
  2106  001DAE  D052               	goto	l5860
  2107  001DB0                     l5844:
  2108                           
  2109                           ; BSR set to: 0
  2110                           ;wave_file.c: 124: pf_read(Buff, 256, &rb);
  2111  001DB0  0102               	movlb	2	; () banked
  2112  001DB2  0E02               	movlw	high _Buff
  2113  001DB4  6E3C               	movwf	pf_read@buff+1,c
  2114  001DB6  0102               	movlb	2	; () banked
  2115  001DB8  0E00               	movlw	low _Buff
  2116  001DBA  6E3B               	movwf	pf_read@buff,c
  2117  001DBC  0E01               	movlw	1
  2118  001DBE  6E3E               	movwf	pf_read@btr+1,c
  2119  001DC0  0E00               	movlw	0
  2120  001DC2  6E3D               	movwf	pf_read@btr,c
  2121  001DC4  0100               	movlb	0	; () banked
  2122  001DC6  0E00               	movlw	high _rb
  2123  001DC8  6E40               	movwf	pf_read@br+1,c
  2124  001DCA  0100               	movlb	0	; () banked
  2125  001DCC  0EFB               	movlw	low _rb
  2126  001DCE  6E3F               	movwf	pf_read@br,c
  2127  001DD0  ECD1  F006         	call	_pf_read	;wreg free
  2128                           
  2129                           ;wave_file.c: 125: for(i=0; i<(256>>1); i++) wav_putc(Buff[i<<1]);
  2130  001DD4  0E00               	movlw	0
  2131  001DD6  0100               	movlb	0	; () banked
  2132  001DD8  6FE3               	movwf	play_wave_file@i& (0+255),b
  2133  001DDA  0E00               	movlw	0
  2134  001DDC  0100               	movlb	0	; () banked
  2135  001DDE  6FE4               	movwf	(play_wave_file@i+1)& (0+255),b
  2136  001DE0  0E00               	movlw	0
  2137  001DE2  0100               	movlb	0	; () banked
  2138  001DE4  6FE5               	movwf	(play_wave_file@i+2)& (0+255),b
  2139  001DE6  0E00               	movlw	0
  2140  001DE8  0100               	movlb	0	; () banked
  2141  001DEA  6FE6               	movwf	(play_wave_file@i+3)& (0+255),b
  2142  001DEC                     
  2143                           ; BSR set to: 0
  2144  001DEC  0E80               	movlw	128
  2145  001DEE  0100               	movlb	0	; () banked
  2146  001DF0  5DE3               	subwf	play_wave_file@i& (0+255),w,b
  2147  001DF2  0E00               	movlw	0
  2148  001DF4  0100               	movlb	0	; () banked
  2149  001DF6  59E4               	subwfb	(play_wave_file@i+1)& (0+255),w,b
  2150  001DF8  0E00               	movlw	0
  2151  001DFA  0100               	movlb	0	; () banked
  2152  001DFC  59E5               	subwfb	(play_wave_file@i+2)& (0+255),w,b
  2153  001DFE  0E00               	movlw	0
  2154  001E00  0100               	movlb	0	; () banked
  2155  001E02  59E6               	subwfb	(play_wave_file@i+3)& (0+255),w,b
  2156  001E04  B0D8               	btfsc	status,0,c
  2157  001E06  D020               	goto	l5858
  2158                           
  2159                           ; BSR set to: 0
  2160                           
  2161                           ; BSR set to: 0
  2162                           
  2163                           ; BSR set to: 0
  2164  001E08  0E00               	movlw	low _Buff
  2165  001E0A  0100               	movlb	0	; () banked
  2166  001E0C  6FD8               	movwf	??_play_wave_file& (0+255),b
  2167  001E0E  0E02               	movlw	high _Buff
  2168  001E10  6FD9               	movwf	(??_play_wave_file+1)& (0+255),b
  2169  001E12  90D8               	bcf	status,0,c
  2170  001E14  0100               	movlb	0	; () banked
  2171  001E16  35E3               	rlcf	play_wave_file@i& (0+255),w,b
  2172  001E18  6ED9               	movwf	fsr2l,c
  2173  001E1A  0100               	movlb	0	; () banked
  2174  001E1C  35E4               	rlcf	(play_wave_file@i+1)& (0+255),w,b
  2175  001E1E  6EDA               	movwf	fsr2h,c
  2176  001E20  0100               	movlb	0	; () banked
  2177  001E22  51D8               	movf	??_play_wave_file& (0+255),w,b
  2178  001E24  26D9               	addwf	fsr2l,f,c
  2179  001E26  0100               	movlb	0	; () banked
  2180  001E28  51D9               	movf	(??_play_wave_file+1)& (0+255),w,b
  2181  001E2A  22DA               	addwfc	fsr2h,f,c
  2182  001E2C  50DF               	movf	indf2,w,c
  2183  001E2E  ECA7  F01D         	call	_wav_putc
  2184  001E32  0E01               	movlw	1
  2185  001E34  0100               	movlb	0	; () banked
  2186  001E36  27E3               	addwf	play_wave_file@i& (0+255),f,b
  2187  001E38  0E00               	movlw	0
  2188  001E3A  0100               	movlb	0	; () banked
  2189  001E3C  23E4               	addwfc	(play_wave_file@i+1)& (0+255),f,b
  2190  001E3E  0100               	movlb	0	; () banked
  2191  001E40  23E5               	addwfc	(play_wave_file@i+2)& (0+255),f,b
  2192  001E42  0100               	movlb	0	; () banked
  2193  001E44  23E6               	addwfc	(play_wave_file@i+3)& (0+255),f,b
  2194  001E46  D7D2               	goto	L3
  2195  001E48                     l5858:
  2196                           
  2197                           ; BSR set to: 0
  2198                           ;wave_file.c: 126: }while(rb==256);
  2199  001E48  0100               	movlb	0	; () banked
  2200  001E4A  05FC               	decf	(_rb+1)& (0+255),w,b
  2201  001E4C  11FB               	iorwf	_rb& (0+255),w,b
  2202  001E4E  A4D8               	btfss	status,2,c
  2203  001E50  D055               	goto	l5880
  2204  001E52  D7AE               	goto	l5844
  2205  001E54                     l5860:
  2206                           
  2207                           ; BSR set to: 0
  2208                           ;wave_file.c: 128: else if( (NumChannels==1) && (BitsPerSample==8) ){
  2209  001E54  0100               	movlb	0	; () banked
  2210  001E56  05E9               	decf	_NumChannels& (0+255),w,b
  2211  001E58  11EA               	iorwf	(_NumChannels+1)& (0+255),w,b
  2212  001E5A  A4D8               	btfss	status,2,c
  2213  001E5C  D04F               	goto	l5880
  2214                           
  2215                           ; BSR set to: 0
  2216  001E5E  0100               	movlb	0	; () banked
  2217  001E60  51E7               	movf	_BitsPerSample& (0+255),w,b
  2218  001E62  0A08               	xorlw	8
  2219  001E64  11E8               	iorwf	(_BitsPerSample+1)& (0+255),w,b
  2220  001E66  A4D8               	btfss	status,2,c
  2221  001E68  D049               	goto	l5880
  2222  001E6A                     l5864:
  2223                           
  2224                           ; BSR set to: 0
  2225                           ;wave_file.c: 130: pf_read(Buff, 256, &rb);
  2226  001E6A  0102               	movlb	2	; () banked
  2227  001E6C  0E02               	movlw	high _Buff
  2228  001E6E  6E3C               	movwf	pf_read@buff+1,c
  2229  001E70  0102               	movlb	2	; () banked
  2230  001E72  0E00               	movlw	low _Buff
  2231  001E74  6E3B               	movwf	pf_read@buff,c
  2232  001E76  0E01               	movlw	1
  2233  001E78  6E3E               	movwf	pf_read@btr+1,c
  2234  001E7A  0E00               	movlw	0
  2235  001E7C  6E3D               	movwf	pf_read@btr,c
  2236  001E7E  0100               	movlb	0	; () banked
  2237  001E80  0E00               	movlw	high _rb
  2238  001E82  6E40               	movwf	pf_read@br+1,c
  2239  001E84  0100               	movlb	0	; () banked
  2240  001E86  0EFB               	movlw	low _rb
  2241  001E88  6E3F               	movwf	pf_read@br,c
  2242  001E8A  ECD1  F006         	call	_pf_read	;wreg free
  2243                           
  2244                           ;wave_file.c: 131: for(i=0; i<256; i++) wav_putc(Buff[i]);
  2245  001E8E  0E00               	movlw	0
  2246  001E90  0100               	movlb	0	; () banked
  2247  001E92  6FE3               	movwf	play_wave_file@i& (0+255),b
  2248  001E94  0E00               	movlw	0
  2249  001E96  0100               	movlb	0	; () banked
  2250  001E98  6FE4               	movwf	(play_wave_file@i+1)& (0+255),b
  2251  001E9A  0E00               	movlw	0
  2252  001E9C  0100               	movlb	0	; () banked
  2253  001E9E  6FE5               	movwf	(play_wave_file@i+2)& (0+255),b
  2254  001EA0  0E00               	movlw	0
  2255  001EA2  0100               	movlb	0	; () banked
  2256  001EA4  6FE6               	movwf	(play_wave_file@i+3)& (0+255),b
  2257  001EA6                     
  2258                           ; BSR set to: 0
  2259  001EA6  0E00               	movlw	0
  2260  001EA8  0100               	movlb	0	; () banked
  2261  001EAA  5DE3               	subwf	play_wave_file@i& (0+255),w,b
  2262  001EAC  0E01               	movlw	1
  2263  001EAE  0100               	movlb	0	; () banked
  2264  001EB0  59E4               	subwfb	(play_wave_file@i+1)& (0+255),w,b
  2265  001EB2  0E00               	movlw	0
  2266  001EB4  0100               	movlb	0	; () banked
  2267  001EB6  59E5               	subwfb	(play_wave_file@i+2)& (0+255),w,b
  2268  001EB8  0E00               	movlw	0
  2269  001EBA  0100               	movlb	0	; () banked
  2270  001EBC  59E6               	subwfb	(play_wave_file@i+3)& (0+255),w,b
  2271  001EBE  B0D8               	btfsc	status,0,c
  2272  001EC0  D018               	goto	l5878
  2273                           
  2274                           ; BSR set to: 0
  2275                           
  2276                           ; BSR set to: 0
  2277                           
  2278                           ; BSR set to: 0
  2279  001EC2  0102               	movlb	2	; () banked
  2280  001EC4  0E00               	movlw	low _Buff
  2281  001EC6  0100               	movlb	0	; () banked
  2282  001EC8  25E3               	addwf	play_wave_file@i& (0+255),w,b
  2283  001ECA  6ED9               	movwf	fsr2l,c
  2284  001ECC  0102               	movlb	2	; () banked
  2285  001ECE  0E02               	movlw	high _Buff
  2286  001ED0  0100               	movlb	0	; () banked
  2287  001ED2  21E4               	addwfc	(play_wave_file@i+1)& (0+255),w,b
  2288  001ED4  6EDA               	movwf	fsr2h,c
  2289  001ED6  50DF               	movf	indf2,w,c
  2290  001ED8  ECA7  F01D         	call	_wav_putc
  2291  001EDC  0E01               	movlw	1
  2292  001EDE  0100               	movlb	0	; () banked
  2293  001EE0  27E3               	addwf	play_wave_file@i& (0+255),f,b
  2294  001EE2  0E00               	movlw	0
  2295  001EE4  0100               	movlb	0	; () banked
  2296  001EE6  23E4               	addwfc	(play_wave_file@i+1)& (0+255),f,b
  2297  001EE8  0100               	movlb	0	; () banked
  2298  001EEA  23E5               	addwfc	(play_wave_file@i+2)& (0+255),f,b
  2299  001EEC  0100               	movlb	0	; () banked
  2300  001EEE  23E6               	addwfc	(play_wave_file@i+3)& (0+255),f,b
  2301  001EF0  D7DA               	goto	L4
  2302  001EF2                     l5878:
  2303                           
  2304                           ; BSR set to: 0
  2305                           ;wave_file.c: 132: }while(rb==256);
  2306  001EF2  0100               	movlb	0	; () banked
  2307  001EF4  05FC               	decf	(_rb+1)& (0+255),w,b
  2308  001EF6  11FB               	iorwf	_rb& (0+255),w,b
  2309  001EF8  B4D8               	btfsc	status,2,c
  2310  001EFA  D7B7               	goto	l5864
  2311  001EFC                     l5880:
  2312                           
  2313                           ; BSR set to: 0
  2314                           ;wave_file.c: 133: }
  2315                           ;wave_file.c: 135: TRISC |= 0b00000110;
  2316  001EFC  0E06               	movlw	6
  2317  001EFE  1294               	iorwf	3988,f,c	;volatile
  2318  001F00                     l478:
  2319                           
  2320                           ; BSR set to: 0
  2321  001F00  0012               	return	
  2322  001F02                     __end_of_play_wave_file:
  2323                           	opt stack 0
  2324                           tblptru	equ	0xFF8
  2325                           tblptrh	equ	0xFF7
  2326                           tblptrl	equ	0xFF6
  2327                           tablat	equ	0xFF5
  2328                           intcon	equ	0xFF2
  2329                           postinc0	equ	0xFEE
  2330                           wreg	equ	0xFE8
  2331                           postdec1	equ	0xFE5
  2332                           fsr1h	equ	0xFE2
  2333                           fsr1l	equ	0xFE1
  2334                           indf2	equ	0xFDF
  2335                           fsr2h	equ	0xFDA
  2336                           fsr2l	equ	0xFD9
  2337                           status	equ	0xFD8
  2338                           
  2339 ;; *************** function _wav_putc *****************
  2340 ;; Defined at:
  2341 ;;		line 135 in file "../../../PIC18F/pwm_audio.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;  c               1    wreg     unsigned char 
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;  c               1   17[COMRAM] unsigned char 
  2346 ;; Return value:  Size  Location     Type
  2347 ;;		None               void
  2348 ;; Registers used:
  2349 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2350 ;; Tracked objects:
  2351 ;;		On entry : 0/0
  2352 ;;		On exit  : 0/0
  2353 ;;		Unchanged: 0/0
  2354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2355 ;;      Params:         0       0       0       0       0       0       0       0       0
  2356 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2357 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2358 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2359 ;;Total ram usage:        3 bytes
  2360 ;; Hardware stack levels used:    1
  2361 ;; Hardware stack levels required when called:    2
  2362 ;; This function calls:
  2363 ;;		Nothing
  2364 ;; This function is called by:
  2365 ;;		_play_wave_file
  2366 ;; This function uses a non-reentrant model
  2367 ;;
  2368                           
  2369                           	psect	text9
  2370  003B4E                     __ptext9:
  2371                           	opt stack 0
  2372  003B4E                     _wav_putc:
  2373                           	opt stack 27
  2374                           
  2375                           ; BSR set to: 0
  2376                           ;incstack = 0
  2377                           ;wav_putc@c stored from wreg
  2378  003B4E  6E12               	movwf	wav_putc@c,c
  2379  003B50                     l3932:
  2380  003B50  0E01               	movlw	1
  2381  003B52  244A               	addwf	_pWAVIN,w,c	;volatile
  2382  003B54  6E10               	movwf	??_wav_putc& (0+255),c
  2383  003B56  0E00               	movlw	0
  2384  003B58  204B               	addwfc	_pWAVIN+1,w,c	;volatile
  2385  003B5A  6E11               	movwf	(??_wav_putc+1)& (0+255),c
  2386  003B5C  0EFF               	movlw	255
  2387  003B5E  1610               	andwf	??_wav_putc,f,c
  2388  003B60  0E00               	movlw	0
  2389  003B62  1611               	andwf	??_wav_putc+1,f,c
  2390  003B64  504D               	movf	_pWAVOUT+1,w,c	;volatile
  2391  003B66  1811               	xorwf	??_wav_putc+1,w,c
  2392  003B68  E102               	bnz	u4305
  2393  003B6A  504C               	movf	_pWAVOUT,w,c	;volatile
  2394  003B6C  1810               	xorwf	??_wav_putc,w,c
  2395  003B6E                     u4305:
  2396  003B6E  B4D8               	btfsc	status,2,c
  2397  003B70  D7EF               	goto	l3932
  2398                           
  2399                           ;pwm_audio.c: 139: WAV_L_BUFF[pWAVIN] = c;
  2400  003B72  0103               	movlb	3	; () banked
  2401  003B74  0E00               	movlw	low _WAV_L_BUFF
  2402  003B76  244A               	addwf	_pWAVIN,w,c	;volatile
  2403  003B78  6ED9               	movwf	fsr2l,c
  2404  003B7A  0103               	movlb	3	; () banked
  2405  003B7C  0E03               	movlw	high _WAV_L_BUFF
  2406  003B7E  204B               	addwfc	_pWAVIN+1,w,c	;volatile
  2407  003B80  6EDA               	movwf	fsr2h,c
  2408  003B82  C012  FFDF         	movff	wav_putc@c,indf2
  2409                           
  2410                           ; BSR set to: 3
  2411                           ;pwm_audio.c: 140: pWAVIN = (pWAVIN + 1) & (256-1);
  2412  003B86  0E01               	movlw	1
  2413  003B88  244A               	addwf	_pWAVIN,w,c	;volatile
  2414  003B8A  6E10               	movwf	??_wav_putc& (0+255),c
  2415  003B8C  0E00               	movlw	0
  2416  003B8E  204B               	addwfc	_pWAVIN+1,w,c	;volatile
  2417  003B90  6E11               	movwf	(??_wav_putc+1)& (0+255),c
  2418  003B92  5010               	movf	??_wav_putc,w,c
  2419  003B94  6E4A               	movwf	_pWAVIN,c	;volatile
  2420  003B96  6A4B               	clrf	_pWAVIN+1,c	;volatile
  2421                           
  2422                           ; BSR set to: 3
  2423                           ;pwm_audio.c: 142: PIE1bits.TMR1IE = 1;
  2424  003B98  809D               	bsf	3997,0,c	;volatile
  2425                           
  2426                           ; BSR set to: 3
  2427  003B9A  0012               	return	
  2428  003B9C                     __end_of_wav_putc:
  2429                           	opt stack 0
  2430                           tblptru	equ	0xFF8
  2431                           tblptrh	equ	0xFF7
  2432                           tblptrl	equ	0xFF6
  2433                           tablat	equ	0xFF5
  2434                           intcon	equ	0xFF2
  2435                           postinc0	equ	0xFEE
  2436                           wreg	equ	0xFE8
  2437                           postdec1	equ	0xFE5
  2438                           fsr1h	equ	0xFE2
  2439                           fsr1l	equ	0xFE1
  2440                           indf2	equ	0xFDF
  2441                           fsr2h	equ	0xFDA
  2442                           fsr2l	equ	0xFD9
  2443                           status	equ	0xFD8
  2444                           
  2445 ;; *************** function _pf_open *****************
  2446 ;; Defined at:
  2447 ;;		line 535 in file "../../../PIC18F/pff.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;  path            2   45[BANK0 ] PTR const unsigned char 
  2450 ;;		 -> Fno.fname(13), Fno(22), 
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;  dir            32   67[BANK0 ] unsigned char [32]
  2453 ;;  dj             16  102[BANK0 ] struct _Dir_
  2454 ;;  sp             12   55[BANK0 ] unsigned char [12]
  2455 ;;  fs              2  100[BANK0 ] PTR struct _FATFS_
  2456 ;;		 -> Fs(44), NULL(0), 
  2457 ;;  res             1   99[BANK0 ] enum E48
  2458 ;; Return value:  Size  Location     Type
  2459 ;;                  1    wreg      enum E48
  2460 ;; Registers used:
  2461 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2462 ;; Tracked objects:
  2463 ;;		On entry : 0/0
  2464 ;;		On exit  : 0/0
  2465 ;;		Unchanged: 0/0
  2466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2467 ;;      Params:         0       2       0       0       0       0       0       0       0
  2468 ;;      Locals:         0      63       0       0       0       0       0       0       0
  2469 ;;      Temps:          0       8       0       0       0       0       0       0       0
  2470 ;;      Totals:         0      73       0       0       0       0       0       0       0
  2471 ;;Total ram usage:       73 bytes
  2472 ;; Hardware stack levels used:    1
  2473 ;; Hardware stack levels required when called:   10
  2474 ;; This function calls:
  2475 ;;		_follow_path
  2476 ;; This function is called by:
  2477 ;;		_play_wave_file
  2478 ;; This function uses a non-reentrant model
  2479 ;;
  2480                           
  2481                           	psect	text10
  2482  002B98                     __ptext10:
  2483                           	opt stack 0
  2484  002B98                     _pf_open:
  2485                           	opt stack 19
  2486                           
  2487                           ;pff.c: 539: FRESULT res;
  2488                           ;pff.c: 540: Dir dj;
  2489                           ;pff.c: 541: BYTE sp[12], dir[32];
  2490                           ;pff.c: 542: FATFS *fs = FatFs;
  2491                           
  2492                           ; BSR set to: 3
  2493                           ;incstack = 0
  2494  002B98  0100               	movlb	0	; () banked
  2495  002B9A  C049  F0C5         	movff	_FatFs+1,pf_open@fs+1
  2496  002B9E  0100               	movlb	0	; () banked
  2497  002BA0  C048  F0C4         	movff	_FatFs,pf_open@fs
  2498                           
  2499                           ;pff.c: 545: if (!fs)
  2500  002BA4  0100               	movlb	0	; () banked
  2501  002BA6  51C5               	movf	(pf_open@fs+1)& (0+255),w,b
  2502  002BA8  11C4               	iorwf	pf_open@fs& (0+255),w,b
  2503  002BAA  A4D8               	btfss	status,2,c
  2504  002BAC  D002               	goto	l5450
  2505                           
  2506                           ; BSR set to: 0
  2507                           ;pff.c: 546: return FR_NOT_ENABLED;
  2508  002BAE  0E06               	movlw	6
  2509  002BB0  D0AE               	goto	l169
  2510  002BB2                     l5450:
  2511                           
  2512                           ; BSR set to: 0
  2513                           ;pff.c: 548: fs->flag = 0;
  2514  002BB2  0100               	movlb	0	; () banked
  2515  002BB4  EE20 F002          	lfsr	2,2
  2516  002BB8  0100               	movlb	0	; () banked
  2517  002BBA  51C4               	movf	pf_open@fs& (0+255),w,b
  2518  002BBC  26D9               	addwf	fsr2l,f,c
  2519  002BBE  0100               	movlb	0	; () banked
  2520  002BC0  51C5               	movf	(pf_open@fs+1)& (0+255),w,b
  2521  002BC2  22DA               	addwfc	fsr2h,f,c
  2522  002BC4  0E00               	movlw	0
  2523  002BC6  6EDF               	movwf	indf2,c
  2524                           
  2525                           ;pff.c: 549: fs->buf = dir;
  2526  002BC8  0100               	movlb	0	; () banked
  2527  002BCA  EE20 F006          	lfsr	2,6
  2528  002BCE  0100               	movlb	0	; () banked
  2529  002BD0  51C4               	movf	pf_open@fs& (0+255),w,b
  2530  002BD2  26D9               	addwf	fsr2l,f,c
  2531  002BD4  0100               	movlb	0	; () banked
  2532  002BD6  51C5               	movf	(pf_open@fs+1)& (0+255),w,b
  2533  002BD8  22DA               	addwfc	fsr2h,f,c
  2534  002BDA  0100               	movlb	0	; () banked
  2535  002BDC  0EA3               	movlw	low pf_open@dir
  2536  002BDE  6EDE               	movwf	postinc2,c
  2537  002BE0  0100               	movlb	0	; () banked
  2538  002BE2  0E00               	movlw	high pf_open@dir
  2539  002BE4  6EDD               	movwf	postdec2,c
  2540                           
  2541                           ; BSR set to: 0
  2542                           ;pff.c: 550: dj.fn = sp;
  2543  002BE6  0100               	movlb	0	; () banked
  2544  002BE8  0E00               	movlw	high pf_open@sp
  2545  002BEA  0100               	movlb	0	; () banked
  2546  002BEC  6FC9               	movwf	(pf_open@dj+3)& (0+255),b
  2547  002BEE  0100               	movlb	0	; () banked
  2548  002BF0  0E97               	movlw	low pf_open@sp
  2549  002BF2  0100               	movlb	0	; () banked
  2550  002BF4  6FC8               	movwf	(pf_open@dj+2)& (0+255),b
  2551                           
  2552                           ; BSR set to: 0
  2553                           ;pff.c: 551: res = follow_path(&dj, path);
  2554  002BF6  0100               	movlb	0	; () banked
  2555  002BF8  0E00               	movlw	high pf_open@dj
  2556  002BFA  0100               	movlb	0	; () banked
  2557  002BFC  6F7B               	movwf	(follow_path@dj+1)& (0+255),b
  2558  002BFE  0100               	movlb	0	; () banked
  2559  002C00  0EC6               	movlw	low pf_open@dj
  2560  002C02  0100               	movlb	0	; () banked
  2561  002C04  6F7A               	movwf	follow_path@dj& (0+255),b
  2562  002C06  0100               	movlb	0	; () banked
  2563  002C08  C08E  F07D         	movff	pf_open@path+1,follow_path@path+1
  2564  002C0C  0100               	movlb	0	; () banked
  2565  002C0E  C08D  F07C         	movff	pf_open@path,follow_path@path
  2566  002C12  ECE0  F010         	call	_follow_path	;wreg free
  2567  002C16  0100               	movlb	0	; () banked
  2568  002C18  6FC3               	movwf	pf_open@res& (0+255),b
  2569                           
  2570                           ; BSR set to: 0
  2571                           ;pff.c: 552: if (res != FR_OK) return res;
  2572  002C1A  0100               	movlb	0	; () banked
  2573  002C1C  51C3               	movf	pf_open@res& (0+255),w,b
  2574  002C1E  B4D8               	btfsc	status,2,c
  2575  002C20  D003               	goto	l5462
  2576                           
  2577                           ; BSR set to: 0
  2578  002C22  0100               	movlb	0	; () banked
  2579  002C24  51C3               	movf	pf_open@res& (0+255),w,b
  2580  002C26  D073               	goto	l169
  2581  002C28                     l5462:
  2582                           
  2583                           ; BSR set to: 0
  2584                           ;pff.c: 553: if (!dir[0] || (dir[11] & 0x10))
  2585  002C28  0100               	movlb	0	; () banked
  2586  002C2A  51A3               	movf	pf_open@dir& (0+255),w,b
  2587  002C2C  B4D8               	btfsc	status,2,c
  2588  002C2E  D003               	goto	l5466
  2589                           
  2590                           ; BSR set to: 0
  2591  002C30  0100               	movlb	0	; () banked
  2592  002C32  A9AE               	btfss	(pf_open@dir+11)& (0+255),4,b
  2593  002C34  D002               	goto	l5470
  2594  002C36                     l5466:
  2595                           
  2596                           ; BSR set to: 0
  2597                           ;pff.c: 554: return FR_NO_FILE;
  2598  002C36  0E03               	movlw	3
  2599  002C38  D06A               	goto	l169
  2600  002C3A                     l5470:
  2601                           
  2602                           ; BSR set to: 0
  2603                           ;pff.c: 556: fs->org_clust =
  2604                           ;pff.c: 558: ((DWORD)(WORD)(*(WORD*)(BYTE*)(dir+20)) << 16) |
  2605                           ;pff.c: 560: (WORD)(*(WORD*)(BYTE*)(dir+26));
  2606  002C3A  0100               	movlb	0	; () banked
  2607  002C3C  51B7               	movf	(pf_open@dir+20)& (0+255),w,b
  2608  002C3E  0100               	movlb	0	; () banked
  2609  002C40  6F8F               	movwf	??_pf_open& (0+255),b
  2610  002C42  0100               	movlb	0	; () banked
  2611  002C44  51B8               	movf	(pf_open@dir+21)& (0+255),w,b
  2612  002C46  0100               	movlb	0	; () banked
  2613  002C48  6F90               	movwf	(??_pf_open+1)& (0+255),b
  2614  002C4A  0100               	movlb	0	; () banked
  2615  002C4C  6B91               	clrf	(??_pf_open+2)& (0+255),b
  2616  002C4E  0100               	movlb	0	; () banked
  2617  002C50  6B92               	clrf	(??_pf_open+3)& (0+255),b
  2618  002C52  C090  F092         	movff	??_pf_open+1,??_pf_open+3
  2619  002C56  C08F  F091         	movff	??_pf_open,??_pf_open+2
  2620  002C5A  0100               	movlb	0	; () banked
  2621  002C5C  6B90               	clrf	(??_pf_open+1)& (0+255),b
  2622  002C5E  6B8F               	clrf	??_pf_open& (0+255),b
  2623  002C60  0100               	movlb	0	; () banked
  2624  002C62  51BD               	movf	(pf_open@dir+26)& (0+255),w,b
  2625  002C64  0100               	movlb	0	; () banked
  2626  002C66  118F               	iorwf	??_pf_open& (0+255),w,b
  2627  002C68  0100               	movlb	0	; () banked
  2628  002C6A  6F93               	movwf	(??_pf_open+4)& (0+255),b
  2629  002C6C  0100               	movlb	0	; () banked
  2630  002C6E  51BE               	movf	(pf_open@dir+27)& (0+255),w,b
  2631  002C70  0100               	movlb	0	; () banked
  2632  002C72  1190               	iorwf	(??_pf_open+1)& (0+255),w,b
  2633  002C74  0100               	movlb	0	; () banked
  2634  002C76  6F94               	movwf	(??_pf_open+5)& (0+255),b
  2635  002C78  0E00               	movlw	0
  2636  002C7A  0100               	movlb	0	; () banked
  2637  002C7C  1191               	iorwf	(??_pf_open+2)& (0+255),w,b
  2638  002C7E  0100               	movlb	0	; () banked
  2639  002C80  6F95               	movwf	(??_pf_open+6)& (0+255),b
  2640  002C82  0E00               	movlw	0
  2641  002C84  0100               	movlb	0	; () banked
  2642  002C86  1192               	iorwf	(??_pf_open+3)& (0+255),w,b
  2643  002C88  0100               	movlb	0	; () banked
  2644  002C8A  6F96               	movwf	(??_pf_open+7)& (0+255),b
  2645  002C8C  0100               	movlb	0	; () banked
  2646  002C8E  EE20 F020          	lfsr	2,32
  2647  002C92  0100               	movlb	0	; () banked
  2648  002C94  51C4               	movf	pf_open@fs& (0+255),w,b
  2649  002C96  26D9               	addwf	fsr2l,f,c
  2650  002C98  0100               	movlb	0	; () banked
  2651  002C9A  51C5               	movf	(pf_open@fs+1)& (0+255),w,b
  2652  002C9C  22DA               	addwfc	fsr2h,f,c
  2653  002C9E  C093  FFDE         	movff	??_pf_open+4,postinc2
  2654  002CA2  C094  FFDE         	movff	??_pf_open+5,postinc2
  2655  002CA6  C095  FFDE         	movff	??_pf_open+6,postinc2
  2656  002CAA  C096  FFDD         	movff	??_pf_open+7,postdec2
  2657  002CAE  06D9               	decf	fsr2l,f,c
  2658  002CB0  06D9               	decf	fsr2l,f,c
  2659                           
  2660                           ;pff.c: 561: fs->fsize = (DWORD)(*(DWORD*)(BYTE*)(dir+28));
  2661  002CB2  0100               	movlb	0	; () banked
  2662  002CB4  EE20 F01C          	lfsr	2,28
  2663  002CB8  0100               	movlb	0	; () banked
  2664  002CBA  51C4               	movf	pf_open@fs& (0+255),w,b
  2665  002CBC  26D9               	addwf	fsr2l,f,c
  2666  002CBE  0100               	movlb	0	; () banked
  2667  002CC0  51C5               	movf	(pf_open@fs+1)& (0+255),w,b
  2668  002CC2  22DA               	addwfc	fsr2h,f,c
  2669  002CC4  0100               	movlb	0	; () banked
  2670  002CC6  C0BF  FFDE         	movff	pf_open@dir+28,postinc2
  2671  002CCA  0100               	movlb	0	; () banked
  2672  002CCC  C0C0  FFDE         	movff	pf_open@dir+29,postinc2
  2673  002CD0  0100               	movlb	0	; () banked
  2674  002CD2  C0C1  FFDE         	movff	pf_open@dir+30,postinc2
  2675  002CD6  0100               	movlb	0	; () banked
  2676  002CD8  C0C2  FFDE         	movff	pf_open@dir+31,postinc2
  2677                           
  2678                           ;pff.c: 562: fs->fptr = 0;
  2679  002CDC  0100               	movlb	0	; () banked
  2680  002CDE  EE20 F018          	lfsr	2,24
  2681  002CE2  0100               	movlb	0	; () banked
  2682  002CE4  51C4               	movf	pf_open@fs& (0+255),w,b
  2683  002CE6  26D9               	addwf	fsr2l,f,c
  2684  002CE8  0100               	movlb	0	; () banked
  2685  002CEA  51C5               	movf	(pf_open@fs+1)& (0+255),w,b
  2686  002CEC  22DA               	addwfc	fsr2h,f,c
  2687  002CEE  6ADE               	clrf	postinc2,c
  2688  002CF0  6ADE               	clrf	postinc2,c
  2689  002CF2  6ADE               	clrf	postinc2,c
  2690  002CF4  6ADD               	clrf	postdec2,c
  2691                           
  2692                           ;pff.c: 563: fs->flag = 0x01;
  2693  002CF6  0100               	movlb	0	; () banked
  2694  002CF8  EE20 F002          	lfsr	2,2
  2695  002CFC  0100               	movlb	0	; () banked
  2696  002CFE  51C4               	movf	pf_open@fs& (0+255),w,b
  2697  002D00  26D9               	addwf	fsr2l,f,c
  2698  002D02  0100               	movlb	0	; () banked
  2699  002D04  51C5               	movf	(pf_open@fs+1)& (0+255),w,b
  2700  002D06  22DA               	addwfc	fsr2h,f,c
  2701  002D08  0E01               	movlw	1
  2702  002D0A  6EDF               	movwf	indf2,c
  2703                           
  2704                           ; BSR set to: 0
  2705                           ;pff.c: 565: return FR_OK;
  2706  002D0C  0E00               	movlw	0
  2707  002D0E                     l169:
  2708                           
  2709                           ; BSR set to: 0
  2710  002D0E  0012               	return	
  2711  002D10                     __end_of_pf_open:
  2712                           	opt stack 0
  2713                           tblptru	equ	0xFF8
  2714                           tblptrh	equ	0xFF7
  2715                           tblptrl	equ	0xFF6
  2716                           tablat	equ	0xFF5
  2717                           intcon	equ	0xFF2
  2718                           postinc0	equ	0xFEE
  2719                           wreg	equ	0xFE8
  2720                           postdec1	equ	0xFE5
  2721                           fsr1h	equ	0xFE2
  2722                           fsr1l	equ	0xFE1
  2723                           indf2	equ	0xFDF
  2724                           postinc2	equ	0xFDE
  2725                           postdec2	equ	0xFDD
  2726                           fsr2h	equ	0xFDA
  2727                           fsr2l	equ	0xFD9
  2728                           status	equ	0xFD8
  2729                           
  2730 ;; *************** function _load_header *****************
  2731 ;; Defined at:
  2732 ;;		line 37 in file "../../../PIC18F/wave_file.c"
  2733 ;; Parameters:    Size  Location     Type
  2734 ;;		None
  2735 ;; Auto vars:     Size  Location     Type
  2736 ;;  sz              4   56[BANK0 ] unsigned long 
  2737 ;;  SamplingRate    4   52[BANK0 ] unsigned long 
  2738 ;;  ChunkID         4   48[BANK0 ] unsigned long 
  2739 ;; Return value:  Size  Location     Type
  2740 ;;                  4   44[BANK0 ] unsigned long 
  2741 ;; Registers used:
  2742 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2743 ;; Tracked objects:
  2744 ;;		On entry : 0/0
  2745 ;;		On exit  : 0/0
  2746 ;;		Unchanged: 0/0
  2747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2748 ;;      Params:         0       4       0       0       0       0       0       0       0
  2749 ;;      Locals:         0      12       0       0       0       0       0       0       0
  2750 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2751 ;;      Totals:         4      16       0       0       0       0       0       0       0
  2752 ;;Total ram usage:       20 bytes
  2753 ;; Hardware stack levels used:    1
  2754 ;; Hardware stack levels required when called:    8
  2755 ;; This function calls:
  2756 ;;		_pf_lseek
  2757 ;;		_pf_read
  2758 ;;		_set_sampling_rate
  2759 ;; This function is called by:
  2760 ;;		_play_wave_file
  2761 ;; This function uses a non-reentrant model
  2762 ;;
  2763                           
  2764                           	psect	text11
  2765  001F02                     __ptext11:
  2766                           	opt stack 0
  2767  001F02                     _load_header:
  2768                           	opt stack 21
  2769                           
  2770                           ;wave_file.c: 39: DWORD ChunkID, SamplingRate, sz;
  2771                           ;wave_file.c: 41: if (pf_read(Buff, 12, &rb)) return 1;
  2772                           
  2773                           ; BSR set to: 0
  2774                           ;incstack = 0
  2775  001F02  0102               	movlb	2	; () banked
  2776  001F04  0E02               	movlw	high _Buff
  2777  001F06  6E3C               	movwf	pf_read@buff+1,c
  2778  001F08  0102               	movlb	2	; () banked
  2779  001F0A  0E00               	movlw	low _Buff
  2780  001F0C  6E3B               	movwf	pf_read@buff,c
  2781  001F0E  0E00               	movlw	0
  2782  001F10  6E3E               	movwf	pf_read@btr+1,c
  2783  001F12  0E0C               	movlw	12
  2784  001F14  6E3D               	movwf	pf_read@btr,c
  2785  001F16  0100               	movlb	0	; () banked
  2786  001F18  0E00               	movlw	high _rb
  2787  001F1A  6E40               	movwf	pf_read@br+1,c
  2788  001F1C  0100               	movlb	0	; () banked
  2789  001F1E  0EFB               	movlw	low _rb
  2790  001F20  6E3F               	movwf	pf_read@br,c
  2791  001F22  ECD1  F006         	call	_pf_read	;wreg free
  2792  001F26  0900               	iorlw	0
  2793  001F28  B4D8               	btfsc	status,2,c
  2794  001F2A  D002               	goto	l5482
  2795  001F2C  0E01               	movlw	1
  2796  001F2E  D015               	goto	L5
  2797  001F30                     l5482:
  2798                           
  2799                           ;wave_file.c: 42: if (rb != 12 || (DWORD)(*(DWORD*)(BYTE*)(Buff+8)) != (((DWORD)'E'<<24)
      +                          +((DWORD)'V'<<16)+((WORD)'A'<<8)+(BYTE)'W')) return 0;
  2800  001F30  0100               	movlb	0	; () banked
  2801  001F32  51FB               	movf	_rb& (0+255),w,b
  2802  001F34  0A0C               	xorlw	12
  2803  001F36  11FC               	iorwf	(_rb+1)& (0+255),w,b
  2804  001F38  A4D8               	btfss	status,2,c
  2805  001F3A  D0EF               	goto	l5540
  2806                           
  2807                           ; BSR set to: 0
  2808  001F3C  0102               	movlb	2	; () banked
  2809  001F3E  510B               	movf	(_Buff+11)& (0+255),w,b
  2810  001F40  0A45               	xorlw	69
  2811  001F42  0E57               	movlw	87
  2812  001F44  B4D8               	btfsc	status,2,c
  2813  001F46  1908               	xorwf	(_Buff+8)& (0+255),w,b
  2814  001F48  0E41               	movlw	65
  2815  001F4A  B4D8               	btfsc	status,2,c
  2816  001F4C  1909               	xorwf	(_Buff+9)& (0+255),w,b
  2817  001F4E  0E56               	movlw	86
  2818  001F50  B4D8               	btfsc	status,2,c
  2819  001F52  190A               	xorwf	(_Buff+10)& (0+255),w,b
  2820  001F54  B4D8               	btfsc	status,2,c
  2821  001F56  D00D               	goto	l5490
  2822                           
  2823                           ; BSR set to: 2
  2824  001F58  D0E0               	goto	l5540
  2825  001F5A                     L5:
  2826  001F5A  0100               	movlb	0	; () banked
  2827  001F5C  6F8C               	movwf	?_load_header& (0+255),b
  2828  001F5E  0E00               	movlw	0
  2829  001F60  0100               	movlb	0	; () banked
  2830  001F62  6F8D               	movwf	(?_load_header+1)& (0+255),b
  2831  001F64  0E00               	movlw	0
  2832  001F66  0100               	movlb	0	; () banked
  2833  001F68  6F8E               	movwf	(?_load_header+2)& (0+255),b
  2834  001F6A  0E00               	movlw	0
  2835  001F6C  0100               	movlb	0	; () banked
  2836  001F6E  6F8F               	movwf	(?_load_header+3)& (0+255),b
  2837  001F70  D126               	goto	l452
  2838  001F72                     l5490:
  2839                           
  2840                           ;wave_file.c: 45: pf_read(Buff, 8, &rb);
  2841  001F72  0102               	movlb	2	; () banked
  2842  001F74  0E02               	movlw	high _Buff
  2843  001F76  6E3C               	movwf	pf_read@buff+1,c
  2844  001F78  0102               	movlb	2	; () banked
  2845  001F7A  0E00               	movlw	low _Buff
  2846  001F7C  6E3B               	movwf	pf_read@buff,c
  2847  001F7E  0E00               	movlw	0
  2848  001F80  6E3E               	movwf	pf_read@btr+1,c
  2849  001F82  0E08               	movlw	8
  2850  001F84  6E3D               	movwf	pf_read@btr,c
  2851  001F86  0100               	movlb	0	; () banked
  2852  001F88  0E00               	movlw	high _rb
  2853  001F8A  6E40               	movwf	pf_read@br+1,c
  2854  001F8C  0100               	movlb	0	; () banked
  2855  001F8E  0EFB               	movlw	low _rb
  2856  001F90  6E3F               	movwf	pf_read@br,c
  2857  001F92  ECD1  F006         	call	_pf_read	;wreg free
  2858                           
  2859                           ;wave_file.c: 46: if (rb != 8) return 0;
  2860  001F96  0100               	movlb	0	; () banked
  2861  001F98  51FB               	movf	_rb& (0+255),w,b
  2862  001F9A  0A08               	xorlw	8
  2863  001F9C  11FC               	iorwf	(_rb+1)& (0+255),w,b
  2864  001F9E  A4D8               	btfss	status,2,c
  2865  001FA0  D0BC               	goto	l5540
  2866                           
  2867                           ; BSR set to: 0
  2868                           ;wave_file.c: 47: ChunkID = (DWORD)(*(DWORD*)(BYTE*)(&Buff[0]));
  2869                           
  2870                           ; BSR set to: 0
  2871                           
  2872                           ; BSR set to: 0
  2873  001FA2  C200  F090         	movff	_Buff,load_header@ChunkID
  2874  001FA6  C201  F091         	movff	_Buff+1,load_header@ChunkID+1
  2875  001FAA  C202  F092         	movff	_Buff+2,load_header@ChunkID+2
  2876  001FAE  C203  F093         	movff	_Buff+3,load_header@ChunkID+3
  2877                           
  2878                           ;wave_file.c: 48: sz = (DWORD)(*(DWORD*)(BYTE*)(&Buff[4]));
  2879  001FB2  C204  F098         	movff	_Buff+4,load_header@sz
  2880  001FB6  C205  F099         	movff	_Buff+5,load_header@sz+1
  2881  001FBA  C206  F09A         	movff	_Buff+6,load_header@sz+2
  2882  001FBE  C207  F09B         	movff	_Buff+7,load_header@sz+3
  2883                           
  2884                           ;wave_file.c: 50: switch (ChunkID) {
  2885  001FC2  D0AD               	goto	l5546
  2886  001FC4                     l5498:
  2887                           
  2888                           ; BSR set to: 0
  2889                           ;wave_file.c: 52: if (sz > 100 || sz < 16) return 0;
  2890  001FC4  0E65               	movlw	101
  2891  001FC6  6E41               	movwf	??_load_header& (0+255),c
  2892  001FC8  6A42               	clrf	(??_load_header+1)& (0+255),c
  2893  001FCA  6A43               	clrf	(??_load_header+2)& (0+255),c
  2894  001FCC  6A44               	clrf	(??_load_header+3)& (0+255),c
  2895  001FCE  5041               	movf	??_load_header,w,c
  2896  001FD0  0100               	movlb	0	; () banked
  2897  001FD2  5D98               	subwf	load_header@sz& (0+255),w,b
  2898  001FD4  5042               	movf	??_load_header+1,w,c
  2899  001FD6  0100               	movlb	0	; () banked
  2900  001FD8  5999               	subwfb	(load_header@sz+1)& (0+255),w,b
  2901  001FDA  5043               	movf	??_load_header+2,w,c
  2902  001FDC  0100               	movlb	0	; () banked
  2903  001FDE  599A               	subwfb	(load_header@sz+2)& (0+255),w,b
  2904  001FE0  5044               	movf	??_load_header+3,w,c
  2905  001FE2  0100               	movlb	0	; () banked
  2906  001FE4  599B               	subwfb	(load_header@sz+3)& (0+255),w,b
  2907  001FE6  B0D8               	btfsc	status,0,c
  2908  001FE8  D098               	goto	l5540
  2909                           
  2910                           ; BSR set to: 0
  2911  001FEA  0E10               	movlw	16
  2912  001FEC  6E41               	movwf	??_load_header& (0+255),c
  2913  001FEE  6A42               	clrf	(??_load_header+1)& (0+255),c
  2914  001FF0  6A43               	clrf	(??_load_header+2)& (0+255),c
  2915  001FF2  6A44               	clrf	(??_load_header+3)& (0+255),c
  2916  001FF4  5041               	movf	??_load_header,w,c
  2917  001FF6  0100               	movlb	0	; () banked
  2918  001FF8  5D98               	subwf	load_header@sz& (0+255),w,b
  2919  001FFA  5042               	movf	??_load_header+1,w,c
  2920  001FFC  0100               	movlb	0	; () banked
  2921  001FFE  5999               	subwfb	(load_header@sz+1)& (0+255),w,b
  2922  002000  5043               	movf	??_load_header+2,w,c
  2923  002002  0100               	movlb	0	; () banked
  2924  002004  599A               	subwfb	(load_header@sz+2)& (0+255),w,b
  2925  002006  5044               	movf	??_load_header+3,w,c
  2926  002008  0100               	movlb	0	; () banked
  2927  00200A  599B               	subwfb	(load_header@sz+3)& (0+255),w,b
  2928  00200C  A0D8               	btfss	status,0,c
  2929                           
  2930                           ; BSR set to: 0
  2931  00200E  D085               	goto	l5540
  2932                           
  2933                           ; BSR set to: 0
  2934                           ;wave_file.c: 53: pf_read(Buff, sz, &rb);
  2935                           
  2936                           ; BSR set to: 0
  2937                           
  2938                           ; BSR set to: 0
  2939                           
  2940                           ; BSR set to: 0
  2941  002010  0102               	movlb	2	; () banked
  2942  002012  0E02               	movlw	high _Buff
  2943  002014  6E3C               	movwf	pf_read@buff+1,c
  2944  002016  0102               	movlb	2	; () banked
  2945  002018  0E00               	movlw	low _Buff
  2946  00201A  6E3B               	movwf	pf_read@buff,c
  2947  00201C  C098  F03D         	movff	load_header@sz,pf_read@btr
  2948  002020  C099  F03E         	movff	load_header@sz+1,pf_read@btr+1
  2949  002024  0100               	movlb	0	; () banked
  2950  002026  0E00               	movlw	high _rb
  2951  002028  6E40               	movwf	pf_read@br+1,c
  2952  00202A  0100               	movlb	0	; () banked
  2953  00202C  0EFB               	movlw	low _rb
  2954  00202E  6E3F               	movwf	pf_read@br,c
  2955  002030  ECD1  F006         	call	_pf_read	;wreg free
  2956                           
  2957                           ;wave_file.c: 54: if (rb != sz) return 0;
  2958  002034  0100               	movlb	0	; () banked
  2959  002036  51FB               	movf	_rb& (0+255),w,b
  2960  002038  6E41               	movwf	??_load_header& (0+255),c
  2961  00203A  0100               	movlb	0	; () banked
  2962  00203C  51FC               	movf	(_rb+1)& (0+255),w,b
  2963  00203E  6E42               	movwf	(??_load_header+1)& (0+255),c
  2964  002040  6A43               	clrf	(??_load_header+2)& (0+255),c
  2965  002042  6A44               	clrf	(??_load_header+3)& (0+255),c
  2966  002044  0100               	movlb	0	; () banked
  2967  002046  519B               	movf	(load_header@sz+3)& (0+255),w,b
  2968  002048  1844               	xorwf	??_load_header+3,w,c
  2969  00204A  E10B               	bnz	u6495
  2970  00204C  0100               	movlb	0	; () banked
  2971  00204E  519A               	movf	(load_header@sz+2)& (0+255),w,b
  2972  002050  1843               	xorwf	??_load_header+2,w,c
  2973  002052  E107               	bnz	u6495
  2974  002054  0100               	movlb	0	; () banked
  2975  002056  5199               	movf	(load_header@sz+1)& (0+255),w,b
  2976  002058  1842               	xorwf	??_load_header+1,w,c
  2977  00205A  E103               	bnz	u6495
  2978  00205C  0100               	movlb	0	; () banked
  2979  00205E  5198               	movf	load_header@sz& (0+255),w,b
  2980  002060  1841               	xorwf	??_load_header,w,c
  2981  002062                     u6495:
  2982  002062  A4D8               	btfss	status,2,c
  2983  002064  D05A               	goto	l5540
  2984                           
  2985                           ; BSR set to: 0
  2986                           ;wave_file.c: 55: if (Buff[0] != 1) return 0;
  2987                           
  2988                           ; BSR set to: 0
  2989                           
  2990                           ; BSR set to: 0
  2991                           
  2992                           ; BSR set to: 0
  2993  002066  0102               	movlb	2	; () banked
  2994  002068  0500               	decf	_Buff& (0+255),w,b
  2995  00206A  A4D8               	btfss	status,2,c
  2996  00206C  D056               	goto	l5540
  2997                           
  2998                           ; BSR set to: 2
  2999                           ;wave_file.c: 57: NumChannels = Buff[2];
  3000                           
  3001                           ; BSR set to: 0
  3002                           
  3003                           ; BSR set to: 2
  3004  00206E  0102               	movlb	2	; () banked
  3005  002070  0100               	movlb	0	; () banked
  3006  002072  C202  F0E9         	movff	_Buff+2,_NumChannels
  3007  002076  0100               	movlb	0	; () banked
  3008  002078  6BEA               	clrf	(_NumChannels+1)& (0+255),b
  3009                           
  3010                           ; BSR set to: 0
  3011                           ;wave_file.c: 58: if (NumChannels != 1 && NumChannels != 2)
  3012  00207A  0100               	movlb	0	; () banked
  3013  00207C  05E9               	decf	_NumChannels& (0+255),w,b
  3014  00207E  11EA               	iorwf	(_NumChannels+1)& (0+255),w,b
  3015  002080  B4D8               	btfsc	status,2,c
  3016  002082  D006               	goto	l465
  3017                           
  3018                           ; BSR set to: 0
  3019  002084  0100               	movlb	0	; () banked
  3020  002086  51E9               	movf	_NumChannels& (0+255),w,b
  3021  002088  0A02               	xorlw	2
  3022  00208A  11EA               	iorwf	(_NumChannels+1)& (0+255),w,b
  3023  00208C  A4D8               	btfss	status,2,c
  3024  00208E  D045               	goto	l5540
  3025  002090                     l465:
  3026                           
  3027                           ; BSR set to: 0
  3028                           ;wave_file.c: 61: BitsPerSample = Buff[14];
  3029  002090  0102               	movlb	2	; () banked
  3030  002092  0100               	movlb	0	; () banked
  3031  002094  C20E  F0E7         	movff	_Buff+14,_BitsPerSample
  3032  002098  0100               	movlb	0	; () banked
  3033  00209A  6BE8               	clrf	(_BitsPerSample+1)& (0+255),b
  3034                           
  3035                           ; BSR set to: 0
  3036                           ;wave_file.c: 62: if (BitsPerSample != 8 && BitsPerSample != 16)
  3037  00209C  0100               	movlb	0	; () banked
  3038  00209E  51E7               	movf	_BitsPerSample& (0+255),w,b
  3039  0020A0  0A08               	xorlw	8
  3040  0020A2  11E8               	iorwf	(_BitsPerSample+1)& (0+255),w,b
  3041  0020A4  B4D8               	btfsc	status,2,c
  3042  0020A6  D006               	goto	l466
  3043                           
  3044                           ; BSR set to: 0
  3045  0020A8  0100               	movlb	0	; () banked
  3046  0020AA  51E7               	movf	_BitsPerSample& (0+255),w,b
  3047  0020AC  0A10               	xorlw	16
  3048  0020AE  11E8               	iorwf	(_BitsPerSample+1)& (0+255),w,b
  3049  0020B0  A4D8               	btfss	status,2,c
  3050  0020B2  D033               	goto	l5540
  3051  0020B4                     l466:
  3052                           
  3053                           ; BSR set to: 0
  3054                           ;wave_file.c: 65: SamplingRate = (DWORD)(*(DWORD*)(BYTE*)(Buff+4));
  3055  0020B4  C204  F094         	movff	_Buff+4,load_header@SamplingRate
  3056  0020B8  C205  F095         	movff	_Buff+5,load_header@SamplingRate+1
  3057  0020BC  C206  F096         	movff	_Buff+6,load_header@SamplingRate+2
  3058  0020C0  C207  F097         	movff	_Buff+7,load_header@SamplingRate+3
  3059                           
  3060                           ; BSR set to: 0
  3061                           ;wave_file.c: 66: set_sampling_rate( SamplingRate );
  3062  0020C4  C094  F01D         	movff	load_header@SamplingRate,set_sampling_rate@rate
  3063  0020C8  C095  F01E         	movff	load_header@SamplingRate+1,set_sampling_rate@rate+1
  3064  0020CC  C096  F01F         	movff	load_header@SamplingRate+2,set_sampling_rate@rate+2
  3065  0020D0  C097  F020         	movff	load_header@SamplingRate+3,set_sampling_rate@rate+3
  3066  0020D4  ECEA  F01C         	call	_set_sampling_rate	;wreg free
  3067                           
  3068                           ;wave_file.c: 67: break;
  3069  0020D8  D74C               	goto	l5490
  3070  0020DA                     l468:
  3071                           
  3072                           ; BSR set to: 0
  3073                           ;wave_file.c: 70: return sz;
  3074  0020DA  C098  F08C         	movff	load_header@sz,?_load_header
  3075  0020DE  C099  F08D         	movff	load_header@sz+1,?_load_header+1
  3076  0020E2  C09A  F08E         	movff	load_header@sz+2,?_load_header+2
  3077  0020E6  C09B  F08F         	movff	load_header@sz+3,?_load_header+3
  3078  0020EA  D069               	goto	l452
  3079  0020EC                     l5538:
  3080                           
  3081                           ; BSR set to: 0
  3082                           ;wave_file.c: 74: case (((DWORD)'t'<<24)+((DWORD)'c'<<16)+((WORD)'a'<<8)+(BYTE)'f'):
  3083                           ;wave_file.c: 75: pf_lseek(Fs.fptr + sz);
  3084  0020EC  0100               	movlb	0	; () banked
  3085  0020EE  5198               	movf	load_header@sz& (0+255),w,b
  3086  0020F0  0101               	movlb	1	; () banked
  3087  0020F2  2518               	addwf	(_Fs+24)& (0+255),w,b
  3088  0020F4  6E3B               	movwf	pf_lseek@ofs,c
  3089  0020F6  0100               	movlb	0	; () banked
  3090  0020F8  5199               	movf	(load_header@sz+1)& (0+255),w,b
  3091  0020FA  0101               	movlb	1	; () banked
  3092  0020FC  2119               	addwfc	(_Fs+25)& (0+255),w,b
  3093  0020FE  6E3C               	movwf	pf_lseek@ofs+1,c
  3094  002100  0100               	movlb	0	; () banked
  3095  002102  519A               	movf	(load_header@sz+2)& (0+255),w,b
  3096  002104  0101               	movlb	1	; () banked
  3097  002106  211A               	addwfc	(_Fs+26)& (0+255),w,b
  3098  002108  6E3D               	movwf	pf_lseek@ofs+2,c
  3099  00210A  0100               	movlb	0	; () banked
  3100  00210C  519B               	movf	(load_header@sz+3)& (0+255),w,b
  3101  00210E  0101               	movlb	1	; () banked
  3102  002110  211B               	addwfc	(_Fs+27)& (0+255),w,b
  3103  002112  6E3E               	movwf	pf_lseek@ofs+3,c
  3104  002114  EC04  F004         	call	_pf_lseek	;wreg free
  3105                           
  3106                           ;wave_file.c: 76: break;
  3107  002118  D72C               	goto	l5490
  3108  00211A                     l5540:
  3109                           
  3110                           ;wave_file.c: 79: return 0;
  3111  00211A  0E00               	movlw	0
  3112  00211C  D71E               	goto	L5
  3113  00211E                     l5546:
  3114                           
  3115                           ; BSR set to: 0
  3116  00211E  0100               	movlb	0	; () banked
  3117  002120  C090  F041         	movff	load_header@ChunkID,??_load_header
  3118  002124  0100               	movlb	0	; () banked
  3119  002126  C091  F042         	movff	load_header@ChunkID+1,??_load_header+1
  3120  00212A  0100               	movlb	0	; () banked
  3121  00212C  C092  F043         	movff	load_header@ChunkID+2,??_load_header+2
  3122  002130  0100               	movlb	0	; () banked
  3123  002132  C093  F044         	movff	load_header@ChunkID+3,??_load_header+3
  3124                           
  3125                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 8 sub-sw
      +                          itches
  3126                           ; Switch size 1, requested type "space"
  3127                           ; Number of cases is 4, Range of values is 32 to 116
  3128                           ; switch strategies available:
  3129                           ; Name         Instructions Cycles
  3130                           ; simple_byte           13     7 (average)
  3131                           ;	Chosen strategy is simple_byte
  3132  002136  5044               	movf	??_load_header+3,w,c
  3133  002138  0A20               	xorlw	32	; case 32
  3134  00213A  B4D8               	btfsc	status,2,c
  3135  00213C  D02C               	goto	l6270
  3136  00213E  0A74               	xorlw	116	; case 84
  3137  002140  B4D8               	btfsc	status,2,c
  3138  002142  D02E               	goto	l6272
  3139  002144  0A35               	xorlw	53	; case 97
  3140  002146  B4D8               	btfsc	status,2,c
  3141  002148  D030               	goto	l6274
  3142  00214A  0A15               	xorlw	21	; case 116
  3143  00214C  B4D8               	btfsc	status,2,c
  3144  00214E  D032               	goto	l6276
  3145  002150  D7E4               	goto	l5540
  3146  002152                     l6262:
  3147                           
  3148                           ; BSR set to: 0
  3149                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3150                           ; Switch size 1, requested type "space"
  3151                           ; Number of cases is 1, Range of values is 109 to 109
  3152                           ; switch strategies available:
  3153                           ; Name         Instructions Cycles
  3154                           ; simple_byte            4     3 (average)
  3155                           ;	Chosen strategy is simple_byte
  3156  002152  5042               	movf	??_load_header+1,w,c
  3157  002154  0A6D               	xorlw	109	; case 109
  3158  002156  A4D8               	btfss	status,2,c
  3159  002158  D7E0               	goto	l5540
  3160                           
  3161                           ; BSR set to: 0
  3162                           ; Switch size 1, requested type "space"
  3163                           ; Number of cases is 1, Range of values is 102 to 102
  3164                           ; switch strategies available:
  3165                           ; Name         Instructions Cycles
  3166                           ; simple_byte            4     3 (average)
  3167                           ;	Chosen strategy is simple_byte
  3168  00215A  5041               	movf	??_load_header,w,c
  3169  00215C  0A66               	xorlw	102	; case 102
  3170  00215E  B4D8               	btfsc	status,2,c
  3171  002160  D731               	goto	l5498
  3172  002162  D7DB               	goto	l5540
  3173  002164                     l6264:
  3174                           
  3175                           ; BSR set to: 0
  3176                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3177                           ; Switch size 1, requested type "space"
  3178                           ; Number of cases is 1, Range of values is 73 to 73
  3179                           ; switch strategies available:
  3180                           ; Name         Instructions Cycles
  3181                           ; simple_byte            4     3 (average)
  3182                           ;	Chosen strategy is simple_byte
  3183  002164  5042               	movf	??_load_header+1,w,c
  3184  002166  0A49               	xorlw	73	; case 73
  3185  002168  A4D8               	btfss	status,2,c
  3186  00216A  D7D7               	goto	l5540
  3187                           
  3188                           ; BSR set to: 0
  3189                           ; Switch size 1, requested type "space"
  3190                           ; Number of cases is 1, Range of values is 76 to 76
  3191                           ; switch strategies available:
  3192                           ; Name         Instructions Cycles
  3193                           ; simple_byte            4     3 (average)
  3194                           ;	Chosen strategy is simple_byte
  3195  00216C  5041               	movf	??_load_header,w,c
  3196  00216E  0A4C               	xorlw	76	; case 76
  3197  002170  D00F               	goto	L6
  3198  002172                     l6266:
  3199                           
  3200                           ; BSR set to: 0
  3201                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3202                           ; Switch size 1, requested type "space"
  3203                           ; Number of cases is 1, Range of values is 97 to 97
  3204                           ; switch strategies available:
  3205                           ; Name         Instructions Cycles
  3206                           ; simple_byte            4     3 (average)
  3207                           ;	Chosen strategy is simple_byte
  3208  002172  5042               	movf	??_load_header+1,w,c
  3209  002174  0A61               	xorlw	97	; case 97
  3210  002176  A4D8               	btfss	status,2,c
  3211  002178  D7D0               	goto	l5540
  3212                           
  3213                           ; BSR set to: 0
  3214                           ; Switch size 1, requested type "space"
  3215                           ; Number of cases is 1, Range of values is 100 to 100
  3216                           ; switch strategies available:
  3217                           ; Name         Instructions Cycles
  3218                           ; simple_byte            4     3 (average)
  3219                           ;	Chosen strategy is simple_byte
  3220  00217A  5041               	movf	??_load_header,w,c
  3221  00217C  0A64               	xorlw	100	; case 100
  3222  00217E  B4D8               	btfsc	status,2,c
  3223  002180  D7AC               	goto	l468
  3224  002182  D7CB               	goto	l5540
  3225  002184                     l6268:
  3226                           
  3227                           ; BSR set to: 0
  3228                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3229                           ; Switch size 1, requested type "space"
  3230                           ; Number of cases is 1, Range of values is 97 to 97
  3231                           ; switch strategies available:
  3232                           ; Name         Instructions Cycles
  3233                           ; simple_byte            4     3 (average)
  3234                           ;	Chosen strategy is simple_byte
  3235  002184  5042               	movf	??_load_header+1,w,c
  3236  002186  0A61               	xorlw	97	; case 97
  3237  002188  A4D8               	btfss	status,2,c
  3238  00218A  D7C7               	goto	l5540
  3239                           
  3240                           ; BSR set to: 0
  3241                           ; Switch size 1, requested type "space"
  3242                           ; Number of cases is 1, Range of values is 102 to 102
  3243                           ; switch strategies available:
  3244                           ; Name         Instructions Cycles
  3245                           ; simple_byte            4     3 (average)
  3246                           ;	Chosen strategy is simple_byte
  3247  00218C  5041               	movf	??_load_header,w,c
  3248  00218E  0A66               	xorlw	102	; case 102
  3249  002190                     L6:
  3250  002190  B4D8               	btfsc	status,2,c
  3251  002192  D7AC               	goto	l5538
  3252  002194  D7C2               	goto	l5540
  3253  002196                     l6270:
  3254                           
  3255                           ; BSR set to: 0
  3256                           ; Switch size 1, requested type "space"
  3257                           ; Number of cases is 1, Range of values is 116 to 116
  3258                           ; switch strategies available:
  3259                           ; Name         Instructions Cycles
  3260                           ; simple_byte            4     3 (average)
  3261                           ;	Chosen strategy is simple_byte
  3262  002196  5043               	movf	??_load_header+2,w,c
  3263  002198  0A74               	xorlw	116	; case 116
  3264  00219A  B4D8               	btfsc	status,2,c
  3265  00219C  D7DA               	goto	l6262
  3266  00219E  D7BD               	goto	l5540
  3267  0021A0                     l6272:
  3268                           
  3269                           ; BSR set to: 0
  3270                           ; Switch size 1, requested type "space"
  3271                           ; Number of cases is 1, Range of values is 83 to 83
  3272                           ; switch strategies available:
  3273                           ; Name         Instructions Cycles
  3274                           ; simple_byte            4     3 (average)
  3275                           ;	Chosen strategy is simple_byte
  3276  0021A0  5043               	movf	??_load_header+2,w,c
  3277  0021A2  0A53               	xorlw	83	; case 83
  3278  0021A4  B4D8               	btfsc	status,2,c
  3279  0021A6  D7DE               	goto	l6264
  3280  0021A8  D7B8               	goto	l5540
  3281  0021AA                     l6274:
  3282                           
  3283                           ; BSR set to: 0
  3284                           ; Switch size 1, requested type "space"
  3285                           ; Number of cases is 1, Range of values is 116 to 116
  3286                           ; switch strategies available:
  3287                           ; Name         Instructions Cycles
  3288                           ; simple_byte            4     3 (average)
  3289                           ;	Chosen strategy is simple_byte
  3290  0021AA  5043               	movf	??_load_header+2,w,c
  3291  0021AC  0A74               	xorlw	116	; case 116
  3292  0021AE  B4D8               	btfsc	status,2,c
  3293  0021B0  D7E0               	goto	l6266
  3294  0021B2  D7B3               	goto	l5540
  3295  0021B4                     l6276:
  3296                           
  3297                           ; BSR set to: 0
  3298                           ; Switch size 1, requested type "space"
  3299                           ; Number of cases is 1, Range of values is 99 to 99
  3300                           ; switch strategies available:
  3301                           ; Name         Instructions Cycles
  3302                           ; simple_byte            4     3 (average)
  3303                           ;	Chosen strategy is simple_byte
  3304  0021B4  5043               	movf	??_load_header+2,w,c
  3305  0021B6  0A63               	xorlw	99	; case 99
  3306  0021B8  B4D8               	btfsc	status,2,c
  3307  0021BA  D7E4               	goto	l6268
  3308  0021BC  D7AE               	goto	l5540
  3309  0021BE                     l452:
  3310                           
  3311                           ; BSR set to: 0
  3312  0021BE  0012               	return	
  3313  0021C0                     __end_of_load_header:
  3314                           	opt stack 0
  3315                           tblptru	equ	0xFF8
  3316                           tblptrh	equ	0xFF7
  3317                           tblptrl	equ	0xFF6
  3318                           tablat	equ	0xFF5
  3319                           intcon	equ	0xFF2
  3320                           postinc0	equ	0xFEE
  3321                           wreg	equ	0xFE8
  3322                           postdec1	equ	0xFE5
  3323                           fsr1h	equ	0xFE2
  3324                           fsr1l	equ	0xFE1
  3325                           indf2	equ	0xFDF
  3326                           postinc2	equ	0xFDE
  3327                           postdec2	equ	0xFDD
  3328                           fsr2h	equ	0xFDA
  3329                           fsr2l	equ	0xFD9
  3330                           status	equ	0xFD8
  3331                           
  3332 ;; *************** function _set_sampling_rate *****************
  3333 ;; Defined at:
  3334 ;;		line 126 in file "../../../PIC18F/pwm_audio.c"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;  rate            4   28[COMRAM] unsigned long 
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;  preload         4   36[COMRAM] unsigned long 
  3339 ;; Return value:  Size  Location     Type
  3340 ;;		None               void
  3341 ;; Registers used:
  3342 ;;		wreg, status,2, status,0, cstack
  3343 ;; Tracked objects:
  3344 ;;		On entry : 0/0
  3345 ;;		On exit  : 0/0
  3346 ;;		Unchanged: 0/0
  3347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3348 ;;      Params:         4       0       0       0       0       0       0       0       0
  3349 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3350 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3351 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3352 ;;Total ram usage:       12 bytes
  3353 ;; Hardware stack levels used:    1
  3354 ;; Hardware stack levels required when called:    3
  3355 ;; This function calls:
  3356 ;;		___lldiv
  3357 ;; This function is called by:
  3358 ;;		_load_header
  3359 ;; This function uses a non-reentrant model
  3360 ;;
  3361                           
  3362                           	psect	text12
  3363  0039D4                     __ptext12:
  3364                           	opt stack 0
  3365  0039D4                     _set_sampling_rate:
  3366                           	opt stack 25
  3367                           
  3368                           ;pwm_audio.c: 128: unsigned long preload;
  3369                           ;pwm_audio.c: 130: preload = 65536 - ( 12000000 / rate );
  3370                           
  3371                           ; BSR set to: 0
  3372                           ;incstack = 0
  3373  0039D4  0E00               	movlw	0
  3374  0039D6  6E10               	movwf	___lldiv@dividend,c
  3375  0039D8  0E1B               	movlw	27
  3376  0039DA  6E11               	movwf	___lldiv@dividend+1,c
  3377  0039DC  0EB7               	movlw	183
  3378  0039DE  6E12               	movwf	___lldiv@dividend+2,c
  3379  0039E0  0E00               	movlw	0
  3380  0039E2  6E13               	movwf	___lldiv@dividend+3,c
  3381  0039E4  C01D  F014         	movff	set_sampling_rate@rate,___lldiv@divisor
  3382  0039E8  C01E  F015         	movff	set_sampling_rate@rate+1,___lldiv@divisor+1
  3383  0039EC  C01F  F016         	movff	set_sampling_rate@rate+2,___lldiv@divisor+2
  3384  0039F0  C020  F017         	movff	set_sampling_rate@rate+3,___lldiv@divisor+3
  3385  0039F4  EC71  F01C         	call	___lldiv	;wreg free
  3386  0039F8  C010  F021         	movff	?___lldiv,??_set_sampling_rate
  3387  0039FC  C011  F022         	movff	?___lldiv+1,??_set_sampling_rate+1
  3388  003A00  C012  F023         	movff	?___lldiv+2,??_set_sampling_rate+2
  3389  003A04  C013  F024         	movff	?___lldiv+3,??_set_sampling_rate+3
  3390  003A08  1E21               	comf	??_set_sampling_rate,f,c
  3391  003A0A  1E22               	comf	??_set_sampling_rate+1,f,c
  3392  003A0C  1E23               	comf	??_set_sampling_rate+2,f,c
  3393  003A0E  1E24               	comf	??_set_sampling_rate+3,f,c
  3394  003A10  2A21               	incf	??_set_sampling_rate,f,c
  3395  003A12  0E00               	movlw	0
  3396  003A14  2222               	addwfc	??_set_sampling_rate+1,f,c
  3397  003A16  2223               	addwfc	??_set_sampling_rate+2,f,c
  3398  003A18  2224               	addwfc	??_set_sampling_rate+3,f,c
  3399  003A1A  0E00               	movlw	0
  3400  003A1C  2421               	addwf	??_set_sampling_rate,w,c
  3401  003A1E  6E25               	movwf	set_sampling_rate@preload,c
  3402  003A20  0E00               	movlw	0
  3403  003A22  2022               	addwfc	??_set_sampling_rate+1,w,c
  3404  003A24  6E26               	movwf	set_sampling_rate@preload+1,c
  3405  003A26  0E01               	movlw	1
  3406  003A28  2023               	addwfc	??_set_sampling_rate+2,w,c
  3407  003A2A  6E27               	movwf	set_sampling_rate@preload+2,c
  3408  003A2C  0E00               	movlw	0
  3409  003A2E  2024               	addwfc	??_set_sampling_rate+3,w,c
  3410  003A30  6E28               	movwf	set_sampling_rate@preload+3,c
  3411                           
  3412                           ;pwm_audio.c: 131: TMR1H_preload = (unsigned char)(preload>>8);
  3413  003A32  C026  F04F         	movff	set_sampling_rate@preload+1,_TMR1H_preload
  3414                           
  3415                           ;pwm_audio.c: 132: TMR1L_preload = (unsigned char)(preload & 0x00FF);
  3416  003A36  C025  F050         	movff	set_sampling_rate@preload,_TMR1L_preload
  3417  003A3A  0012               	return	
  3418  003A3C                     __end_of_set_sampling_rate:
  3419                           	opt stack 0
  3420                           tblptru	equ	0xFF8
  3421                           tblptrh	equ	0xFF7
  3422                           tblptrl	equ	0xFF6
  3423                           tablat	equ	0xFF5
  3424                           intcon	equ	0xFF2
  3425                           postinc0	equ	0xFEE
  3426                           wreg	equ	0xFE8
  3427                           postdec1	equ	0xFE5
  3428                           fsr1h	equ	0xFE2
  3429                           fsr1l	equ	0xFE1
  3430                           indf2	equ	0xFDF
  3431                           postinc2	equ	0xFDE
  3432                           postdec2	equ	0xFDD
  3433                           fsr2h	equ	0xFDA
  3434                           fsr2l	equ	0xFD9
  3435                           status	equ	0xFD8
  3436                           
  3437 ;; *************** function _pf_read *****************
  3438 ;; Defined at:
  3439 ;;		line 576 in file "../../../PIC18F/pff.c"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;  buff            2   58[COMRAM] PTR void 
  3442 ;;		 -> Buff(256), 
  3443 ;;  btr             2   60[COMRAM] unsigned short 
  3444 ;;  br              2   62[COMRAM] PTR unsigned short 
  3445 ;;		 -> rb(2), 
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;  clst            4   36[BANK0 ] unsigned long 
  3448 ;;  remain          4   32[BANK0 ] unsigned long 
  3449 ;;  sect            4   28[BANK0 ] unsigned long 
  3450 ;;  fs              2   42[BANK0 ] PTR struct _FATFS_
  3451 ;;		 -> Fs(44), NULL(0), 
  3452 ;;  rcnt            2   40[BANK0 ] unsigned short 
  3453 ;;  rbuff           2   24[BANK0 ] PTR unsigned char 
  3454 ;;		 -> Buff(256), 
  3455 ;;  dr              1   23[BANK0 ] enum E79
  3456 ;; Return value:  Size  Location     Type
  3457 ;;                  1    wreg      enum E48
  3458 ;; Registers used:
  3459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3460 ;; Tracked objects:
  3461 ;;		On entry : 0/0
  3462 ;;		On exit  : 0/0
  3463 ;;		Unchanged: 0/0
  3464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3465 ;;      Params:         6       0       0       0       0       0       0       0       0
  3466 ;;      Locals:         0      21       0       0       0       0       0       0       0
  3467 ;;      Temps:          0       9       0       0       0       0       0       0       0
  3468 ;;      Totals:         6      30       0       0       0       0       0       0       0
  3469 ;;Total ram usage:       36 bytes
  3470 ;; Hardware stack levels used:    1
  3471 ;; Hardware stack levels required when called:    7
  3472 ;; This function calls:
  3473 ;;		___llmod
  3474 ;;		_clust2sect
  3475 ;;		_disk_readp
  3476 ;;		_get_fat
  3477 ;; This function is called by:
  3478 ;;		_load_header
  3479 ;;		_play_wave_file
  3480 ;; This function uses a non-reentrant model
  3481 ;;
  3482                           
  3483                           	psect	text13
  3484  000DA2                     __ptext13:
  3485                           	opt stack 0
  3486  000DA2                     _pf_read:
  3487                           	opt stack 22
  3488                           
  3489                           ;pff.c: 582: DRESULT dr;
  3490                           ;pff.c: 583: DWORD clst;
  3491                           ;pff.c: 584: DWORD sect, remain;
  3492                           ;pff.c: 585: BYTE *rbuff = buff;
  3493                           
  3494                           ;incstack = 0
  3495  000DA2  0100               	movlb	0	; () banked
  3496  000DA4  C03C  F079         	movff	pf_read@buff+1,pf_read@rbuff+1
  3497  000DA8  0100               	movlb	0	; () banked
  3498  000DAA  C03B  F078         	movff	pf_read@buff,pf_read@rbuff
  3499                           
  3500                           ;pff.c: 586: WORD rcnt;
  3501                           ;pff.c: 587: FATFS *fs = FatFs;
  3502  000DAE  0100               	movlb	0	; () banked
  3503  000DB0  C049  F08B         	movff	_FatFs+1,pf_read@fs+1
  3504  000DB4  0100               	movlb	0	; () banked
  3505  000DB6  C048  F08A         	movff	_FatFs,pf_read@fs
  3506                           
  3507                           ; BSR set to: 0
  3508                           ;pff.c: 590: *br = 0;
  3509  000DBA  C03F  FFD9         	movff	pf_read@br,fsr2l
  3510  000DBE  C040  FFDA         	movff	pf_read@br+1,fsr2h
  3511  000DC2  0E00               	movlw	0
  3512  000DC4  6EDE               	movwf	postinc2,c
  3513  000DC6  0E00               	movlw	0
  3514  000DC8  6EDD               	movwf	postdec2,c
  3515                           
  3516                           ; BSR set to: 0
  3517                           ;pff.c: 591: if (!fs) return FR_NOT_ENABLED;
  3518  000DCA  0100               	movlb	0	; () banked
  3519  000DCC  518B               	movf	(pf_read@fs+1)& (0+255),w,b
  3520  000DCE  118A               	iorwf	pf_read@fs& (0+255),w,b
  3521  000DD0  A4D8               	btfss	status,2,c
  3522  000DD2  D002               	goto	l5150
  3523                           
  3524                           ; BSR set to: 0
  3525  000DD4  0E06               	movlw	6
  3526  000DD6  D279               	goto	l177
  3527  000DD8                     l5150:
  3528                           
  3529                           ; BSR set to: 0
  3530                           ;pff.c: 592: if (!(fs->flag & 0x01))
  3531  000DD8  0100               	movlb	0	; () banked
  3532  000DDA  EE20 F002          	lfsr	2,2
  3533  000DDE  0100               	movlb	0	; () banked
  3534  000DE0  518A               	movf	pf_read@fs& (0+255),w,b
  3535  000DE2  26D9               	addwf	fsr2l,f,c
  3536  000DE4  0100               	movlb	0	; () banked
  3537  000DE6  518B               	movf	(pf_read@fs+1)& (0+255),w,b
  3538  000DE8  22DA               	addwfc	fsr2h,f,c
  3539  000DEA  50DF               	movf	indf2,w,c
  3540  000DEC  0100               	movlb	0	; () banked
  3541  000DEE  6F6E               	movwf	??_pf_read& (0+255),b
  3542  000DF0  0100               	movlb	0	; () banked
  3543  000DF2  B16E               	btfsc	??_pf_read& (0+255),0,b
  3544  000DF4  D002               	goto	l5156
  3545                           
  3546                           ; BSR set to: 0
  3547                           ;pff.c: 593: return FR_NOT_OPENED;
  3548  000DF6  0E05               	movlw	5
  3549  000DF8  D268               	goto	l177
  3550  000DFA                     l5156:
  3551                           
  3552                           ; BSR set to: 0
  3553                           ;pff.c: 595: remain = fs->fsize - fs->fptr;
  3554  000DFA  0100               	movlb	0	; () banked
  3555  000DFC  EE20 F01C          	lfsr	2,28
  3556  000E00  0100               	movlb	0	; () banked
  3557  000E02  518A               	movf	pf_read@fs& (0+255),w,b
  3558  000E04  26D9               	addwf	fsr2l,f,c
  3559  000E06  0100               	movlb	0	; () banked
  3560  000E08  518B               	movf	(pf_read@fs+1)& (0+255),w,b
  3561  000E0A  22DA               	addwfc	fsr2h,f,c
  3562  000E0C  CFDE F06E          	movff	postinc2,??_pf_read
  3563  000E10  CFDE F06F          	movff	postinc2,??_pf_read+1
  3564  000E14  CFDE F070          	movff	postinc2,??_pf_read+2
  3565  000E18  CFDE F071          	movff	postinc2,??_pf_read+3
  3566  000E1C  0100               	movlb	0	; () banked
  3567  000E1E  EE20 F018          	lfsr	2,24
  3568  000E22  0100               	movlb	0	; () banked
  3569  000E24  518A               	movf	pf_read@fs& (0+255),w,b
  3570  000E26  26D9               	addwf	fsr2l,f,c
  3571  000E28  0100               	movlb	0	; () banked
  3572  000E2A  518B               	movf	(pf_read@fs+1)& (0+255),w,b
  3573  000E2C  22DA               	addwfc	fsr2h,f,c
  3574  000E2E  CFDE F072          	movff	postinc2,??_pf_read+4
  3575  000E32  CFDE F073          	movff	postinc2,??_pf_read+5
  3576  000E36  CFDE F074          	movff	postinc2,??_pf_read+6
  3577  000E3A  CFDE F075          	movff	postinc2,??_pf_read+7
  3578  000E3E  0100               	movlb	0	; () banked
  3579  000E40  1F72               	comf	(??_pf_read+4)& (0+255),f,b
  3580  000E42  1F73               	comf	(??_pf_read+5)& (0+255),f,b
  3581  000E44  1F74               	comf	(??_pf_read+6)& (0+255),f,b
  3582  000E46  1F75               	comf	(??_pf_read+7)& (0+255),f,b
  3583  000E48  2B72               	incf	(??_pf_read+4)& (0+255),f,b
  3584  000E4A  0E00               	movlw	0
  3585  000E4C  2373               	addwfc	(??_pf_read+5)& (0+255),f,b
  3586  000E4E  2374               	addwfc	(??_pf_read+6)& (0+255),f,b
  3587  000E50  2375               	addwfc	(??_pf_read+7)& (0+255),f,b
  3588  000E52  0100               	movlb	0	; () banked
  3589  000E54  516E               	movf	??_pf_read& (0+255),w,b
  3590  000E56  0100               	movlb	0	; () banked
  3591  000E58  2572               	addwf	(??_pf_read+4)& (0+255),w,b
  3592  000E5A  0100               	movlb	0	; () banked
  3593  000E5C  6F80               	movwf	pf_read@remain& (0+255),b
  3594  000E5E  0100               	movlb	0	; () banked
  3595  000E60  516F               	movf	(??_pf_read+1)& (0+255),w,b
  3596  000E62  0100               	movlb	0	; () banked
  3597  000E64  2173               	addwfc	(??_pf_read+5)& (0+255),w,b
  3598  000E66  0100               	movlb	0	; () banked
  3599  000E68  6F81               	movwf	(pf_read@remain+1)& (0+255),b
  3600  000E6A  0100               	movlb	0	; () banked
  3601  000E6C  5170               	movf	(??_pf_read+2)& (0+255),w,b
  3602  000E6E  0100               	movlb	0	; () banked
  3603  000E70  2174               	addwfc	(??_pf_read+6)& (0+255),w,b
  3604  000E72  0100               	movlb	0	; () banked
  3605  000E74  6F82               	movwf	(pf_read@remain+2)& (0+255),b
  3606  000E76  0100               	movlb	0	; () banked
  3607  000E78  5171               	movf	(??_pf_read+3)& (0+255),w,b
  3608  000E7A  0100               	movlb	0	; () banked
  3609  000E7C  2175               	addwfc	(??_pf_read+7)& (0+255),w,b
  3610  000E7E  0100               	movlb	0	; () banked
  3611  000E80  6F83               	movwf	(pf_read@remain+3)& (0+255),b
  3612                           
  3613                           ; BSR set to: 0
  3614                           ;pff.c: 596: if (btr > remain) btr = (WORD)remain;
  3615  000E82  503D               	movf	pf_read@btr,w,c
  3616  000E84  0100               	movlb	0	; () banked
  3617  000E86  6F6E               	movwf	??_pf_read& (0+255),b
  3618  000E88  503E               	movf	pf_read@btr+1,w,c
  3619  000E8A  0100               	movlb	0	; () banked
  3620  000E8C  6F6F               	movwf	(??_pf_read+1)& (0+255),b
  3621  000E8E  0100               	movlb	0	; () banked
  3622  000E90  6B70               	clrf	(??_pf_read+2)& (0+255),b
  3623  000E92  0100               	movlb	0	; () banked
  3624  000E94  6B71               	clrf	(??_pf_read+3)& (0+255),b
  3625  000E96  0100               	movlb	0	; () banked
  3626  000E98  516E               	movf	??_pf_read& (0+255),w,b
  3627  000E9A  0100               	movlb	0	; () banked
  3628  000E9C  5D80               	subwf	pf_read@remain& (0+255),w,b
  3629  000E9E  0100               	movlb	0	; () banked
  3630  000EA0  516F               	movf	(??_pf_read+1)& (0+255),w,b
  3631  000EA2  0100               	movlb	0	; () banked
  3632  000EA4  5981               	subwfb	(pf_read@remain+1)& (0+255),w,b
  3633  000EA6  0100               	movlb	0	; () banked
  3634  000EA8  5170               	movf	(??_pf_read+2)& (0+255),w,b
  3635  000EAA  0100               	movlb	0	; () banked
  3636  000EAC  5982               	subwfb	(pf_read@remain+2)& (0+255),w,b
  3637  000EAE  0100               	movlb	0	; () banked
  3638  000EB0  5171               	movf	(??_pf_read+3)& (0+255),w,b
  3639  000EB2  0100               	movlb	0	; () banked
  3640  000EB4  5983               	subwfb	(pf_read@remain+3)& (0+255),w,b
  3641  000EB6  B0D8               	btfsc	status,0,c
  3642  000EB8  D1F6               	goto	l5210
  3643                           
  3644                           ; BSR set to: 0
  3645  000EBA  C080  F03D         	movff	pf_read@remain,pf_read@btr
  3646  000EBE  C081  F03E         	movff	pf_read@remain+1,pf_read@btr+1
  3647  000EC2  D1F1               	goto	l5210
  3648  000EC4                     l5162:
  3649                           
  3650                           ; BSR set to: 0
  3651                           ;pff.c: 599: if ((fs->fptr % 512) == 0) {
  3652  000EC4  0100               	movlb	0	; () banked
  3653  000EC6  EE20 F018          	lfsr	2,24
  3654  000ECA  0100               	movlb	0	; () banked
  3655  000ECC  518A               	movf	pf_read@fs& (0+255),w,b
  3656  000ECE  26D9               	addwf	fsr2l,f,c
  3657  000ED0  0100               	movlb	0	; () banked
  3658  000ED2  518B               	movf	(pf_read@fs+1)& (0+255),w,b
  3659  000ED4  22DA               	addwfc	fsr2h,f,c
  3660  000ED6  0EFF               	movlw	255
  3661  000ED8  14DE               	andwf	postinc2,w,c
  3662  000EDA  0100               	movlb	0	; () banked
  3663  000EDC  6F6E               	movwf	??_pf_read& (0+255),b
  3664  000EDE  0E01               	movlw	1
  3665  000EE0  14DE               	andwf	postinc2,w,c
  3666  000EE2  0100               	movlb	0	; () banked
  3667  000EE4  6F6F               	movwf	(??_pf_read+1)& (0+255),b
  3668  000EE6  0E00               	movlw	0
  3669  000EE8  14DE               	andwf	postinc2,w,c
  3670  000EEA  0100               	movlb	0	; () banked
  3671  000EEC  6F70               	movwf	(??_pf_read+2)& (0+255),b
  3672  000EEE  0E00               	movlw	0
  3673  000EF0  14DE               	andwf	postinc2,w,c
  3674  000EF2  0100               	movlb	0	; () banked
  3675  000EF4  6F71               	movwf	(??_pf_read+3)& (0+255),b
  3676  000EF6  0100               	movlb	0	; () banked
  3677  000EF8  5171               	movf	(??_pf_read+3)& (0+255),w,b
  3678  000EFA  116E               	iorwf	??_pf_read& (0+255),w,b
  3679  000EFC  116F               	iorwf	(??_pf_read+1)& (0+255),w,b
  3680  000EFE  1170               	iorwf	(??_pf_read+2)& (0+255),w,b
  3681  000F00  A4D8               	btfss	status,2,c
  3682  000F02  D127               	goto	l182
  3683                           
  3684                           ; BSR set to: 0
  3685                           ;pff.c: 600: if ((fs->fptr / 512 % fs->csize) == 0) {
  3686  000F04  0100               	movlb	0	; () banked
  3687  000F06  EE20 F018          	lfsr	2,24
  3688  000F0A  0100               	movlb	0	; () banked
  3689  000F0C  518A               	movf	pf_read@fs& (0+255),w,b
  3690  000F0E  26D9               	addwf	fsr2l,f,c
  3691  000F10  0100               	movlb	0	; () banked
  3692  000F12  518B               	movf	(pf_read@fs+1)& (0+255),w,b
  3693  000F14  22DA               	addwfc	fsr2h,f,c
  3694  000F16  CFDE F06E          	movff	postinc2,??_pf_read
  3695  000F1A  CFDE F06F          	movff	postinc2,??_pf_read+1
  3696  000F1E  CFDE F070          	movff	postinc2,??_pf_read+2
  3697  000F22  CFDE F071          	movff	postinc2,??_pf_read+3
  3698  000F26  0E0A               	movlw	10
  3699  000F28  D006               	goto	u5800
  3700  000F2A                     u5805:
  3701  000F2A  0100               	movlb	0	; () banked
  3702  000F2C  90D8               	bcf	status,0,c
  3703  000F2E  3371               	rrcf	(??_pf_read+3)& (0+255),f,b
  3704  000F30  3370               	rrcf	(??_pf_read+2)& (0+255),f,b
  3705  000F32  336F               	rrcf	(??_pf_read+1)& (0+255),f,b
  3706  000F34  336E               	rrcf	??_pf_read& (0+255),f,b
  3707  000F36                     u5800:
  3708  000F36  2EE8               	decfsz	wreg,f,c
  3709  000F38  D7F8               	goto	u5805
  3710  000F3A  C06E  F010         	movff	??_pf_read,___llmod@dividend
  3711  000F3E  C06F  F011         	movff	??_pf_read+1,___llmod@dividend+1
  3712  000F42  C070  F012         	movff	??_pf_read+2,___llmod@dividend+2
  3713  000F46  C071  F013         	movff	??_pf_read+3,___llmod@dividend+3
  3714  000F4A  0100               	movlb	0	; () banked
  3715  000F4C  EE20 F001          	lfsr	2,1
  3716  000F50  0100               	movlb	0	; () banked
  3717  000F52  518A               	movf	pf_read@fs& (0+255),w,b
  3718  000F54  26D9               	addwf	fsr2l,f,c
  3719  000F56  0100               	movlb	0	; () banked
  3720  000F58  518B               	movf	(pf_read@fs+1)& (0+255),w,b
  3721  000F5A  22DA               	addwfc	fsr2h,f,c
  3722  000F5C  50DF               	movf	indf2,w,c
  3723  000F5E  0100               	movlb	0	; () banked
  3724  000F60  6F72               	movwf	(??_pf_read+4)& (0+255),b
  3725  000F62  0100               	movlb	0	; () banked
  3726  000F64  5172               	movf	(??_pf_read+4)& (0+255),w,b
  3727  000F66  6E14               	movwf	___llmod@divisor,c
  3728  000F68  6A15               	clrf	___llmod@divisor+1,c
  3729  000F6A  6A16               	clrf	___llmod@divisor+2,c
  3730  000F6C  6A17               	clrf	___llmod@divisor+3,c
  3731  000F6E  EC1E  F01D         	call	___llmod	;wreg free
  3732  000F72  C010  F073         	movff	?___llmod,??_pf_read+5
  3733  000F76  C011  F074         	movff	?___llmod+1,??_pf_read+6
  3734  000F7A  C012  F075         	movff	?___llmod+2,??_pf_read+7
  3735  000F7E  C013  F076         	movff	?___llmod+3,??_pf_read+8
  3736  000F82  0100               	movlb	0	; () banked
  3737  000F84  5176               	movf	(??_pf_read+8)& (0+255),w,b
  3738  000F86  1173               	iorwf	(??_pf_read+5)& (0+255),w,b
  3739  000F88  1174               	iorwf	(??_pf_read+6)& (0+255),w,b
  3740  000F8A  1175               	iorwf	(??_pf_read+7)& (0+255),w,b
  3741  000F8C  A4D8               	btfss	status,2,c
  3742  000F8E  D081               	goto	l5178
  3743                           
  3744                           ; BSR set to: 0
  3745                           ;pff.c: 601: clst = (fs->fptr == 0) ?
  3746                           ;pff.c: 602: fs->org_clust : get_fat(fs->curr_clust);
  3747  000F90  0100               	movlb	0	; () banked
  3748  000F92  EE20 F018          	lfsr	2,24
  3749  000F96  0100               	movlb	0	; () banked
  3750  000F98  518A               	movf	pf_read@fs& (0+255),w,b
  3751  000F9A  26D9               	addwf	fsr2l,f,c
  3752  000F9C  0100               	movlb	0	; () banked
  3753  000F9E  518B               	movf	(pf_read@fs+1)& (0+255),w,b
  3754  000FA0  22DA               	addwfc	fsr2h,f,c
  3755  000FA2  CFDE F06E          	movff	postinc2,??_pf_read
  3756  000FA6  CFDE F06F          	movff	postinc2,??_pf_read+1
  3757  000FAA  CFDE F070          	movff	postinc2,??_pf_read+2
  3758  000FAE  CFDE F071          	movff	postinc2,??_pf_read+3
  3759  000FB2  0100               	movlb	0	; () banked
  3760  000FB4  5171               	movf	(??_pf_read+3)& (0+255),w,b
  3761  000FB6  116E               	iorwf	??_pf_read& (0+255),w,b
  3762  000FB8  116F               	iorwf	(??_pf_read+1)& (0+255),w,b
  3763  000FBA  1170               	iorwf	(??_pf_read+2)& (0+255),w,b
  3764  000FBC  B4D8               	btfsc	status,2,c
  3765  000FBE  D01C               	goto	l5170
  3766                           
  3767                           ; BSR set to: 0
  3768  000FC0  0100               	movlb	0	; () banked
  3769  000FC2  EE20 F024          	lfsr	2,36
  3770  000FC6  0100               	movlb	0	; () banked
  3771  000FC8  518A               	movf	pf_read@fs& (0+255),w,b
  3772  000FCA  26D9               	addwf	fsr2l,f,c
  3773  000FCC  0100               	movlb	0	; () banked
  3774  000FCE  518B               	movf	(pf_read@fs+1)& (0+255),w,b
  3775  000FD0  22DA               	addwfc	fsr2h,f,c
  3776  000FD2  CFDE F02D          	movff	postinc2,get_fat@clst
  3777  000FD6  CFDE F02E          	movff	postinc2,get_fat@clst+1
  3778  000FDA  CFDE F02F          	movff	postinc2,get_fat@clst+2
  3779  000FDE  CFDE F030          	movff	postinc2,get_fat@clst+3
  3780  000FE2  ECC5  F00B         	call	_get_fat	;wreg free
  3781  000FE6  C02D  F084         	movff	?_get_fat,pf_read@clst
  3782  000FEA  C02E  F085         	movff	?_get_fat+1,pf_read@clst+1
  3783  000FEE  C02F  F086         	movff	?_get_fat+2,pf_read@clst+2
  3784  000FF2  C030  F087         	movff	?_get_fat+3,pf_read@clst+3
  3785  000FF6  D015               	goto	l5172
  3786  000FF8                     l5170:
  3787  000FF8  0100               	movlb	0	; () banked
  3788  000FFA  EE20 F020          	lfsr	2,32
  3789  000FFE  0100               	movlb	0	; () banked
  3790  001000  518A               	movf	pf_read@fs& (0+255),w,b
  3791  001002  26D9               	addwf	fsr2l,f,c
  3792  001004  0100               	movlb	0	; () banked
  3793  001006  518B               	movf	(pf_read@fs+1)& (0+255),w,b
  3794  001008  22DA               	addwfc	fsr2h,f,c
  3795  00100A  0100               	movlb	0	; () banked
  3796  00100C  CFDE F084          	movff	postinc2,pf_read@clst
  3797  001010  0100               	movlb	0	; () banked
  3798  001012  CFDE F085          	movff	postinc2,pf_read@clst+1
  3799  001016  0100               	movlb	0	; () banked
  3800  001018  CFDE F086          	movff	postinc2,pf_read@clst+2
  3801  00101C  0100               	movlb	0	; () banked
  3802  00101E  CFDE F087          	movff	postinc2,pf_read@clst+3
  3803  001022                     l5172:
  3804                           
  3805                           ;pff.c: 603: if (clst <= 1) goto fr_abort;
  3806  001022  0E02               	movlw	2
  3807  001024  0100               	movlb	0	; () banked
  3808  001026  6F6E               	movwf	??_pf_read& (0+255),b
  3809  001028  6B6F               	clrf	(??_pf_read+1)& (0+255),b
  3810  00102A  6B70               	clrf	(??_pf_read+2)& (0+255),b
  3811  00102C  6B71               	clrf	(??_pf_read+3)& (0+255),b
  3812  00102E  0100               	movlb	0	; () banked
  3813  001030  516E               	movf	??_pf_read& (0+255),w,b
  3814  001032  0100               	movlb	0	; () banked
  3815  001034  5D84               	subwf	pf_read@clst& (0+255),w,b
  3816  001036  0100               	movlb	0	; () banked
  3817  001038  516F               	movf	(??_pf_read+1)& (0+255),w,b
  3818  00103A  0100               	movlb	0	; () banked
  3819  00103C  5985               	subwfb	(pf_read@clst+1)& (0+255),w,b
  3820  00103E  0100               	movlb	0	; () banked
  3821  001040  5170               	movf	(??_pf_read+2)& (0+255),w,b
  3822  001042  0100               	movlb	0	; () banked
  3823  001044  5986               	subwfb	(pf_read@clst+2)& (0+255),w,b
  3824  001046  0100               	movlb	0	; () banked
  3825  001048  5171               	movf	(??_pf_read+3)& (0+255),w,b
  3826  00104A  0100               	movlb	0	; () banked
  3827  00104C  5987               	subwfb	(pf_read@clst+3)& (0+255),w,b
  3828  00104E  A0D8               	btfss	status,0,c
  3829  001050  D130               	goto	l5216
  3830                           
  3831                           ; BSR set to: 0
  3832                           ;pff.c: 604: fs->curr_clust = clst;
  3833                           
  3834                           ; BSR set to: 0
  3835                           
  3836                           ; BSR set to: 0
  3837  001052  0100               	movlb	0	; () banked
  3838  001054  EE20 F024          	lfsr	2,36
  3839  001058  0100               	movlb	0	; () banked
  3840  00105A  518A               	movf	pf_read@fs& (0+255),w,b
  3841  00105C  26D9               	addwf	fsr2l,f,c
  3842  00105E  0100               	movlb	0	; () banked
  3843  001060  518B               	movf	(pf_read@fs+1)& (0+255),w,b
  3844  001062  22DA               	addwfc	fsr2h,f,c
  3845  001064  0100               	movlb	0	; () banked
  3846  001066  C084  FFDE         	movff	pf_read@clst,postinc2
  3847  00106A  0100               	movlb	0	; () banked
  3848  00106C  C085  FFDE         	movff	pf_read@clst+1,postinc2
  3849  001070  0100               	movlb	0	; () banked
  3850  001072  C086  FFDE         	movff	pf_read@clst+2,postinc2
  3851  001076  0100               	movlb	0	; () banked
  3852  001078  C087  FFDE         	movff	pf_read@clst+3,postinc2
  3853                           
  3854                           ;pff.c: 605: fs->csect = 0;
  3855  00107C  0100               	movlb	0	; () banked
  3856  00107E  EE20 F003          	lfsr	2,3
  3857  001082  0100               	movlb	0	; () banked
  3858  001084  518A               	movf	pf_read@fs& (0+255),w,b
  3859  001086  26D9               	addwf	fsr2l,f,c
  3860  001088  0100               	movlb	0	; () banked
  3861  00108A  518B               	movf	(pf_read@fs+1)& (0+255),w,b
  3862  00108C  22DA               	addwfc	fsr2h,f,c
  3863  00108E  0E00               	movlw	0
  3864  001090  6EDF               	movwf	indf2,c
  3865  001092                     l5178:
  3866                           
  3867                           ; BSR set to: 0
  3868                           ;pff.c: 606: }
  3869                           ;pff.c: 607: sect = clust2sect(fs->curr_clust);
  3870  001092  0100               	movlb	0	; () banked
  3871  001094  EE20 F024          	lfsr	2,36
  3872  001098  0100               	movlb	0	; () banked
  3873  00109A  518A               	movf	pf_read@fs& (0+255),w,b
  3874  00109C  26D9               	addwf	fsr2l,f,c
  3875  00109E  0100               	movlb	0	; () banked
  3876  0010A0  518B               	movf	(pf_read@fs+1)& (0+255),w,b
  3877  0010A2  22DA               	addwfc	fsr2h,f,c
  3878  0010A4  CFDE F01C          	movff	postinc2,clust2sect@clst
  3879  0010A8  CFDE F01D          	movff	postinc2,clust2sect@clst+1
  3880  0010AC  CFDE F01E          	movff	postinc2,clust2sect@clst+2
  3881  0010B0  CFDE F01F          	movff	postinc2,clust2sect@clst+3
  3882  0010B4  ECDE  F01A         	call	_clust2sect	;wreg free
  3883  0010B8  C01C  F07C         	movff	?_clust2sect,pf_read@sect
  3884  0010BC  C01D  F07D         	movff	?_clust2sect+1,pf_read@sect+1
  3885  0010C0  C01E  F07E         	movff	?_clust2sect+2,pf_read@sect+2
  3886  0010C4  C01F  F07F         	movff	?_clust2sect+3,pf_read@sect+3
  3887                           
  3888                           ;pff.c: 608: if (!sect) goto fr_abort;
  3889  0010C8  0100               	movlb	0	; () banked
  3890  0010CA  517F               	movf	(pf_read@sect+3)& (0+255),w,b
  3891  0010CC  117C               	iorwf	pf_read@sect& (0+255),w,b
  3892  0010CE  117D               	iorwf	(pf_read@sect+1)& (0+255),w,b
  3893  0010D0  117E               	iorwf	(pf_read@sect+2)& (0+255),w,b
  3894  0010D2  B4D8               	btfsc	status,2,c
  3895  0010D4  D0EE               	goto	l5216
  3896                           
  3897                           ; BSR set to: 0
  3898                           ;pff.c: 609: fs->dsect = sect + fs->csect++;
  3899                           
  3900                           ; BSR set to: 0
  3901                           
  3902                           ; BSR set to: 0
  3903  0010D6  0100               	movlb	0	; () banked
  3904  0010D8  EE20 F003          	lfsr	2,3
  3905  0010DC  0100               	movlb	0	; () banked
  3906  0010DE  518A               	movf	pf_read@fs& (0+255),w,b
  3907  0010E0  26D9               	addwf	fsr2l,f,c
  3908  0010E2  0100               	movlb	0	; () banked
  3909  0010E4  518B               	movf	(pf_read@fs+1)& (0+255),w,b
  3910  0010E6  22DA               	addwfc	fsr2h,f,c
  3911  0010E8  50DF               	movf	indf2,w,c
  3912  0010EA  0100               	movlb	0	; () banked
  3913  0010EC  6F6E               	movwf	??_pf_read& (0+255),b
  3914  0010EE  0100               	movlb	0	; () banked
  3915  0010F0  516E               	movf	??_pf_read& (0+255),w,b
  3916  0010F2  0100               	movlb	0	; () banked
  3917  0010F4  257C               	addwf	pf_read@sect& (0+255),w,b
  3918  0010F6  0100               	movlb	0	; () banked
  3919  0010F8  6F6F               	movwf	(??_pf_read+1)& (0+255),b
  3920  0010FA  0E00               	movlw	0
  3921  0010FC  0100               	movlb	0	; () banked
  3922  0010FE  217D               	addwfc	(pf_read@sect+1)& (0+255),w,b
  3923  001100  0100               	movlb	0	; () banked
  3924  001102  6F70               	movwf	(??_pf_read+2)& (0+255),b
  3925  001104  0E00               	movlw	0
  3926  001106  0100               	movlb	0	; () banked
  3927  001108  217E               	addwfc	(pf_read@sect+2)& (0+255),w,b
  3928  00110A  0100               	movlb	0	; () banked
  3929  00110C  6F71               	movwf	(??_pf_read+3)& (0+255),b
  3930  00110E  0E00               	movlw	0
  3931  001110  0100               	movlb	0	; () banked
  3932  001112  217F               	addwfc	(pf_read@sect+3)& (0+255),w,b
  3933  001114  0100               	movlb	0	; () banked
  3934  001116  6F72               	movwf	(??_pf_read+4)& (0+255),b
  3935  001118  0100               	movlb	0	; () banked
  3936  00111A  EE20 F028          	lfsr	2,40
  3937  00111E  0100               	movlb	0	; () banked
  3938  001120  518A               	movf	pf_read@fs& (0+255),w,b
  3939  001122  26D9               	addwf	fsr2l,f,c
  3940  001124  0100               	movlb	0	; () banked
  3941  001126  518B               	movf	(pf_read@fs+1)& (0+255),w,b
  3942  001128  22DA               	addwfc	fsr2h,f,c
  3943  00112A  C06F  FFDE         	movff	??_pf_read+1,postinc2
  3944  00112E  C070  FFDE         	movff	??_pf_read+2,postinc2
  3945  001132  C071  FFDE         	movff	??_pf_read+3,postinc2
  3946  001136  C072  FFDD         	movff	??_pf_read+4,postdec2
  3947  00113A  06D9               	decf	fsr2l,f,c
  3948  00113C  06D9               	decf	fsr2l,f,c
  3949  00113E  0100               	movlb	0	; () banked
  3950  001140  EE20 F003          	lfsr	2,3
  3951  001144  0100               	movlb	0	; () banked
  3952  001146  518A               	movf	pf_read@fs& (0+255),w,b
  3953  001148  26D9               	addwf	fsr2l,f,c
  3954  00114A  0100               	movlb	0	; () banked
  3955  00114C  518B               	movf	(pf_read@fs+1)& (0+255),w,b
  3956  00114E  22DA               	addwfc	fsr2h,f,c
  3957  001150  2ADF               	incf	indf2,f,c
  3958  001152                     l182:
  3959                           
  3960                           ; BSR set to: 0
  3961                           ;pff.c: 610: }
  3962                           ;pff.c: 611: rcnt = 512 - ((WORD)fs->fptr % 512);
  3963  001152  0EFF               	movlw	255
  3964  001154  0100               	movlb	0	; () banked
  3965  001156  6F6E               	movwf	??_pf_read& (0+255),b
  3966  001158  0E01               	movlw	1
  3967  00115A  6F6F               	movwf	(??_pf_read+1)& (0+255),b
  3968  00115C  0100               	movlb	0	; () banked
  3969  00115E  EE20 F018          	lfsr	2,24
  3970  001162  0100               	movlb	0	; () banked
  3971  001164  518A               	movf	pf_read@fs& (0+255),w,b
  3972  001166  26D9               	addwf	fsr2l,f,c
  3973  001168  0100               	movlb	0	; () banked
  3974  00116A  518B               	movf	(pf_read@fs+1)& (0+255),w,b
  3975  00116C  22DA               	addwfc	fsr2h,f,c
  3976  00116E  CFDE F070          	movff	postinc2,??_pf_read+2
  3977  001172  CFDD F071          	movff	postdec2,??_pf_read+3
  3978  001176  0100               	movlb	0	; () banked
  3979  001178  516E               	movf	??_pf_read& (0+255),w,b
  3980  00117A  0100               	movlb	0	; () banked
  3981  00117C  1770               	andwf	(??_pf_read+2)& (0+255),f,b
  3982  00117E  0100               	movlb	0	; () banked
  3983  001180  516F               	movf	(??_pf_read+1)& (0+255),w,b
  3984  001182  0100               	movlb	0	; () banked
  3985  001184  1771               	andwf	(??_pf_read+3)& (0+255),f,b
  3986  001186  0100               	movlb	0	; () banked
  3987  001188  1F70               	comf	(??_pf_read+2)& (0+255),f,b
  3988  00118A  1F71               	comf	(??_pf_read+3)& (0+255),f,b
  3989  00118C  4B70               	infsnz	(??_pf_read+2)& (0+255),f,b
  3990  00118E  2B71               	incf	(??_pf_read+3)& (0+255),f,b
  3991  001190  0E00               	movlw	0
  3992  001192  0100               	movlb	0	; () banked
  3993  001194  2570               	addwf	(??_pf_read+2)& (0+255),w,b
  3994  001196  0100               	movlb	0	; () banked
  3995  001198  6F88               	movwf	pf_read@rcnt& (0+255),b
  3996  00119A  0E02               	movlw	2
  3997  00119C  0100               	movlb	0	; () banked
  3998  00119E  2171               	addwfc	(??_pf_read+3)& (0+255),w,b
  3999  0011A0  0100               	movlb	0	; () banked
  4000  0011A2  6F89               	movwf	(pf_read@rcnt+1)& (0+255),b
  4001                           
  4002                           ; BSR set to: 0
  4003                           ;pff.c: 612: if (rcnt > btr) rcnt = btr;
  4004  0011A4  0100               	movlb	0	; () banked
  4005  0011A6  5188               	movf	pf_read@rcnt& (0+255),w,b
  4006  0011A8  5C3D               	subwf	pf_read@btr,w,c
  4007  0011AA  0100               	movlb	0	; () banked
  4008  0011AC  5189               	movf	(pf_read@rcnt+1)& (0+255),w,b
  4009  0011AE  583E               	subwfb	pf_read@btr+1,w,c
  4010  0011B0  B0D8               	btfsc	status,0,c
  4011  0011B2  D004               	goto	l5190
  4012                           
  4013                           ; BSR set to: 0
  4014  0011B4  C03D  F088         	movff	pf_read@btr,pf_read@rcnt
  4015  0011B8  C03E  F089         	movff	pf_read@btr+1,pf_read@rcnt+1
  4016  0011BC                     l5190:
  4017                           
  4018                           ; BSR set to: 0
  4019                           ;pff.c: 613: dr = disk_readp(!buff ? 0 : rbuff, fs->dsect, (WORD)(fs->fptr % 512), rcnt)
      +                          ;
  4020  0011BC  503C               	movf	pf_read@buff+1,w,c
  4021  0011BE  103B               	iorwf	pf_read@buff,w,c
  4022  0011C0  B4D8               	btfsc	status,2,c
  4023  0011C2  D007               	goto	l5194
  4024                           
  4025                           ; BSR set to: 0
  4026  0011C4  0100               	movlb	0	; () banked
  4027  0011C6  C079  F07B         	movff	pf_read@rbuff+1,_pf_read$348+1
  4028  0011CA  0100               	movlb	0	; () banked
  4029  0011CC  C078  F07A         	movff	pf_read@rbuff,_pf_read$348
  4030  0011D0  D006               	goto	l5196
  4031  0011D2                     l5194:
  4032                           
  4033                           ; BSR set to: 0
  4034  0011D2  0E00               	movlw	0
  4035  0011D4  0100               	movlb	0	; () banked
  4036  0011D6  6F7B               	movwf	(_pf_read$348+1)& (0+255),b
  4037  0011D8  0E00               	movlw	0
  4038  0011DA  0100               	movlb	0	; () banked
  4039  0011DC  6F7A               	movwf	_pf_read$348& (0+255),b
  4040  0011DE                     l5196:
  4041                           
  4042                           ; BSR set to: 0
  4043  0011DE  0100               	movlb	0	; () banked
  4044  0011E0  C07B  F01E         	movff	_pf_read$348+1,disk_readp@buff+1
  4045  0011E4  0100               	movlb	0	; () banked
  4046  0011E6  C07A  F01D         	movff	_pf_read$348,disk_readp@buff
  4047  0011EA  0100               	movlb	0	; () banked
  4048  0011EC  EE20 F028          	lfsr	2,40
  4049  0011F0  0100               	movlb	0	; () banked
  4050  0011F2  518A               	movf	pf_read@fs& (0+255),w,b
  4051  0011F4  26D9               	addwf	fsr2l,f,c
  4052  0011F6  0100               	movlb	0	; () banked
  4053  0011F8  518B               	movf	(pf_read@fs+1)& (0+255),w,b
  4054  0011FA  22DA               	addwfc	fsr2h,f,c
  4055  0011FC  CFDE F01F          	movff	postinc2,disk_readp@lba
  4056  001200  CFDE F020          	movff	postinc2,disk_readp@lba+1
  4057  001204  CFDE F021          	movff	postinc2,disk_readp@lba+2
  4058  001208  CFDE F022          	movff	postinc2,disk_readp@lba+3
  4059  00120C  0100               	movlb	0	; () banked
  4060  00120E  EE20 F018          	lfsr	2,24
  4061  001212  0100               	movlb	0	; () banked
  4062  001214  518A               	movf	pf_read@fs& (0+255),w,b
  4063  001216  26D9               	addwf	fsr2l,f,c
  4064  001218  0100               	movlb	0	; () banked
  4065  00121A  518B               	movf	(pf_read@fs+1)& (0+255),w,b
  4066  00121C  22DA               	addwfc	fsr2h,f,c
  4067  00121E  CFDE F06E          	movff	postinc2,??_pf_read
  4068  001222  CFDD F06F          	movff	postdec2,??_pf_read+1
  4069  001226  0EFF               	movlw	255
  4070  001228  0100               	movlb	0	; () banked
  4071  00122A  156E               	andwf	??_pf_read& (0+255),w,b
  4072  00122C  6E23               	movwf	disk_readp@ofs,c
  4073  00122E  0E01               	movlw	1
  4074  001230  0100               	movlb	0	; () banked
  4075  001232  156F               	andwf	(??_pf_read+1)& (0+255),w,b
  4076  001234  6E24               	movwf	disk_readp@ofs+1,c
  4077  001236  C088  F025         	movff	pf_read@rcnt,disk_readp@cnt
  4078  00123A  C089  F026         	movff	pf_read@rcnt+1,disk_readp@cnt+1
  4079  00123E  EC71  F01A         	call	_disk_readp	;wreg free
  4080  001242  0100               	movlb	0	; () banked
  4081  001244  6F77               	movwf	pf_read@dr& (0+255),b
  4082                           
  4083                           ; BSR set to: 0
  4084                           ;pff.c: 614: if (dr) goto fr_abort;
  4085  001246  0100               	movlb	0	; () banked
  4086  001248  5177               	movf	pf_read@dr& (0+255),w,b
  4087  00124A  A4D8               	btfss	status,2,c
  4088  00124C  D032               	goto	l5216
  4089                           
  4090                           ; BSR set to: 0
  4091                           ;pff.c: 615: fs->fptr += rcnt; rbuff += rcnt;
  4092                           
  4093                           ; BSR set to: 0
  4094                           
  4095                           ; BSR set to: 0
  4096  00124E  0100               	movlb	0	; () banked
  4097  001250  EE20 F018          	lfsr	2,24
  4098  001254  0100               	movlb	0	; () banked
  4099  001256  518A               	movf	pf_read@fs& (0+255),w,b
  4100  001258  26D9               	addwf	fsr2l,f,c
  4101  00125A  0100               	movlb	0	; () banked
  4102  00125C  518B               	movf	(pf_read@fs+1)& (0+255),w,b
  4103  00125E  22DA               	addwfc	fsr2h,f,c
  4104  001260  0100               	movlb	0	; () banked
  4105  001262  5188               	movf	pf_read@rcnt& (0+255),w,b
  4106  001264  26DE               	addwf	postinc2,f,c
  4107  001266  0100               	movlb	0	; () banked
  4108  001268  5189               	movf	(pf_read@rcnt+1)& (0+255),w,b
  4109  00126A  22DE               	addwfc	postinc2,f,c
  4110  00126C  0E00               	movlw	0
  4111  00126E  22DE               	addwfc	postinc2,f,c
  4112  001270  22DD               	addwfc	postdec2,f,c
  4113  001272  52DD               	movf	postdec2,f,c
  4114  001274  52DD               	movf	postdec2,f,c
  4115                           
  4116                           ; BSR set to: 0
  4117  001276  0100               	movlb	0	; () banked
  4118  001278  5188               	movf	pf_read@rcnt& (0+255),w,b
  4119  00127A  0100               	movlb	0	; () banked
  4120  00127C  2778               	addwf	pf_read@rbuff& (0+255),f,b
  4121  00127E  0100               	movlb	0	; () banked
  4122  001280  5189               	movf	(pf_read@rcnt+1)& (0+255),w,b
  4123  001282  0100               	movlb	0	; () banked
  4124  001284  2379               	addwfc	(pf_read@rbuff+1)& (0+255),f,b
  4125                           
  4126                           ; BSR set to: 0
  4127                           ;pff.c: 616: btr -= rcnt; *br += rcnt;
  4128  001286  0100               	movlb	0	; () banked
  4129  001288  5188               	movf	pf_read@rcnt& (0+255),w,b
  4130  00128A  5E3D               	subwf	pf_read@btr,f,c
  4131  00128C  0100               	movlb	0	; () banked
  4132  00128E  5189               	movf	(pf_read@rcnt+1)& (0+255),w,b
  4133  001290  5A3E               	subwfb	pf_read@btr+1,f,c
  4134                           
  4135                           ; BSR set to: 0
  4136  001292  C03F  FFD9         	movff	pf_read@br,fsr2l
  4137  001296  C040  FFDA         	movff	pf_read@br+1,fsr2h
  4138  00129A  0100               	movlb	0	; () banked
  4139  00129C  5188               	movf	pf_read@rcnt& (0+255),w,b
  4140  00129E  26DE               	addwf	postinc2,f,c
  4141  0012A0  0100               	movlb	0	; () banked
  4142  0012A2  5189               	movf	(pf_read@rcnt+1)& (0+255),w,b
  4143  0012A4  22DD               	addwfc	postdec2,f,c
  4144  0012A6                     l5210:
  4145                           
  4146                           ; BSR set to: 0
  4147  0012A6  503E               	movf	pf_read@btr+1,w,c
  4148  0012A8  103D               	iorwf	pf_read@btr,w,c
  4149  0012AA  A4D8               	btfss	status,2,c
  4150  0012AC  D60B               	goto	l5162
  4151                           
  4152                           ; BSR set to: 0
  4153                           ;pff.c: 617: }
  4154                           ;pff.c: 619: return FR_OK;
  4155                           
  4156                           ; BSR set to: 0
  4157  0012AE  0E00               	movlw	0
  4158  0012B0  D00C               	goto	l177
  4159  0012B2                     l5216:
  4160                           
  4161                           ; BSR set to: 0
  4162                           ;pff.c: 622: fs->flag = 0;
  4163  0012B2  0100               	movlb	0	; () banked
  4164  0012B4  EE20 F002          	lfsr	2,2
  4165  0012B8  0100               	movlb	0	; () banked
  4166  0012BA  518A               	movf	pf_read@fs& (0+255),w,b
  4167  0012BC  26D9               	addwf	fsr2l,f,c
  4168  0012BE  0100               	movlb	0	; () banked
  4169  0012C0  518B               	movf	(pf_read@fs+1)& (0+255),w,b
  4170  0012C2  22DA               	addwfc	fsr2h,f,c
  4171  0012C4  0E00               	movlw	0
  4172  0012C6  6EDF               	movwf	indf2,c
  4173                           
  4174                           ; BSR set to: 0
  4175                           ;pff.c: 623: return FR_DISK_ERR;
  4176  0012C8  0E01               	movlw	1
  4177  0012CA                     l177:
  4178                           
  4179                           ; BSR set to: 0
  4180  0012CA  0012               	return	
  4181  0012CC                     __end_of_pf_read:
  4182                           	opt stack 0
  4183                           tblptru	equ	0xFF8
  4184                           tblptrh	equ	0xFF7
  4185                           tblptrl	equ	0xFF6
  4186                           tablat	equ	0xFF5
  4187                           intcon	equ	0xFF2
  4188                           postinc0	equ	0xFEE
  4189                           wreg	equ	0xFE8
  4190                           postdec1	equ	0xFE5
  4191                           fsr1h	equ	0xFE2
  4192                           fsr1l	equ	0xFE1
  4193                           indf2	equ	0xFDF
  4194                           postinc2	equ	0xFDE
  4195                           postdec2	equ	0xFDD
  4196                           fsr2h	equ	0xFDA
  4197                           fsr2l	equ	0xFD9
  4198                           status	equ	0xFD8
  4199                           
  4200 ;; *************** function ___llmod *****************
  4201 ;; Defined at:
  4202 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\llmod.c"
  4203 ;; Parameters:    Size  Location     Type
  4204 ;;  dividend        4   15[COMRAM] unsigned long 
  4205 ;;  divisor         4   19[COMRAM] unsigned long 
  4206 ;; Auto vars:     Size  Location     Type
  4207 ;;  counter         1   23[COMRAM] unsigned char 
  4208 ;; Return value:  Size  Location     Type
  4209 ;;                  4   15[COMRAM] unsigned long 
  4210 ;; Registers used:
  4211 ;;		wreg, status,2, status,0
  4212 ;; Tracked objects:
  4213 ;;		On entry : 0/0
  4214 ;;		On exit  : 0/0
  4215 ;;		Unchanged: 0/0
  4216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4217 ;;      Params:         8       0       0       0       0       0       0       0       0
  4218 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4219 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4220 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4221 ;;Total ram usage:        9 bytes
  4222 ;; Hardware stack levels used:    1
  4223 ;; Hardware stack levels required when called:    2
  4224 ;; This function calls:
  4225 ;;		Nothing
  4226 ;; This function is called by:
  4227 ;;		_pf_read
  4228 ;; This function uses a non-reentrant model
  4229 ;;
  4230                           
  4231                           	psect	text14
  4232  003A3C                     __ptext14:
  4233                           	opt stack 0
  4234  003A3C                     ___llmod:
  4235                           	opt stack 26
  4236                           
  4237                           ; BSR set to: 0
  4238                           ;incstack = 0
  4239  003A3C  5017               	movf	___llmod@divisor+3,w,c
  4240  003A3E  1014               	iorwf	___llmod@divisor,w,c
  4241  003A40  1015               	iorwf	___llmod@divisor+1,w,c
  4242  003A42  1016               	iorwf	___llmod@divisor+2,w,c
  4243  003A44  B4D8               	btfsc	status,2,c
  4244  003A46  D024               	goto	l1006
  4245  003A48  0E01               	movlw	1
  4246  003A4A  6E18               	movwf	___llmod@counter,c
  4247  003A4C  D006               	goto	l3440
  4248  003A4E                     l3438:
  4249  003A4E  90D8               	bcf	status,0,c
  4250  003A50  3614               	rlcf	___llmod@divisor,f,c
  4251  003A52  3615               	rlcf	___llmod@divisor+1,f,c
  4252  003A54  3616               	rlcf	___llmod@divisor+2,f,c
  4253  003A56  3617               	rlcf	___llmod@divisor+3,f,c
  4254  003A58  2A18               	incf	___llmod@counter,f,c
  4255  003A5A                     l3440:
  4256  003A5A  AE17               	btfss	___llmod@divisor+3,7,c
  4257  003A5C  D7F8               	goto	l3438
  4258  003A5E                     l3442:
  4259  003A5E  5014               	movf	___llmod@divisor,w,c
  4260  003A60  5C10               	subwf	___llmod@dividend,w,c
  4261  003A62  5015               	movf	___llmod@divisor+1,w,c
  4262  003A64  5811               	subwfb	___llmod@dividend+1,w,c
  4263  003A66  5016               	movf	___llmod@divisor+2,w,c
  4264  003A68  5812               	subwfb	___llmod@dividend+2,w,c
  4265  003A6A  5017               	movf	___llmod@divisor+3,w,c
  4266  003A6C  5813               	subwfb	___llmod@dividend+3,w,c
  4267  003A6E  A0D8               	btfss	status,0,c
  4268  003A70  D008               	goto	l3446
  4269  003A72  5014               	movf	___llmod@divisor,w,c
  4270  003A74  5E10               	subwf	___llmod@dividend,f,c
  4271  003A76  5015               	movf	___llmod@divisor+1,w,c
  4272  003A78  5A11               	subwfb	___llmod@dividend+1,f,c
  4273  003A7A  5016               	movf	___llmod@divisor+2,w,c
  4274  003A7C  5A12               	subwfb	___llmod@dividend+2,f,c
  4275  003A7E  5017               	movf	___llmod@divisor+3,w,c
  4276  003A80  5A13               	subwfb	___llmod@dividend+3,f,c
  4277  003A82                     l3446:
  4278  003A82  90D8               	bcf	status,0,c
  4279  003A84  3217               	rrcf	___llmod@divisor+3,f,c
  4280  003A86  3216               	rrcf	___llmod@divisor+2,f,c
  4281  003A88  3215               	rrcf	___llmod@divisor+1,f,c
  4282  003A8A  3214               	rrcf	___llmod@divisor,f,c
  4283  003A8C  2E18               	decfsz	___llmod@counter,f,c
  4284  003A8E  D7E7               	goto	l3442
  4285  003A90                     l1006:
  4286  003A90  C010  F010         	movff	___llmod@dividend,?___llmod
  4287  003A94  C011  F011         	movff	___llmod@dividend+1,?___llmod+1
  4288  003A98  C012  F012         	movff	___llmod@dividend+2,?___llmod+2
  4289  003A9C  C013  F013         	movff	___llmod@dividend+3,?___llmod+3
  4290  003AA0  0012               	return	
  4291  003AA2                     __end_of___llmod:
  4292                           	opt stack 0
  4293                           tblptru	equ	0xFF8
  4294                           tblptrh	equ	0xFF7
  4295                           tblptrl	equ	0xFF6
  4296                           tablat	equ	0xFF5
  4297                           intcon	equ	0xFF2
  4298                           postinc0	equ	0xFEE
  4299                           wreg	equ	0xFE8
  4300                           postdec1	equ	0xFE5
  4301                           fsr1h	equ	0xFE2
  4302                           fsr1l	equ	0xFE1
  4303                           indf2	equ	0xFDF
  4304                           postinc2	equ	0xFDE
  4305                           postdec2	equ	0xFDD
  4306                           fsr2h	equ	0xFDA
  4307                           fsr2l	equ	0xFD9
  4308                           status	equ	0xFD8
  4309                           
  4310 ;; *************** function _pf_lseek *****************
  4311 ;; Defined at:
  4312 ;;		line 704 in file "../../../PIC18F/pff.c"
  4313 ;; Parameters:    Size  Location     Type
  4314 ;;  ofs             4   58[COMRAM] unsigned long 
  4315 ;; Auto vars:     Size  Location     Type
  4316 ;;  clst            4   38[BANK0 ] unsigned long 
  4317 ;;  bcs             4   34[BANK0 ] unsigned long 
  4318 ;;  ifptr           4   30[BANK0 ] unsigned long 
  4319 ;;  sect            4   26[BANK0 ] unsigned long 
  4320 ;;  fs              2   42[BANK0 ] PTR struct _FATFS_
  4321 ;;		 -> Fs(44), NULL(0), 
  4322 ;; Return value:  Size  Location     Type
  4323 ;;                  1    wreg      enum E48
  4324 ;; Registers used:
  4325 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4326 ;; Tracked objects:
  4327 ;;		On entry : 0/0
  4328 ;;		On exit  : 0/0
  4329 ;;		Unchanged: 0/0
  4330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4331 ;;      Params:         4       0       0       0       0       0       0       0       0
  4332 ;;      Locals:         0      18       0       0       0       0       0       0       0
  4333 ;;      Temps:          0      12       0       0       0       0       0       0       0
  4334 ;;      Totals:         4      30       0       0       0       0       0       0       0
  4335 ;;Total ram usage:       34 bytes
  4336 ;; Hardware stack levels used:    1
  4337 ;; Hardware stack levels required when called:    7
  4338 ;; This function calls:
  4339 ;;		___lldiv
  4340 ;;		_clust2sect
  4341 ;;		_get_fat
  4342 ;; This function is called by:
  4343 ;;		_load_header
  4344 ;; This function uses a non-reentrant model
  4345 ;;
  4346                           
  4347                           	psect	text15
  4348  000808                     __ptext15:
  4349                           	opt stack 0
  4350  000808                     _pf_lseek:
  4351                           	opt stack 21
  4352                           
  4353                           ;pff.c: 708: DWORD clst;
  4354                           ;pff.c: 709: DWORD bcs, sect, ifptr;
  4355                           ;pff.c: 710: FATFS *fs = FatFs;
  4356                           
  4357                           ;incstack = 0
  4358  000808  0100               	movlb	0	; () banked
  4359  00080A  C049  F08B         	movff	_FatFs+1,pf_lseek@fs+1
  4360  00080E  0100               	movlb	0	; () banked
  4361  000810  C048  F08A         	movff	_FatFs,pf_lseek@fs
  4362                           
  4363                           ;pff.c: 713: if (!fs) return FR_NOT_ENABLED;
  4364  000814  0100               	movlb	0	; () banked
  4365  000816  518B               	movf	(pf_lseek@fs+1)& (0+255),w,b
  4366  000818  118A               	iorwf	pf_lseek@fs& (0+255),w,b
  4367  00081A  B4D8               	btfsc	status,2,c
  4368  00081C  D2C1               	goto	l201
  4369                           
  4370                           ; BSR set to: 0
  4371                           ;pff.c: 714: if (!(fs->flag & 0x01))
  4372                           
  4373                           ; BSR set to: 0
  4374                           
  4375                           ; BSR set to: 0
  4376                           ;	Return value of _pf_lseek is never used
  4377  00081E  0100               	movlb	0	; () banked
  4378  000820  EE20 F002          	lfsr	2,2
  4379  000824  0100               	movlb	0	; () banked
  4380  000826  518A               	movf	pf_lseek@fs& (0+255),w,b
  4381  000828  26D9               	addwf	fsr2l,f,c
  4382  00082A  0100               	movlb	0	; () banked
  4383  00082C  518B               	movf	(pf_lseek@fs+1)& (0+255),w,b
  4384  00082E  22DA               	addwfc	fsr2h,f,c
  4385  000830  50DF               	movf	indf2,w,c
  4386  000832  0100               	movlb	0	; () banked
  4387  000834  6F6E               	movwf	??_pf_lseek& (0+255),b
  4388  000836  0100               	movlb	0	; () banked
  4389  000838  A16E               	btfss	??_pf_lseek& (0+255),0,b
  4390  00083A  D2B2               	goto	l201
  4391                           
  4392                           ; BSR set to: 0
  4393                           ;pff.c: 717: if (ofs > fs->fsize) ofs = fs->fsize;
  4394                           
  4395                           ; BSR set to: 0
  4396                           
  4397                           ; BSR set to: 0
  4398                           ;pff.c: 715: return FR_NOT_OPENED;
  4399                           ;	Return value of _pf_lseek is never used
  4400  00083C  0100               	movlb	0	; () banked
  4401  00083E  EE20 F01C          	lfsr	2,28
  4402  000842  0100               	movlb	0	; () banked
  4403  000844  518A               	movf	pf_lseek@fs& (0+255),w,b
  4404  000846  26D9               	addwf	fsr2l,f,c
  4405  000848  0100               	movlb	0	; () banked
  4406  00084A  518B               	movf	(pf_lseek@fs+1)& (0+255),w,b
  4407  00084C  22DA               	addwfc	fsr2h,f,c
  4408  00084E  CFDE F06E          	movff	postinc2,??_pf_lseek
  4409  000852  CFDE F06F          	movff	postinc2,??_pf_lseek+1
  4410  000856  CFDE F070          	movff	postinc2,??_pf_lseek+2
  4411  00085A  CFDE F071          	movff	postinc2,??_pf_lseek+3
  4412  00085E  503B               	movf	pf_lseek@ofs,w,c
  4413  000860  0100               	movlb	0	; () banked
  4414  000862  5D6E               	subwf	??_pf_lseek& (0+255),w,b
  4415  000864  503C               	movf	pf_lseek@ofs+1,w,c
  4416  000866  0100               	movlb	0	; () banked
  4417  000868  596F               	subwfb	(??_pf_lseek+1)& (0+255),w,b
  4418  00086A  503D               	movf	pf_lseek@ofs+2,w,c
  4419  00086C  0100               	movlb	0	; () banked
  4420  00086E  5970               	subwfb	(??_pf_lseek+2)& (0+255),w,b
  4421  000870  503E               	movf	pf_lseek@ofs+3,w,c
  4422  000872  0100               	movlb	0	; () banked
  4423  000874  5971               	subwfb	(??_pf_lseek+3)& (0+255),w,b
  4424  000876  B0D8               	btfsc	status,0,c
  4425  000878  D011               	goto	l203
  4426                           
  4427                           ; BSR set to: 0
  4428  00087A  0100               	movlb	0	; () banked
  4429  00087C  EE20 F01C          	lfsr	2,28
  4430  000880  0100               	movlb	0	; () banked
  4431  000882  518A               	movf	pf_lseek@fs& (0+255),w,b
  4432  000884  26D9               	addwf	fsr2l,f,c
  4433  000886  0100               	movlb	0	; () banked
  4434  000888  518B               	movf	(pf_lseek@fs+1)& (0+255),w,b
  4435  00088A  22DA               	addwfc	fsr2h,f,c
  4436  00088C  CFDE F03B          	movff	postinc2,pf_lseek@ofs
  4437  000890  CFDE F03C          	movff	postinc2,pf_lseek@ofs+1
  4438  000894  CFDE F03D          	movff	postinc2,pf_lseek@ofs+2
  4439  000898  CFDE F03E          	movff	postinc2,pf_lseek@ofs+3
  4440  00089C                     l203:
  4441                           
  4442                           ; BSR set to: 0
  4443                           ;pff.c: 718: ifptr = fs->fptr;
  4444  00089C  0100               	movlb	0	; () banked
  4445  00089E  EE20 F018          	lfsr	2,24
  4446  0008A2  0100               	movlb	0	; () banked
  4447  0008A4  518A               	movf	pf_lseek@fs& (0+255),w,b
  4448  0008A6  26D9               	addwf	fsr2l,f,c
  4449  0008A8  0100               	movlb	0	; () banked
  4450  0008AA  518B               	movf	(pf_lseek@fs+1)& (0+255),w,b
  4451  0008AC  22DA               	addwfc	fsr2h,f,c
  4452  0008AE  0100               	movlb	0	; () banked
  4453  0008B0  CFDE F07E          	movff	postinc2,pf_lseek@ifptr
  4454  0008B4  0100               	movlb	0	; () banked
  4455  0008B6  CFDE F07F          	movff	postinc2,pf_lseek@ifptr+1
  4456  0008BA  0100               	movlb	0	; () banked
  4457  0008BC  CFDE F080          	movff	postinc2,pf_lseek@ifptr+2
  4458  0008C0  0100               	movlb	0	; () banked
  4459  0008C2  CFDE F081          	movff	postinc2,pf_lseek@ifptr+3
  4460                           
  4461                           ;pff.c: 719: fs->fptr = 0;
  4462  0008C6  0100               	movlb	0	; () banked
  4463  0008C8  EE20 F018          	lfsr	2,24
  4464  0008CC  0100               	movlb	0	; () banked
  4465  0008CE  518A               	movf	pf_lseek@fs& (0+255),w,b
  4466  0008D0  26D9               	addwf	fsr2l,f,c
  4467  0008D2  0100               	movlb	0	; () banked
  4468  0008D4  518B               	movf	(pf_lseek@fs+1)& (0+255),w,b
  4469  0008D6  22DA               	addwfc	fsr2h,f,c
  4470  0008D8  6ADE               	clrf	postinc2,c
  4471  0008DA  6ADE               	clrf	postinc2,c
  4472  0008DC  6ADE               	clrf	postinc2,c
  4473  0008DE  6ADD               	clrf	postdec2,c
  4474                           
  4475                           ; BSR set to: 0
  4476                           ;pff.c: 720: if (ofs > 0) {
  4477  0008E0  503E               	movf	pf_lseek@ofs+3,w,c
  4478  0008E2  103B               	iorwf	pf_lseek@ofs,w,c
  4479  0008E4  103C               	iorwf	pf_lseek@ofs+1,w,c
  4480  0008E6  103D               	iorwf	pf_lseek@ofs+2,w,c
  4481  0008E8  B4D8               	btfsc	status,2,c
  4482  0008EA  D25A               	goto	l201
  4483                           
  4484                           ; BSR set to: 0
  4485                           ;pff.c: 721: bcs = (DWORD)fs->csize * 512;
  4486  0008EC  0100               	movlb	0	; () banked
  4487  0008EE  EE20 F001          	lfsr	2,1
  4488  0008F2  0100               	movlb	0	; () banked
  4489  0008F4  518A               	movf	pf_lseek@fs& (0+255),w,b
  4490  0008F6  26D9               	addwf	fsr2l,f,c
  4491  0008F8  0100               	movlb	0	; () banked
  4492  0008FA  518B               	movf	(pf_lseek@fs+1)& (0+255),w,b
  4493  0008FC  22DA               	addwfc	fsr2h,f,c
  4494  0008FE  50DF               	movf	indf2,w,c
  4495  000900  0100               	movlb	0	; () banked
  4496  000902  6F6E               	movwf	??_pf_lseek& (0+255),b
  4497  000904  C06E  F06F         	movff	??_pf_lseek,??_pf_lseek+1
  4498  000908  0100               	movlb	0	; () banked
  4499  00090A  6B70               	clrf	(??_pf_lseek+2)& (0+255),b
  4500  00090C  6B71               	clrf	(??_pf_lseek+3)& (0+255),b
  4501  00090E  6B72               	clrf	(??_pf_lseek+4)& (0+255),b
  4502  000910  0E09               	movlw	9
  4503  000912                     u5935:
  4504  000912  90D8               	bcf	status,0,c
  4505  000914  0100               	movlb	0	; () banked
  4506  000916  376F               	rlcf	(??_pf_lseek+1)& (0+255),f,b
  4507  000918  3770               	rlcf	(??_pf_lseek+2)& (0+255),f,b
  4508  00091A  3771               	rlcf	(??_pf_lseek+3)& (0+255),f,b
  4509  00091C  3772               	rlcf	(??_pf_lseek+4)& (0+255),f,b
  4510  00091E  2EE8               	decfsz	wreg,f,c
  4511  000920  D7F8               	goto	u5935
  4512  000922  C06F  F082         	movff	??_pf_lseek+1,pf_lseek@bcs
  4513  000926  C070  F083         	movff	??_pf_lseek+2,pf_lseek@bcs+1
  4514  00092A  C071  F084         	movff	??_pf_lseek+3,pf_lseek@bcs+2
  4515  00092E  C072  F085         	movff	??_pf_lseek+4,pf_lseek@bcs+3
  4516                           
  4517                           ; BSR set to: 0
  4518                           ;pff.c: 722: if (ifptr > 0 &&
  4519                           ;pff.c: 723: (ofs - 1) / bcs >= (ifptr - 1) / bcs) {
  4520  000932  0100               	movlb	0	; () banked
  4521  000934  5181               	movf	(pf_lseek@ifptr+3)& (0+255),w,b
  4522  000936  117E               	iorwf	pf_lseek@ifptr& (0+255),w,b
  4523  000938  117F               	iorwf	(pf_lseek@ifptr+1)& (0+255),w,b
  4524  00093A  1180               	iorwf	(pf_lseek@ifptr+2)& (0+255),w,b
  4525  00093C  B4D8               	btfsc	status,2,c
  4526  00093E  D0D1               	goto	l5244
  4527                           
  4528                           ; BSR set to: 0
  4529  000940  0EFF               	movlw	255
  4530  000942  0100               	movlb	0	; () banked
  4531  000944  257E               	addwf	pf_lseek@ifptr& (0+255),w,b
  4532  000946  6E10               	movwf	___lldiv@dividend,c
  4533  000948  0EFF               	movlw	255
  4534  00094A  0100               	movlb	0	; () banked
  4535  00094C  217F               	addwfc	(pf_lseek@ifptr+1)& (0+255),w,b
  4536  00094E  6E11               	movwf	___lldiv@dividend+1,c
  4537  000950  0EFF               	movlw	255
  4538  000952  0100               	movlb	0	; () banked
  4539  000954  2180               	addwfc	(pf_lseek@ifptr+2)& (0+255),w,b
  4540  000956  6E12               	movwf	___lldiv@dividend+2,c
  4541  000958  0EFF               	movlw	255
  4542  00095A  0100               	movlb	0	; () banked
  4543  00095C  2181               	addwfc	(pf_lseek@ifptr+3)& (0+255),w,b
  4544  00095E  6E13               	movwf	___lldiv@dividend+3,c
  4545  000960  C082  F014         	movff	pf_lseek@bcs,___lldiv@divisor
  4546  000964  C083  F015         	movff	pf_lseek@bcs+1,___lldiv@divisor+1
  4547  000968  C084  F016         	movff	pf_lseek@bcs+2,___lldiv@divisor+2
  4548  00096C  C085  F017         	movff	pf_lseek@bcs+3,___lldiv@divisor+3
  4549  000970  EC71  F01C         	call	___lldiv	;wreg free
  4550  000974  C010  F06E         	movff	?___lldiv,??_pf_lseek
  4551  000978  C011  F06F         	movff	?___lldiv+1,??_pf_lseek+1
  4552  00097C  C012  F070         	movff	?___lldiv+2,??_pf_lseek+2
  4553  000980  C013  F071         	movff	?___lldiv+3,??_pf_lseek+3
  4554  000984  0EFF               	movlw	255
  4555  000986  243B               	addwf	pf_lseek@ofs,w,c
  4556  000988  6E10               	movwf	___lldiv@dividend,c
  4557  00098A  0EFF               	movlw	255
  4558  00098C  203C               	addwfc	pf_lseek@ofs+1,w,c
  4559  00098E  6E11               	movwf	___lldiv@dividend+1,c
  4560  000990  0EFF               	movlw	255
  4561  000992  203D               	addwfc	pf_lseek@ofs+2,w,c
  4562  000994  6E12               	movwf	___lldiv@dividend+2,c
  4563  000996  0EFF               	movlw	255
  4564  000998  203E               	addwfc	pf_lseek@ofs+3,w,c
  4565  00099A  6E13               	movwf	___lldiv@dividend+3,c
  4566  00099C  C082  F014         	movff	pf_lseek@bcs,___lldiv@divisor
  4567  0009A0  C083  F015         	movff	pf_lseek@bcs+1,___lldiv@divisor+1
  4568  0009A4  C084  F016         	movff	pf_lseek@bcs+2,___lldiv@divisor+2
  4569  0009A8  C085  F017         	movff	pf_lseek@bcs+3,___lldiv@divisor+3
  4570  0009AC  EC71  F01C         	call	___lldiv	;wreg free
  4571  0009B0  C010  F072         	movff	?___lldiv,??_pf_lseek+4
  4572  0009B4  C011  F073         	movff	?___lldiv+1,??_pf_lseek+5
  4573  0009B8  C012  F074         	movff	?___lldiv+2,??_pf_lseek+6
  4574  0009BC  C013  F075         	movff	?___lldiv+3,??_pf_lseek+7
  4575  0009C0  0100               	movlb	0	; () banked
  4576  0009C2  516E               	movf	??_pf_lseek& (0+255),w,b
  4577  0009C4  0100               	movlb	0	; () banked
  4578  0009C6  5D72               	subwf	(??_pf_lseek+4)& (0+255),w,b
  4579  0009C8  0100               	movlb	0	; () banked
  4580  0009CA  516F               	movf	(??_pf_lseek+1)& (0+255),w,b
  4581  0009CC  0100               	movlb	0	; () banked
  4582  0009CE  5973               	subwfb	(??_pf_lseek+5)& (0+255),w,b
  4583  0009D0  0100               	movlb	0	; () banked
  4584  0009D2  5170               	movf	(??_pf_lseek+2)& (0+255),w,b
  4585  0009D4  0100               	movlb	0	; () banked
  4586  0009D6  5974               	subwfb	(??_pf_lseek+6)& (0+255),w,b
  4587  0009D8  0100               	movlb	0	; () banked
  4588  0009DA  5171               	movf	(??_pf_lseek+3)& (0+255),w,b
  4589  0009DC  0100               	movlb	0	; () banked
  4590  0009DE  5975               	subwfb	(??_pf_lseek+7)& (0+255),w,b
  4591  0009E0  A0D8               	btfss	status,0,c
  4592  0009E2  D07F               	goto	l5244
  4593                           
  4594                           ; BSR set to: 0
  4595                           ;pff.c: 724: fs->fptr = (ifptr - 1) & ~(bcs - 1);
  4596  0009E4  0EFF               	movlw	255
  4597  0009E6  0100               	movlb	0	; () banked
  4598  0009E8  2582               	addwf	pf_lseek@bcs& (0+255),w,b
  4599  0009EA  0100               	movlb	0	; () banked
  4600  0009EC  6F6E               	movwf	??_pf_lseek& (0+255),b
  4601  0009EE  0EFF               	movlw	255
  4602  0009F0  0100               	movlb	0	; () banked
  4603  0009F2  2183               	addwfc	(pf_lseek@bcs+1)& (0+255),w,b
  4604  0009F4  0100               	movlb	0	; () banked
  4605  0009F6  6F6F               	movwf	(??_pf_lseek+1)& (0+255),b
  4606  0009F8  0EFF               	movlw	255
  4607  0009FA  0100               	movlb	0	; () banked
  4608  0009FC  2184               	addwfc	(pf_lseek@bcs+2)& (0+255),w,b
  4609  0009FE  0100               	movlb	0	; () banked
  4610  000A00  6F70               	movwf	(??_pf_lseek+2)& (0+255),b
  4611  000A02  0EFF               	movlw	255
  4612  000A04  0100               	movlb	0	; () banked
  4613  000A06  2185               	addwfc	(pf_lseek@bcs+3)& (0+255),w,b
  4614  000A08  0100               	movlb	0	; () banked
  4615  000A0A  6F71               	movwf	(??_pf_lseek+3)& (0+255),b
  4616  000A0C  0100               	movlb	0	; () banked
  4617  000A0E  1F6E               	comf	??_pf_lseek& (0+255),f,b
  4618  000A10  1F6F               	comf	(??_pf_lseek+1)& (0+255),f,b
  4619  000A12  1F70               	comf	(??_pf_lseek+2)& (0+255),f,b
  4620  000A14  1F71               	comf	(??_pf_lseek+3)& (0+255),f,b
  4621  000A16  0EFF               	movlw	255
  4622  000A18  0100               	movlb	0	; () banked
  4623  000A1A  257E               	addwf	pf_lseek@ifptr& (0+255),w,b
  4624  000A1C  0100               	movlb	0	; () banked
  4625  000A1E  6F72               	movwf	(??_pf_lseek+4)& (0+255),b
  4626  000A20  0EFF               	movlw	255
  4627  000A22  0100               	movlb	0	; () banked
  4628  000A24  217F               	addwfc	(pf_lseek@ifptr+1)& (0+255),w,b
  4629  000A26  0100               	movlb	0	; () banked
  4630  000A28  6F73               	movwf	(??_pf_lseek+5)& (0+255),b
  4631  000A2A  0EFF               	movlw	255
  4632  000A2C  0100               	movlb	0	; () banked
  4633  000A2E  2180               	addwfc	(pf_lseek@ifptr+2)& (0+255),w,b
  4634  000A30  0100               	movlb	0	; () banked
  4635  000A32  6F74               	movwf	(??_pf_lseek+6)& (0+255),b
  4636  000A34  0EFF               	movlw	255
  4637  000A36  0100               	movlb	0	; () banked
  4638  000A38  2181               	addwfc	(pf_lseek@ifptr+3)& (0+255),w,b
  4639  000A3A  0100               	movlb	0	; () banked
  4640  000A3C  6F75               	movwf	(??_pf_lseek+7)& (0+255),b
  4641  000A3E  0100               	movlb	0	; () banked
  4642  000A40  516E               	movf	??_pf_lseek& (0+255),w,b
  4643  000A42  0100               	movlb	0	; () banked
  4644  000A44  1572               	andwf	(??_pf_lseek+4)& (0+255),w,b
  4645  000A46  0100               	movlb	0	; () banked
  4646  000A48  6F76               	movwf	(??_pf_lseek+8)& (0+255),b
  4647  000A4A  0100               	movlb	0	; () banked
  4648  000A4C  516F               	movf	(??_pf_lseek+1)& (0+255),w,b
  4649  000A4E  0100               	movlb	0	; () banked
  4650  000A50  1573               	andwf	(??_pf_lseek+5)& (0+255),w,b
  4651  000A52  0100               	movlb	0	; () banked
  4652  000A54  6F77               	movwf	(??_pf_lseek+9)& (0+255),b
  4653  000A56  0100               	movlb	0	; () banked
  4654  000A58  5170               	movf	(??_pf_lseek+2)& (0+255),w,b
  4655  000A5A  0100               	movlb	0	; () banked
  4656  000A5C  1574               	andwf	(??_pf_lseek+6)& (0+255),w,b
  4657  000A5E  0100               	movlb	0	; () banked
  4658  000A60  6F78               	movwf	(??_pf_lseek+10)& (0+255),b
  4659  000A62  0100               	movlb	0	; () banked
  4660  000A64  5171               	movf	(??_pf_lseek+3)& (0+255),w,b
  4661  000A66  0100               	movlb	0	; () banked
  4662  000A68  1575               	andwf	(??_pf_lseek+7)& (0+255),w,b
  4663  000A6A  0100               	movlb	0	; () banked
  4664  000A6C  6F79               	movwf	(??_pf_lseek+11)& (0+255),b
  4665  000A6E  0100               	movlb	0	; () banked
  4666  000A70  EE20 F018          	lfsr	2,24
  4667  000A74  0100               	movlb	0	; () banked
  4668  000A76  518A               	movf	pf_lseek@fs& (0+255),w,b
  4669  000A78  26D9               	addwf	fsr2l,f,c
  4670  000A7A  0100               	movlb	0	; () banked
  4671  000A7C  518B               	movf	(pf_lseek@fs+1)& (0+255),w,b
  4672  000A7E  22DA               	addwfc	fsr2h,f,c
  4673  000A80  C076  FFDE         	movff	??_pf_lseek+8,postinc2
  4674  000A84  C077  FFDE         	movff	??_pf_lseek+9,postinc2
  4675  000A88  C078  FFDE         	movff	??_pf_lseek+10,postinc2
  4676  000A8C  C079  FFDD         	movff	??_pf_lseek+11,postdec2
  4677  000A90  06D9               	decf	fsr2l,f,c
  4678  000A92  06D9               	decf	fsr2l,f,c
  4679                           
  4680                           ;pff.c: 725: ofs -= fs->fptr;
  4681  000A94  0100               	movlb	0	; () banked
  4682  000A96  EE20 F018          	lfsr	2,24
  4683  000A9A  0100               	movlb	0	; () banked
  4684  000A9C  518A               	movf	pf_lseek@fs& (0+255),w,b
  4685  000A9E  26D9               	addwf	fsr2l,f,c
  4686  000AA0  0100               	movlb	0	; () banked
  4687  000AA2  518B               	movf	(pf_lseek@fs+1)& (0+255),w,b
  4688  000AA4  22DA               	addwfc	fsr2h,f,c
  4689  000AA6  50DE               	movf	postinc2,w,c
  4690  000AA8  5E3B               	subwf	pf_lseek@ofs,f,c
  4691  000AAA  50DE               	movf	postinc2,w,c
  4692  000AAC  5A3C               	subwfb	pf_lseek@ofs+1,f,c
  4693  000AAE  50DE               	movf	postinc2,w,c
  4694  000AB0  5A3D               	subwfb	pf_lseek@ofs+2,f,c
  4695  000AB2  50DD               	movf	postdec2,w,c
  4696  000AB4  5A3E               	subwfb	pf_lseek@ofs+3,f,c
  4697                           
  4698                           ;pff.c: 726: clst = fs->curr_clust;
  4699  000AB6  0100               	movlb	0	; () banked
  4700  000AB8  EE20 F024          	lfsr	2,36
  4701  000ABC  0100               	movlb	0	; () banked
  4702  000ABE  518A               	movf	pf_lseek@fs& (0+255),w,b
  4703  000AC0  26D9               	addwf	fsr2l,f,c
  4704  000AC2  0100               	movlb	0	; () banked
  4705  000AC4  518B               	movf	(pf_lseek@fs+1)& (0+255),w,b
  4706  000AC6  22DA               	addwfc	fsr2h,f,c
  4707  000AC8  0100               	movlb	0	; () banked
  4708  000ACA  CFDE F086          	movff	postinc2,pf_lseek@clst
  4709  000ACE  0100               	movlb	0	; () banked
  4710  000AD0  CFDE F087          	movff	postinc2,pf_lseek@clst+1
  4711  000AD4  0100               	movlb	0	; () banked
  4712  000AD6  CFDE F088          	movff	postinc2,pf_lseek@clst+2
  4713  000ADA  0100               	movlb	0	; () banked
  4714  000ADC  CFDE F089          	movff	postinc2,pf_lseek@clst+3
  4715                           
  4716                           ;pff.c: 727: } else {
  4717  000AE0  D0A6               	goto	l5256
  4718  000AE2                     l5244:
  4719                           
  4720                           ; BSR set to: 0
  4721                           ;pff.c: 728: clst = fs->org_clust;
  4722  000AE2  0100               	movlb	0	; () banked
  4723  000AE4  EE20 F020          	lfsr	2,32
  4724  000AE8  0100               	movlb	0	; () banked
  4725  000AEA  518A               	movf	pf_lseek@fs& (0+255),w,b
  4726  000AEC  26D9               	addwf	fsr2l,f,c
  4727  000AEE  0100               	movlb	0	; () banked
  4728  000AF0  518B               	movf	(pf_lseek@fs+1)& (0+255),w,b
  4729  000AF2  22DA               	addwfc	fsr2h,f,c
  4730  000AF4  0100               	movlb	0	; () banked
  4731  000AF6  CFDE F086          	movff	postinc2,pf_lseek@clst
  4732  000AFA  0100               	movlb	0	; () banked
  4733  000AFC  CFDE F087          	movff	postinc2,pf_lseek@clst+1
  4734  000B00  0100               	movlb	0	; () banked
  4735  000B02  CFDE F088          	movff	postinc2,pf_lseek@clst+2
  4736  000B06  0100               	movlb	0	; () banked
  4737  000B08  CFDE F089          	movff	postinc2,pf_lseek@clst+3
  4738                           
  4739                           ;pff.c: 729: fs->curr_clust = clst;
  4740  000B0C  0100               	movlb	0	; () banked
  4741  000B0E  EE20 F024          	lfsr	2,36
  4742  000B12  0100               	movlb	0	; () banked
  4743  000B14  518A               	movf	pf_lseek@fs& (0+255),w,b
  4744  000B16  26D9               	addwf	fsr2l,f,c
  4745  000B18  0100               	movlb	0	; () banked
  4746  000B1A  518B               	movf	(pf_lseek@fs+1)& (0+255),w,b
  4747  000B1C  22DA               	addwfc	fsr2h,f,c
  4748  000B1E  0100               	movlb	0	; () banked
  4749  000B20  C086  FFDE         	movff	pf_lseek@clst,postinc2
  4750  000B24  0100               	movlb	0	; () banked
  4751  000B26  C087  FFDE         	movff	pf_lseek@clst+1,postinc2
  4752  000B2A  0100               	movlb	0	; () banked
  4753  000B2C  C088  FFDE         	movff	pf_lseek@clst+2,postinc2
  4754  000B30  0100               	movlb	0	; () banked
  4755  000B32  C089  FFDE         	movff	pf_lseek@clst+3,postinc2
  4756  000B36  D07B               	goto	l5256
  4757  000B38                     l5246:
  4758                           
  4759                           ; BSR set to: 0
  4760                           ;pff.c: 732: clst = get_fat(clst);
  4761  000B38  C086  F02D         	movff	pf_lseek@clst,get_fat@clst
  4762  000B3C  C087  F02E         	movff	pf_lseek@clst+1,get_fat@clst+1
  4763  000B40  C088  F02F         	movff	pf_lseek@clst+2,get_fat@clst+2
  4764  000B44  C089  F030         	movff	pf_lseek@clst+3,get_fat@clst+3
  4765  000B48  ECC5  F00B         	call	_get_fat	;wreg free
  4766  000B4C  C02D  F086         	movff	?_get_fat,pf_lseek@clst
  4767  000B50  C02E  F087         	movff	?_get_fat+1,pf_lseek@clst+1
  4768  000B54  C02F  F088         	movff	?_get_fat+2,pf_lseek@clst+2
  4769  000B58  C030  F089         	movff	?_get_fat+3,pf_lseek@clst+3
  4770                           
  4771                           ;pff.c: 733: if (clst <= 1 || clst >= fs->max_clust) goto fe_abort;
  4772  000B5C  0E02               	movlw	2
  4773  000B5E  0100               	movlb	0	; () banked
  4774  000B60  5D86               	subwf	pf_lseek@clst& (0+255),w,b
  4775  000B62  0E00               	movlw	0
  4776  000B64  0100               	movlb	0	; () banked
  4777  000B66  5987               	subwfb	(pf_lseek@clst+1)& (0+255),w,b
  4778  000B68  0E00               	movlw	0
  4779  000B6A  0100               	movlb	0	; () banked
  4780  000B6C  5988               	subwfb	(pf_lseek@clst+2)& (0+255),w,b
  4781  000B6E  0E00               	movlw	0
  4782  000B70  0100               	movlb	0	; () banked
  4783  000B72  5989               	subwfb	(pf_lseek@clst+3)& (0+255),w,b
  4784  000B74  A0D8               	btfss	status,0,c
  4785  000B76  D109               	goto	l5274
  4786                           
  4787                           ; BSR set to: 0
  4788  000B78  0100               	movlb	0	; () banked
  4789  000B7A  EE20 F008          	lfsr	2,8
  4790  000B7E  0100               	movlb	0	; () banked
  4791  000B80  518A               	movf	pf_lseek@fs& (0+255),w,b
  4792  000B82  26D9               	addwf	fsr2l,f,c
  4793  000B84  0100               	movlb	0	; () banked
  4794  000B86  518B               	movf	(pf_lseek@fs+1)& (0+255),w,b
  4795  000B88  22DA               	addwfc	fsr2h,f,c
  4796  000B8A  CFDE F06E          	movff	postinc2,??_pf_lseek
  4797  000B8E  CFDE F06F          	movff	postinc2,??_pf_lseek+1
  4798  000B92  CFDE F070          	movff	postinc2,??_pf_lseek+2
  4799  000B96  CFDE F071          	movff	postinc2,??_pf_lseek+3
  4800  000B9A  0100               	movlb	0	; () banked
  4801  000B9C  516E               	movf	??_pf_lseek& (0+255),w,b
  4802  000B9E  0100               	movlb	0	; () banked
  4803  000BA0  5D86               	subwf	pf_lseek@clst& (0+255),w,b
  4804  000BA2  0100               	movlb	0	; () banked
  4805  000BA4  516F               	movf	(??_pf_lseek+1)& (0+255),w,b
  4806  000BA6  0100               	movlb	0	; () banked
  4807  000BA8  5987               	subwfb	(pf_lseek@clst+1)& (0+255),w,b
  4808  000BAA  0100               	movlb	0	; () banked
  4809  000BAC  5170               	movf	(??_pf_lseek+2)& (0+255),w,b
  4810  000BAE  0100               	movlb	0	; () banked
  4811  000BB0  5988               	subwfb	(pf_lseek@clst+2)& (0+255),w,b
  4812  000BB2  0100               	movlb	0	; () banked
  4813  000BB4  5171               	movf	(??_pf_lseek+3)& (0+255),w,b
  4814  000BB6  0100               	movlb	0	; () banked
  4815  000BB8  5989               	subwfb	(pf_lseek@clst+3)& (0+255),w,b
  4816  000BBA  B0D8               	btfsc	status,0,c
  4817  000BBC  D0E6               	goto	l5274
  4818                           
  4819                           ; BSR set to: 0
  4820                           ;pff.c: 734: fs->curr_clust = clst;
  4821                           
  4822                           ; BSR set to: 0
  4823                           
  4824                           ; BSR set to: 0
  4825  000BBE  0100               	movlb	0	; () banked
  4826  000BC0  EE20 F024          	lfsr	2,36
  4827  000BC4  0100               	movlb	0	; () banked
  4828  000BC6  518A               	movf	pf_lseek@fs& (0+255),w,b
  4829  000BC8  26D9               	addwf	fsr2l,f,c
  4830  000BCA  0100               	movlb	0	; () banked
  4831  000BCC  518B               	movf	(pf_lseek@fs+1)& (0+255),w,b
  4832  000BCE  22DA               	addwfc	fsr2h,f,c
  4833  000BD0  0100               	movlb	0	; () banked
  4834  000BD2  C086  FFDE         	movff	pf_lseek@clst,postinc2
  4835  000BD6  0100               	movlb	0	; () banked
  4836  000BD8  C087  FFDE         	movff	pf_lseek@clst+1,postinc2
  4837  000BDC  0100               	movlb	0	; () banked
  4838  000BDE  C088  FFDE         	movff	pf_lseek@clst+2,postinc2
  4839  000BE2  0100               	movlb	0	; () banked
  4840  000BE4  C089  FFDE         	movff	pf_lseek@clst+3,postinc2
  4841                           
  4842                           ;pff.c: 735: fs->fptr += bcs;
  4843  000BE8  0100               	movlb	0	; () banked
  4844  000BEA  EE20 F018          	lfsr	2,24
  4845  000BEE  0100               	movlb	0	; () banked
  4846  000BF0  518A               	movf	pf_lseek@fs& (0+255),w,b
  4847  000BF2  26D9               	addwf	fsr2l,f,c
  4848  000BF4  0100               	movlb	0	; () banked
  4849  000BF6  518B               	movf	(pf_lseek@fs+1)& (0+255),w,b
  4850  000BF8  22DA               	addwfc	fsr2h,f,c
  4851  000BFA  0100               	movlb	0	; () banked
  4852  000BFC  5182               	movf	pf_lseek@bcs& (0+255),w,b
  4853  000BFE  26DE               	addwf	postinc2,f,c
  4854  000C00  0100               	movlb	0	; () banked
  4855  000C02  5183               	movf	(pf_lseek@bcs+1)& (0+255),w,b
  4856  000C04  22DE               	addwfc	postinc2,f,c
  4857  000C06  0100               	movlb	0	; () banked
  4858  000C08  5184               	movf	(pf_lseek@bcs+2)& (0+255),w,b
  4859  000C0A  22DE               	addwfc	postinc2,f,c
  4860  000C0C  0100               	movlb	0	; () banked
  4861  000C0E  5185               	movf	(pf_lseek@bcs+3)& (0+255),w,b
  4862  000C10  22DD               	addwfc	postdec2,f,c
  4863  000C12  52DD               	movf	postdec2,f,c
  4864  000C14  52DD               	movf	postdec2,f,c
  4865                           
  4866                           ; BSR set to: 0
  4867                           ;pff.c: 736: ofs -= bcs;
  4868  000C16  0100               	movlb	0	; () banked
  4869  000C18  5182               	movf	pf_lseek@bcs& (0+255),w,b
  4870  000C1A  5E3B               	subwf	pf_lseek@ofs,f,c
  4871  000C1C  0100               	movlb	0	; () banked
  4872  000C1E  5183               	movf	(pf_lseek@bcs+1)& (0+255),w,b
  4873  000C20  5A3C               	subwfb	pf_lseek@ofs+1,f,c
  4874  000C22  0100               	movlb	0	; () banked
  4875  000C24  5184               	movf	(pf_lseek@bcs+2)& (0+255),w,b
  4876  000C26  5A3D               	subwfb	pf_lseek@ofs+2,f,c
  4877  000C28  0100               	movlb	0	; () banked
  4878  000C2A  5185               	movf	(pf_lseek@bcs+3)& (0+255),w,b
  4879  000C2C  5A3E               	subwfb	pf_lseek@ofs+3,f,c
  4880  000C2E                     l5256:
  4881                           
  4882                           ; BSR set to: 0
  4883  000C2E  503B               	movf	pf_lseek@ofs,w,c
  4884  000C30  0100               	movlb	0	; () banked
  4885  000C32  5D82               	subwf	pf_lseek@bcs& (0+255),w,b
  4886  000C34  503C               	movf	pf_lseek@ofs+1,w,c
  4887  000C36  0100               	movlb	0	; () banked
  4888  000C38  5983               	subwfb	(pf_lseek@bcs+1)& (0+255),w,b
  4889  000C3A  503D               	movf	pf_lseek@ofs+2,w,c
  4890  000C3C  0100               	movlb	0	; () banked
  4891  000C3E  5984               	subwfb	(pf_lseek@bcs+2)& (0+255),w,b
  4892  000C40  503E               	movf	pf_lseek@ofs+3,w,c
  4893  000C42  0100               	movlb	0	; () banked
  4894  000C44  5985               	subwfb	(pf_lseek@bcs+3)& (0+255),w,b
  4895  000C46  A0D8               	btfss	status,0,c
  4896  000C48  D777               	goto	l5246
  4897                           
  4898                           ; BSR set to: 0
  4899                           ;pff.c: 737: }
  4900                           ;pff.c: 738: fs->fptr += ofs;
  4901                           
  4902                           ; BSR set to: 0
  4903  000C4A  0100               	movlb	0	; () banked
  4904  000C4C  EE20 F018          	lfsr	2,24
  4905  000C50  0100               	movlb	0	; () banked
  4906  000C52  518A               	movf	pf_lseek@fs& (0+255),w,b
  4907  000C54  26D9               	addwf	fsr2l,f,c
  4908  000C56  0100               	movlb	0	; () banked
  4909  000C58  518B               	movf	(pf_lseek@fs+1)& (0+255),w,b
  4910  000C5A  22DA               	addwfc	fsr2h,f,c
  4911  000C5C  503B               	movf	pf_lseek@ofs,w,c
  4912  000C5E  26DE               	addwf	postinc2,f,c
  4913  000C60  503C               	movf	pf_lseek@ofs+1,w,c
  4914  000C62  22DE               	addwfc	postinc2,f,c
  4915  000C64  503D               	movf	pf_lseek@ofs+2,w,c
  4916  000C66  22DE               	addwfc	postinc2,f,c
  4917  000C68  503E               	movf	pf_lseek@ofs+3,w,c
  4918  000C6A  22DD               	addwfc	postdec2,f,c
  4919  000C6C  52DD               	movf	postdec2,f,c
  4920  000C6E  52DD               	movf	postdec2,f,c
  4921                           
  4922                           ; BSR set to: 0
  4923                           ;pff.c: 739: sect = clust2sect(clst);
  4924  000C70  C086  F01C         	movff	pf_lseek@clst,clust2sect@clst
  4925  000C74  C087  F01D         	movff	pf_lseek@clst+1,clust2sect@clst+1
  4926  000C78  C088  F01E         	movff	pf_lseek@clst+2,clust2sect@clst+2
  4927  000C7C  C089  F01F         	movff	pf_lseek@clst+3,clust2sect@clst+3
  4928  000C80  ECDE  F01A         	call	_clust2sect	;wreg free
  4929  000C84  C01C  F07A         	movff	?_clust2sect,pf_lseek@sect
  4930  000C88  C01D  F07B         	movff	?_clust2sect+1,pf_lseek@sect+1
  4931  000C8C  C01E  F07C         	movff	?_clust2sect+2,pf_lseek@sect+2
  4932  000C90  C01F  F07D         	movff	?_clust2sect+3,pf_lseek@sect+3
  4933                           
  4934                           ;pff.c: 740: if (!sect) goto fe_abort;
  4935  000C94  0100               	movlb	0	; () banked
  4936  000C96  517D               	movf	(pf_lseek@sect+3)& (0+255),w,b
  4937  000C98  117A               	iorwf	pf_lseek@sect& (0+255),w,b
  4938  000C9A  117B               	iorwf	(pf_lseek@sect+1)& (0+255),w,b
  4939  000C9C  117C               	iorwf	(pf_lseek@sect+2)& (0+255),w,b
  4940  000C9E  B4D8               	btfsc	status,2,c
  4941  000CA0  D074               	goto	l5274
  4942                           
  4943                           ; BSR set to: 0
  4944                           ;pff.c: 741: fs->csect = (BYTE)(ofs / 512);
  4945                           
  4946                           ; BSR set to: 0
  4947                           
  4948                           ; BSR set to: 0
  4949  000CA2  0100               	movlb	0	; () banked
  4950  000CA4  EE20 F003          	lfsr	2,3
  4951  000CA8  0100               	movlb	0	; () banked
  4952  000CAA  518A               	movf	pf_lseek@fs& (0+255),w,b
  4953  000CAC  26D9               	addwf	fsr2l,f,c
  4954  000CAE  0100               	movlb	0	; () banked
  4955  000CB0  518B               	movf	(pf_lseek@fs+1)& (0+255),w,b
  4956  000CB2  22DA               	addwfc	fsr2h,f,c
  4957  000CB4  C03B  F06E         	movff	pf_lseek@ofs,??_pf_lseek
  4958  000CB8  C03C  F06F         	movff	pf_lseek@ofs+1,??_pf_lseek+1
  4959  000CBC  C03D  F070         	movff	pf_lseek@ofs+2,??_pf_lseek+2
  4960  000CC0  C03E  F071         	movff	pf_lseek@ofs+3,??_pf_lseek+3
  4961  000CC4  0E0A               	movlw	10
  4962  000CC6  D006               	goto	u6000
  4963  000CC8                     u6005:
  4964  000CC8  0100               	movlb	0	; () banked
  4965  000CCA  90D8               	bcf	status,0,c
  4966  000CCC  3371               	rrcf	(??_pf_lseek+3)& (0+255),f,b
  4967  000CCE  3370               	rrcf	(??_pf_lseek+2)& (0+255),f,b
  4968  000CD0  336F               	rrcf	(??_pf_lseek+1)& (0+255),f,b
  4969  000CD2  336E               	rrcf	??_pf_lseek& (0+255),f,b
  4970  000CD4                     u6000:
  4971  000CD4  2EE8               	decfsz	wreg,f,c
  4972  000CD6  D7F8               	goto	u6005
  4973  000CD8  0100               	movlb	0	; () banked
  4974  000CDA  516E               	movf	??_pf_lseek& (0+255),w,b
  4975  000CDC  6EDF               	movwf	indf2,c
  4976                           
  4977                           ; BSR set to: 0
  4978                           ;pff.c: 742: if (ofs % 512)
  4979  000CDE  0EFF               	movlw	255
  4980  000CE0  143B               	andwf	pf_lseek@ofs,w,c
  4981  000CE2  0100               	movlb	0	; () banked
  4982  000CE4  6F6E               	movwf	??_pf_lseek& (0+255),b
  4983  000CE6  0E01               	movlw	1
  4984  000CE8  143C               	andwf	pf_lseek@ofs+1,w,c
  4985  000CEA  0100               	movlb	0	; () banked
  4986  000CEC  6F6F               	movwf	(??_pf_lseek+1)& (0+255),b
  4987  000CEE  0E00               	movlw	0
  4988  000CF0  143D               	andwf	pf_lseek@ofs+2,w,c
  4989  000CF2  0100               	movlb	0	; () banked
  4990  000CF4  6F70               	movwf	(??_pf_lseek+2)& (0+255),b
  4991  000CF6  0E00               	movlw	0
  4992  000CF8  143E               	andwf	pf_lseek@ofs+3,w,c
  4993  000CFA  0100               	movlb	0	; () banked
  4994  000CFC  6F71               	movwf	(??_pf_lseek+3)& (0+255),b
  4995  000CFE  0100               	movlb	0	; () banked
  4996  000D00  5171               	movf	(??_pf_lseek+3)& (0+255),w,b
  4997  000D02  116E               	iorwf	??_pf_lseek& (0+255),w,b
  4998  000D04  116F               	iorwf	(??_pf_lseek+1)& (0+255),w,b
  4999  000D06  1170               	iorwf	(??_pf_lseek+2)& (0+255),w,b
  5000  000D08  B4D8               	btfsc	status,2,c
  5001  000D0A  D04A               	goto	l201
  5002                           
  5003                           ; BSR set to: 0
  5004                           ;pff.c: 743: fs->dsect = sect + fs->csect++;
  5005  000D0C  0100               	movlb	0	; () banked
  5006  000D0E  EE20 F003          	lfsr	2,3
  5007  000D12  0100               	movlb	0	; () banked
  5008  000D14  518A               	movf	pf_lseek@fs& (0+255),w,b
  5009  000D16  26D9               	addwf	fsr2l,f,c
  5010  000D18  0100               	movlb	0	; () banked
  5011  000D1A  518B               	movf	(pf_lseek@fs+1)& (0+255),w,b
  5012  000D1C  22DA               	addwfc	fsr2h,f,c
  5013  000D1E  50DF               	movf	indf2,w,c
  5014  000D20  0100               	movlb	0	; () banked
  5015  000D22  6F6E               	movwf	??_pf_lseek& (0+255),b
  5016  000D24  0100               	movlb	0	; () banked
  5017  000D26  516E               	movf	??_pf_lseek& (0+255),w,b
  5018  000D28  0100               	movlb	0	; () banked
  5019  000D2A  257A               	addwf	pf_lseek@sect& (0+255),w,b
  5020  000D2C  0100               	movlb	0	; () banked
  5021  000D2E  6F6F               	movwf	(??_pf_lseek+1)& (0+255),b
  5022  000D30  0E00               	movlw	0
  5023  000D32  0100               	movlb	0	; () banked
  5024  000D34  217B               	addwfc	(pf_lseek@sect+1)& (0+255),w,b
  5025  000D36  0100               	movlb	0	; () banked
  5026  000D38  6F70               	movwf	(??_pf_lseek+2)& (0+255),b
  5027  000D3A  0E00               	movlw	0
  5028  000D3C  0100               	movlb	0	; () banked
  5029  000D3E  217C               	addwfc	(pf_lseek@sect+2)& (0+255),w,b
  5030  000D40  0100               	movlb	0	; () banked
  5031  000D42  6F71               	movwf	(??_pf_lseek+3)& (0+255),b
  5032  000D44  0E00               	movlw	0
  5033  000D46  0100               	movlb	0	; () banked
  5034  000D48  217D               	addwfc	(pf_lseek@sect+3)& (0+255),w,b
  5035  000D4A  0100               	movlb	0	; () banked
  5036  000D4C  6F72               	movwf	(??_pf_lseek+4)& (0+255),b
  5037  000D4E  0100               	movlb	0	; () banked
  5038  000D50  EE20 F028          	lfsr	2,40
  5039  000D54  0100               	movlb	0	; () banked
  5040  000D56  518A               	movf	pf_lseek@fs& (0+255),w,b
  5041  000D58  26D9               	addwf	fsr2l,f,c
  5042  000D5A  0100               	movlb	0	; () banked
  5043  000D5C  518B               	movf	(pf_lseek@fs+1)& (0+255),w,b
  5044  000D5E  22DA               	addwfc	fsr2h,f,c
  5045  000D60  C06F  FFDE         	movff	??_pf_lseek+1,postinc2
  5046  000D64  C070  FFDE         	movff	??_pf_lseek+2,postinc2
  5047  000D68  C071  FFDE         	movff	??_pf_lseek+3,postinc2
  5048  000D6C  C072  FFDD         	movff	??_pf_lseek+4,postdec2
  5049  000D70  06D9               	decf	fsr2l,f,c
  5050  000D72  06D9               	decf	fsr2l,f,c
  5051  000D74  0100               	movlb	0	; () banked
  5052  000D76  EE20 F003          	lfsr	2,3
  5053  000D7A  0100               	movlb	0	; () banked
  5054  000D7C  518A               	movf	pf_lseek@fs& (0+255),w,b
  5055  000D7E  26D9               	addwf	fsr2l,f,c
  5056  000D80  0100               	movlb	0	; () banked
  5057  000D82  518B               	movf	(pf_lseek@fs+1)& (0+255),w,b
  5058  000D84  22DA               	addwfc	fsr2h,f,c
  5059  000D86  2ADF               	incf	indf2,f,c
  5060  000D88  D00B               	goto	l201
  5061  000D8A                     l5274:
  5062                           
  5063                           ; BSR set to: 0
  5064                           ;pff.c: 749: fs->flag = 0;
  5065  000D8A  0100               	movlb	0	; () banked
  5066  000D8C  EE20 F002          	lfsr	2,2
  5067  000D90  0100               	movlb	0	; () banked
  5068  000D92  518A               	movf	pf_lseek@fs& (0+255),w,b
  5069  000D94  26D9               	addwf	fsr2l,f,c
  5070  000D96  0100               	movlb	0	; () banked
  5071  000D98  518B               	movf	(pf_lseek@fs+1)& (0+255),w,b
  5072  000D9A  22DA               	addwfc	fsr2h,f,c
  5073  000D9C  0E00               	movlw	0
  5074  000D9E  6EDF               	movwf	indf2,c
  5075  000DA0                     l201:
  5076                           
  5077                           ; BSR set to: 0
  5078  000DA0  0012               	return	
  5079  000DA2                     __end_of_pf_lseek:
  5080                           	opt stack 0
  5081                           tblptru	equ	0xFF8
  5082                           tblptrh	equ	0xFF7
  5083                           tblptrl	equ	0xFF6
  5084                           tablat	equ	0xFF5
  5085                           intcon	equ	0xFF2
  5086                           postinc0	equ	0xFEE
  5087                           wreg	equ	0xFE8
  5088                           postdec1	equ	0xFE5
  5089                           fsr1h	equ	0xFE2
  5090                           fsr1l	equ	0xFE1
  5091                           indf2	equ	0xFDF
  5092                           postinc2	equ	0xFDE
  5093                           postdec2	equ	0xFDD
  5094                           fsr2h	equ	0xFDA
  5095                           fsr2l	equ	0xFD9
  5096                           status	equ	0xFD8
  5097                           
  5098 ;; *************** function _pf_readdir *****************
  5099 ;; Defined at:
  5100 ;;		line 805 in file "../../../PIC18F/pff.c"
  5101 ;; Parameters:    Size  Location     Type
  5102 ;;  dj              2   31[BANK0 ] PTR struct _Dir_
  5103 ;;		 -> Dir1(16), 
  5104 ;;  fno             2   33[BANK0 ] PTR struct _FILINFO_
  5105 ;;		 -> Fno(22), 
  5106 ;; Auto vars:     Size  Location     Type
  5107 ;;  dir            32   35[BANK0 ] unsigned char [32]
  5108 ;;  sp             12   67[BANK0 ] unsigned char [12]
  5109 ;;  fs              2   79[BANK0 ] PTR struct _FATFS_
  5110 ;;		 -> Fs(44), NULL(0), 
  5111 ;;  res             1   81[BANK0 ] enum E48
  5112 ;; Return value:  Size  Location     Type
  5113 ;;                  1    wreg      enum E48
  5114 ;; Registers used:
  5115 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5116 ;; Tracked objects:
  5117 ;;		On entry : 0/0
  5118 ;;		On exit  : 0/0
  5119 ;;		Unchanged: 0/0
  5120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5121 ;;      Params:         0       4       0       0       0       0       0       0       0
  5122 ;;      Locals:         0      47       0       0       0       0       0       0       0
  5123 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5124 ;;      Totals:         0      51       0       0       0       0       0       0       0
  5125 ;;Total ram usage:       51 bytes
  5126 ;; Hardware stack levels used:    1
  5127 ;; Hardware stack levels required when called:    9
  5128 ;; This function calls:
  5129 ;;		_dir_next
  5130 ;;		_dir_read
  5131 ;;		_dir_rewind
  5132 ;;		_get_fileinfo
  5133 ;; This function is called by:
  5134 ;;		_main
  5135 ;; This function uses a non-reentrant model
  5136 ;;
  5137                           
  5138                           	psect	text16
  5139  0031FE                     __ptext16:
  5140                           	opt stack 0
  5141  0031FE                     _pf_readdir:
  5142                           	opt stack 21
  5143                           
  5144                           ;pff.c: 810: FRESULT res;
  5145                           ;pff.c: 811: BYTE sp[12], dir[32];
  5146                           ;pff.c: 812: FATFS *fs = FatFs;
  5147                           
  5148                           ; BSR set to: 0
  5149                           ;incstack = 0
  5150  0031FE  0100               	movlb	0	; () banked
  5151  003200  C049  F0B0         	movff	_FatFs+1,pf_readdir@fs+1
  5152  003204  0100               	movlb	0	; () banked
  5153  003206  C048  F0AF         	movff	_FatFs,pf_readdir@fs
  5154                           
  5155                           ;pff.c: 815: if (!fs) {
  5156  00320A  0100               	movlb	0	; () banked
  5157  00320C  51B0               	movf	(pf_readdir@fs+1)& (0+255),w,b
  5158  00320E  11AF               	iorwf	pf_readdir@fs& (0+255),w,b
  5159  003210  A4D8               	btfss	status,2,c
  5160  003212  D002               	goto	l5750
  5161                           
  5162                           ; BSR set to: 0
  5163                           ;pff.c: 816: res = FR_NOT_ENABLED;
  5164  003214  0E06               	movlw	6
  5165  003216  D079               	goto	L8
  5166  003218                     l5750:
  5167                           
  5168                           ; BSR set to: 0
  5169                           ;pff.c: 818: fs->buf = dir;
  5170  003218  0100               	movlb	0	; () banked
  5171  00321A  EE20 F006          	lfsr	2,6
  5172  00321E  0100               	movlb	0	; () banked
  5173  003220  51AF               	movf	pf_readdir@fs& (0+255),w,b
  5174  003222  26D9               	addwf	fsr2l,f,c
  5175  003224  0100               	movlb	0	; () banked
  5176  003226  51B0               	movf	(pf_readdir@fs+1)& (0+255),w,b
  5177  003228  22DA               	addwfc	fsr2h,f,c
  5178  00322A  0100               	movlb	0	; () banked
  5179  00322C  0E83               	movlw	low pf_readdir@dir
  5180  00322E  6EDE               	movwf	postinc2,c
  5181  003230  0100               	movlb	0	; () banked
  5182  003232  0E00               	movlw	high pf_readdir@dir
  5183  003234  6EDD               	movwf	postdec2,c
  5184                           
  5185                           ;pff.c: 819: dj->fn = sp;
  5186  003236  0100               	movlb	0	; () banked
  5187  003238  EE20 F002          	lfsr	2,2
  5188  00323C  0100               	movlb	0	; () banked
  5189  00323E  517F               	movf	pf_readdir@dj& (0+255),w,b
  5190  003240  26D9               	addwf	fsr2l,f,c
  5191  003242  0100               	movlb	0	; () banked
  5192  003244  5180               	movf	(pf_readdir@dj+1)& (0+255),w,b
  5193  003246  22DA               	addwfc	fsr2h,f,c
  5194  003248  0100               	movlb	0	; () banked
  5195  00324A  0EA3               	movlw	low pf_readdir@sp
  5196  00324C  6EDE               	movwf	postinc2,c
  5197  00324E  0100               	movlb	0	; () banked
  5198  003250  0E00               	movlw	high pf_readdir@sp
  5199  003252  6EDD               	movwf	postdec2,c
  5200                           
  5201                           ; BSR set to: 0
  5202                           ;pff.c: 820: if (!fno) {
  5203  003254  0100               	movlb	0	; () banked
  5204  003256  5182               	movf	(pf_readdir@fno+1)& (0+255),w,b
  5205  003258  1181               	iorwf	pf_readdir@fno& (0+255),w,b
  5206  00325A  A4D8               	btfss	status,2,c
  5207  00325C  D009               	goto	l5756
  5208                           
  5209                           ; BSR set to: 0
  5210                           ;pff.c: 821: res = dir_rewind(dj);
  5211  00325E  0100               	movlb	0	; () banked
  5212  003260  C080  F02C         	movff	pf_readdir@dj+1,dir_rewind@dj+1
  5213  003264  0100               	movlb	0	; () banked
  5214  003266  C07F  F02B         	movff	pf_readdir@dj,dir_rewind@dj
  5215  00326A  ECCD  F017         	call	_dir_rewind	;wreg free
  5216  00326E  D04D               	goto	L8
  5217  003270                     l5756:
  5218                           
  5219                           ; BSR set to: 0
  5220                           ;pff.c: 823: res = dir_read(dj);
  5221  003270  0100               	movlb	0	; () banked
  5222  003272  C080  F045         	movff	pf_readdir@dj+1,dir_read@dj+1
  5223  003276  0100               	movlb	0	; () banked
  5224  003278  C07F  F044         	movff	pf_readdir@dj,dir_read@dj
  5225  00327C  EC88  F016         	call	_dir_read	;wreg free
  5226  003280  0100               	movlb	0	; () banked
  5227  003282  6FB1               	movwf	pf_readdir@res& (0+255),b
  5228                           
  5229                           ; BSR set to: 0
  5230                           ;pff.c: 824: if (res == FR_NO_FILE) {
  5231  003284  0100               	movlb	0	; () banked
  5232  003286  51B1               	movf	pf_readdir@res& (0+255),w,b
  5233  003288  0A03               	xorlw	3
  5234  00328A  A4D8               	btfss	status,2,c
  5235  00328C  D010               	goto	l5764
  5236                           
  5237                           ; BSR set to: 0
  5238                           ;pff.c: 825: dj->sect = 0;
  5239  00328E  0100               	movlb	0	; () banked
  5240  003290  EE20 F00C          	lfsr	2,12
  5241  003294  0100               	movlb	0	; () banked
  5242  003296  517F               	movf	pf_readdir@dj& (0+255),w,b
  5243  003298  26D9               	addwf	fsr2l,f,c
  5244  00329A  0100               	movlb	0	; () banked
  5245  00329C  5180               	movf	(pf_readdir@dj+1)& (0+255),w,b
  5246  00329E  22DA               	addwfc	fsr2h,f,c
  5247  0032A0  6ADE               	clrf	postinc2,c
  5248  0032A2  6ADE               	clrf	postinc2,c
  5249  0032A4  6ADE               	clrf	postinc2,c
  5250  0032A6  6ADD               	clrf	postdec2,c
  5251                           
  5252                           ; BSR set to: 0
  5253                           ;pff.c: 826: res = FR_OK;
  5254  0032A8  0E00               	movlw	0
  5255  0032AA  0100               	movlb	0	; () banked
  5256  0032AC  6FB1               	movwf	pf_readdir@res& (0+255),b
  5257  0032AE                     l5764:
  5258                           
  5259                           ; BSR set to: 0
  5260                           ;pff.c: 827: }
  5261                           ;pff.c: 828: if (res == FR_OK) {
  5262  0032AE  0100               	movlb	0	; () banked
  5263  0032B0  67B1               	tstfsz	pf_readdir@res& (0+255),b
  5264  0032B2  D02D               	goto	l5776
  5265                           
  5266                           ; BSR set to: 0
  5267                           ;pff.c: 829: get_fileinfo(dj, fno);
  5268  0032B4  0100               	movlb	0	; () banked
  5269  0032B6  C080  F011         	movff	pf_readdir@dj+1,get_fileinfo@dj+1
  5270  0032BA  0100               	movlb	0	; () banked
  5271  0032BC  C07F  F010         	movff	pf_readdir@dj,get_fileinfo@dj
  5272  0032C0  0100               	movlb	0	; () banked
  5273  0032C2  C082  F013         	movff	pf_readdir@fno+1,get_fileinfo@fno+1
  5274  0032C6  0100               	movlb	0	; () banked
  5275  0032C8  C081  F012         	movff	pf_readdir@fno,get_fileinfo@fno
  5276  0032CC  EC0D  F015         	call	_get_fileinfo	;wreg free
  5277                           
  5278                           ;pff.c: 830: res = dir_next(dj);
  5279  0032D0  0100               	movlb	0	; () banked
  5280  0032D2  C080  F03C         	movff	pf_readdir@dj+1,dir_next@dj+1
  5281  0032D6  0100               	movlb	0	; () banked
  5282  0032D8  C07F  F03B         	movff	pf_readdir@dj,dir_next@dj
  5283  0032DC  EC17  F012         	call	_dir_next	;wreg free
  5284  0032E0  0100               	movlb	0	; () banked
  5285  0032E2  6FB1               	movwf	pf_readdir@res& (0+255),b
  5286                           
  5287                           ; BSR set to: 0
  5288                           ;pff.c: 831: if (res == FR_NO_FILE) {
  5289  0032E4  0100               	movlb	0	; () banked
  5290  0032E6  51B1               	movf	pf_readdir@res& (0+255),w,b
  5291  0032E8  0A03               	xorlw	3
  5292  0032EA  A4D8               	btfss	status,2,c
  5293  0032EC  D010               	goto	l5776
  5294                           
  5295                           ; BSR set to: 0
  5296                           ;pff.c: 832: dj->sect = 0;
  5297  0032EE  0100               	movlb	0	; () banked
  5298  0032F0  EE20 F00C          	lfsr	2,12
  5299  0032F4  0100               	movlb	0	; () banked
  5300  0032F6  517F               	movf	pf_readdir@dj& (0+255),w,b
  5301  0032F8  26D9               	addwf	fsr2l,f,c
  5302  0032FA  0100               	movlb	0	; () banked
  5303  0032FC  5180               	movf	(pf_readdir@dj+1)& (0+255),w,b
  5304  0032FE  22DA               	addwfc	fsr2h,f,c
  5305  003300  6ADE               	clrf	postinc2,c
  5306  003302  6ADE               	clrf	postinc2,c
  5307  003304  6ADE               	clrf	postinc2,c
  5308  003306  6ADD               	clrf	postdec2,c
  5309                           
  5310                           ; BSR set to: 0
  5311                           ;pff.c: 833: res = FR_OK;
  5312  003308  0E00               	movlw	0
  5313  00330A                     L8:
  5314  00330A  0100               	movlb	0	; () banked
  5315  00330C  6FB1               	movwf	pf_readdir@res& (0+255),b
  5316  00330E                     l5776:
  5317                           
  5318                           ; BSR set to: 0
  5319                           ;pff.c: 834: }
  5320                           ;pff.c: 835: }
  5321                           ;pff.c: 836: }
  5322                           ;pff.c: 837: }
  5323                           ;pff.c: 839: return res;
  5324  00330E  0100               	movlb	0	; () banked
  5325  003310  51B1               	movf	pf_readdir@res& (0+255),w,b
  5326                           
  5327                           ; BSR set to: 0
  5328                           
  5329                           ; BSR set to: 0
  5330  003312  0012               	return	
  5331  003314                     __end_of_pf_readdir:
  5332                           	opt stack 0
  5333                           tblptru	equ	0xFF8
  5334                           tblptrh	equ	0xFF7
  5335                           tblptrl	equ	0xFF6
  5336                           tablat	equ	0xFF5
  5337                           intcon	equ	0xFF2
  5338                           postinc0	equ	0xFEE
  5339                           wreg	equ	0xFE8
  5340                           postdec1	equ	0xFE5
  5341                           fsr1h	equ	0xFE2
  5342                           fsr1l	equ	0xFE1
  5343                           indf2	equ	0xFDF
  5344                           postinc2	equ	0xFDE
  5345                           postdec2	equ	0xFDD
  5346                           fsr2h	equ	0xFDA
  5347                           fsr2l	equ	0xFD9
  5348                           status	equ	0xFD8
  5349                           
  5350 ;; *************** function _get_fileinfo *****************
  5351 ;; Defined at:
  5352 ;;		line 329 in file "../../../PIC18F/pff.c"
  5353 ;; Parameters:    Size  Location     Type
  5354 ;;  dj              2   15[COMRAM] PTR struct _Dir_
  5355 ;;		 -> Dir1(16), 
  5356 ;;  fno             2   17[COMRAM] PTR struct _FILINFO_
  5357 ;;		 -> Fno(22), 
  5358 ;; Auto vars:     Size  Location     Type
  5359 ;;  dir             2   26[COMRAM] PTR unsigned char 
  5360 ;;		 -> pf_readdir@dir(32), pf_opendir@dir(32), pf_open@dir(32), 
  5361 ;;  p               2   23[COMRAM] PTR unsigned char 
  5362 ;;		 -> Fno.fname(13), Fno(22), 
  5363 ;;  i               1   28[COMRAM] unsigned char 
  5364 ;;  c               1   25[COMRAM] unsigned char 
  5365 ;; Return value:  Size  Location     Type
  5366 ;;		None               void
  5367 ;; Registers used:
  5368 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5369 ;; Tracked objects:
  5370 ;;		On entry : 0/0
  5371 ;;		On exit  : 0/0
  5372 ;;		Unchanged: 0/0
  5373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5374 ;;      Params:         4       0       0       0       0       0       0       0       0
  5375 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5376 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5377 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5378 ;;Total ram usage:       14 bytes
  5379 ;; Hardware stack levels used:    1
  5380 ;; Hardware stack levels required when called:    2
  5381 ;; This function calls:
  5382 ;;		Nothing
  5383 ;; This function is called by:
  5384 ;;		_pf_readdir
  5385 ;; This function uses a non-reentrant model
  5386 ;;
  5387                           
  5388                           	psect	text17
  5389  002A1A                     __ptext17:
  5390                           	opt stack 0
  5391  002A1A                     _get_fileinfo:
  5392                           	opt stack 27
  5393                           
  5394                           ;pff.c: 334: BYTE i, c, *dir;
  5395                           ;pff.c: 335: char *p;
  5396                           ;pff.c: 338: p = fno->fname;
  5397                           
  5398                           ; BSR set to: 0
  5399                           ;incstack = 0
  5400  002A1A  0E09               	movlw	9
  5401  002A1C  2412               	addwf	get_fileinfo@fno,w,c
  5402  002A1E  6E18               	movwf	get_fileinfo@p,c
  5403  002A20  0E00               	movlw	0
  5404  002A22  2013               	addwfc	get_fileinfo@fno+1,w,c
  5405  002A24  6E19               	movwf	get_fileinfo@p+1,c
  5406                           
  5407                           ;pff.c: 339: if (dj->sect) {
  5408  002A26  EE20 F00C          	lfsr	2,12
  5409  002A2A  5010               	movf	get_fileinfo@dj,w,c
  5410  002A2C  26D9               	addwf	fsr2l,f,c
  5411  002A2E  5011               	movf	get_fileinfo@dj+1,w,c
  5412  002A30  22DA               	addwfc	fsr2h,f,c
  5413  002A32  CFDE F014          	movff	postinc2,??_get_fileinfo
  5414  002A36  CFDE F015          	movff	postinc2,??_get_fileinfo+1
  5415  002A3A  CFDE F016          	movff	postinc2,??_get_fileinfo+2
  5416  002A3E  CFDE F017          	movff	postinc2,??_get_fileinfo+3
  5417  002A42  5017               	movf	??_get_fileinfo+3,w,c
  5418  002A44  1014               	iorwf	??_get_fileinfo,w,c
  5419  002A46  1015               	iorwf	??_get_fileinfo+1,w,c
  5420  002A48  1016               	iorwf	??_get_fileinfo+2,w,c
  5421  002A4A  B4D8               	btfsc	status,2,c
  5422  002A4C  D09E               	goto	l3758
  5423                           
  5424                           ;pff.c: 340: dir = FatFs->buf;
  5425  002A4E  EE20 F006          	lfsr	2,6
  5426  002A52  5048               	movf	_FatFs,w,c
  5427  002A54  26D9               	addwf	fsr2l,f,c
  5428  002A56  5049               	movf	_FatFs+1,w,c
  5429  002A58  22DA               	addwfc	fsr2h,f,c
  5430  002A5A  CFDE F01B          	movff	postinc2,get_fileinfo@dir
  5431  002A5E  CFDD F01C          	movff	postdec2,get_fileinfo@dir+1
  5432                           
  5433                           ;pff.c: 341: for (i = 0; i < 8; i++) {
  5434  002A62  0E00               	movlw	0
  5435  002A64  6E1D               	movwf	get_fileinfo@i,c
  5436  002A66  D01D               	goto	L10
  5437  002A68                     l3712:
  5438                           
  5439                           ;pff.c: 342: c = dir[i];
  5440  002A68  501D               	movf	get_fileinfo@i,w,c
  5441  002A6A  0D01               	mullw	1
  5442  002A6C  50F3               	movf	prodl,w,c
  5443  002A6E  241B               	addwf	get_fileinfo@dir,w,c
  5444  002A70  6ED9               	movwf	fsr2l,c
  5445  002A72  50F4               	movf	prodh,w,c
  5446  002A74  201C               	addwfc	get_fileinfo@dir+1,w,c
  5447  002A76  6EDA               	movwf	fsr2h,c
  5448  002A78  50DF               	movf	indf2,w,c
  5449  002A7A  6E1A               	movwf	get_fileinfo@c,c
  5450                           
  5451                           ;pff.c: 343: if (c == ' ') break;
  5452  002A7C  501A               	movf	get_fileinfo@c,w,c
  5453  002A7E  0A20               	xorlw	32
  5454  002A80  B4D8               	btfsc	status,2,c
  5455  002A82  D012               	goto	l3730
  5456                           
  5457                           ;pff.c: 344: if (c == 0x05) c = 0xE5;
  5458  002A84  501A               	movf	get_fileinfo@c,w,c
  5459  002A86  0A05               	xorlw	5
  5460  002A88  A4D8               	btfss	status,2,c
  5461  002A8A  D002               	goto	l3722
  5462  002A8C  0EE5               	movlw	229
  5463  002A8E  6E1A               	movwf	get_fileinfo@c,c
  5464  002A90                     l3722:
  5465                           
  5466                           ;pff.c: 345: *p++ = c;
  5467  002A90  C018  FFD9         	movff	get_fileinfo@p,fsr2l
  5468  002A94  C019  FFDA         	movff	get_fileinfo@p+1,fsr2h
  5469  002A98  C01A  FFDF         	movff	get_fileinfo@c,indf2
  5470  002A9C  4A18               	infsnz	get_fileinfo@p,f,c
  5471  002A9E  2A19               	incf	get_fileinfo@p+1,f,c
  5472  002AA0  2A1D               	incf	get_fileinfo@i,f,c
  5473  002AA2                     L10:
  5474  002AA2  0E07               	movlw	7
  5475  002AA4  641D               	cpfsgt	get_fileinfo@i,c
  5476  002AA6  D7E0               	goto	l3712
  5477  002AA8                     l3730:
  5478                           
  5479                           ;pff.c: 346: }
  5480                           ;pff.c: 347: if (dir[8] != ' ') {
  5481  002AA8  EE20 F008          	lfsr	2,8
  5482  002AAC  501B               	movf	get_fileinfo@dir,w,c
  5483  002AAE  26D9               	addwf	fsr2l,f,c
  5484  002AB0  501C               	movf	get_fileinfo@dir+1,w,c
  5485  002AB2  22DA               	addwfc	fsr2h,f,c
  5486  002AB4  50DF               	movf	indf2,w,c
  5487  002AB6  0A20               	xorlw	32
  5488  002AB8  B4D8               	btfsc	status,2,c
  5489  002ABA  D025               	goto	l3756
  5490                           
  5491                           ;pff.c: 348: *p++ = '.';
  5492  002ABC  C018  FFD9         	movff	get_fileinfo@p,fsr2l
  5493  002AC0  C019  FFDA         	movff	get_fileinfo@p+1,fsr2h
  5494  002AC4  0E2E               	movlw	46
  5495  002AC6  6EDF               	movwf	indf2,c
  5496  002AC8  4A18               	infsnz	get_fileinfo@p,f,c
  5497  002ACA  2A19               	incf	get_fileinfo@p+1,f,c
  5498                           
  5499                           ;pff.c: 349: for (i = 8; i < 11; i++) {
  5500  002ACC  0E08               	movlw	8
  5501  002ACE  6E1D               	movwf	get_fileinfo@i,c
  5502  002AD0  D017               	goto	L11
  5503  002AD2                     l3742:
  5504                           
  5505                           ;pff.c: 350: c = dir[i];
  5506  002AD2  501D               	movf	get_fileinfo@i,w,c
  5507  002AD4  0D01               	mullw	1
  5508  002AD6  50F3               	movf	prodl,w,c
  5509  002AD8  241B               	addwf	get_fileinfo@dir,w,c
  5510  002ADA  6ED9               	movwf	fsr2l,c
  5511  002ADC  50F4               	movf	prodh,w,c
  5512  002ADE  201C               	addwfc	get_fileinfo@dir+1,w,c
  5513  002AE0  6EDA               	movwf	fsr2h,c
  5514  002AE2  50DF               	movf	indf2,w,c
  5515  002AE4  6E1A               	movwf	get_fileinfo@c,c
  5516                           
  5517                           ;pff.c: 351: if (c == ' ') break;
  5518  002AE6  501A               	movf	get_fileinfo@c,w,c
  5519  002AE8  0A20               	xorlw	32
  5520  002AEA  B4D8               	btfsc	status,2,c
  5521  002AEC  D00C               	goto	l3756
  5522                           
  5523                           ;pff.c: 352: *p++ = c;
  5524  002AEE  C018  FFD9         	movff	get_fileinfo@p,fsr2l
  5525  002AF2  C019  FFDA         	movff	get_fileinfo@p+1,fsr2h
  5526  002AF6  C01A  FFDF         	movff	get_fileinfo@c,indf2
  5527  002AFA  4A18               	infsnz	get_fileinfo@p,f,c
  5528  002AFC  2A19               	incf	get_fileinfo@p+1,f,c
  5529  002AFE  2A1D               	incf	get_fileinfo@i,f,c
  5530  002B00                     L11:
  5531  002B00  0E0A               	movlw	10
  5532  002B02  641D               	cpfsgt	get_fileinfo@i,c
  5533  002B04  D7E6               	goto	l3742
  5534  002B06                     l3756:
  5535                           
  5536                           ;pff.c: 353: }
  5537                           ;pff.c: 354: }
  5538                           ;pff.c: 355: fno->fattrib = dir[11];
  5539  002B06  EE20 F00B          	lfsr	2,11
  5540  002B0A  501B               	movf	get_fileinfo@dir,w,c
  5541  002B0C  26D9               	addwf	fsr2l,f,c
  5542  002B0E  501C               	movf	get_fileinfo@dir+1,w,c
  5543  002B10  22DA               	addwfc	fsr2h,f,c
  5544  002B12  EE10 F008          	lfsr	1,8
  5545  002B16  5012               	movf	get_fileinfo@fno,w,c
  5546  002B18  26E1               	addwf	fsr1l,f,c
  5547  002B1A  5013               	movf	get_fileinfo@fno+1,w,c
  5548  002B1C  22E2               	addwfc	fsr1h,f,c
  5549  002B1E  CFDF FFE7          	movff	indf2,indf1
  5550                           
  5551                           ;pff.c: 356: fno->fsize = (DWORD)(*(DWORD*)(BYTE*)(dir+28));
  5552  002B22  EE20 F01C          	lfsr	2,28
  5553  002B26  501B               	movf	get_fileinfo@dir,w,c
  5554  002B28  26D9               	addwf	fsr2l,f,c
  5555  002B2A  501C               	movf	get_fileinfo@dir+1,w,c
  5556  002B2C  22DA               	addwfc	fsr2h,f,c
  5557  002B2E  C012  FFE1         	movff	get_fileinfo@fno,fsr1l
  5558  002B32  C013  FFE2         	movff	get_fileinfo@fno+1,fsr1h
  5559  002B36  CFDE FFE6          	movff	postinc2,postinc1
  5560  002B3A  CFDE FFE6          	movff	postinc2,postinc1
  5561  002B3E  CFDE FFE6          	movff	postinc2,postinc1
  5562  002B42  CFDD FFE5          	movff	postdec2,postdec1
  5563  002B46  52E5               	movf	postdec1,f,c
  5564  002B48  52E5               	movf	postdec1,f,c
  5565                           
  5566                           ;pff.c: 357: fno->fdate = (WORD)(*(WORD*)(BYTE*)(dir+24));
  5567  002B4A  EE20 F018          	lfsr	2,24
  5568  002B4E  501B               	movf	get_fileinfo@dir,w,c
  5569  002B50  26D9               	addwf	fsr2l,f,c
  5570  002B52  501C               	movf	get_fileinfo@dir+1,w,c
  5571  002B54  22DA               	addwfc	fsr2h,f,c
  5572  002B56  EE10 F004          	lfsr	1,4
  5573  002B5A  5012               	movf	get_fileinfo@fno,w,c
  5574  002B5C  26E1               	addwf	fsr1l,f,c
  5575  002B5E  5013               	movf	get_fileinfo@fno+1,w,c
  5576  002B60  22E2               	addwfc	fsr1h,f,c
  5577  002B62  CFDE FFE6          	movff	postinc2,postinc1
  5578  002B66  CFDD FFE5          	movff	postdec2,postdec1
  5579                           
  5580                           ;pff.c: 358: fno->ftime = (WORD)(*(WORD*)(BYTE*)(dir+22));
  5581  002B6A  EE20 F016          	lfsr	2,22
  5582  002B6E  501B               	movf	get_fileinfo@dir,w,c
  5583  002B70  26D9               	addwf	fsr2l,f,c
  5584  002B72  501C               	movf	get_fileinfo@dir+1,w,c
  5585  002B74  22DA               	addwfc	fsr2h,f,c
  5586  002B76  EE10 F006          	lfsr	1,6
  5587  002B7A  5012               	movf	get_fileinfo@fno,w,c
  5588  002B7C  26E1               	addwf	fsr1l,f,c
  5589  002B7E  5013               	movf	get_fileinfo@fno+1,w,c
  5590  002B80  22E2               	addwfc	fsr1h,f,c
  5591  002B82  CFDE FFE6          	movff	postinc2,postinc1
  5592  002B86  CFDD FFE5          	movff	postdec2,postdec1
  5593  002B8A                     l3758:
  5594                           
  5595                           ;pff.c: 359: }
  5596                           ;pff.c: 360: *p = 0;
  5597  002B8A  C018  FFD9         	movff	get_fileinfo@p,fsr2l
  5598  002B8E  C019  FFDA         	movff	get_fileinfo@p+1,fsr2h
  5599  002B92  0E00               	movlw	0
  5600  002B94  6EDF               	movwf	indf2,c
  5601  002B96  0012               	return	
  5602  002B98                     __end_of_get_fileinfo:
  5603                           	opt stack 0
  5604                           tblptru	equ	0xFF8
  5605                           tblptrh	equ	0xFF7
  5606                           tblptrl	equ	0xFF6
  5607                           tablat	equ	0xFF5
  5608                           prodh	equ	0xFF4
  5609                           prodl	equ	0xFF3
  5610                           intcon	equ	0xFF2
  5611                           postinc0	equ	0xFEE
  5612                           wreg	equ	0xFE8
  5613                           indf1	equ	0xFE7
  5614                           postinc1	equ	0xFE6
  5615                           postdec1	equ	0xFE5
  5616                           fsr1h	equ	0xFE2
  5617                           fsr1l	equ	0xFE1
  5618                           indf2	equ	0xFDF
  5619                           postinc2	equ	0xFDE
  5620                           postdec2	equ	0xFDD
  5621                           fsr2h	equ	0xFDA
  5622                           fsr2l	equ	0xFD9
  5623                           status	equ	0xFD8
  5624                           
  5625 ;; *************** function _dir_read *****************
  5626 ;; Defined at:
  5627 ;;		line 240 in file "../../../PIC18F/pff.c"
  5628 ;; Parameters:    Size  Location     Type
  5629 ;;  dj              2   67[COMRAM] PTR struct _Dir_
  5630 ;;		 -> Dir1(16), 
  5631 ;; Auto vars:     Size  Location     Type
  5632 ;;  dir             2   27[BANK0 ] PTR unsigned char 
  5633 ;;		 -> pf_readdir@dir(32), pf_opendir@dir(32), pf_open@dir(32), 
  5634 ;;  res             1   30[BANK0 ] enum E48
  5635 ;;  c               1   29[BANK0 ] unsigned char 
  5636 ;;  a               1   26[BANK0 ] unsigned char 
  5637 ;; Return value:  Size  Location     Type
  5638 ;;                  1    wreg      enum E48
  5639 ;; Registers used:
  5640 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5641 ;; Tracked objects:
  5642 ;;		On entry : 0/0
  5643 ;;		On exit  : 0/0
  5644 ;;		Unchanged: 0/0
  5645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5646 ;;      Params:         2       0       0       0       0       0       0       0       0
  5647 ;;      Locals:         0       5       0       0       0       0       0       0       0
  5648 ;;      Temps:          0       4       0       0       0       0       0       0       0
  5649 ;;      Totals:         2       9       0       0       0       0       0       0       0
  5650 ;;Total ram usage:       11 bytes
  5651 ;; Hardware stack levels used:    1
  5652 ;; Hardware stack levels required when called:    8
  5653 ;; This function calls:
  5654 ;;		_dir_next
  5655 ;;		_disk_readp
  5656 ;; This function is called by:
  5657 ;;		_pf_readdir
  5658 ;; This function uses a non-reentrant model
  5659 ;;
  5660                           
  5661                           	psect	text18
  5662  002D10                     __ptext18:
  5663                           	opt stack 0
  5664  002D10                     _dir_read:
  5665                           	opt stack 21
  5666                           
  5667                           ;pff.c: 244: FRESULT res;
  5668                           ;pff.c: 245: BYTE a, c, *dir;
  5669                           ;pff.c: 248: res = FR_NO_FILE;
  5670                           
  5671                           ;incstack = 0
  5672  002D10  0E03               	movlw	3
  5673  002D12  0100               	movlb	0	; () banked
  5674  002D14  6F7E               	movwf	dir_read@res& (0+255),b
  5675                           
  5676                           ; BSR set to: 0
  5677                           ;pff.c: 249: dir = FatFs->buf;
  5678  002D16  EE20 F006          	lfsr	2,6
  5679  002D1A  5048               	movf	_FatFs,w,c
  5680  002D1C  26D9               	addwf	fsr2l,f,c
  5681  002D1E  5049               	movf	_FatFs+1,w,c
  5682  002D20  22DA               	addwfc	fsr2h,f,c
  5683  002D22  0100               	movlb	0	; () banked
  5684  002D24  CFDE F07B          	movff	postinc2,dir_read@dir
  5685  002D28  0100               	movlb	0	; () banked
  5686  002D2A  CFDD F07C          	movff	postdec2,dir_read@dir+1
  5687                           
  5688                           ;pff.c: 250: while (dj->sect) {
  5689  002D2E  D072               	goto	l5310
  5690  002D30                     l5282:
  5691                           
  5692                           ; BSR set to: 0
  5693                           ;pff.c: 251: res = disk_readp(dir, dj->sect, (WORD)((dj->index % 16) * 32), 32)
  5694                           ;pff.c: 252: ? FR_DISK_ERR : FR_OK;
  5695  002D30  0100               	movlb	0	; () banked
  5696  002D32  C07C  F01E         	movff	dir_read@dir+1,disk_readp@buff+1
  5697  002D36  0100               	movlb	0	; () banked
  5698  002D38  C07B  F01D         	movff	dir_read@dir,disk_readp@buff
  5699  002D3C  EE20 F00C          	lfsr	2,12
  5700  002D40  5044               	movf	dir_read@dj,w,c
  5701  002D42  26D9               	addwf	fsr2l,f,c
  5702  002D44  5045               	movf	dir_read@dj+1,w,c
  5703  002D46  22DA               	addwfc	fsr2h,f,c
  5704  002D48  CFDE F01F          	movff	postinc2,disk_readp@lba
  5705  002D4C  CFDE F020          	movff	postinc2,disk_readp@lba+1
  5706  002D50  CFDE F021          	movff	postinc2,disk_readp@lba+2
  5707  002D54  CFDE F022          	movff	postinc2,disk_readp@lba+3
  5708  002D58  C044  FFD9         	movff	dir_read@dj,fsr2l
  5709  002D5C  C045  FFDA         	movff	dir_read@dj+1,fsr2h
  5710  002D60  CFDE F076          	movff	postinc2,??_dir_read
  5711  002D64  CFDD F077          	movff	postdec2,??_dir_read+1
  5712  002D68  0E0F               	movlw	15
  5713  002D6A  0100               	movlb	0	; () banked
  5714  002D6C  1776               	andwf	??_dir_read& (0+255),f,b
  5715  002D6E  0E00               	movlw	0
  5716  002D70  1777               	andwf	(??_dir_read+1)& (0+255),f,b
  5717  002D72  0E05               	movlw	5
  5718  002D74                     u6025:
  5719  002D74  90D8               	bcf	status,0,c
  5720  002D76  0100               	movlb	0	; () banked
  5721  002D78  3776               	rlcf	??_dir_read& (0+255),f,b
  5722  002D7A  3777               	rlcf	(??_dir_read+1)& (0+255),f,b
  5723  002D7C  2EE8               	decfsz	wreg,f,c
  5724  002D7E  D7FA               	goto	u6025
  5725  002D80  C076  F023         	movff	??_dir_read,disk_readp@ofs
  5726  002D84  C077  F024         	movff	??_dir_read+1,disk_readp@ofs+1
  5727  002D88  0E00               	movlw	0
  5728  002D8A  6E26               	movwf	disk_readp@cnt+1,c
  5729  002D8C  0E20               	movlw	32
  5730  002D8E  6E25               	movwf	disk_readp@cnt,c
  5731  002D90  EC71  F01A         	call	_disk_readp	;wreg free
  5732  002D94  0900               	iorlw	0
  5733  002D96  B4D8               	btfsc	status,2,c
  5734  002D98  D002               	goto	u6030
  5735  002D9A  0E01               	movlw	1
  5736  002D9C  D001               	goto	u6036
  5737  002D9E                     u6030:
  5738  002D9E  0E00               	movlw	0
  5739  002DA0                     u6036:
  5740  002DA0  0100               	movlb	0	; () banked
  5741  002DA2  6F7E               	movwf	dir_read@res& (0+255),b
  5742                           
  5743                           ; BSR set to: 0
  5744                           ;pff.c: 253: if (res != FR_OK) break;
  5745  002DA4  0100               	movlb	0	; () banked
  5746  002DA6  517E               	movf	dir_read@res& (0+255),w,b
  5747  002DA8  A4D8               	btfss	status,2,c
  5748  002DAA  D049               	goto	l5312
  5749                           
  5750                           ; BSR set to: 0
  5751                           ;pff.c: 254: c = dir[0];
  5752                           
  5753                           ; BSR set to: 0
  5754                           
  5755                           ; BSR set to: 0
  5756  002DAC  C07B  FFD9         	movff	dir_read@dir,fsr2l
  5757  002DB0  C07C  FFDA         	movff	dir_read@dir+1,fsr2h
  5758  002DB4  50DF               	movf	indf2,w,c
  5759  002DB6  0100               	movlb	0	; () banked
  5760  002DB8  6F7D               	movwf	dir_read@c& (0+255),b
  5761                           
  5762                           ; BSR set to: 0
  5763                           ;pff.c: 255: if (c == 0) { res = FR_NO_FILE; break; }
  5764  002DBA  0100               	movlb	0	; () banked
  5765  002DBC  677D               	tstfsz	dir_read@c& (0+255),b
  5766  002DBE  D004               	goto	l5294
  5767                           
  5768                           ; BSR set to: 0
  5769  002DC0  0E03               	movlw	3
  5770  002DC2  0100               	movlb	0	; () banked
  5771  002DC4  6F7E               	movwf	dir_read@res& (0+255),b
  5772  002DC6  D03B               	goto	l5312
  5773  002DC8                     l5294:
  5774                           
  5775                           ; BSR set to: 0
  5776                           ;pff.c: 256: a = dir[11] & 0x3F;
  5777  002DC8  0100               	movlb	0	; () banked
  5778  002DCA  EE20 F00B          	lfsr	2,11
  5779  002DCE  0100               	movlb	0	; () banked
  5780  002DD0  517B               	movf	dir_read@dir& (0+255),w,b
  5781  002DD2  26D9               	addwf	fsr2l,f,c
  5782  002DD4  0100               	movlb	0	; () banked
  5783  002DD6  517C               	movf	(dir_read@dir+1)& (0+255),w,b
  5784  002DD8  22DA               	addwfc	fsr2h,f,c
  5785  002DDA  50DF               	movf	indf2,w,c
  5786  002DDC  0B3F               	andlw	63
  5787  002DDE  0100               	movlb	0	; () banked
  5788  002DE0  6F7A               	movwf	dir_read@a& (0+255),b
  5789                           
  5790                           ; BSR set to: 0
  5791                           ;pff.c: 257: if (c != 0xE5 && c != '.' && !(a & 0x08))
  5792  002DE2  0100               	movlb	0	; () banked
  5793  002DE4  517D               	movf	dir_read@c& (0+255),w,b
  5794  002DE6  0AE5               	xorlw	229
  5795  002DE8  B4D8               	btfsc	status,2,c
  5796  002DEA  D008               	goto	l5304
  5797                           
  5798                           ; BSR set to: 0
  5799  002DEC  0100               	movlb	0	; () banked
  5800  002DEE  517D               	movf	dir_read@c& (0+255),w,b
  5801  002DF0  0A2E               	xorlw	46
  5802  002DF2  B4D8               	btfsc	status,2,c
  5803  002DF4  D003               	goto	l5304
  5804                           
  5805                           ; BSR set to: 0
  5806  002DF6  0100               	movlb	0	; () banked
  5807  002DF8  A77A               	btfss	dir_read@a& (0+255),3,b
  5808  002DFA  D021               	goto	l5312
  5809  002DFC                     l5304:
  5810                           
  5811                           ; BSR set to: 0
  5812                           ;pff.c: 259: res = dir_next(dj);
  5813  002DFC  C045  F03C         	movff	dir_read@dj+1,dir_next@dj+1
  5814  002E00  C044  F03B         	movff	dir_read@dj,dir_next@dj
  5815  002E04  EC17  F012         	call	_dir_next	;wreg free
  5816  002E08  0100               	movlb	0	; () banked
  5817  002E0A  6F7E               	movwf	dir_read@res& (0+255),b
  5818                           
  5819                           ; BSR set to: 0
  5820                           ;pff.c: 260: if (res != FR_OK) break;
  5821  002E0C  0100               	movlb	0	; () banked
  5822  002E0E  517E               	movf	dir_read@res& (0+255),w,b
  5823  002E10  A4D8               	btfss	status,2,c
  5824  002E12  D015               	goto	l5312
  5825  002E14                     l5310:
  5826                           
  5827                           ; BSR set to: 0
  5828  002E14  EE20 F00C          	lfsr	2,12
  5829  002E18  5044               	movf	dir_read@dj,w,c
  5830  002E1A  26D9               	addwf	fsr2l,f,c
  5831  002E1C  5045               	movf	dir_read@dj+1,w,c
  5832  002E1E  22DA               	addwfc	fsr2h,f,c
  5833  002E20  CFDE F076          	movff	postinc2,??_dir_read
  5834  002E24  CFDE F077          	movff	postinc2,??_dir_read+1
  5835  002E28  CFDE F078          	movff	postinc2,??_dir_read+2
  5836  002E2C  CFDE F079          	movff	postinc2,??_dir_read+3
  5837  002E30  0100               	movlb	0	; () banked
  5838  002E32  5179               	movf	(??_dir_read+3)& (0+255),w,b
  5839  002E34  1176               	iorwf	??_dir_read& (0+255),w,b
  5840  002E36  1177               	iorwf	(??_dir_read+1)& (0+255),w,b
  5841  002E38  1178               	iorwf	(??_dir_read+2)& (0+255),w,b
  5842  002E3A  A4D8               	btfss	status,2,c
  5843  002E3C  D779               	goto	l5282
  5844  002E3E                     l5312:
  5845                           
  5846                           ; BSR set to: 0
  5847                           ;pff.c: 261: }
  5848                           ;pff.c: 263: if (res != FR_OK) dj->sect = 0;
  5849  002E3E  0100               	movlb	0	; () banked
  5850  002E40  517E               	movf	dir_read@res& (0+255),w,b
  5851  002E42  B4D8               	btfsc	status,2,c
  5852  002E44  D00A               	goto	l5316
  5853                           
  5854                           ; BSR set to: 0
  5855  002E46  EE20 F00C          	lfsr	2,12
  5856  002E4A  5044               	movf	dir_read@dj,w,c
  5857  002E4C  26D9               	addwf	fsr2l,f,c
  5858  002E4E  5045               	movf	dir_read@dj+1,w,c
  5859  002E50  22DA               	addwfc	fsr2h,f,c
  5860  002E52  6ADE               	clrf	postinc2,c
  5861  002E54  6ADE               	clrf	postinc2,c
  5862  002E56  6ADE               	clrf	postinc2,c
  5863  002E58  6ADD               	clrf	postdec2,c
  5864  002E5A                     l5316:
  5865                           
  5866                           ; BSR set to: 0
  5867                           ;pff.c: 265: return res;
  5868  002E5A  0100               	movlb	0	; () banked
  5869  002E5C  517E               	movf	dir_read@res& (0+255),w,b
  5870                           
  5871                           ; BSR set to: 0
  5872                           
  5873                           ; BSR set to: 0
  5874  002E5E  0012               	return	
  5875  002E60                     __end_of_dir_read:
  5876                           	opt stack 0
  5877                           tblptru	equ	0xFF8
  5878                           tblptrh	equ	0xFF7
  5879                           tblptrl	equ	0xFF6
  5880                           tablat	equ	0xFF5
  5881                           prodh	equ	0xFF4
  5882                           prodl	equ	0xFF3
  5883                           intcon	equ	0xFF2
  5884                           postinc0	equ	0xFEE
  5885                           wreg	equ	0xFE8
  5886                           indf1	equ	0xFE7
  5887                           postinc1	equ	0xFE6
  5888                           postdec1	equ	0xFE5
  5889                           fsr1h	equ	0xFE2
  5890                           fsr1l	equ	0xFE1
  5891                           indf2	equ	0xFDF
  5892                           postinc2	equ	0xFDE
  5893                           postdec2	equ	0xFDD
  5894                           fsr2h	equ	0xFDA
  5895                           fsr2l	equ	0xFD9
  5896                           status	equ	0xFD8
  5897                           
  5898 ;; *************** function _pf_opendir *****************
  5899 ;; Defined at:
  5900 ;;		line 761 in file "../../../PIC18F/pff.c"
  5901 ;; Parameters:    Size  Location     Type
  5902 ;;  dj              2   45[BANK0 ] PTR struct _Dir_
  5903 ;;		 -> Dir1(16), 
  5904 ;;  path            2   47[BANK0 ] PTR const unsigned char 
  5905 ;;		 -> STR_1(1), 
  5906 ;; Auto vars:     Size  Location     Type
  5907 ;;  dir            32   57[BANK0 ] unsigned char [32]
  5908 ;;  sp             12   89[BANK0 ] unsigned char [12]
  5909 ;;  fs              2  101[BANK0 ] PTR struct _FATFS_
  5910 ;;		 -> Fs(44), NULL(0), 
  5911 ;;  res             1  103[BANK0 ] enum E48
  5912 ;; Return value:  Size  Location     Type
  5913 ;;                  1    wreg      enum E48
  5914 ;; Registers used:
  5915 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5916 ;; Tracked objects:
  5917 ;;		On entry : 0/0
  5918 ;;		On exit  : 0/0
  5919 ;;		Unchanged: 0/0
  5920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5921 ;;      Params:         0       4       0       0       0       0       0       0       0
  5922 ;;      Locals:         0      47       0       0       0       0       0       0       0
  5923 ;;      Temps:          0       8       0       0       0       0       0       0       0
  5924 ;;      Totals:         0      59       0       0       0       0       0       0       0
  5925 ;;Total ram usage:       59 bytes
  5926 ;; Hardware stack levels used:    1
  5927 ;; Hardware stack levels required when called:   10
  5928 ;; This function calls:
  5929 ;;		_dir_rewind
  5930 ;;		_follow_path
  5931 ;; This function is called by:
  5932 ;;		_main
  5933 ;; This function uses a non-reentrant model
  5934 ;;
  5935                           
  5936                           	psect	text19
  5937  002E60                     __ptext19:
  5938                           	opt stack 0
  5939  002E60                     _pf_opendir:
  5940                           	opt stack 20
  5941                           
  5942                           ;pff.c: 766: FRESULT res;
  5943                           ;pff.c: 767: BYTE sp[12], dir[32];
  5944                           ;pff.c: 768: FATFS *fs = FatFs;
  5945                           
  5946                           ; BSR set to: 0
  5947                           ;incstack = 0
  5948  002E60  0100               	movlb	0	; () banked
  5949  002E62  C049  F0C6         	movff	_FatFs+1,pf_opendir@fs+1
  5950  002E66  0100               	movlb	0	; () banked
  5951  002E68  C048  F0C5         	movff	_FatFs,pf_opendir@fs
  5952                           
  5953                           ;pff.c: 771: if (!fs) {
  5954  002E6C  0100               	movlb	0	; () banked
  5955  002E6E  51C6               	movf	(pf_opendir@fs+1)& (0+255),w,b
  5956  002E70  11C5               	iorwf	pf_opendir@fs& (0+255),w,b
  5957  002E72  A4D8               	btfss	status,2,c
  5958  002E74  D002               	goto	l5722
  5959                           
  5960                           ; BSR set to: 0
  5961                           ;pff.c: 772: res = FR_NOT_ENABLED;
  5962  002E76  0E06               	movlw	6
  5963  002E78  D08B               	goto	L12
  5964  002E7A                     l5722:
  5965                           
  5966                           ; BSR set to: 0
  5967                           ;pff.c: 774: fs->buf = dir;
  5968  002E7A  0100               	movlb	0	; () banked
  5969  002E7C  EE20 F006          	lfsr	2,6
  5970  002E80  0100               	movlb	0	; () banked
  5971  002E82  51C5               	movf	pf_opendir@fs& (0+255),w,b
  5972  002E84  26D9               	addwf	fsr2l,f,c
  5973  002E86  0100               	movlb	0	; () banked
  5974  002E88  51C6               	movf	(pf_opendir@fs+1)& (0+255),w,b
  5975  002E8A  22DA               	addwfc	fsr2h,f,c
  5976  002E8C  0100               	movlb	0	; () banked
  5977  002E8E  0E99               	movlw	low pf_opendir@dir
  5978  002E90  6EDE               	movwf	postinc2,c
  5979  002E92  0100               	movlb	0	; () banked
  5980  002E94  0E00               	movlw	high pf_opendir@dir
  5981  002E96  6EDD               	movwf	postdec2,c
  5982                           
  5983                           ;pff.c: 775: dj->fn = sp;
  5984  002E98  0100               	movlb	0	; () banked
  5985  002E9A  EE20 F002          	lfsr	2,2
  5986  002E9E  0100               	movlb	0	; () banked
  5987  002EA0  518D               	movf	pf_opendir@dj& (0+255),w,b
  5988  002EA2  26D9               	addwf	fsr2l,f,c
  5989  002EA4  0100               	movlb	0	; () banked
  5990  002EA6  518E               	movf	(pf_opendir@dj+1)& (0+255),w,b
  5991  002EA8  22DA               	addwfc	fsr2h,f,c
  5992  002EAA  0100               	movlb	0	; () banked
  5993  002EAC  0EB9               	movlw	low pf_opendir@sp
  5994  002EAE  6EDE               	movwf	postinc2,c
  5995  002EB0  0100               	movlb	0	; () banked
  5996  002EB2  0E00               	movlw	high pf_opendir@sp
  5997  002EB4  6EDD               	movwf	postdec2,c
  5998                           
  5999                           ; BSR set to: 0
  6000                           ;pff.c: 776: res = follow_path(dj, path);
  6001  002EB6  0100               	movlb	0	; () banked
  6002  002EB8  C08E  F07B         	movff	pf_opendir@dj+1,follow_path@dj+1
  6003  002EBC  0100               	movlb	0	; () banked
  6004  002EBE  C08D  F07A         	movff	pf_opendir@dj,follow_path@dj
  6005  002EC2  0100               	movlb	0	; () banked
  6006  002EC4  C090  F07D         	movff	pf_opendir@path+1,follow_path@path+1
  6007  002EC8  0100               	movlb	0	; () banked
  6008  002ECA  C08F  F07C         	movff	pf_opendir@path,follow_path@path
  6009  002ECE  ECE0  F010         	call	_follow_path	;wreg free
  6010  002ED2  0100               	movlb	0	; () banked
  6011  002ED4  6FC7               	movwf	pf_opendir@res& (0+255),b
  6012                           
  6013                           ; BSR set to: 0
  6014                           ;pff.c: 777: if (res == FR_OK) {
  6015  002ED6  0100               	movlb	0	; () banked
  6016  002ED8  67C7               	tstfsz	pf_opendir@res& (0+255),b
  6017  002EDA  D054               	goto	l5740
  6018                           
  6019                           ; BSR set to: 0
  6020                           ;pff.c: 778: if (dir[0]) {
  6021  002EDC  0100               	movlb	0	; () banked
  6022  002EDE  5199               	movf	pf_opendir@dir& (0+255),w,b
  6023  002EE0  B4D8               	btfsc	status,2,c
  6024  002EE2  D043               	goto	l5736
  6025                           
  6026                           ; BSR set to: 0
  6027                           ;pff.c: 779: if (dir[11] & 0x10) {
  6028  002EE4  0100               	movlb	0	; () banked
  6029  002EE6  A9A4               	btfss	(pf_opendir@dir+11)& (0+255),4,b
  6030  002EE8  D03D               	goto	l5734
  6031                           
  6032                           ; BSR set to: 0
  6033                           ;pff.c: 780: dj->sclust =
  6034                           ;pff.c: 782: ((DWORD)(WORD)(*(WORD*)(BYTE*)(dir+20)) << 16) |
  6035                           ;pff.c: 784: (WORD)(*(WORD*)(BYTE*)(dir+26));
  6036  002EEA  0100               	movlb	0	; () banked
  6037  002EEC  51AD               	movf	(pf_opendir@dir+20)& (0+255),w,b
  6038  002EEE  0100               	movlb	0	; () banked
  6039  002EF0  6F91               	movwf	??_pf_opendir& (0+255),b
  6040  002EF2  0100               	movlb	0	; () banked
  6041  002EF4  51AE               	movf	(pf_opendir@dir+21)& (0+255),w,b
  6042  002EF6  0100               	movlb	0	; () banked
  6043  002EF8  6F92               	movwf	(??_pf_opendir+1)& (0+255),b
  6044  002EFA  0100               	movlb	0	; () banked
  6045  002EFC  6B93               	clrf	(??_pf_opendir+2)& (0+255),b
  6046  002EFE  0100               	movlb	0	; () banked
  6047  002F00  6B94               	clrf	(??_pf_opendir+3)& (0+255),b
  6048  002F02  C092  F094         	movff	??_pf_opendir+1,??_pf_opendir+3
  6049  002F06  C091  F093         	movff	??_pf_opendir,??_pf_opendir+2
  6050  002F0A  0100               	movlb	0	; () banked
  6051  002F0C  6B92               	clrf	(??_pf_opendir+1)& (0+255),b
  6052  002F0E  6B91               	clrf	??_pf_opendir& (0+255),b
  6053  002F10  0100               	movlb	0	; () banked
  6054  002F12  51B3               	movf	(pf_opendir@dir+26)& (0+255),w,b
  6055  002F14  0100               	movlb	0	; () banked
  6056  002F16  1191               	iorwf	??_pf_opendir& (0+255),w,b
  6057  002F18  0100               	movlb	0	; () banked
  6058  002F1A  6F95               	movwf	(??_pf_opendir+4)& (0+255),b
  6059  002F1C  0100               	movlb	0	; () banked
  6060  002F1E  51B4               	movf	(pf_opendir@dir+27)& (0+255),w,b
  6061  002F20  0100               	movlb	0	; () banked
  6062  002F22  1192               	iorwf	(??_pf_opendir+1)& (0+255),w,b
  6063  002F24  0100               	movlb	0	; () banked
  6064  002F26  6F96               	movwf	(??_pf_opendir+5)& (0+255),b
  6065  002F28  0E00               	movlw	0
  6066  002F2A  0100               	movlb	0	; () banked
  6067  002F2C  1193               	iorwf	(??_pf_opendir+2)& (0+255),w,b
  6068  002F2E  0100               	movlb	0	; () banked
  6069  002F30  6F97               	movwf	(??_pf_opendir+6)& (0+255),b
  6070  002F32  0E00               	movlw	0
  6071  002F34  0100               	movlb	0	; () banked
  6072  002F36  1194               	iorwf	(??_pf_opendir+3)& (0+255),w,b
  6073  002F38  0100               	movlb	0	; () banked
  6074  002F3A  6F98               	movwf	(??_pf_opendir+7)& (0+255),b
  6075  002F3C  0100               	movlb	0	; () banked
  6076  002F3E  EE20 F004          	lfsr	2,4
  6077  002F42  0100               	movlb	0	; () banked
  6078  002F44  518D               	movf	pf_opendir@dj& (0+255),w,b
  6079  002F46  26D9               	addwf	fsr2l,f,c
  6080  002F48  0100               	movlb	0	; () banked
  6081  002F4A  518E               	movf	(pf_opendir@dj+1)& (0+255),w,b
  6082  002F4C  22DA               	addwfc	fsr2h,f,c
  6083  002F4E  C095  FFDE         	movff	??_pf_opendir+4,postinc2
  6084  002F52  C096  FFDE         	movff	??_pf_opendir+5,postinc2
  6085  002F56  C097  FFDE         	movff	??_pf_opendir+6,postinc2
  6086  002F5A  C098  FFDD         	movff	??_pf_opendir+7,postdec2
  6087  002F5E  06D9               	decf	fsr2l,f,c
  6088  002F60  06D9               	decf	fsr2l,f,c
  6089                           
  6090                           ;pff.c: 785: } else {
  6091  002F62  D003               	goto	l5736
  6092  002F64                     l5734:
  6093                           
  6094                           ; BSR set to: 0
  6095                           ;pff.c: 786: res = FR_NO_PATH;
  6096  002F64  0E04               	movlw	4
  6097  002F66  0100               	movlb	0	; () banked
  6098  002F68  6FC7               	movwf	pf_opendir@res& (0+255),b
  6099  002F6A                     l5736:
  6100                           
  6101                           ; BSR set to: 0
  6102                           ;pff.c: 787: }
  6103                           ;pff.c: 788: }
  6104                           ;pff.c: 789: if (res == FR_OK)
  6105  002F6A  0100               	movlb	0	; () banked
  6106  002F6C  67C7               	tstfsz	pf_opendir@res& (0+255),b
  6107  002F6E  D00A               	goto	l5740
  6108                           
  6109                           ; BSR set to: 0
  6110                           ;pff.c: 790: res = dir_rewind(dj);
  6111  002F70  0100               	movlb	0	; () banked
  6112  002F72  C08E  F02C         	movff	pf_opendir@dj+1,dir_rewind@dj+1
  6113  002F76  0100               	movlb	0	; () banked
  6114  002F78  C08D  F02B         	movff	pf_opendir@dj,dir_rewind@dj
  6115  002F7C  ECCD  F017         	call	_dir_rewind	;wreg free
  6116  002F80  0100               	movlb	0	; () banked
  6117  002F82  6FC7               	movwf	pf_opendir@res& (0+255),b
  6118  002F84                     l5740:
  6119                           
  6120                           ; BSR set to: 0
  6121                           ;pff.c: 791: }
  6122                           ;pff.c: 792: if (res == FR_NO_FILE) res = FR_NO_PATH;
  6123  002F84  0100               	movlb	0	; () banked
  6124  002F86  51C7               	movf	pf_opendir@res& (0+255),w,b
  6125  002F88  0A03               	xorlw	3
  6126  002F8A  A4D8               	btfss	status,2,c
  6127  002F8C  D003               	goto	l219
  6128                           
  6129                           ; BSR set to: 0
  6130  002F8E  0E04               	movlw	4
  6131  002F90                     L12:
  6132  002F90  0100               	movlb	0	; () banked
  6133  002F92  6FC7               	movwf	pf_opendir@res& (0+255),b
  6134  002F94                     l219:
  6135                           
  6136                           ; BSR set to: 0
  6137                           ;pff.c: 793: }
  6138                           ;pff.c: 795: return res;
  6139  002F94  0100               	movlb	0	; () banked
  6140  002F96  51C7               	movf	pf_opendir@res& (0+255),w,b
  6141                           
  6142                           ; BSR set to: 0
  6143                           
  6144                           ; BSR set to: 0
  6145  002F98  0012               	return	
  6146  002F9A                     __end_of_pf_opendir:
  6147                           	opt stack 0
  6148                           tblptru	equ	0xFF8
  6149                           tblptrh	equ	0xFF7
  6150                           tblptrl	equ	0xFF6
  6151                           tablat	equ	0xFF5
  6152                           prodh	equ	0xFF4
  6153                           prodl	equ	0xFF3
  6154                           intcon	equ	0xFF2
  6155                           postinc0	equ	0xFEE
  6156                           wreg	equ	0xFE8
  6157                           indf1	equ	0xFE7
  6158                           postinc1	equ	0xFE6
  6159                           postdec1	equ	0xFE5
  6160                           fsr1h	equ	0xFE2
  6161                           fsr1l	equ	0xFE1
  6162                           indf2	equ	0xFDF
  6163                           postinc2	equ	0xFDE
  6164                           postdec2	equ	0xFDD
  6165                           fsr2h	equ	0xFDA
  6166                           fsr2l	equ	0xFD9
  6167                           status	equ	0xFD8
  6168                           
  6169 ;; *************** function _follow_path *****************
  6170 ;; Defined at:
  6171 ;;		line 371 in file "../../../PIC18F/pff.c"
  6172 ;; Parameters:    Size  Location     Type
  6173 ;;  dj              2   26[BANK0 ] PTR struct _Dir_
  6174 ;;		 -> Dir1(16), pf_open@dj(16), 
  6175 ;;  path            2   28[BANK0 ] PTR const unsigned char 
  6176 ;;		 -> Fno.fname(13), Fno(22), STR_1(1), 
  6177 ;; Auto vars:     Size  Location     Type
  6178 ;;  dir             2   42[BANK0 ] PTR unsigned char 
  6179 ;;		 -> pf_readdir@dir(32), pf_opendir@dir(32), pf_open@dir(32), 
  6180 ;;  res             1   44[BANK0 ] enum E48
  6181 ;; Return value:  Size  Location     Type
  6182 ;;                  1    wreg      enum E48
  6183 ;; Registers used:
  6184 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6185 ;; Tracked objects:
  6186 ;;		On entry : 0/0
  6187 ;;		On exit  : 0/0
  6188 ;;		Unchanged: 0/0
  6189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6190 ;;      Params:         0       4       0       0       0       0       0       0       0
  6191 ;;      Locals:         0       3       0       0       0       0       0       0       0
  6192 ;;      Temps:          0      12       0       0       0       0       0       0       0
  6193 ;;      Totals:         0      19       0       0       0       0       0       0       0
  6194 ;;Total ram usage:       19 bytes
  6195 ;; Hardware stack levels used:    1
  6196 ;; Hardware stack levels required when called:    9
  6197 ;; This function calls:
  6198 ;;		_create_name
  6199 ;;		_dir_find
  6200 ;;		_dir_rewind
  6201 ;; This function is called by:
  6202 ;;		_pf_open
  6203 ;;		_pf_opendir
  6204 ;; This function uses a non-reentrant model
  6205 ;;
  6206                           
  6207                           	psect	text20
  6208  0021C0                     __ptext20:
  6209                           	opt stack 0
  6210  0021C0                     _follow_path:
  6211                           	opt stack 19
  6212                           
  6213                           ;pff.c: 376: FRESULT res;
  6214                           ;pff.c: 377: BYTE *dir;
  6215                           ;pff.c: 380: while (*path == ' ') path++;
  6216                           
  6217                           ; BSR set to: 0
  6218                           ;incstack = 0
  6219  0021C0  D003               	goto	l5096
  6220  0021C2                     l5094:
  6221  0021C2  0100               	movlb	0	; () banked
  6222  0021C4  4B7C               	infsnz	follow_path@path& (0+255),f,b
  6223  0021C6  2B7D               	incf	(follow_path@path+1)& (0+255),f,b
  6224  0021C8                     l5096:
  6225  0021C8  0100               	movlb	0	; () banked
  6226  0021CA  C07C  FFF6         	movff	follow_path@path,tblptrl
  6227  0021CE  0100               	movlb	0	; () banked
  6228  0021D0  C07D  FFF7         	movff	follow_path@path+1,tblptrh
  6229  0021D4  6AF8               	clrf	tblptru,c
  6230  0021D6  0E07               	movlw	(high __ramtop+-1)
  6231  0021D8  64F7               	cpfsgt	tblptrh,c
  6232  0021DA  D003               	bra	u5647
  6233  0021DC  0008               	tblrd		*
  6234  0021DE  50F5               	movf	tablat,w,c
  6235  0021E0  D005               	bra	u5640
  6236  0021E2                     u5647:
  6237  0021E2  CFF6 FFE1          	movff	tblptrl,fsr1l
  6238  0021E6  CFF7 FFE2          	movff	tblptrh,fsr1h
  6239  0021EA  50E7               	movf	indf1,w,c
  6240  0021EC                     u5640:
  6241  0021EC  0A20               	xorlw	32
  6242  0021EE  B4D8               	btfsc	status,2,c
  6243  0021F0  D7E8               	goto	l5094
  6244                           
  6245                           ;pff.c: 381: if (*path == '/') path++;
  6246  0021F2  0100               	movlb	0	; () banked
  6247  0021F4  C07C  FFF6         	movff	follow_path@path,tblptrl
  6248  0021F8  0100               	movlb	0	; () banked
  6249  0021FA  C07D  FFF7         	movff	follow_path@path+1,tblptrh
  6250  0021FE  6AF8               	clrf	tblptru,c
  6251  002200  0E07               	movlw	(high __ramtop+-1)
  6252  002202  64F7               	cpfsgt	tblptrh,c
  6253  002204  D003               	bra	u5667
  6254  002206  0008               	tblrd		*
  6255  002208  50F5               	movf	tablat,w,c
  6256  00220A  D005               	bra	u5660
  6257  00220C                     u5667:
  6258  00220C  CFF6 FFE1          	movff	tblptrl,fsr1l
  6259  002210  CFF7 FFE2          	movff	tblptrh,fsr1h
  6260  002214  50E7               	movf	indf1,w,c
  6261  002216                     u5660:
  6262  002216  0A2F               	xorlw	47
  6263  002218  A4D8               	btfss	status,2,c
  6264  00221A  D003               	goto	l5102
  6265  00221C  0100               	movlb	0	; () banked
  6266  00221E  4B7C               	infsnz	follow_path@path& (0+255),f,b
  6267  002220  2B7D               	incf	(follow_path@path+1)& (0+255),f,b
  6268  002222                     l5102:
  6269                           
  6270                           ;pff.c: 382: dj->sclust = 0;
  6271  002222  0100               	movlb	0	; () banked
  6272  002224  EE20 F004          	lfsr	2,4
  6273  002228  0100               	movlb	0	; () banked
  6274  00222A  517A               	movf	follow_path@dj& (0+255),w,b
  6275  00222C  26D9               	addwf	fsr2l,f,c
  6276  00222E  0100               	movlb	0	; () banked
  6277  002230  517B               	movf	(follow_path@dj+1)& (0+255),w,b
  6278  002232  22DA               	addwfc	fsr2h,f,c
  6279  002234  6ADE               	clrf	postinc2,c
  6280  002236  6ADE               	clrf	postinc2,c
  6281  002238  6ADE               	clrf	postinc2,c
  6282  00223A  6ADD               	clrf	postdec2,c
  6283                           
  6284                           ; BSR set to: 0
  6285                           ;pff.c: 384: if ((BYTE)*path <= ' ') {
  6286  00223C  0100               	movlb	0	; () banked
  6287  00223E  C07C  FFF6         	movff	follow_path@path,tblptrl
  6288  002242  0100               	movlb	0	; () banked
  6289  002244  C07D  FFF7         	movff	follow_path@path+1,tblptrh
  6290  002248  6AF8               	clrf	tblptru,c
  6291  00224A  0E07               	movlw	(high __ramtop+-1)
  6292  00224C  64F7               	cpfsgt	tblptrh,c
  6293  00224E  D003               	bra	u5687
  6294  002250  0008               	tblrd		*
  6295  002252  50F5               	movf	tablat,w,c
  6296  002254  D005               	bra	u5680
  6297  002256                     u5687:
  6298  002256  CFF6 FFE1          	movff	tblptrl,fsr1l
  6299  00225A  CFF7 FFE2          	movff	tblptrh,fsr1h
  6300  00225E  50E7               	movf	indf1,w,c
  6301  002260                     u5680:
  6302  002260  0100               	movlb	0	; () banked
  6303  002262  6F7E               	movwf	??_follow_path& (0+255),b
  6304  002264  0E21               	movlw	33
  6305  002266  0100               	movlb	0	; () banked
  6306  002268  5D7E               	subwf	??_follow_path& (0+255),w,b
  6307  00226A  B0D8               	btfsc	status,0,c
  6308  00226C  D01B               	goto	l5110
  6309                           
  6310                           ; BSR set to: 0
  6311                           ;pff.c: 385: res = dir_rewind(dj);
  6312  00226E  0100               	movlb	0	; () banked
  6313  002270  C07B  F02C         	movff	follow_path@dj+1,dir_rewind@dj+1
  6314  002274  0100               	movlb	0	; () banked
  6315  002276  C07A  F02B         	movff	follow_path@dj,dir_rewind@dj
  6316  00227A  ECCD  F017         	call	_dir_rewind	;wreg free
  6317  00227E  0100               	movlb	0	; () banked
  6318  002280  6F8C               	movwf	follow_path@res& (0+255),b
  6319                           
  6320                           ; BSR set to: 0
  6321                           ;pff.c: 386: FatFs->buf[0] = 0;
  6322  002282  EE20 F006          	lfsr	2,6
  6323  002286  5048               	movf	_FatFs,w,c
  6324  002288  26D9               	addwf	fsr2l,f,c
  6325  00228A  5049               	movf	_FatFs+1,w,c
  6326  00228C  22DA               	addwfc	fsr2h,f,c
  6327  00228E  CFDE F07E          	movff	postinc2,??_follow_path
  6328  002292  CFDD F07F          	movff	postdec2,??_follow_path+1
  6329  002296  C07E  FFD9         	movff	??_follow_path,fsr2l
  6330  00229A  C07F  FFDA         	movff	??_follow_path+1,fsr2h
  6331  00229E  0E00               	movlw	0
  6332  0022A0  6EDF               	movwf	indf2,c
  6333                           
  6334                           ;pff.c: 388: } else {
  6335  0022A2  D0C2               	goto	l5136
  6336  0022A4                     l5110:
  6337                           
  6338                           ; BSR set to: 0
  6339                           ;pff.c: 390: res = create_name(dj, &path);
  6340  0022A4  0100               	movlb	0	; () banked
  6341  0022A6  C07B  F019         	movff	follow_path@dj+1,create_name@dj+1
  6342  0022AA  0100               	movlb	0	; () banked
  6343  0022AC  C07A  F018         	movff	follow_path@dj,create_name@dj
  6344  0022B0  0100               	movlb	0	; () banked
  6345  0022B2  0E00               	movlw	high follow_path@path
  6346  0022B4  6E1B               	movwf	create_name@path+1,c
  6347  0022B6  0100               	movlb	0	; () banked
  6348  0022B8  0E7C               	movlw	low follow_path@path
  6349  0022BA  6E1A               	movwf	create_name@path,c
  6350  0022BC  EC3E  F013         	call	_create_name	;wreg free
  6351  0022C0  0100               	movlb	0	; () banked
  6352  0022C2  6F8C               	movwf	follow_path@res& (0+255),b
  6353                           
  6354                           ; BSR set to: 0
  6355                           ;pff.c: 391: if (res != FR_OK) break;
  6356  0022C4  0100               	movlb	0	; () banked
  6357  0022C6  518C               	movf	follow_path@res& (0+255),w,b
  6358  0022C8  A4D8               	btfss	status,2,c
  6359  0022CA  D0AE               	goto	l5136
  6360                           
  6361                           ; BSR set to: 0
  6362                           ;pff.c: 392: res = dir_find(dj);
  6363                           
  6364                           ; BSR set to: 0
  6365                           
  6366                           ; BSR set to: 0
  6367  0022CC  0100               	movlb	0	; () banked
  6368  0022CE  C07B  F045         	movff	follow_path@dj+1,dir_find@dj+1
  6369  0022D2  0100               	movlb	0	; () banked
  6370  0022D4  C07A  F044         	movff	follow_path@dj,dir_find@dj
  6371  0022D8  EC67  F018         	call	_dir_find	;wreg free
  6372  0022DC  0100               	movlb	0	; () banked
  6373  0022DE  6F8C               	movwf	follow_path@res& (0+255),b
  6374                           
  6375                           ; BSR set to: 0
  6376                           ;pff.c: 393: if (res != FR_OK) {
  6377  0022E0  0100               	movlb	0	; () banked
  6378  0022E2  518C               	movf	follow_path@res& (0+255),w,b
  6379  0022E4  B4D8               	btfsc	status,2,c
  6380  0022E6  D018               	goto	l5126
  6381                           
  6382                           ; BSR set to: 0
  6383                           ;pff.c: 394: if (res == FR_NO_FILE && !*(dj->fn+11))
  6384  0022E8  0100               	movlb	0	; () banked
  6385  0022EA  518C               	movf	follow_path@res& (0+255),w,b
  6386  0022EC  0A03               	xorlw	3
  6387  0022EE  A4D8               	btfss	status,2,c
  6388  0022F0  D09B               	goto	l5136
  6389                           
  6390                           ; BSR set to: 0
  6391  0022F2  0100               	movlb	0	; () banked
  6392  0022F4  EE20 F002          	lfsr	2,2
  6393  0022F8  0100               	movlb	0	; () banked
  6394  0022FA  517A               	movf	follow_path@dj& (0+255),w,b
  6395  0022FC  26D9               	addwf	fsr2l,f,c
  6396  0022FE  0100               	movlb	0	; () banked
  6397  002300  517B               	movf	(follow_path@dj+1)& (0+255),w,b
  6398  002302  22DA               	addwfc	fsr2h,f,c
  6399  002304  EE10 F00B          	lfsr	1,11
  6400  002308  50DE               	movf	postinc2,w,c
  6401  00230A  26E1               	addwf	fsr1l,f,c
  6402  00230C  50DD               	movf	postdec2,w,c
  6403  00230E  22E2               	addwfc	fsr1h,f,c
  6404  002310  50E7               	movf	indf1,w,c
  6405  002312  A4D8               	btfss	status,2,c
  6406  002314  D089               	goto	l5136
  6407  002316  D02D               	goto	u5750
  6408  002318                     l5126:
  6409                           
  6410                           ; BSR set to: 0
  6411                           ;pff.c: 397: }
  6412                           ;pff.c: 398: if (*(dj->fn+11)) break;
  6413  002318  0100               	movlb	0	; () banked
  6414  00231A  EE20 F002          	lfsr	2,2
  6415  00231E  0100               	movlb	0	; () banked
  6416  002320  517A               	movf	follow_path@dj& (0+255),w,b
  6417  002322  26D9               	addwf	fsr2l,f,c
  6418  002324  0100               	movlb	0	; () banked
  6419  002326  517B               	movf	(follow_path@dj+1)& (0+255),w,b
  6420  002328  22DA               	addwfc	fsr2h,f,c
  6421  00232A  EE10 F00B          	lfsr	1,11
  6422  00232E  50DE               	movf	postinc2,w,c
  6423  002330  26E1               	addwf	fsr1l,f,c
  6424  002332  50DD               	movf	postdec2,w,c
  6425  002334  22E2               	addwfc	fsr1h,f,c
  6426  002336  50E7               	movf	indf1,w,c
  6427  002338  A4D8               	btfss	status,2,c
  6428  00233A  D076               	goto	l5136
  6429                           
  6430                           ; BSR set to: 0
  6431                           ;pff.c: 399: dir = FatFs->buf;
  6432                           
  6433                           ; BSR set to: 0
  6434                           
  6435                           ; BSR set to: 0
  6436  00233C  EE20 F006          	lfsr	2,6
  6437  002340  5048               	movf	_FatFs,w,c
  6438  002342  26D9               	addwf	fsr2l,f,c
  6439  002344  5049               	movf	_FatFs+1,w,c
  6440  002346  22DA               	addwfc	fsr2h,f,c
  6441  002348  0100               	movlb	0	; () banked
  6442  00234A  CFDE F08A          	movff	postinc2,follow_path@dir
  6443  00234E  0100               	movlb	0	; () banked
  6444  002350  CFDD F08B          	movff	postdec2,follow_path@dir+1
  6445                           
  6446                           ;pff.c: 400: if (!(dir[11] & 0x10)) {
  6447  002354  0100               	movlb	0	; () banked
  6448  002356  EE20 F00B          	lfsr	2,11
  6449  00235A  0100               	movlb	0	; () banked
  6450  00235C  518A               	movf	follow_path@dir& (0+255),w,b
  6451  00235E  26D9               	addwf	fsr2l,f,c
  6452  002360  0100               	movlb	0	; () banked
  6453  002362  518B               	movf	(follow_path@dir+1)& (0+255),w,b
  6454  002364  22DA               	addwfc	fsr2h,f,c
  6455  002366  50DF               	movf	indf2,w,c
  6456  002368  0100               	movlb	0	; () banked
  6457  00236A  6F7E               	movwf	??_follow_path& (0+255),b
  6458  00236C  0100               	movlb	0	; () banked
  6459  00236E  B97E               	btfsc	??_follow_path& (0+255),4,b
  6460  002370  D004               	goto	l5134
  6461  002372                     u5750:
  6462                           
  6463                           ; BSR set to: 0
  6464                           ;pff.c: 401: res = FR_NO_PATH; break;
  6465  002372  0E04               	movlw	4
  6466  002374  0100               	movlb	0	; () banked
  6467  002376  6F8C               	movwf	follow_path@res& (0+255),b
  6468  002378  D057               	goto	l5136
  6469  00237A                     l5134:
  6470                           
  6471                           ; BSR set to: 0
  6472                           ;pff.c: 402: }
  6473                           ;pff.c: 403: dj->sclust =
  6474                           ;pff.c: 405: ((DWORD)(WORD)(*(WORD*)(BYTE*)(dir+20)) << 16) |
  6475                           ;pff.c: 407: (WORD)(*(WORD*)(BYTE*)(dir+26));
  6476  00237A  0100               	movlb	0	; () banked
  6477  00237C  EE20 F01A          	lfsr	2,26
  6478  002380  0100               	movlb	0	; () banked
  6479  002382  518A               	movf	follow_path@dir& (0+255),w,b
  6480  002384  26D9               	addwf	fsr2l,f,c
  6481  002386  0100               	movlb	0	; () banked
  6482  002388  518B               	movf	(follow_path@dir+1)& (0+255),w,b
  6483  00238A  22DA               	addwfc	fsr2h,f,c
  6484  00238C  CFDE F07E          	movff	postinc2,??_follow_path
  6485  002390  CFDD F07F          	movff	postdec2,??_follow_path+1
  6486  002394  0100               	movlb	0	; () banked
  6487  002396  EE20 F014          	lfsr	2,20
  6488  00239A  0100               	movlb	0	; () banked
  6489  00239C  518A               	movf	follow_path@dir& (0+255),w,b
  6490  00239E  26D9               	addwf	fsr2l,f,c
  6491  0023A0  0100               	movlb	0	; () banked
  6492  0023A2  518B               	movf	(follow_path@dir+1)& (0+255),w,b
  6493  0023A4  22DA               	addwfc	fsr2h,f,c
  6494  0023A6  CFDE F080          	movff	postinc2,??_follow_path+2
  6495  0023AA  CFDD F081          	movff	postdec2,??_follow_path+3
  6496  0023AE  0100               	movlb	0	; () banked
  6497  0023B0  5180               	movf	(??_follow_path+2)& (0+255),w,b
  6498  0023B2  0100               	movlb	0	; () banked
  6499  0023B4  6F82               	movwf	(??_follow_path+4)& (0+255),b
  6500  0023B6  0100               	movlb	0	; () banked
  6501  0023B8  5181               	movf	(??_follow_path+3)& (0+255),w,b
  6502  0023BA  0100               	movlb	0	; () banked
  6503  0023BC  6F83               	movwf	(??_follow_path+5)& (0+255),b
  6504  0023BE  0100               	movlb	0	; () banked
  6505  0023C0  6B84               	clrf	(??_follow_path+6)& (0+255),b
  6506  0023C2  0100               	movlb	0	; () banked
  6507  0023C4  6B85               	clrf	(??_follow_path+7)& (0+255),b
  6508  0023C6  C083  F085         	movff	??_follow_path+5,??_follow_path+7
  6509  0023CA  C082  F084         	movff	??_follow_path+4,??_follow_path+6
  6510  0023CE  0100               	movlb	0	; () banked
  6511  0023D0  6B83               	clrf	(??_follow_path+5)& (0+255),b
  6512  0023D2  6B82               	clrf	(??_follow_path+4)& (0+255),b
  6513  0023D4  0100               	movlb	0	; () banked
  6514  0023D6  517E               	movf	??_follow_path& (0+255),w,b
  6515  0023D8  0100               	movlb	0	; () banked
  6516  0023DA  1182               	iorwf	(??_follow_path+4)& (0+255),w,b
  6517  0023DC  0100               	movlb	0	; () banked
  6518  0023DE  6F86               	movwf	(??_follow_path+8)& (0+255),b
  6519  0023E0  0100               	movlb	0	; () banked
  6520  0023E2  517F               	movf	(??_follow_path+1)& (0+255),w,b
  6521  0023E4  0100               	movlb	0	; () banked
  6522  0023E6  1183               	iorwf	(??_follow_path+5)& (0+255),w,b
  6523  0023E8  0100               	movlb	0	; () banked
  6524  0023EA  6F87               	movwf	(??_follow_path+9)& (0+255),b
  6525  0023EC  0E00               	movlw	0
  6526  0023EE  0100               	movlb	0	; () banked
  6527  0023F0  1184               	iorwf	(??_follow_path+6)& (0+255),w,b
  6528  0023F2  0100               	movlb	0	; () banked
  6529  0023F4  6F88               	movwf	(??_follow_path+10)& (0+255),b
  6530  0023F6  0E00               	movlw	0
  6531  0023F8  0100               	movlb	0	; () banked
  6532  0023FA  1185               	iorwf	(??_follow_path+7)& (0+255),w,b
  6533  0023FC  0100               	movlb	0	; () banked
  6534  0023FE  6F89               	movwf	(??_follow_path+11)& (0+255),b
  6535  002400  0100               	movlb	0	; () banked
  6536  002402  EE20 F004          	lfsr	2,4
  6537  002406  0100               	movlb	0	; () banked
  6538  002408  517A               	movf	follow_path@dj& (0+255),w,b
  6539  00240A  26D9               	addwf	fsr2l,f,c
  6540  00240C  0100               	movlb	0	; () banked
  6541  00240E  517B               	movf	(follow_path@dj+1)& (0+255),w,b
  6542  002410  22DA               	addwfc	fsr2h,f,c
  6543  002412  C086  FFDE         	movff	??_follow_path+8,postinc2
  6544  002416  C087  FFDE         	movff	??_follow_path+9,postinc2
  6545  00241A  C088  FFDE         	movff	??_follow_path+10,postinc2
  6546  00241E  C089  FFDD         	movff	??_follow_path+11,postdec2
  6547  002422  06D9               	decf	fsr2l,f,c
  6548  002424  06D9               	decf	fsr2l,f,c
  6549                           
  6550                           ;pff.c: 408: }
  6551  002426  D73E               	goto	l5110
  6552  002428                     l5136:
  6553                           
  6554                           ; BSR set to: 0
  6555                           ;pff.c: 409: }
  6556                           ;pff.c: 411: return res;
  6557  002428  0100               	movlb	0	; () banked
  6558  00242A  518C               	movf	follow_path@res& (0+255),w,b
  6559                           
  6560                           ; BSR set to: 0
  6561                           
  6562                           ; BSR set to: 0
  6563  00242C  0012               	return	
  6564  00242E                     __end_of_follow_path:
  6565                           	opt stack 0
  6566                           tblptru	equ	0xFF8
  6567                           tblptrh	equ	0xFF7
  6568                           tblptrl	equ	0xFF6
  6569                           tablat	equ	0xFF5
  6570                           prodh	equ	0xFF4
  6571                           prodl	equ	0xFF3
  6572                           intcon	equ	0xFF2
  6573                           postinc0	equ	0xFEE
  6574                           wreg	equ	0xFE8
  6575                           indf1	equ	0xFE7
  6576                           postinc1	equ	0xFE6
  6577                           postdec1	equ	0xFE5
  6578                           fsr1h	equ	0xFE2
  6579                           fsr1l	equ	0xFE1
  6580                           indf2	equ	0xFDF
  6581                           postinc2	equ	0xFDE
  6582                           postdec2	equ	0xFDD
  6583                           fsr2h	equ	0xFDA
  6584                           fsr2l	equ	0xFD9
  6585                           status	equ	0xFD8
  6586                           
  6587 ;; *************** function _dir_find *****************
  6588 ;; Defined at:
  6589 ;;		line 206 in file "../../../PIC18F/pff.c"
  6590 ;; Parameters:    Size  Location     Type
  6591 ;;  dj              2   67[COMRAM] PTR struct _Dir_
  6592 ;;		 -> Dir1(16), pf_open@dj(16), 
  6593 ;; Auto vars:     Size  Location     Type
  6594 ;;  dir             2   23[BANK0 ] PTR unsigned char 
  6595 ;;		 -> pf_readdir@dir(32), pf_opendir@dir(32), pf_open@dir(32), 
  6596 ;;  res             1   25[BANK0 ] enum E48
  6597 ;;  c               1   22[BANK0 ] unsigned char 
  6598 ;; Return value:  Size  Location     Type
  6599 ;;                  1    wreg      enum E48
  6600 ;; Registers used:
  6601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6602 ;; Tracked objects:
  6603 ;;		On entry : 0/0
  6604 ;;		On exit  : 0/0
  6605 ;;		Unchanged: 0/0
  6606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6607 ;;      Params:         2       0       0       0       0       0       0       0       0
  6608 ;;      Locals:         0       4       0       0       0       0       0       0       0
  6609 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6610 ;;      Totals:         4       4       0       0       0       0       0       0       0
  6611 ;;Total ram usage:        8 bytes
  6612 ;; Hardware stack levels used:    1
  6613 ;; Hardware stack levels required when called:    8
  6614 ;; This function calls:
  6615 ;;		_dir_next
  6616 ;;		_dir_rewind
  6617 ;;		_disk_readp
  6618 ;;		_mem_cmp
  6619 ;; This function is called by:
  6620 ;;		_follow_path
  6621 ;; This function uses a non-reentrant model
  6622 ;;
  6623                           
  6624                           	psect	text21
  6625  0030CE                     __ptext21:
  6626                           	opt stack 0
  6627  0030CE                     _dir_find:
  6628                           	opt stack 19
  6629                           
  6630                           ;pff.c: 210: FRESULT res;
  6631                           ;pff.c: 211: BYTE c, *dir;
  6632                           ;pff.c: 214: res = dir_rewind(dj);
  6633                           
  6634                           ; BSR set to: 0
  6635                           ;incstack = 0
  6636  0030CE  C045  F02C         	movff	dir_find@dj+1,dir_rewind@dj+1
  6637  0030D2  C044  F02B         	movff	dir_find@dj,dir_rewind@dj
  6638  0030D6  ECCD  F017         	call	_dir_rewind	;wreg free
  6639  0030DA  0100               	movlb	0	; () banked
  6640  0030DC  6F79               	movwf	dir_find@res& (0+255),b
  6641                           
  6642                           ; BSR set to: 0
  6643                           ;pff.c: 215: if (res != FR_OK) return res;
  6644  0030DE  0100               	movlb	0	; () banked
  6645  0030E0  5179               	movf	dir_find@res& (0+255),w,b
  6646  0030E2  A4D8               	btfss	status,2,c
  6647  0030E4  D089               	goto	l5088
  6648                           
  6649                           ; BSR set to: 0
  6650                           ;pff.c: 217: dir = FatFs->buf;
  6651                           
  6652                           ; BSR set to: 0
  6653                           
  6654                           ; BSR set to: 0
  6655                           
  6656                           ; BSR set to: 0
  6657  0030E6  EE20 F006          	lfsr	2,6
  6658  0030EA  5048               	movf	_FatFs,w,c
  6659  0030EC  26D9               	addwf	fsr2l,f,c
  6660  0030EE  5049               	movf	_FatFs+1,w,c
  6661  0030F0  22DA               	addwfc	fsr2h,f,c
  6662  0030F2  0100               	movlb	0	; () banked
  6663  0030F4  CFDE F077          	movff	postinc2,dir_find@dir
  6664  0030F8  0100               	movlb	0	; () banked
  6665  0030FA  CFDD F078          	movff	postdec2,dir_find@dir+1
  6666  0030FE                     l5066:
  6667                           
  6668                           ; BSR set to: 0
  6669                           ;pff.c: 219: res = disk_readp(dir, dj->sect, (WORD)((dj->index % 16) * 32), 32)
  6670                           ;pff.c: 220: ? FR_DISK_ERR : FR_OK;
  6671  0030FE  0100               	movlb	0	; () banked
  6672  003100  C078  F01E         	movff	dir_find@dir+1,disk_readp@buff+1
  6673  003104  0100               	movlb	0	; () banked
  6674  003106  C077  F01D         	movff	dir_find@dir,disk_readp@buff
  6675  00310A  EE20 F00C          	lfsr	2,12
  6676  00310E  5044               	movf	dir_find@dj,w,c
  6677  003110  26D9               	addwf	fsr2l,f,c
  6678  003112  5045               	movf	dir_find@dj+1,w,c
  6679  003114  22DA               	addwfc	fsr2h,f,c
  6680  003116  CFDE F01F          	movff	postinc2,disk_readp@lba
  6681  00311A  CFDE F020          	movff	postinc2,disk_readp@lba+1
  6682  00311E  CFDE F021          	movff	postinc2,disk_readp@lba+2
  6683  003122  CFDE F022          	movff	postinc2,disk_readp@lba+3
  6684  003126  C044  FFD9         	movff	dir_find@dj,fsr2l
  6685  00312A  C045  FFDA         	movff	dir_find@dj+1,fsr2h
  6686  00312E  CFDE F046          	movff	postinc2,??_dir_find
  6687  003132  CFDD F047          	movff	postdec2,??_dir_find+1
  6688  003136  0E0F               	movlw	15
  6689  003138  1646               	andwf	??_dir_find,f,c
  6690  00313A  0E00               	movlw	0
  6691  00313C  1647               	andwf	??_dir_find+1,f,c
  6692  00313E  0E05               	movlw	5
  6693  003140                     u5575:
  6694  003140  90D8               	bcf	status,0,c
  6695  003142  3646               	rlcf	??_dir_find,f,c
  6696  003144  3647               	rlcf	??_dir_find+1,f,c
  6697  003146  2EE8               	decfsz	wreg,f,c
  6698  003148  D7FB               	goto	u5575
  6699  00314A  C046  F023         	movff	??_dir_find,disk_readp@ofs
  6700  00314E  C047  F024         	movff	??_dir_find+1,disk_readp@ofs+1
  6701  003152  0E00               	movlw	0
  6702  003154  6E26               	movwf	disk_readp@cnt+1,c
  6703  003156  0E20               	movlw	32
  6704  003158  6E25               	movwf	disk_readp@cnt,c
  6705  00315A  EC71  F01A         	call	_disk_readp	;wreg free
  6706  00315E  0900               	iorlw	0
  6707  003160  B4D8               	btfsc	status,2,c
  6708  003162  D002               	goto	u5580
  6709  003164  0E01               	movlw	1
  6710  003166  D001               	goto	u5586
  6711  003168                     u5580:
  6712  003168  0E00               	movlw	0
  6713  00316A                     u5586:
  6714  00316A  0100               	movlb	0	; () banked
  6715  00316C  6F79               	movwf	dir_find@res& (0+255),b
  6716                           
  6717                           ; BSR set to: 0
  6718                           ;pff.c: 221: if (res != FR_OK) break;
  6719  00316E  0100               	movlb	0	; () banked
  6720  003170  5179               	movf	dir_find@res& (0+255),w,b
  6721  003172  A4D8               	btfss	status,2,c
  6722  003174  D041               	goto	l5088
  6723                           
  6724                           ; BSR set to: 0
  6725                           ;pff.c: 222: c = dir[0];
  6726                           
  6727                           ; BSR set to: 0
  6728                           
  6729                           ; BSR set to: 0
  6730  003176  C077  FFD9         	movff	dir_find@dir,fsr2l
  6731  00317A  C078  FFDA         	movff	dir_find@dir+1,fsr2h
  6732  00317E  50DF               	movf	indf2,w,c
  6733  003180  0100               	movlb	0	; () banked
  6734  003182  6F76               	movwf	dir_find@c& (0+255),b
  6735                           
  6736                           ; BSR set to: 0
  6737                           ;pff.c: 223: if (c == 0) { res = FR_NO_FILE; break; }
  6738  003184  0100               	movlb	0	; () banked
  6739  003186  6776               	tstfsz	dir_find@c& (0+255),b
  6740  003188  D004               	goto	l5078
  6741                           
  6742                           ; BSR set to: 0
  6743  00318A  0E03               	movlw	3
  6744  00318C  0100               	movlb	0	; () banked
  6745  00318E  6F79               	movwf	dir_find@res& (0+255),b
  6746  003190  D033               	goto	l5088
  6747  003192                     l5078:
  6748                           
  6749                           ; BSR set to: 0
  6750                           ;pff.c: 224: if (!(dir[11] & 0x08) && !mem_cmp(dir, dj->fn, 11))
  6751  003192  0100               	movlb	0	; () banked
  6752  003194  EE20 F00B          	lfsr	2,11
  6753  003198  0100               	movlb	0	; () banked
  6754  00319A  5177               	movf	dir_find@dir& (0+255),w,b
  6755  00319C  26D9               	addwf	fsr2l,f,c
  6756  00319E  0100               	movlb	0	; () banked
  6757  0031A0  5178               	movf	(dir_find@dir+1)& (0+255),w,b
  6758  0031A2  22DA               	addwfc	fsr2h,f,c
  6759  0031A4  50DF               	movf	indf2,w,c
  6760  0031A6  6E46               	movwf	??_dir_find& (0+255),c
  6761  0031A8  B646               	btfsc	??_dir_find,3,c
  6762  0031AA  D01A               	goto	l5084
  6763                           
  6764                           ; BSR set to: 0
  6765  0031AC  0100               	movlb	0	; () banked
  6766  0031AE  C078  F011         	movff	dir_find@dir+1,mem_cmp@dst+1
  6767  0031B2  0100               	movlb	0	; () banked
  6768  0031B4  C077  F010         	movff	dir_find@dir,mem_cmp@dst
  6769  0031B8  EE20 F002          	lfsr	2,2
  6770  0031BC  5044               	movf	dir_find@dj,w,c
  6771  0031BE  26D9               	addwf	fsr2l,f,c
  6772  0031C0  5045               	movf	dir_find@dj+1,w,c
  6773  0031C2  22DA               	addwfc	fsr2h,f,c
  6774  0031C4  CFDE F012          	movff	postinc2,mem_cmp@src
  6775  0031C8  CFDD F013          	movff	postdec2,mem_cmp@src+1
  6776  0031CC  0E00               	movlw	0
  6777  0031CE  6E15               	movwf	mem_cmp@cnt+1,c
  6778  0031D0  0E0B               	movlw	11
  6779  0031D2  6E14               	movwf	mem_cmp@cnt,c
  6780  0031D4  ECB2  F01C         	call	_mem_cmp	;wreg free
  6781  0031D8  5011               	movf	?_mem_cmp+1,w,c
  6782  0031DA  1010               	iorwf	?_mem_cmp,w,c
  6783  0031DC  B4D8               	btfsc	status,2,c
  6784  0031DE  D00C               	goto	l5088
  6785  0031E0                     l5084:
  6786                           
  6787                           ;pff.c: 226: res = dir_next(dj);
  6788  0031E0  C045  F03C         	movff	dir_find@dj+1,dir_next@dj+1
  6789  0031E4  C044  F03B         	movff	dir_find@dj,dir_next@dj
  6790  0031E8  EC17  F012         	call	_dir_next	;wreg free
  6791  0031EC  0100               	movlb	0	; () banked
  6792  0031EE  6F79               	movwf	dir_find@res& (0+255),b
  6793                           
  6794                           ; BSR set to: 0
  6795                           ;pff.c: 227: } while (res == FR_OK);
  6796  0031F0  0100               	movlb	0	; () banked
  6797  0031F2  5179               	movf	dir_find@res& (0+255),w,b
  6798  0031F4  B4D8               	btfsc	status,2,c
  6799  0031F6  D783               	goto	l5066
  6800  0031F8                     l5088:
  6801                           
  6802                           ;pff.c: 229: return res;
  6803  0031F8  0100               	movlb	0	; () banked
  6804  0031FA  5179               	movf	dir_find@res& (0+255),w,b
  6805                           
  6806                           ; BSR set to: 0
  6807                           
  6808                           ; BSR set to: 0
  6809  0031FC  0012               	return	
  6810  0031FE                     __end_of_dir_find:
  6811                           	opt stack 0
  6812                           tblptru	equ	0xFF8
  6813                           tblptrh	equ	0xFF7
  6814                           tblptrl	equ	0xFF6
  6815                           tablat	equ	0xFF5
  6816                           prodh	equ	0xFF4
  6817                           prodl	equ	0xFF3
  6818                           intcon	equ	0xFF2
  6819                           postinc0	equ	0xFEE
  6820                           wreg	equ	0xFE8
  6821                           indf1	equ	0xFE7
  6822                           postinc1	equ	0xFE6
  6823                           postdec1	equ	0xFE5
  6824                           fsr1h	equ	0xFE2
  6825                           fsr1l	equ	0xFE1
  6826                           indf2	equ	0xFDF
  6827                           postinc2	equ	0xFDE
  6828                           postdec2	equ	0xFDD
  6829                           fsr2h	equ	0xFDA
  6830                           fsr2l	equ	0xFD9
  6831                           status	equ	0xFD8
  6832                           
  6833 ;; *************** function _mem_cmp *****************
  6834 ;; Defined at:
  6835 ;;		line 51 in file "../../../PIC18F/pff.c"
  6836 ;; Parameters:    Size  Location     Type
  6837 ;;  dst             2   15[COMRAM] PTR const void 
  6838 ;;		 -> pf_readdir@dir(32), pf_opendir@dir(32), pf_open@dir(32), 
  6839 ;;  src             2   17[COMRAM] PTR const void 
  6840 ;;		 -> pf_readdir@sp(12), pf_opendir@sp(12), pf_open@sp(12), 
  6841 ;;  cnt             2   19[COMRAM] int 
  6842 ;; Auto vars:     Size  Location     Type
  6843 ;;  r               2   28[COMRAM] int 
  6844 ;;  s               2   26[COMRAM] PTR const unsigned char 
  6845 ;;		 -> pf_readdir@sp(12), pf_opendir@sp(12), pf_open@sp(12), 
  6846 ;;  d               2   24[COMRAM] PTR const unsigned char 
  6847 ;;		 -> pf_readdir@dir(32), pf_opendir@dir(32), pf_open@dir(32), 
  6848 ;; Return value:  Size  Location     Type
  6849 ;;                  2   15[COMRAM] int 
  6850 ;; Registers used:
  6851 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6852 ;; Tracked objects:
  6853 ;;		On entry : 0/0
  6854 ;;		On exit  : 0/0
  6855 ;;		Unchanged: 0/0
  6856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6857 ;;      Params:         6       0       0       0       0       0       0       0       0
  6858 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6859 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6860 ;;      Totals:        15       0       0       0       0       0       0       0       0
  6861 ;;Total ram usage:       15 bytes
  6862 ;; Hardware stack levels used:    1
  6863 ;; Hardware stack levels required when called:    2
  6864 ;; This function calls:
  6865 ;;		Nothing
  6866 ;; This function is called by:
  6867 ;;		_dir_find
  6868 ;; This function uses a non-reentrant model
  6869 ;;
  6870                           
  6871                           	psect	text22
  6872  003964                     __ptext22:
  6873                           	opt stack 0
  6874  003964                     _mem_cmp:
  6875                           	opt stack 24
  6876                           
  6877                           ;pff.c: 52: const char *d = (const char *)dst, *s = (const char *)src;
  6878                           
  6879                           ; BSR set to: 0
  6880                           ;incstack = 0
  6881  003964  C011  F01A         	movff	mem_cmp@dst+1,mem_cmp@d+1
  6882  003968  C010  F019         	movff	mem_cmp@dst,mem_cmp@d
  6883  00396C  C013  F01C         	movff	mem_cmp@src+1,mem_cmp@s+1
  6884  003970  C012  F01B         	movff	mem_cmp@src,mem_cmp@s
  6885                           
  6886                           ;pff.c: 53: int r = 0;
  6887  003974  0E00               	movlw	0
  6888  003976  6E1E               	movwf	mem_cmp@r+1,c
  6889  003978  0E00               	movlw	0
  6890  00397A  6E1D               	movwf	mem_cmp@r,c
  6891  00397C                     l3224:
  6892  00397C  0614               	decf	mem_cmp@cnt,f,c
  6893  00397E  A0D8               	btfss	status,0,c
  6894  003980  0615               	decf	mem_cmp@cnt+1,f,c
  6895  003982  2814               	incf	mem_cmp@cnt& (0+255),w,c
  6896  003984  B4D8               	btfsc	status,2,c
  6897  003986  2815               	incf	(mem_cmp@cnt+1)& (0+255),w,c
  6898  003988  B4D8               	btfsc	status,2,c
  6899  00398A  D01F               	goto	l19
  6900  00398C  C01B  FFD9         	movff	mem_cmp@s,fsr2l
  6901  003990  C01C  FFDA         	movff	mem_cmp@s+1,fsr2h
  6902  003994  4A1B               	infsnz	mem_cmp@s,f,c
  6903  003996  2A1C               	incf	mem_cmp@s+1,f,c
  6904  003998  50DF               	movf	indf2,w,c
  6905  00399A  6E16               	movwf	??_mem_cmp& (0+255),c
  6906  00399C  6A17               	clrf	(??_mem_cmp+1)& (0+255),c
  6907  00399E  1E16               	comf	??_mem_cmp,f,c
  6908  0039A0  1E17               	comf	??_mem_cmp+1,f,c
  6909  0039A2  4A16               	infsnz	??_mem_cmp,f,c
  6910  0039A4  2A17               	incf	??_mem_cmp+1,f,c
  6911  0039A6  C019  FFD9         	movff	mem_cmp@d,fsr2l
  6912  0039AA  C01A  FFDA         	movff	mem_cmp@d+1,fsr2h
  6913  0039AE  4A19               	infsnz	mem_cmp@d,f,c
  6914  0039B0  2A1A               	incf	mem_cmp@d+1,f,c
  6915  0039B2  50DF               	movf	indf2,w,c
  6916  0039B4  6E18               	movwf	(??_mem_cmp+2)& (0+255),c
  6917  0039B6  5018               	movf	??_mem_cmp+2,w,c
  6918  0039B8  2416               	addwf	??_mem_cmp,w,c
  6919  0039BA  6E1D               	movwf	mem_cmp@r,c
  6920  0039BC  0E00               	movlw	0
  6921  0039BE  2017               	addwfc	??_mem_cmp+1,w,c
  6922  0039C0  6E1E               	movwf	mem_cmp@r+1,c
  6923  0039C2  501E               	movf	(mem_cmp@r+1)& (0+255),w,c
  6924  0039C4  101D               	iorwf	mem_cmp@r& (0+255),w,c
  6925  0039C6  B4D8               	btfsc	status,2,c
  6926  0039C8  D7D9               	goto	l3224
  6927  0039CA                     l19:
  6928                           
  6929                           ;pff.c: 55: return r;
  6930  0039CA  C01D  F010         	movff	mem_cmp@r,?_mem_cmp
  6931  0039CE  C01E  F011         	movff	mem_cmp@r+1,?_mem_cmp+1
  6932  0039D2  0012               	return	
  6933  0039D4                     __end_of_mem_cmp:
  6934                           	opt stack 0
  6935                           tblptru	equ	0xFF8
  6936                           tblptrh	equ	0xFF7
  6937                           tblptrl	equ	0xFF6
  6938                           tablat	equ	0xFF5
  6939                           prodh	equ	0xFF4
  6940                           prodl	equ	0xFF3
  6941                           intcon	equ	0xFF2
  6942                           postinc0	equ	0xFEE
  6943                           wreg	equ	0xFE8
  6944                           indf1	equ	0xFE7
  6945                           postinc1	equ	0xFE6
  6946                           postdec1	equ	0xFE5
  6947                           fsr1h	equ	0xFE2
  6948                           fsr1l	equ	0xFE1
  6949                           indf2	equ	0xFDF
  6950                           postinc2	equ	0xFDE
  6951                           postdec2	equ	0xFDD
  6952                           fsr2h	equ	0xFDA
  6953                           fsr2l	equ	0xFD9
  6954                           status	equ	0xFD8
  6955                           
  6956 ;; *************** function _dir_rewind *****************
  6957 ;; Defined at:
  6958 ;;		line 131 in file "../../../PIC18F/pff.c"
  6959 ;; Parameters:    Size  Location     Type
  6960 ;;  dj              2   42[COMRAM] PTR struct _Dir_
  6961 ;;		 -> Dir1(16), pf_open@dj(16), 
  6962 ;; Auto vars:     Size  Location     Type
  6963 ;;  clst            4   54[COMRAM] unsigned long 
  6964 ;;  fs              2   52[COMRAM] PTR struct _FATFS_
  6965 ;;		 -> Fs(44), NULL(0), 
  6966 ;; Return value:  Size  Location     Type
  6967 ;;                  1    wreg      enum E48
  6968 ;; Registers used:
  6969 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6970 ;; Tracked objects:
  6971 ;;		On entry : 0/0
  6972 ;;		On exit  : 0/0
  6973 ;;		Unchanged: 0/0
  6974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6975 ;;      Params:         2       0       0       0       0       0       0       0       0
  6976 ;;      Locals:        10       0       0       0       0       0       0       0       0
  6977 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6978 ;;      Totals:        16       0       0       0       0       0       0       0       0
  6979 ;;Total ram usage:       16 bytes
  6980 ;; Hardware stack levels used:    1
  6981 ;; Hardware stack levels required when called:    4
  6982 ;; This function calls:
  6983 ;;		_clust2sect
  6984 ;; This function is called by:
  6985 ;;		_dir_find
  6986 ;;		_follow_path
  6987 ;;		_pf_opendir
  6988 ;;		_pf_readdir
  6989 ;; This function uses a non-reentrant model
  6990 ;;
  6991                           
  6992                           	psect	text23
  6993  002F9A                     __ptext23:
  6994                           	opt stack 0
  6995  002F9A                     _dir_rewind:
  6996                           	opt stack 23
  6997                           
  6998                           ;pff.c: 135: DWORD clst;
  6999                           ;pff.c: 136: FATFS *fs = FatFs;
  7000                           
  7001                           ;incstack = 0
  7002  002F9A  C049  F036         	movff	_FatFs+1,dir_rewind@fs+1
  7003  002F9E  C048  F035         	movff	_FatFs,dir_rewind@fs
  7004                           
  7005                           ;pff.c: 139: dj->index = 0;
  7006  002FA2  C02B  FFD9         	movff	dir_rewind@dj,fsr2l
  7007  002FA6  C02C  FFDA         	movff	dir_rewind@dj+1,fsr2h
  7008  002FAA  0E00               	movlw	0
  7009  002FAC  6EDE               	movwf	postinc2,c
  7010  002FAE  0E00               	movlw	0
  7011  002FB0  6EDD               	movwf	postdec2,c
  7012                           
  7013                           ;pff.c: 140: clst = dj->sclust;
  7014  002FB2  EE20 F004          	lfsr	2,4
  7015  002FB6  502B               	movf	dir_rewind@dj,w,c
  7016  002FB8  26D9               	addwf	fsr2l,f,c
  7017  002FBA  502C               	movf	dir_rewind@dj+1,w,c
  7018  002FBC  22DA               	addwfc	fsr2h,f,c
  7019  002FBE  CFDE F037          	movff	postinc2,dir_rewind@clst
  7020  002FC2  CFDE F038          	movff	postinc2,dir_rewind@clst+1
  7021  002FC6  CFDE F039          	movff	postinc2,dir_rewind@clst+2
  7022  002FCA  CFDE F03A          	movff	postinc2,dir_rewind@clst+3
  7023                           
  7024                           ;pff.c: 141: if (clst == 1 || clst >= fs->max_clust)
  7025  002FCE  0437               	decf	dir_rewind@clst,w,c
  7026  002FD0  1038               	iorwf	dir_rewind@clst+1,w,c
  7027  002FD2  1039               	iorwf	dir_rewind@clst+2,w,c
  7028  002FD4  103A               	iorwf	dir_rewind@clst+3,w,c
  7029  002FD6  B4D8               	btfsc	status,2,c
  7030  002FD8  D018               	goto	l3238
  7031  002FDA  EE20 F008          	lfsr	2,8
  7032  002FDE  5035               	movf	dir_rewind@fs,w,c
  7033  002FE0  26D9               	addwf	fsr2l,f,c
  7034  002FE2  5036               	movf	dir_rewind@fs+1,w,c
  7035  002FE4  22DA               	addwfc	fsr2h,f,c
  7036  002FE6  CFDE F02D          	movff	postinc2,??_dir_rewind
  7037  002FEA  CFDE F02E          	movff	postinc2,??_dir_rewind+1
  7038  002FEE  CFDE F02F          	movff	postinc2,??_dir_rewind+2
  7039  002FF2  CFDE F030          	movff	postinc2,??_dir_rewind+3
  7040  002FF6  502D               	movf	??_dir_rewind,w,c
  7041  002FF8  5C37               	subwf	dir_rewind@clst,w,c
  7042  002FFA  502E               	movf	??_dir_rewind+1,w,c
  7043  002FFC  5838               	subwfb	dir_rewind@clst+1,w,c
  7044  002FFE  502F               	movf	??_dir_rewind+2,w,c
  7045  003000  5839               	subwfb	dir_rewind@clst+2,w,c
  7046  003002  5030               	movf	??_dir_rewind+3,w,c
  7047  003004  583A               	subwfb	dir_rewind@clst+3,w,c
  7048  003006  A0D8               	btfss	status,0,c
  7049  003008  D002               	goto	l3242
  7050  00300A                     l3238:
  7051                           
  7052                           ;pff.c: 142: return FR_DISK_ERR;
  7053  00300A  0E01               	movlw	1
  7054  00300C  D05F               	goto	l52
  7055  00300E                     l3242:
  7056                           
  7057                           ;pff.c: 144: if (!clst && fs->fs_type == 3)
  7058  00300E  503A               	movf	dir_rewind@clst+3,w,c
  7059  003010  1037               	iorwf	dir_rewind@clst,w,c
  7060  003012  1038               	iorwf	dir_rewind@clst+1,w,c
  7061  003014  1039               	iorwf	dir_rewind@clst+2,w,c
  7062  003016  A4D8               	btfss	status,2,c
  7063  003018  D015               	goto	l53
  7064  00301A  0E03               	movlw	3
  7065  00301C  C035  FFD9         	movff	dir_rewind@fs,fsr2l
  7066  003020  C036  FFDA         	movff	dir_rewind@fs+1,fsr2h
  7067  003024  62DF               	cpfseq	indf2,c
  7068  003026  D00E               	goto	l53
  7069                           
  7070                           ;pff.c: 145: clst = fs->dirbase;
  7071  003028  EE20 F010          	lfsr	2,16
  7072  00302C  5035               	movf	dir_rewind@fs,w,c
  7073  00302E  26D9               	addwf	fsr2l,f,c
  7074  003030  5036               	movf	dir_rewind@fs+1,w,c
  7075  003032  22DA               	addwfc	fsr2h,f,c
  7076  003034  CFDE F037          	movff	postinc2,dir_rewind@clst
  7077  003038  CFDE F038          	movff	postinc2,dir_rewind@clst+1
  7078  00303C  CFDE F039          	movff	postinc2,dir_rewind@clst+2
  7079  003040  CFDE F03A          	movff	postinc2,dir_rewind@clst+3
  7080  003044                     l53:
  7081                           
  7082                           ;pff.c: 147: dj->clust = clst;
  7083  003044  EE20 F008          	lfsr	2,8
  7084  003048  502B               	movf	dir_rewind@dj,w,c
  7085  00304A  26D9               	addwf	fsr2l,f,c
  7086  00304C  502C               	movf	dir_rewind@dj+1,w,c
  7087  00304E  22DA               	addwfc	fsr2h,f,c
  7088  003050  C037  FFDE         	movff	dir_rewind@clst,postinc2
  7089  003054  C038  FFDE         	movff	dir_rewind@clst+1,postinc2
  7090  003058  C039  FFDE         	movff	dir_rewind@clst+2,postinc2
  7091  00305C  C03A  FFDE         	movff	dir_rewind@clst+3,postinc2
  7092                           
  7093                           ;pff.c: 148: dj->sect = clst ? clust2sect(clst) : fs->dirbase;
  7094  003060  503A               	movf	dir_rewind@clst+3,w,c
  7095  003062  1037               	iorwf	dir_rewind@clst,w,c
  7096  003064  1038               	iorwf	dir_rewind@clst+1,w,c
  7097  003066  1039               	iorwf	dir_rewind@clst+2,w,c
  7098  003068  A4D8               	btfss	status,2,c
  7099  00306A  D00F               	goto	l3252
  7100  00306C  EE20 F010          	lfsr	2,16
  7101  003070  5035               	movf	dir_rewind@fs,w,c
  7102  003072  26D9               	addwf	fsr2l,f,c
  7103  003074  5036               	movf	dir_rewind@fs+1,w,c
  7104  003076  22DA               	addwfc	fsr2h,f,c
  7105  003078  CFDE F031          	movff	postinc2,_dir_rewind$154
  7106  00307C  CFDE F032          	movff	postinc2,_dir_rewind$154+1
  7107  003080  CFDE F033          	movff	postinc2,_dir_rewind$154+2
  7108  003084  CFDE F034          	movff	postinc2,_dir_rewind$154+3
  7109  003088  D012               	goto	l3254
  7110  00308A                     l3252:
  7111  00308A  C037  F01C         	movff	dir_rewind@clst,clust2sect@clst
  7112  00308E  C038  F01D         	movff	dir_rewind@clst+1,clust2sect@clst+1
  7113  003092  C039  F01E         	movff	dir_rewind@clst+2,clust2sect@clst+2
  7114  003096  C03A  F01F         	movff	dir_rewind@clst+3,clust2sect@clst+3
  7115  00309A  ECDE  F01A         	call	_clust2sect	;wreg free
  7116  00309E  C01C  F031         	movff	?_clust2sect,_dir_rewind$154
  7117  0030A2  C01D  F032         	movff	?_clust2sect+1,_dir_rewind$154+1
  7118  0030A6  C01E  F033         	movff	?_clust2sect+2,_dir_rewind$154+2
  7119  0030AA  C01F  F034         	movff	?_clust2sect+3,_dir_rewind$154+3
  7120  0030AE                     l3254:
  7121  0030AE  EE20 F00C          	lfsr	2,12
  7122  0030B2  502B               	movf	dir_rewind@dj,w,c
  7123  0030B4  26D9               	addwf	fsr2l,f,c
  7124  0030B6  502C               	movf	dir_rewind@dj+1,w,c
  7125  0030B8  22DA               	addwfc	fsr2h,f,c
  7126  0030BA  C031  FFDE         	movff	_dir_rewind$154,postinc2
  7127  0030BE  C032  FFDE         	movff	_dir_rewind$154+1,postinc2
  7128  0030C2  C033  FFDE         	movff	_dir_rewind$154+2,postinc2
  7129  0030C6  C034  FFDE         	movff	_dir_rewind$154+3,postinc2
  7130                           
  7131                           ;pff.c: 150: return FR_OK;
  7132  0030CA  0E00               	movlw	0
  7133  0030CC                     l52:
  7134  0030CC  0012               	return	
  7135  0030CE                     __end_of_dir_rewind:
  7136                           	opt stack 0
  7137                           tblptru	equ	0xFF8
  7138                           tblptrh	equ	0xFF7
  7139                           tblptrl	equ	0xFF6
  7140                           tablat	equ	0xFF5
  7141                           prodh	equ	0xFF4
  7142                           prodl	equ	0xFF3
  7143                           intcon	equ	0xFF2
  7144                           postinc0	equ	0xFEE
  7145                           wreg	equ	0xFE8
  7146                           indf1	equ	0xFE7
  7147                           postinc1	equ	0xFE6
  7148                           postdec1	equ	0xFE5
  7149                           fsr1h	equ	0xFE2
  7150                           fsr1l	equ	0xFE1
  7151                           indf2	equ	0xFDF
  7152                           postinc2	equ	0xFDE
  7153                           postdec2	equ	0xFDD
  7154                           fsr2h	equ	0xFDA
  7155                           fsr2l	equ	0xFD9
  7156                           status	equ	0xFD8
  7157                           
  7158 ;; *************** function _dir_next *****************
  7159 ;; Defined at:
  7160 ;;		line 161 in file "../../../PIC18F/pff.c"
  7161 ;; Parameters:    Size  Location     Type
  7162 ;;  dj              2   58[COMRAM] PTR struct _Dir_
  7163 ;;		 -> Dir1(16), pf_open@dj(16), 
  7164 ;; Auto vars:     Size  Location     Type
  7165 ;;  clst            4   16[BANK0 ] unsigned long 
  7166 ;;  i               2   20[BANK0 ] unsigned short 
  7167 ;;  fs              2   14[BANK0 ] PTR struct _FATFS_
  7168 ;;		 -> Fs(44), NULL(0), 
  7169 ;; Return value:  Size  Location     Type
  7170 ;;                  1    wreg      enum E48
  7171 ;; Registers used:
  7172 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7173 ;; Tracked objects:
  7174 ;;		On entry : 0/0
  7175 ;;		On exit  : 0/0
  7176 ;;		Unchanged: 0/0
  7177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7178 ;;      Params:         2       0       0       0       0       0       0       0       0
  7179 ;;      Locals:         0       8       0       0       0       0       0       0       0
  7180 ;;      Temps:          7       0       0       0       0       0       0       0       0
  7181 ;;      Totals:         9       8       0       0       0       0       0       0       0
  7182 ;;Total ram usage:       17 bytes
  7183 ;; Hardware stack levels used:    1
  7184 ;; Hardware stack levels required when called:    7
  7185 ;; This function calls:
  7186 ;;		_clust2sect
  7187 ;;		_get_fat
  7188 ;; This function is called by:
  7189 ;;		_dir_find
  7190 ;;		_dir_read
  7191 ;;		_pf_readdir
  7192 ;; This function uses a non-reentrant model
  7193 ;;
  7194                           
  7195                           	psect	text24
  7196  00242E                     __ptext24:
  7197                           	opt stack 0
  7198  00242E                     _dir_next:
  7199                           	opt stack 19
  7200                           
  7201                           ;pff.c: 165: DWORD clst;
  7202                           ;pff.c: 166: WORD i;
  7203                           ;pff.c: 167: FATFS *fs = FatFs;
  7204                           
  7205                           ;incstack = 0
  7206  00242E  0100               	movlb	0	; () banked
  7207  002430  C049  F06F         	movff	_FatFs+1,dir_next@fs+1
  7208  002434  0100               	movlb	0	; () banked
  7209  002436  C048  F06E         	movff	_FatFs,dir_next@fs
  7210                           
  7211                           ; BSR set to: 0
  7212                           ;pff.c: 170: i = dj->index + 1;
  7213  00243A  C03B  FFD9         	movff	dir_next@dj,fsr2l
  7214  00243E  C03C  FFDA         	movff	dir_next@dj+1,fsr2h
  7215  002442  CFDE F03D          	movff	postinc2,??_dir_next
  7216  002446  CFDD F03E          	movff	postdec2,??_dir_next+1
  7217  00244A  0E01               	movlw	1
  7218  00244C  243D               	addwf	??_dir_next,w,c
  7219  00244E  0100               	movlb	0	; () banked
  7220  002450  6F74               	movwf	dir_next@i& (0+255),b
  7221  002452  0E00               	movlw	0
  7222  002454  203E               	addwfc	??_dir_next+1,w,c
  7223  002456  0100               	movlb	0	; () banked
  7224  002458  6F75               	movwf	(dir_next@i+1)& (0+255),b
  7225                           
  7226                           ; BSR set to: 0
  7227                           ;pff.c: 171: if (!i || !dj->sect)
  7228  00245A  0100               	movlb	0	; () banked
  7229  00245C  5175               	movf	(dir_next@i+1)& (0+255),w,b
  7230  00245E  1174               	iorwf	dir_next@i& (0+255),w,b
  7231  002460  B4D8               	btfsc	status,2,c
  7232  002462  D0CA               	goto	u5550
  7233                           
  7234                           ; BSR set to: 0
  7235  002464  EE20 F00C          	lfsr	2,12
  7236  002468  503B               	movf	dir_next@dj,w,c
  7237  00246A  26D9               	addwf	fsr2l,f,c
  7238  00246C  503C               	movf	dir_next@dj+1,w,c
  7239  00246E  22DA               	addwfc	fsr2h,f,c
  7240  002470  CFDE F03D          	movff	postinc2,??_dir_next
  7241  002474  CFDE F03E          	movff	postinc2,??_dir_next+1
  7242  002478  CFDE F03F          	movff	postinc2,??_dir_next+2
  7243  00247C  CFDE F040          	movff	postinc2,??_dir_next+3
  7244  002480  5040               	movf	??_dir_next+3,w,c
  7245  002482  103D               	iorwf	??_dir_next,w,c
  7246  002484  103E               	iorwf	??_dir_next+1,w,c
  7247  002486  103F               	iorwf	??_dir_next+2,w,c
  7248  002488  B4D8               	btfsc	status,2,c
  7249                           
  7250                           ; BSR set to: 0
  7251  00248A  D0B6               	goto	u5550
  7252                           
  7253                           ; BSR set to: 0
  7254                           ;pff.c: 174: if (!(i & (16-1))) {
  7255                           
  7256                           ; BSR set to: 0
  7257                           
  7258                           ; BSR set to: 0
  7259                           
  7260                           ; BSR set to: 0
  7261                           ;pff.c: 172: return FR_NO_FILE;
  7262  00248C  0E0F               	movlw	15
  7263  00248E  0100               	movlb	0	; () banked
  7264  002490  1574               	andwf	dir_next@i& (0+255),w,b
  7265  002492  6E3D               	movwf	??_dir_next& (0+255),c
  7266  002494  0E00               	movlw	0
  7267  002496  0100               	movlb	0	; () banked
  7268  002498  1575               	andwf	(dir_next@i+1)& (0+255),w,b
  7269  00249A  6E3E               	movwf	(??_dir_next+1)& (0+255),c
  7270  00249C  503E               	movf	??_dir_next+1,w,c
  7271  00249E  103D               	iorwf	??_dir_next,w,c
  7272  0024A0  A4D8               	btfss	status,2,c
  7273  0024A2  D0E0               	goto	l5050
  7274                           
  7275                           ; BSR set to: 0
  7276                           ;pff.c: 175: dj->sect++;
  7277  0024A4  EE20 F00C          	lfsr	2,12
  7278  0024A8  503B               	movf	dir_next@dj,w,c
  7279  0024AA  26D9               	addwf	fsr2l,f,c
  7280  0024AC  503C               	movf	dir_next@dj+1,w,c
  7281  0024AE  22DA               	addwfc	fsr2h,f,c
  7282  0024B0  2ADE               	incf	postinc2,f,c
  7283  0024B2  0E00               	movlw	0
  7284  0024B4  22DE               	addwfc	postinc2,f,c
  7285  0024B6  22DE               	addwfc	postinc2,f,c
  7286  0024B8  22DD               	addwfc	postdec2,f,c
  7287                           
  7288                           ;pff.c: 177: if (dj->clust == 0) {
  7289  0024BA  EE20 F008          	lfsr	2,8
  7290  0024BE  503B               	movf	dir_next@dj,w,c
  7291  0024C0  26D9               	addwf	fsr2l,f,c
  7292  0024C2  503C               	movf	dir_next@dj+1,w,c
  7293  0024C4  22DA               	addwfc	fsr2h,f,c
  7294  0024C6  CFDE F03D          	movff	postinc2,??_dir_next
  7295  0024CA  CFDE F03E          	movff	postinc2,??_dir_next+1
  7296  0024CE  CFDE F03F          	movff	postinc2,??_dir_next+2
  7297  0024D2  CFDE F040          	movff	postinc2,??_dir_next+3
  7298  0024D6  5040               	movf	??_dir_next+3,w,c
  7299  0024D8  103D               	iorwf	??_dir_next,w,c
  7300  0024DA  103E               	iorwf	??_dir_next+1,w,c
  7301  0024DC  103F               	iorwf	??_dir_next+2,w,c
  7302  0024DE  A4D8               	btfss	status,2,c
  7303  0024E0  D016               	goto	l5030
  7304                           
  7305                           ; BSR set to: 0
  7306                           ;pff.c: 178: if (i >= fs->n_rootdir)
  7307  0024E2  0100               	movlb	0	; () banked
  7308  0024E4  EE20 F004          	lfsr	2,4
  7309  0024E8  0100               	movlb	0	; () banked
  7310  0024EA  516E               	movf	dir_next@fs& (0+255),w,b
  7311  0024EC  26D9               	addwf	fsr2l,f,c
  7312  0024EE  0100               	movlb	0	; () banked
  7313  0024F0  516F               	movf	(dir_next@fs+1)& (0+255),w,b
  7314  0024F2  22DA               	addwfc	fsr2h,f,c
  7315  0024F4  CFDE F03D          	movff	postinc2,??_dir_next
  7316  0024F8  CFDD F03E          	movff	postdec2,??_dir_next+1
  7317  0024FC  503D               	movf	??_dir_next,w,c
  7318  0024FE  0100               	movlb	0	; () banked
  7319  002500  5D74               	subwf	dir_next@i& (0+255),w,b
  7320  002502  503E               	movf	??_dir_next+1,w,c
  7321  002504  0100               	movlb	0	; () banked
  7322  002506  5975               	subwfb	(dir_next@i+1)& (0+255),w,b
  7323  002508  A0D8               	btfss	status,0,c
  7324  00250A  D0AC               	goto	l5050
  7325  00250C  D075               	goto	u5550
  7326  00250E                     l5030:
  7327                           
  7328                           ; BSR set to: 0
  7329                           ;pff.c: 181: else {
  7330                           ;pff.c: 182: if (((i / 16) & (fs->csize-1)) == 0) {
  7331  00250E  0100               	movlb	0	; () banked
  7332  002510  C074  F03D         	movff	dir_next@i,??_dir_next
  7333  002514  0100               	movlb	0	; () banked
  7334  002516  C075  F03E         	movff	dir_next@i+1,??_dir_next+1
  7335  00251A  0E04               	movlw	4
  7336  00251C  6E3F               	movwf	(??_dir_next+2)& (0+255),c
  7337  00251E                     u5525:
  7338  00251E  90D8               	bcf	status,0,c
  7339  002520  323E               	rrcf	??_dir_next+1,f,c
  7340  002522  323D               	rrcf	??_dir_next,f,c
  7341  002524  2E3F               	decfsz	(??_dir_next+2)& (0+255),f,c
  7342  002526  D7FB               	goto	u5525
  7343  002528  0EFF               	movlw	255
  7344  00252A  6E40               	movwf	(??_dir_next+3)& (0+255),c
  7345  00252C  0EFF               	movlw	255
  7346  00252E  6E41               	movwf	(??_dir_next+4)& (0+255),c
  7347  002530  0100               	movlb	0	; () banked
  7348  002532  EE20 F001          	lfsr	2,1
  7349  002536  0100               	movlb	0	; () banked
  7350  002538  516E               	movf	dir_next@fs& (0+255),w,b
  7351  00253A  26D9               	addwf	fsr2l,f,c
  7352  00253C  0100               	movlb	0	; () banked
  7353  00253E  516F               	movf	(dir_next@fs+1)& (0+255),w,b
  7354  002540  22DA               	addwfc	fsr2h,f,c
  7355  002542  50DF               	movf	indf2,w,c
  7356  002544  6E42               	movwf	(??_dir_next+5)& (0+255),c
  7357  002546  6A43               	clrf	(??_dir_next+6)& (0+255),c
  7358  002548  5040               	movf	??_dir_next+3,w,c
  7359  00254A  2642               	addwf	??_dir_next+5,f,c
  7360  00254C  5041               	movf	??_dir_next+4,w,c
  7361  00254E  2243               	addwfc	??_dir_next+6,f,c
  7362  002550  503D               	movf	??_dir_next,w,c
  7363  002552  1642               	andwf	??_dir_next+5,f,c
  7364  002554  503E               	movf	??_dir_next+1,w,c
  7365  002556  1643               	andwf	??_dir_next+6,f,c
  7366  002558  5043               	movf	??_dir_next+6,w,c
  7367  00255A  1042               	iorwf	??_dir_next+5,w,c
  7368  00255C  A4D8               	btfss	status,2,c
  7369  00255E  D082               	goto	l5050
  7370                           
  7371                           ; BSR set to: 0
  7372                           ;pff.c: 183: clst = get_fat(dj->clust);
  7373  002560  EE20 F008          	lfsr	2,8
  7374  002564  503B               	movf	dir_next@dj,w,c
  7375  002566  26D9               	addwf	fsr2l,f,c
  7376  002568  503C               	movf	dir_next@dj+1,w,c
  7377  00256A  22DA               	addwfc	fsr2h,f,c
  7378  00256C  CFDE F02D          	movff	postinc2,get_fat@clst
  7379  002570  CFDE F02E          	movff	postinc2,get_fat@clst+1
  7380  002574  CFDE F02F          	movff	postinc2,get_fat@clst+2
  7381  002578  CFDE F030          	movff	postinc2,get_fat@clst+3
  7382  00257C  ECC5  F00B         	call	_get_fat	;wreg free
  7383  002580  C02D  F070         	movff	?_get_fat,dir_next@clst
  7384  002584  C02E  F071         	movff	?_get_fat+1,dir_next@clst+1
  7385  002588  C02F  F072         	movff	?_get_fat+2,dir_next@clst+2
  7386  00258C  C030  F073         	movff	?_get_fat+3,dir_next@clst+3
  7387                           
  7388                           ;pff.c: 184: if (clst <= 1) return FR_DISK_ERR;
  7389  002590  0E02               	movlw	2
  7390  002592  6E3D               	movwf	??_dir_next& (0+255),c
  7391  002594  6A3E               	clrf	(??_dir_next+1)& (0+255),c
  7392  002596  6A3F               	clrf	(??_dir_next+2)& (0+255),c
  7393  002598  6A40               	clrf	(??_dir_next+3)& (0+255),c
  7394  00259A  503D               	movf	??_dir_next,w,c
  7395  00259C  0100               	movlb	0	; () banked
  7396  00259E  5D70               	subwf	dir_next@clst& (0+255),w,b
  7397  0025A0  503E               	movf	??_dir_next+1,w,c
  7398  0025A2  0100               	movlb	0	; () banked
  7399  0025A4  5971               	subwfb	(dir_next@clst+1)& (0+255),w,b
  7400  0025A6  503F               	movf	??_dir_next+2,w,c
  7401  0025A8  0100               	movlb	0	; () banked
  7402  0025AA  5972               	subwfb	(dir_next@clst+2)& (0+255),w,b
  7403  0025AC  5040               	movf	??_dir_next+3,w,c
  7404  0025AE  0100               	movlb	0	; () banked
  7405  0025B0  5973               	subwfb	(dir_next@clst+3)& (0+255),w,b
  7406  0025B2  B0D8               	btfsc	status,0,c
  7407  0025B4  D002               	goto	l5040
  7408                           
  7409                           ; BSR set to: 0
  7410  0025B6  0E01               	movlw	1
  7411  0025B8  D060               	goto	l63
  7412  0025BA                     l5040:
  7413                           
  7414                           ; BSR set to: 0
  7415                           ;pff.c: 185: if (clst >= fs->max_clust)
  7416  0025BA  0100               	movlb	0	; () banked
  7417  0025BC  EE20 F008          	lfsr	2,8
  7418  0025C0  0100               	movlb	0	; () banked
  7419  0025C2  516E               	movf	dir_next@fs& (0+255),w,b
  7420  0025C4  26D9               	addwf	fsr2l,f,c
  7421  0025C6  0100               	movlb	0	; () banked
  7422  0025C8  516F               	movf	(dir_next@fs+1)& (0+255),w,b
  7423  0025CA  22DA               	addwfc	fsr2h,f,c
  7424  0025CC  CFDE F03D          	movff	postinc2,??_dir_next
  7425  0025D0  CFDE F03E          	movff	postinc2,??_dir_next+1
  7426  0025D4  CFDE F03F          	movff	postinc2,??_dir_next+2
  7427  0025D8  CFDE F040          	movff	postinc2,??_dir_next+3
  7428  0025DC  503D               	movf	??_dir_next,w,c
  7429  0025DE  0100               	movlb	0	; () banked
  7430  0025E0  5D70               	subwf	dir_next@clst& (0+255),w,b
  7431  0025E2  503E               	movf	??_dir_next+1,w,c
  7432  0025E4  0100               	movlb	0	; () banked
  7433  0025E6  5971               	subwfb	(dir_next@clst+1)& (0+255),w,b
  7434  0025E8  503F               	movf	??_dir_next+2,w,c
  7435  0025EA  0100               	movlb	0	; () banked
  7436  0025EC  5972               	subwfb	(dir_next@clst+2)& (0+255),w,b
  7437  0025EE  5040               	movf	??_dir_next+3,w,c
  7438  0025F0  0100               	movlb	0	; () banked
  7439  0025F2  5973               	subwfb	(dir_next@clst+3)& (0+255),w,b
  7440  0025F4  A0D8               	btfss	status,0,c
  7441  0025F6  D002               	goto	l5046
  7442  0025F8                     u5550:
  7443                           
  7444                           ; BSR set to: 0
  7445                           ;pff.c: 186: return FR_NO_FILE;
  7446  0025F8  0E03               	movlw	3
  7447  0025FA  D03F               	goto	l63
  7448  0025FC                     l5046:
  7449                           
  7450                           ; BSR set to: 0
  7451                           ;pff.c: 187: dj->clust = clst;
  7452  0025FC  EE20 F008          	lfsr	2,8
  7453  002600  503B               	movf	dir_next@dj,w,c
  7454  002602  26D9               	addwf	fsr2l,f,c
  7455  002604  503C               	movf	dir_next@dj+1,w,c
  7456  002606  22DA               	addwfc	fsr2h,f,c
  7457  002608  0100               	movlb	0	; () banked
  7458  00260A  C070  FFDE         	movff	dir_next@clst,postinc2
  7459  00260E  0100               	movlb	0	; () banked
  7460  002610  C071  FFDE         	movff	dir_next@clst+1,postinc2
  7461  002614  0100               	movlb	0	; () banked
  7462  002616  C072  FFDE         	movff	dir_next@clst+2,postinc2
  7463  00261A  0100               	movlb	0	; () banked
  7464  00261C  C073  FFDE         	movff	dir_next@clst+3,postinc2
  7465                           
  7466                           ; BSR set to: 0
  7467                           ;pff.c: 188: dj->sect = clust2sect(clst);
  7468  002620  C070  F01C         	movff	dir_next@clst,clust2sect@clst
  7469  002624  C071  F01D         	movff	dir_next@clst+1,clust2sect@clst+1
  7470  002628  C072  F01E         	movff	dir_next@clst+2,clust2sect@clst+2
  7471  00262C  C073  F01F         	movff	dir_next@clst+3,clust2sect@clst+3
  7472  002630  ECDE  F01A         	call	_clust2sect	;wreg free
  7473  002634  C01C  F03D         	movff	?_clust2sect,??_dir_next
  7474  002638  C01D  F03E         	movff	?_clust2sect+1,??_dir_next+1
  7475  00263C  C01E  F03F         	movff	?_clust2sect+2,??_dir_next+2
  7476  002640  C01F  F040         	movff	?_clust2sect+3,??_dir_next+3
  7477  002644  EE20 F00C          	lfsr	2,12
  7478  002648  503B               	movf	dir_next@dj,w,c
  7479  00264A  26D9               	addwf	fsr2l,f,c
  7480  00264C  503C               	movf	dir_next@dj+1,w,c
  7481  00264E  22DA               	addwfc	fsr2h,f,c
  7482  002650  C03D  FFDE         	movff	??_dir_next,postinc2
  7483  002654  C03E  FFDE         	movff	??_dir_next+1,postinc2
  7484  002658  C03F  FFDE         	movff	??_dir_next+2,postinc2
  7485  00265C  C040  FFDD         	movff	??_dir_next+3,postdec2
  7486  002660  06D9               	decf	fsr2l,f,c
  7487  002662  06D9               	decf	fsr2l,f,c
  7488  002664                     l5050:
  7489                           
  7490                           ;pff.c: 189: }
  7491                           ;pff.c: 190: }
  7492                           ;pff.c: 191: }
  7493                           ;pff.c: 193: dj->index = i;
  7494  002664  C03B  FFD9         	movff	dir_next@dj,fsr2l
  7495  002668  C03C  FFDA         	movff	dir_next@dj+1,fsr2h
  7496  00266C  0100               	movlb	0	; () banked
  7497  00266E  C074  FFDE         	movff	dir_next@i,postinc2
  7498  002672  0100               	movlb	0	; () banked
  7499  002674  C075  FFDD         	movff	dir_next@i+1,postdec2
  7500                           
  7501                           ; BSR set to: 0
  7502                           ;pff.c: 195: return FR_OK;
  7503  002678  0E00               	movlw	0
  7504  00267A                     l63:
  7505                           
  7506                           ; BSR set to: 0
  7507  00267A  0012               	return	
  7508  00267C                     __end_of_dir_next:
  7509                           	opt stack 0
  7510                           tblptru	equ	0xFF8
  7511                           tblptrh	equ	0xFF7
  7512                           tblptrl	equ	0xFF6
  7513                           tablat	equ	0xFF5
  7514                           prodh	equ	0xFF4
  7515                           prodl	equ	0xFF3
  7516                           intcon	equ	0xFF2
  7517                           postinc0	equ	0xFEE
  7518                           wreg	equ	0xFE8
  7519                           indf1	equ	0xFE7
  7520                           postinc1	equ	0xFE6
  7521                           postdec1	equ	0xFE5
  7522                           fsr1h	equ	0xFE2
  7523                           fsr1l	equ	0xFE1
  7524                           indf2	equ	0xFDF
  7525                           postinc2	equ	0xFDE
  7526                           postdec2	equ	0xFDD
  7527                           fsr2h	equ	0xFDA
  7528                           fsr2l	equ	0xFD9
  7529                           status	equ	0xFD8
  7530                           
  7531 ;; *************** function _get_fat *****************
  7532 ;; Defined at:
  7533 ;;		line 65 in file "../../../PIC18F/pff.c"
  7534 ;; Parameters:    Size  Location     Type
  7535 ;;  clst            4   44[COMRAM] unsigned long 
  7536 ;; Auto vars:     Size  Location     Type
  7537 ;;  buf             4    2[BANK0 ] unsigned char [4]
  7538 ;;  fs              2   12[BANK0 ] PTR struct _FATFS_
  7539 ;;		 -> Fs(44), NULL(0), 
  7540 ;;  bc              2   10[BANK0 ] unsigned short 
  7541 ;;  ofs             2    8[BANK0 ] unsigned short 
  7542 ;;  wc              2    6[BANK0 ] unsigned short 
  7543 ;; Return value:  Size  Location     Type
  7544 ;;                  4   44[COMRAM] unsigned long 
  7545 ;; Registers used:
  7546 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7547 ;; Tracked objects:
  7548 ;;		On entry : 0/0
  7549 ;;		On exit  : 0/0
  7550 ;;		Unchanged: 0/0
  7551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7552 ;;      Params:         4       0       0       0       0       0       0       0       0
  7553 ;;      Locals:         0      14       0       0       0       0       0       0       0
  7554 ;;      Temps:         10       0       0       0       0       0       0       0       0
  7555 ;;      Totals:        14      14       0       0       0       0       0       0       0
  7556 ;;Total ram usage:       28 bytes
  7557 ;; Hardware stack levels used:    1
  7558 ;; Hardware stack levels required when called:    6
  7559 ;; This function calls:
  7560 ;;		_disk_readp
  7561 ;; This function is called by:
  7562 ;;		_dir_next
  7563 ;;		_pf_read
  7564 ;;		_pf_lseek
  7565 ;; This function uses a non-reentrant model
  7566 ;;
  7567                           
  7568                           	psect	text25
  7569  00178A                     __ptext25:
  7570                           	opt stack 0
  7571  00178A                     _get_fat:
  7572                           	opt stack 22
  7573                           
  7574                           ;pff.c: 69: WORD wc, bc, ofs;
  7575                           ;pff.c: 70: BYTE buf[4];
  7576                           ;pff.c: 71: FATFS *fs = FatFs;
  7577                           
  7578                           ; BSR set to: 0
  7579                           ;incstack = 0
  7580  00178A  0100               	movlb	0	; () banked
  7581  00178C  C049  F06D         	movff	_FatFs+1,get_fat@fs+1
  7582  001790  0100               	movlb	0	; () banked
  7583  001792  C048  F06C         	movff	_FatFs,get_fat@fs
  7584                           
  7585                           ;pff.c: 74: if (clst < 2 || clst >= fs->max_clust)
  7586  001796  0E02               	movlw	2
  7587  001798  5C2D               	subwf	get_fat@clst,w,c
  7588  00179A  0E00               	movlw	0
  7589  00179C  582E               	subwfb	get_fat@clst+1,w,c
  7590  00179E  0E00               	movlw	0
  7591  0017A0  582F               	subwfb	get_fat@clst+2,w,c
  7592  0017A2  0E00               	movlw	0
  7593  0017A4  5830               	subwfb	get_fat@clst+3,w,c
  7594  0017A6  A0D8               	btfss	status,0,c
  7595  0017A8  D1C7               	goto	l5004
  7596                           
  7597                           ; BSR set to: 0
  7598  0017AA  0100               	movlb	0	; () banked
  7599  0017AC  EE20 F008          	lfsr	2,8
  7600  0017B0  0100               	movlb	0	; () banked
  7601  0017B2  516C               	movf	get_fat@fs& (0+255),w,b
  7602  0017B4  26D9               	addwf	fsr2l,f,c
  7603  0017B6  0100               	movlb	0	; () banked
  7604  0017B8  516D               	movf	(get_fat@fs+1)& (0+255),w,b
  7605  0017BA  22DA               	addwfc	fsr2h,f,c
  7606  0017BC  CFDE F031          	movff	postinc2,??_get_fat
  7607  0017C0  CFDE F032          	movff	postinc2,??_get_fat+1
  7608  0017C4  CFDE F033          	movff	postinc2,??_get_fat+2
  7609  0017C8  CFDE F034          	movff	postinc2,??_get_fat+3
  7610  0017CC  5031               	movf	??_get_fat,w,c
  7611  0017CE  5C2D               	subwf	get_fat@clst,w,c
  7612  0017D0  5032               	movf	??_get_fat+1,w,c
  7613  0017D2  582E               	subwfb	get_fat@clst+1,w,c
  7614  0017D4  5033               	movf	??_get_fat+2,w,c
  7615  0017D6  582F               	subwfb	get_fat@clst+2,w,c
  7616  0017D8  5034               	movf	??_get_fat+3,w,c
  7617  0017DA  5830               	subwfb	get_fat@clst+3,w,c
  7618  0017DC  A0D8               	btfss	status,0,c
  7619  0017DE  D19E               	goto	l5002
  7620                           
  7621                           ; BSR set to: 0
  7622  0017E0  D1AB               	goto	l5004
  7623  0017E2                     l28:
  7624                           
  7625                           ; BSR set to: 0
  7626                           ;pff.c: 79: bc = (WORD)clst; bc += bc / 2;
  7627  0017E2  C02D  F06A         	movff	get_fat@clst,get_fat@bc
  7628  0017E6  C02E  F06B         	movff	get_fat@clst+1,get_fat@bc+1
  7629                           
  7630                           ; BSR set to: 0
  7631  0017EA  90D8               	bcf	status,0,c
  7632  0017EC  0100               	movlb	0	; () banked
  7633  0017EE  316B               	rrcf	(get_fat@bc+1)& (0+255),w,b
  7634  0017F0  6E32               	movwf	(??_get_fat+1)& (0+255),c
  7635  0017F2  0100               	movlb	0	; () banked
  7636  0017F4  316A               	rrcf	get_fat@bc& (0+255),w,b
  7637  0017F6  6E31               	movwf	??_get_fat& (0+255),c
  7638  0017F8  5031               	movf	??_get_fat,w,c
  7639  0017FA  0100               	movlb	0	; () banked
  7640  0017FC  276A               	addwf	get_fat@bc& (0+255),f,b
  7641  0017FE  5032               	movf	??_get_fat+1,w,c
  7642  001800  0100               	movlb	0	; () banked
  7643  001802  236B               	addwfc	(get_fat@bc+1)& (0+255),f,b
  7644                           
  7645                           ;pff.c: 80: ofs = bc % 512; bc /= 512;
  7646  001804  0EFF               	movlw	255
  7647  001806  0100               	movlb	0	; () banked
  7648  001808  156A               	andwf	get_fat@bc& (0+255),w,b
  7649  00180A  0100               	movlb	0	; () banked
  7650  00180C  6F68               	movwf	get_fat@ofs& (0+255),b
  7651  00180E  0E01               	movlw	1
  7652  001810  0100               	movlb	0	; () banked
  7653  001812  156B               	andwf	(get_fat@bc+1)& (0+255),w,b
  7654  001814  0100               	movlb	0	; () banked
  7655  001816  6F69               	movwf	(get_fat@ofs+1)& (0+255),b
  7656  001818  0E09               	movlw	9
  7657  00181A  6E31               	movwf	??_get_fat& (0+255),c
  7658  00181C                     u5375:
  7659  00181C  90D8               	bcf	status,0,c
  7660  00181E  0100               	movlb	0	; () banked
  7661  001820  336B               	rrcf	(get_fat@bc+1)& (0+255),f,b
  7662  001822  0100               	movlb	0	; () banked
  7663  001824  336A               	rrcf	get_fat@bc& (0+255),f,b
  7664  001826  2E31               	decfsz	??_get_fat& (0+255),f,c
  7665  001828  D7F9               	goto	u5375
  7666                           
  7667                           ;pff.c: 81: if (ofs != 511) {
  7668  00182A  0100               	movlb	0	; () banked
  7669  00182C  2968               	incf	get_fat@ofs& (0+255),w,b
  7670  00182E  B4D8               	btfsc	status,2,c
  7671  001830  0569               	decf	(get_fat@ofs+1)& (0+255),w,b
  7672  001832  B4D8               	btfsc	status,2,c
  7673  001834  D030               	goto	l4968
  7674                           
  7675                           ; BSR set to: 0
  7676                           ;pff.c: 82: if (disk_readp(buf, fs->fatbase + bc, ofs, 2)) break;
  7677  001836  0100               	movlb	0	; () banked
  7678  001838  0E00               	movlw	high get_fat@buf
  7679  00183A  6E1E               	movwf	disk_readp@buff+1,c
  7680  00183C  0100               	movlb	0	; () banked
  7681  00183E  0E62               	movlw	low get_fat@buf
  7682  001840  6E1D               	movwf	disk_readp@buff,c
  7683  001842  0100               	movlb	0	; () banked
  7684  001844  EE20 F00C          	lfsr	2,12
  7685  001848  0100               	movlb	0	; () banked
  7686  00184A  516C               	movf	get_fat@fs& (0+255),w,b
  7687  00184C  26D9               	addwf	fsr2l,f,c
  7688  00184E  0100               	movlb	0	; () banked
  7689  001850  516D               	movf	(get_fat@fs+1)& (0+255),w,b
  7690  001852  22DA               	addwfc	fsr2h,f,c
  7691  001854  CFDE F031          	movff	postinc2,??_get_fat
  7692  001858  CFDE F032          	movff	postinc2,??_get_fat+1
  7693  00185C  CFDE F033          	movff	postinc2,??_get_fat+2
  7694  001860  CFDE F034          	movff	postinc2,??_get_fat+3
  7695  001864  0100               	movlb	0	; () banked
  7696  001866  516A               	movf	get_fat@bc& (0+255),w,b
  7697  001868  2431               	addwf	??_get_fat,w,c
  7698  00186A  6E1F               	movwf	disk_readp@lba,c
  7699  00186C  0100               	movlb	0	; () banked
  7700  00186E  516B               	movf	(get_fat@bc+1)& (0+255),w,b
  7701  001870  2032               	addwfc	??_get_fat+1,w,c
  7702  001872  6E20               	movwf	disk_readp@lba+1,c
  7703  001874  0E00               	movlw	0
  7704  001876  2033               	addwfc	??_get_fat+2,w,c
  7705  001878  6E21               	movwf	disk_readp@lba+2,c
  7706  00187A  0E00               	movlw	0
  7707  00187C  2034               	addwfc	??_get_fat+3,w,c
  7708  00187E  6E22               	movwf	disk_readp@lba+3,c
  7709  001880  C068  F023         	movff	get_fat@ofs,disk_readp@ofs
  7710  001884  C069  F024         	movff	get_fat@ofs+1,disk_readp@ofs+1
  7711  001888  0E00               	movlw	0
  7712  00188A  6E26               	movwf	disk_readp@cnt+1,c
  7713  00188C  0E02               	movlw	2
  7714  00188E  6E25               	movwf	disk_readp@cnt,c
  7715  001890  EC71  F01A         	call	_disk_readp	;wreg free
  7716  001894  D06C               	goto	L16
  7717  001896                     l4968:
  7718                           
  7719                           ;pff.c: 84: if (disk_readp(buf, fs->fatbase + bc, 511, 1)) break;
  7720  001896  0100               	movlb	0	; () banked
  7721  001898  0E00               	movlw	high get_fat@buf
  7722  00189A  6E1E               	movwf	disk_readp@buff+1,c
  7723  00189C  0100               	movlb	0	; () banked
  7724  00189E  0E62               	movlw	low get_fat@buf
  7725  0018A0  6E1D               	movwf	disk_readp@buff,c
  7726  0018A2  0100               	movlb	0	; () banked
  7727  0018A4  EE20 F00C          	lfsr	2,12
  7728  0018A8  0100               	movlb	0	; () banked
  7729  0018AA  516C               	movf	get_fat@fs& (0+255),w,b
  7730  0018AC  26D9               	addwf	fsr2l,f,c
  7731  0018AE  0100               	movlb	0	; () banked
  7732  0018B0  516D               	movf	(get_fat@fs+1)& (0+255),w,b
  7733  0018B2  22DA               	addwfc	fsr2h,f,c
  7734  0018B4  CFDE F031          	movff	postinc2,??_get_fat
  7735  0018B8  CFDE F032          	movff	postinc2,??_get_fat+1
  7736  0018BC  CFDE F033          	movff	postinc2,??_get_fat+2
  7737  0018C0  CFDE F034          	movff	postinc2,??_get_fat+3
  7738  0018C4  0100               	movlb	0	; () banked
  7739  0018C6  516A               	movf	get_fat@bc& (0+255),w,b
  7740  0018C8  2431               	addwf	??_get_fat,w,c
  7741  0018CA  6E1F               	movwf	disk_readp@lba,c
  7742  0018CC  0100               	movlb	0	; () banked
  7743  0018CE  516B               	movf	(get_fat@bc+1)& (0+255),w,b
  7744  0018D0  2032               	addwfc	??_get_fat+1,w,c
  7745  0018D2  6E20               	movwf	disk_readp@lba+1,c
  7746  0018D4  0E00               	movlw	0
  7747  0018D6  2033               	addwfc	??_get_fat+2,w,c
  7748  0018D8  6E21               	movwf	disk_readp@lba+2,c
  7749  0018DA  0E00               	movlw	0
  7750  0018DC  2034               	addwfc	??_get_fat+3,w,c
  7751  0018DE  6E22               	movwf	disk_readp@lba+3,c
  7752  0018E0  0E01               	movlw	1
  7753  0018E2  6E24               	movwf	disk_readp@ofs+1,c
  7754  0018E4  6823               	setf	disk_readp@ofs,c
  7755  0018E6  0E00               	movlw	0
  7756  0018E8  6E26               	movwf	disk_readp@cnt+1,c
  7757  0018EA  0E01               	movlw	1
  7758  0018EC  6E25               	movwf	disk_readp@cnt,c
  7759  0018EE  EC71  F01A         	call	_disk_readp	;wreg free
  7760  0018F2  0900               	iorlw	0
  7761  0018F4  A4D8               	btfss	status,2,c
  7762  0018F6  D120               	goto	l5004
  7763                           
  7764                           ;pff.c: 85: if (disk_readp(buf+1, fs->fatbase + bc + 1, 0, 1)) break;
  7765  0018F8  0100               	movlb	0	; () banked
  7766  0018FA  0E00               	movlw	high (get_fat@buf+1)
  7767  0018FC  6E1E               	movwf	disk_readp@buff+1,c
  7768  0018FE  0100               	movlb	0	; () banked
  7769  001900  0E63               	movlw	low (get_fat@buf+1)
  7770  001902  6E1D               	movwf	disk_readp@buff,c
  7771  001904  0100               	movlb	0	; () banked
  7772  001906  EE20 F00C          	lfsr	2,12
  7773  00190A  0100               	movlb	0	; () banked
  7774  00190C  516C               	movf	get_fat@fs& (0+255),w,b
  7775  00190E  26D9               	addwf	fsr2l,f,c
  7776  001910  0100               	movlb	0	; () banked
  7777  001912  516D               	movf	(get_fat@fs+1)& (0+255),w,b
  7778  001914  22DA               	addwfc	fsr2h,f,c
  7779  001916  CFDE F031          	movff	postinc2,??_get_fat
  7780  00191A  CFDE F032          	movff	postinc2,??_get_fat+1
  7781  00191E  CFDE F033          	movff	postinc2,??_get_fat+2
  7782  001922  CFDE F034          	movff	postinc2,??_get_fat+3
  7783  001926  0100               	movlb	0	; () banked
  7784  001928  516A               	movf	get_fat@bc& (0+255),w,b
  7785  00192A  2431               	addwf	??_get_fat,w,c
  7786  00192C  6E35               	movwf	(??_get_fat+4)& (0+255),c
  7787  00192E  0100               	movlb	0	; () banked
  7788  001930  516B               	movf	(get_fat@bc+1)& (0+255),w,b
  7789  001932  2032               	addwfc	??_get_fat+1,w,c
  7790  001934  6E36               	movwf	(??_get_fat+5)& (0+255),c
  7791  001936  0E00               	movlw	0
  7792  001938  2033               	addwfc	??_get_fat+2,w,c
  7793  00193A  6E37               	movwf	(??_get_fat+6)& (0+255),c
  7794  00193C  0E00               	movlw	0
  7795  00193E  2034               	addwfc	??_get_fat+3,w,c
  7796  001940  6E38               	movwf	(??_get_fat+7)& (0+255),c
  7797  001942  0E01               	movlw	1
  7798  001944  2435               	addwf	??_get_fat+4,w,c
  7799  001946  6E1F               	movwf	disk_readp@lba,c
  7800  001948  0E00               	movlw	0
  7801  00194A  2036               	addwfc	??_get_fat+5,w,c
  7802  00194C  6E20               	movwf	disk_readp@lba+1,c
  7803  00194E  0E00               	movlw	0
  7804  001950  2037               	addwfc	??_get_fat+6,w,c
  7805  001952  6E21               	movwf	disk_readp@lba+2,c
  7806  001954  0E00               	movlw	0
  7807  001956  2038               	addwfc	??_get_fat+7,w,c
  7808  001958  6E22               	movwf	disk_readp@lba+3,c
  7809  00195A  0E00               	movlw	0
  7810  00195C  6E24               	movwf	disk_readp@ofs+1,c
  7811  00195E  0E00               	movlw	0
  7812  001960  6E23               	movwf	disk_readp@ofs,c
  7813  001962  0E00               	movlw	0
  7814  001964  6E26               	movwf	disk_readp@cnt+1,c
  7815  001966  0E01               	movlw	1
  7816  001968  6E25               	movwf	disk_readp@cnt,c
  7817  00196A  EC71  F01A         	call	_disk_readp	;wreg free
  7818  00196E                     L16:
  7819  00196E  0900               	iorlw	0
  7820  001970  A4D8               	btfss	status,2,c
  7821  001972  D0E2               	goto	l5004
  7822                           
  7823                           ;pff.c: 86: }
  7824                           ;pff.c: 87: wc = (WORD)(*(WORD*)(BYTE*)(buf));
  7825  001974  C062  F066         	movff	get_fat@buf,get_fat@wc
  7826  001978  C063  F067         	movff	get_fat@buf+1,get_fat@wc+1
  7827                           
  7828                           ;pff.c: 88: return (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
  7829  00197C  B02D               	btfsc	get_fat@clst,0,c
  7830  00197E  D00B               	goto	l4978
  7831  001980  0EFF               	movlw	255
  7832  001982  0100               	movlb	0	; () banked
  7833  001984  1566               	andwf	get_fat@wc& (0+255),w,b
  7834  001986  0100               	movlb	0	; () banked
  7835  001988  6F60               	movwf	_get_fat$110& (0+255),b
  7836  00198A  0E0F               	movlw	15
  7837  00198C  0100               	movlb	0	; () banked
  7838  00198E  1567               	andwf	(get_fat@wc+1)& (0+255),w,b
  7839  001990  0100               	movlb	0	; () banked
  7840  001992  6F61               	movwf	(_get_fat$110+1)& (0+255),b
  7841  001994  D011               	goto	l4980
  7842  001996                     l4978:
  7843  001996  0100               	movlb	0	; () banked
  7844  001998  C066  F031         	movff	get_fat@wc,??_get_fat
  7845  00199C  0100               	movlb	0	; () banked
  7846  00199E  C067  F032         	movff	get_fat@wc+1,??_get_fat+1
  7847  0019A2  0E04               	movlw	4
  7848  0019A4  6E33               	movwf	(??_get_fat+2)& (0+255),c
  7849  0019A6                     u5435:
  7850  0019A6  90D8               	bcf	status,0,c
  7851  0019A8  3232               	rrcf	??_get_fat+1,f,c
  7852  0019AA  3231               	rrcf	??_get_fat,f,c
  7853  0019AC  2E33               	decfsz	(??_get_fat+2)& (0+255),f,c
  7854  0019AE  D7FB               	goto	u5435
  7855  0019B0  C031  F060         	movff	??_get_fat,_get_fat$110
  7856  0019B4  C032  F061         	movff	??_get_fat+1,_get_fat$110+1
  7857  0019B8                     l4980:
  7858                           
  7859                           ; BSR set to: 0
  7860  0019B8  0100               	movlb	0	; () banked
  7861  0019BA  C060  F02D         	movff	_get_fat$110,?_get_fat
  7862  0019BE  0100               	movlb	0	; () banked
  7863  0019C0  C061  F02E         	movff	_get_fat$110+1,?_get_fat+1
  7864  0019C4  D04C               	goto	L14
  7865  0019C6                     l4984:
  7866                           
  7867                           ; BSR set to: 0
  7868                           ;pff.c: 91: if (disk_readp(buf, fs->fatbase + clst / 256, (WORD)(((WORD)clst % 256) * 2)
      +                          , 2)) break;
  7869  0019C6  0100               	movlb	0	; () banked
  7870  0019C8  0E00               	movlw	high get_fat@buf
  7871  0019CA  6E1E               	movwf	disk_readp@buff+1,c
  7872  0019CC  0100               	movlb	0	; () banked
  7873  0019CE  0E62               	movlw	low get_fat@buf
  7874  0019D0  6E1D               	movwf	disk_readp@buff,c
  7875  0019D2  0100               	movlb	0	; () banked
  7876  0019D4  EE20 F00C          	lfsr	2,12
  7877  0019D8  0100               	movlb	0	; () banked
  7878  0019DA  516C               	movf	get_fat@fs& (0+255),w,b
  7879  0019DC  26D9               	addwf	fsr2l,f,c
  7880  0019DE  0100               	movlb	0	; () banked
  7881  0019E0  516D               	movf	(get_fat@fs+1)& (0+255),w,b
  7882  0019E2  22DA               	addwfc	fsr2h,f,c
  7883  0019E4  CFDE F031          	movff	postinc2,??_get_fat
  7884  0019E8  CFDE F032          	movff	postinc2,??_get_fat+1
  7885  0019EC  CFDE F033          	movff	postinc2,??_get_fat+2
  7886  0019F0  CFDE F034          	movff	postinc2,??_get_fat+3
  7887  0019F4  C02D  F035         	movff	get_fat@clst,??_get_fat+4
  7888  0019F8  C02E  F036         	movff	get_fat@clst+1,??_get_fat+5
  7889  0019FC  C02F  F037         	movff	get_fat@clst+2,??_get_fat+6
  7890  001A00  C030  F038         	movff	get_fat@clst+3,??_get_fat+7
  7891  001A04  C036  F035         	movff	??_get_fat+5,??_get_fat+4
  7892  001A08  C037  F036         	movff	??_get_fat+6,??_get_fat+5
  7893  001A0C  C038  F037         	movff	??_get_fat+7,??_get_fat+6
  7894  001A10  6A38               	clrf	??_get_fat+7,c
  7895  001A12  5031               	movf	??_get_fat,w,c
  7896  001A14  2435               	addwf	??_get_fat+4,w,c
  7897  001A16  6E1F               	movwf	disk_readp@lba,c
  7898  001A18  5032               	movf	??_get_fat+1,w,c
  7899  001A1A  2036               	addwfc	??_get_fat+5,w,c
  7900  001A1C  6E20               	movwf	disk_readp@lba+1,c
  7901  001A1E  5033               	movf	??_get_fat+2,w,c
  7902  001A20  2037               	addwfc	??_get_fat+6,w,c
  7903  001A22  6E21               	movwf	disk_readp@lba+2,c
  7904  001A24  5034               	movf	??_get_fat+3,w,c
  7905  001A26  2038               	addwfc	??_get_fat+7,w,c
  7906  001A28  6E22               	movwf	disk_readp@lba+3,c
  7907  001A2A  0EFF               	movlw	255
  7908  001A2C  142D               	andwf	get_fat@clst,w,c
  7909  001A2E  6E39               	movwf	(??_get_fat+8)& (0+255),c
  7910  001A30  0E00               	movlw	0
  7911  001A32  142E               	andwf	get_fat@clst+1,w,c
  7912  001A34  6E3A               	movwf	(??_get_fat+9)& (0+255),c
  7913  001A36  90D8               	bcf	status,0,c
  7914  001A38  3439               	rlcf	??_get_fat+8,w,c
  7915  001A3A  6E23               	movwf	disk_readp@ofs,c
  7916  001A3C  343A               	rlcf	??_get_fat+9,w,c
  7917  001A3E  6E24               	movwf	disk_readp@ofs+1,c
  7918  001A40  0E00               	movlw	0
  7919  001A42  6E26               	movwf	disk_readp@cnt+1,c
  7920  001A44  0E02               	movlw	2
  7921  001A46  6E25               	movwf	disk_readp@cnt,c
  7922  001A48  EC71  F01A         	call	_disk_readp	;wreg free
  7923  001A4C  0900               	iorlw	0
  7924  001A4E  A4D8               	btfss	status,2,c
  7925  001A50  D073               	goto	l5004
  7926                           
  7927                           ;pff.c: 92: return (WORD)(*(WORD*)(BYTE*)(buf));
  7928  001A52  0100               	movlb	0	; () banked
  7929  001A54  C062  F02D         	movff	get_fat@buf,?_get_fat
  7930  001A58  0100               	movlb	0	; () banked
  7931  001A5A  C063  F02E         	movff	get_fat@buf+1,?_get_fat+1
  7932  001A5E                     L14:
  7933  001A5E  6A2F               	clrf	?_get_fat+2,c
  7934  001A60  6A30               	clrf	?_get_fat+3,c
  7935  001A62  D072               	goto	l26
  7936  001A64                     l4992:
  7937                           
  7938                           ; BSR set to: 0
  7939                           ;pff.c: 95: if (disk_readp(buf, fs->fatbase + clst / 128, (WORD)(((WORD)clst % 128) * 4)
      +                          , 4)) break;
  7940  001A64  0100               	movlb	0	; () banked
  7941  001A66  0E00               	movlw	high get_fat@buf
  7942  001A68  6E1E               	movwf	disk_readp@buff+1,c
  7943  001A6A  0100               	movlb	0	; () banked
  7944  001A6C  0E62               	movlw	low get_fat@buf
  7945  001A6E  6E1D               	movwf	disk_readp@buff,c
  7946  001A70  0100               	movlb	0	; () banked
  7947  001A72  EE20 F00C          	lfsr	2,12
  7948  001A76  0100               	movlb	0	; () banked
  7949  001A78  516C               	movf	get_fat@fs& (0+255),w,b
  7950  001A7A  26D9               	addwf	fsr2l,f,c
  7951  001A7C  0100               	movlb	0	; () banked
  7952  001A7E  516D               	movf	(get_fat@fs+1)& (0+255),w,b
  7953  001A80  22DA               	addwfc	fsr2h,f,c
  7954  001A82  CFDE F031          	movff	postinc2,??_get_fat
  7955  001A86  CFDE F032          	movff	postinc2,??_get_fat+1
  7956  001A8A  CFDE F033          	movff	postinc2,??_get_fat+2
  7957  001A8E  CFDE F034          	movff	postinc2,??_get_fat+3
  7958  001A92  C02D  F035         	movff	get_fat@clst,??_get_fat+4
  7959  001A96  C02E  F036         	movff	get_fat@clst+1,??_get_fat+5
  7960  001A9A  C02F  F037         	movff	get_fat@clst+2,??_get_fat+6
  7961  001A9E  C030  F038         	movff	get_fat@clst+3,??_get_fat+7
  7962  001AA2  0E08               	movlw	8
  7963  001AA4  D005               	goto	u5450
  7964  001AA6                     u5455:
  7965  001AA6  90D8               	bcf	status,0,c
  7966  001AA8  3238               	rrcf	??_get_fat+7,f,c
  7967  001AAA  3237               	rrcf	??_get_fat+6,f,c
  7968  001AAC  3236               	rrcf	??_get_fat+5,f,c
  7969  001AAE  3235               	rrcf	??_get_fat+4,f,c
  7970  001AB0                     u5450:
  7971  001AB0  2EE8               	decfsz	wreg,f,c
  7972  001AB2  D7F9               	goto	u5455
  7973  001AB4  5031               	movf	??_get_fat,w,c
  7974  001AB6  2435               	addwf	??_get_fat+4,w,c
  7975  001AB8  6E1F               	movwf	disk_readp@lba,c
  7976  001ABA  5032               	movf	??_get_fat+1,w,c
  7977  001ABC  2036               	addwfc	??_get_fat+5,w,c
  7978  001ABE  6E20               	movwf	disk_readp@lba+1,c
  7979  001AC0  5033               	movf	??_get_fat+2,w,c
  7980  001AC2  2037               	addwfc	??_get_fat+6,w,c
  7981  001AC4  6E21               	movwf	disk_readp@lba+2,c
  7982  001AC6  5034               	movf	??_get_fat+3,w,c
  7983  001AC8  2038               	addwfc	??_get_fat+7,w,c
  7984  001ACA  6E22               	movwf	disk_readp@lba+3,c
  7985  001ACC  0E7F               	movlw	127
  7986  001ACE  142D               	andwf	get_fat@clst,w,c
  7987  001AD0  6E39               	movwf	(??_get_fat+8)& (0+255),c
  7988  001AD2  0E00               	movlw	0
  7989  001AD4  142E               	andwf	get_fat@clst+1,w,c
  7990  001AD6  6E3A               	movwf	(??_get_fat+9)& (0+255),c
  7991  001AD8  90D8               	bcf	status,0,c
  7992  001ADA  3639               	rlcf	??_get_fat+8,f,c
  7993  001ADC  363A               	rlcf	??_get_fat+9,f,c
  7994  001ADE  90D8               	bcf	status,0,c
  7995  001AE0  3639               	rlcf	??_get_fat+8,f,c
  7996  001AE2  363A               	rlcf	??_get_fat+9,f,c
  7997  001AE4  C039  F023         	movff	??_get_fat+8,disk_readp@ofs
  7998  001AE8  C03A  F024         	movff	??_get_fat+9,disk_readp@ofs+1
  7999  001AEC  0E00               	movlw	0
  8000  001AEE  6E26               	movwf	disk_readp@cnt+1,c
  8001  001AF0  0E04               	movlw	4
  8002  001AF2  6E25               	movwf	disk_readp@cnt,c
  8003  001AF4  EC71  F01A         	call	_disk_readp	;wreg free
  8004  001AF8  0900               	iorlw	0
  8005  001AFA  A4D8               	btfss	status,2,c
  8006  001AFC  D01D               	goto	l5004
  8007                           
  8008                           ;pff.c: 96: return (DWORD)(*(DWORD*)(BYTE*)(buf)) & 0x0FFFFFFF;
  8009  001AFE  0100               	movlb	0	; () banked
  8010  001B00  EE20  F062         	lfsr	2,get_fat@buf
  8011  001B04  0EFF               	movlw	255
  8012  001B06  14DE               	andwf	postinc2,w,c
  8013  001B08  6E2D               	movwf	?_get_fat,c
  8014  001B0A  0EFF               	movlw	255
  8015  001B0C  14DE               	andwf	postinc2,w,c
  8016  001B0E  6E2E               	movwf	?_get_fat+1,c
  8017  001B10  0EFF               	movlw	255
  8018  001B12  14DE               	andwf	postinc2,w,c
  8019  001B14  6E2F               	movwf	?_get_fat+2,c
  8020  001B16  0E0F               	movlw	15
  8021  001B18  14DE               	andwf	postinc2,w,c
  8022  001B1A  D015               	goto	L15
  8023  001B1C                     l5002:
  8024                           
  8025                           ; BSR set to: 0
  8026  001B1C  C06C  FFD9         	movff	get_fat@fs,fsr2l
  8027  001B20  C06D  FFDA         	movff	get_fat@fs+1,fsr2h
  8028  001B24  50DF               	movf	indf2,w,c
  8029                           
  8030                           ; Switch size 1, requested type "space"
  8031                           ; Number of cases is 3, Range of values is 1 to 3
  8032                           ; switch strategies available:
  8033                           ; Name         Instructions Cycles
  8034                           ; simple_byte           10     6 (average)
  8035                           ;	Chosen strategy is simple_byte
  8036  001B26  0A01               	xorlw	1	; case 1
  8037  001B28  B4D8               	btfsc	status,2,c
  8038  001B2A  D65B               	goto	l28
  8039  001B2C  0A03               	xorlw	3	; case 2
  8040  001B2E  B4D8               	btfsc	status,2,c
  8041  001B30  D74A               	goto	l4984
  8042  001B32  0A01               	xorlw	1	; case 3
  8043  001B34  B4D8               	btfsc	status,2,c
  8044  001B36  D796               	goto	l4992
  8045  001B38                     l5004:
  8046                           
  8047                           ;pff.c: 100: return 1;
  8048  001B38  0E01               	movlw	1
  8049  001B3A  6E2D               	movwf	?_get_fat,c
  8050  001B3C  0E00               	movlw	0
  8051  001B3E  6E2E               	movwf	?_get_fat+1,c
  8052  001B40  0E00               	movlw	0
  8053  001B42  6E2F               	movwf	?_get_fat+2,c
  8054  001B44  0E00               	movlw	0
  8055  001B46                     L15:
  8056  001B46  6E30               	movwf	?_get_fat+3,c
  8057  001B48                     l26:
  8058  001B48  0012               	return	
  8059  001B4A                     __end_of_get_fat:
  8060                           	opt stack 0
  8061                           tblptru	equ	0xFF8
  8062                           tblptrh	equ	0xFF7
  8063                           tblptrl	equ	0xFF6
  8064                           tablat	equ	0xFF5
  8065                           prodh	equ	0xFF4
  8066                           prodl	equ	0xFF3
  8067                           intcon	equ	0xFF2
  8068                           postinc0	equ	0xFEE
  8069                           wreg	equ	0xFE8
  8070                           indf1	equ	0xFE7
  8071                           postinc1	equ	0xFE6
  8072                           postdec1	equ	0xFE5
  8073                           fsr1h	equ	0xFE2
  8074                           fsr1l	equ	0xFE1
  8075                           indf2	equ	0xFDF
  8076                           postinc2	equ	0xFDE
  8077                           postdec2	equ	0xFDD
  8078                           fsr2h	equ	0xFDA
  8079                           fsr2l	equ	0xFD9
  8080                           status	equ	0xFD8
  8081                           
  8082 ;; *************** function _clust2sect *****************
  8083 ;; Defined at:
  8084 ;;		line 111 in file "../../../PIC18F/pff.c"
  8085 ;; Parameters:    Size  Location     Type
  8086 ;;  clst            4   27[COMRAM] unsigned long 
  8087 ;; Auto vars:     Size  Location     Type
  8088 ;;  fs              2   40[COMRAM] PTR struct _FATFS_
  8089 ;;		 -> Fs(44), NULL(0), 
  8090 ;; Return value:  Size  Location     Type
  8091 ;;                  4   27[COMRAM] unsigned long 
  8092 ;; Registers used:
  8093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8094 ;; Tracked objects:
  8095 ;;		On entry : 0/0
  8096 ;;		On exit  : 0/0
  8097 ;;		Unchanged: 0/0
  8098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8099 ;;      Params:         4       0       0       0       0       0       0       0       0
  8100 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8101 ;;      Temps:          9       0       0       0       0       0       0       0       0
  8102 ;;      Totals:        15       0       0       0       0       0       0       0       0
  8103 ;;Total ram usage:       15 bytes
  8104 ;; Hardware stack levels used:    1
  8105 ;; Hardware stack levels required when called:    3
  8106 ;; This function calls:
  8107 ;;		___lmul
  8108 ;; This function is called by:
  8109 ;;		_dir_rewind
  8110 ;;		_dir_next
  8111 ;;		_pf_read
  8112 ;;		_pf_lseek
  8113 ;; This function uses a non-reentrant model
  8114 ;;
  8115                           
  8116                           	psect	text26
  8117  0035BC                     __ptext26:
  8118                           	opt stack 0
  8119  0035BC                     _clust2sect:
  8120                           	opt stack 25
  8121                           
  8122                           ;pff.c: 115: FATFS *fs = FatFs;
  8123                           
  8124                           ;incstack = 0
  8125  0035BC  C049  F02A         	movff	_FatFs+1,clust2sect@fs+1
  8126  0035C0  C048  F029         	movff	_FatFs,clust2sect@fs
  8127                           
  8128                           ;pff.c: 118: clst -= 2;
  8129  0035C4  0E02               	movlw	2
  8130  0035C6  5E1C               	subwf	clust2sect@clst,f,c
  8131  0035C8  0E00               	movlw	0
  8132  0035CA  5A1D               	subwfb	clust2sect@clst+1,f,c
  8133  0035CC  5A1E               	subwfb	clust2sect@clst+2,f,c
  8134  0035CE  5A1F               	subwfb	clust2sect@clst+3,f,c
  8135                           
  8136                           ;pff.c: 119: if (clst >= (fs->max_clust - 2)) return 0;
  8137  0035D0  EE20 F008          	lfsr	2,8
  8138  0035D4  5029               	movf	clust2sect@fs,w,c
  8139  0035D6  26D9               	addwf	fsr2l,f,c
  8140  0035D8  502A               	movf	clust2sect@fs+1,w,c
  8141  0035DA  22DA               	addwfc	fsr2h,f,c
  8142  0035DC  0EFE               	movlw	254
  8143  0035DE  24DE               	addwf	postinc2,w,c
  8144  0035E0  6E20               	movwf	??_clust2sect& (0+255),c
  8145  0035E2  0EFF               	movlw	255
  8146  0035E4  20DE               	addwfc	postinc2,w,c
  8147  0035E6  6E21               	movwf	(??_clust2sect+1)& (0+255),c
  8148  0035E8  0EFF               	movlw	255
  8149  0035EA  20DE               	addwfc	postinc2,w,c
  8150  0035EC  6E22               	movwf	(??_clust2sect+2)& (0+255),c
  8151  0035EE  0EFF               	movlw	255
  8152  0035F0  20DE               	addwfc	postinc2,w,c
  8153  0035F2  6E23               	movwf	(??_clust2sect+3)& (0+255),c
  8154  0035F4  5020               	movf	??_clust2sect,w,c
  8155  0035F6  5C1C               	subwf	clust2sect@clst,w,c
  8156  0035F8  5021               	movf	??_clust2sect+1,w,c
  8157  0035FA  581D               	subwfb	clust2sect@clst+1,w,c
  8158  0035FC  5022               	movf	??_clust2sect+2,w,c
  8159  0035FE  581E               	subwfb	clust2sect@clst+2,w,c
  8160  003600  5023               	movf	??_clust2sect+3,w,c
  8161  003602  581F               	subwfb	clust2sect@clst+3,w,c
  8162  003604  A0D8               	btfss	status,0,c
  8163  003606  D008               	goto	l3208
  8164  003608  0E00               	movlw	0
  8165  00360A  6E1C               	movwf	?_clust2sect,c
  8166  00360C  0E00               	movlw	0
  8167  00360E  6E1D               	movwf	?_clust2sect+1,c
  8168  003610  0E00               	movlw	0
  8169  003612  6E1E               	movwf	?_clust2sect+2,c
  8170  003614  0E00               	movlw	0
  8171  003616  D038               	goto	L17
  8172  003618                     l3208:
  8173                           
  8174                           ;pff.c: 120: return (DWORD)clst * fs->csize + fs->database;
  8175  003618  EE20 F014          	lfsr	2,20
  8176  00361C  5029               	movf	clust2sect@fs,w,c
  8177  00361E  26D9               	addwf	fsr2l,f,c
  8178  003620  502A               	movf	clust2sect@fs+1,w,c
  8179  003622  22DA               	addwfc	fsr2h,f,c
  8180  003624  CFDE F020          	movff	postinc2,??_clust2sect
  8181  003628  CFDE F021          	movff	postinc2,??_clust2sect+1
  8182  00362C  CFDE F022          	movff	postinc2,??_clust2sect+2
  8183  003630  CFDE F023          	movff	postinc2,??_clust2sect+3
  8184  003634  EE20 F001          	lfsr	2,1
  8185  003638  5029               	movf	clust2sect@fs,w,c
  8186  00363A  26D9               	addwf	fsr2l,f,c
  8187  00363C  502A               	movf	clust2sect@fs+1,w,c
  8188  00363E  22DA               	addwfc	fsr2h,f,c
  8189  003640  50DF               	movf	indf2,w,c
  8190  003642  6E24               	movwf	(??_clust2sect+4)& (0+255),c
  8191  003644  5024               	movf	??_clust2sect+4,w,c
  8192  003646  6E10               	movwf	___lmul@multiplier,c
  8193  003648  6A11               	clrf	___lmul@multiplier+1,c
  8194  00364A  6A12               	clrf	___lmul@multiplier+2,c
  8195  00364C  6A13               	clrf	___lmul@multiplier+3,c
  8196  00364E  C01C  F014         	movff	clust2sect@clst,___lmul@multiplicand
  8197  003652  C01D  F015         	movff	clust2sect@clst+1,___lmul@multiplicand+1
  8198  003656  C01E  F016         	movff	clust2sect@clst+2,___lmul@multiplicand+2
  8199  00365A  C01F  F017         	movff	clust2sect@clst+3,___lmul@multiplicand+3
  8200  00365E  EC7C  F01D         	call	___lmul	;wreg free
  8201  003662  C010  F025         	movff	?___lmul,??_clust2sect+5
  8202  003666  C011  F026         	movff	?___lmul+1,??_clust2sect+6
  8203  00366A  C012  F027         	movff	?___lmul+2,??_clust2sect+7
  8204  00366E  C013  F028         	movff	?___lmul+3,??_clust2sect+8
  8205  003672  5020               	movf	??_clust2sect,w,c
  8206  003674  2425               	addwf	??_clust2sect+5,w,c
  8207  003676  6E1C               	movwf	?_clust2sect,c
  8208  003678  5021               	movf	??_clust2sect+1,w,c
  8209  00367A  2026               	addwfc	??_clust2sect+6,w,c
  8210  00367C  6E1D               	movwf	?_clust2sect+1,c
  8211  00367E  5022               	movf	??_clust2sect+2,w,c
  8212  003680  2027               	addwfc	??_clust2sect+7,w,c
  8213  003682  6E1E               	movwf	?_clust2sect+2,c
  8214  003684  5023               	movf	??_clust2sect+3,w,c
  8215  003686  2028               	addwfc	??_clust2sect+8,w,c
  8216  003688                     L17:
  8217  003688  6E1F               	movwf	?_clust2sect+3,c
  8218  00368A  0012               	return	
  8219  00368C                     __end_of_clust2sect:
  8220                           	opt stack 0
  8221                           tblptru	equ	0xFF8
  8222                           tblptrh	equ	0xFF7
  8223                           tblptrl	equ	0xFF6
  8224                           tablat	equ	0xFF5
  8225                           prodh	equ	0xFF4
  8226                           prodl	equ	0xFF3
  8227                           intcon	equ	0xFF2
  8228                           postinc0	equ	0xFEE
  8229                           wreg	equ	0xFE8
  8230                           indf1	equ	0xFE7
  8231                           postinc1	equ	0xFE6
  8232                           postdec1	equ	0xFE5
  8233                           fsr1h	equ	0xFE2
  8234                           fsr1l	equ	0xFE1
  8235                           indf2	equ	0xFDF
  8236                           postinc2	equ	0xFDE
  8237                           postdec2	equ	0xFDD
  8238                           fsr2h	equ	0xFDA
  8239                           fsr2l	equ	0xFD9
  8240                           status	equ	0xFD8
  8241                           
  8242 ;; *************** function _create_name *****************
  8243 ;; Defined at:
  8244 ;;		line 280 in file "../../../PIC18F/pff.c"
  8245 ;; Parameters:    Size  Location     Type
  8246 ;;  dj              2   23[COMRAM] PTR struct _Dir_
  8247 ;;		 -> Dir1(16), pf_open@dj(16), 
  8248 ;;  path            2   25[COMRAM] PTR PTR const unsigned c
  8249 ;;		 -> follow_path@path(2), 
  8250 ;; Auto vars:     Size  Location     Type
  8251 ;;  sfn             2   39[COMRAM] PTR unsigned char 
  8252 ;;		 -> pf_readdir@sp(12), pf_opendir@sp(12), pf_open@sp(12), 
  8253 ;;  p               2   35[COMRAM] PTR const unsigned char 
  8254 ;;		 -> Fno(22), STR_1(1), 
  8255 ;;  c               1   42[COMRAM] unsigned char 
  8256 ;;  i               1   41[COMRAM] unsigned char 
  8257 ;;  si              1   38[COMRAM] unsigned char 
  8258 ;;  ni              1   37[COMRAM] unsigned char 
  8259 ;;  d               1   34[COMRAM] unsigned char 
  8260 ;; Return value:  Size  Location     Type
  8261 ;;                  1    wreg      enum E48
  8262 ;; Registers used:
  8263 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8264 ;; Tracked objects:
  8265 ;;		On entry : 0/0
  8266 ;;		On exit  : 0/0
  8267 ;;		Unchanged: 0/0
  8268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8269 ;;      Params:         4       0       0       0       0       0       0       0       0
  8270 ;;      Locals:         9       0       0       0       0       0       0       0       0
  8271 ;;      Temps:          7       0       0       0       0       0       0       0       0
  8272 ;;      Totals:        20       0       0       0       0       0       0       0       0
  8273 ;;Total ram usage:       20 bytes
  8274 ;; Hardware stack levels used:    1
  8275 ;; Hardware stack levels required when called:    3
  8276 ;; This function calls:
  8277 ;;		_mem_set
  8278 ;; This function is called by:
  8279 ;;		_follow_path
  8280 ;; This function uses a non-reentrant model
  8281 ;;
  8282                           
  8283                           	psect	text27
  8284  00267C                     __ptext27:
  8285                           	opt stack 0
  8286  00267C                     _create_name:
  8287                           	opt stack 24
  8288                           
  8289                           ;pff.c: 285: BYTE c, d, ni, si, i, *sfn;
  8290                           ;pff.c: 286: const char *p;
  8291                           ;pff.c: 289: sfn = dj->fn;
  8292                           
  8293                           ;incstack = 0
  8294  00267C  EE20 F002          	lfsr	2,2
  8295  002680  5018               	movf	create_name@dj,w,c
  8296  002682  26D9               	addwf	fsr2l,f,c
  8297  002684  5019               	movf	create_name@dj+1,w,c
  8298  002686  22DA               	addwfc	fsr2h,f,c
  8299  002688  CFDE F028          	movff	postinc2,create_name@sfn
  8300  00268C  CFDD F029          	movff	postdec2,create_name@sfn+1
  8301                           
  8302                           ;pff.c: 290: mem_set(sfn, ' ', 11);
  8303  002690  C029  F011         	movff	create_name@sfn+1,mem_set@dst+1
  8304  002694  C028  F010         	movff	create_name@sfn,mem_set@dst
  8305  002698  0E00               	movlw	0
  8306  00269A  6E13               	movwf	mem_set@val+1,c
  8307  00269C  0E20               	movlw	32
  8308  00269E  6E12               	movwf	mem_set@val,c
  8309  0026A0  0E00               	movlw	0
  8310  0026A2  6E15               	movwf	mem_set@cnt+1,c
  8311  0026A4  0E0B               	movlw	11
  8312  0026A6  6E14               	movwf	mem_set@cnt,c
  8313  0026A8  EC22  F01E         	call	_mem_set	;wreg free
  8314                           
  8315                           ;pff.c: 291: si = i = 0; ni = 8;
  8316  0026AC  0E00               	movlw	0
  8317  0026AE  6E2A               	movwf	create_name@i,c
  8318  0026B0  C02A  F027         	movff	create_name@i,create_name@si
  8319  0026B4  0E08               	movlw	8
  8320  0026B6  6E26               	movwf	create_name@ni,c
  8321                           
  8322                           ;pff.c: 292: p = *path;
  8323  0026B8  C01A  FFD9         	movff	create_name@path,fsr2l
  8324  0026BC  C01B  FFDA         	movff	create_name@path+1,fsr2h
  8325  0026C0  CFDE F024          	movff	postinc2,create_name@p
  8326  0026C4  CFDD F025          	movff	postdec2,create_name@p+1
  8327  0026C8                     l3354:
  8328                           
  8329                           ;pff.c: 294: c = p[si++];
  8330  0026C8  5027               	movf	create_name@si,w,c
  8331  0026CA  0D01               	mullw	1
  8332  0026CC  C024  F01C         	movff	create_name@p,??_create_name
  8333  0026D0  C025  F01D         	movff	create_name@p+1,??_create_name+1
  8334  0026D4  50F3               	movf	prodl,w,c
  8335  0026D6  261C               	addwf	??_create_name,f,c
  8336  0026D8  50F4               	movf	prodh,w,c
  8337  0026DA  221D               	addwfc	??_create_name+1,f,c
  8338  0026DC  C01C  FFF6         	movff	??_create_name,tblptrl
  8339  0026E0  C01D  FFF7         	movff	??_create_name+1,tblptrh
  8340  0026E4  6AF8               	clrf	tblptru,c
  8341  0026E6  0E07               	movlw	(high __ramtop+-1)
  8342  0026E8  64F7               	cpfsgt	tblptrh,c
  8343  0026EA  D003               	bra	u3217
  8344  0026EC  0008               	tblrd		*
  8345  0026EE  50F5               	movf	tablat,w,c
  8346  0026F0  D005               	bra	u3210
  8347  0026F2                     u3217:
  8348  0026F2  CFF6 FFE1          	movff	tblptrl,fsr1l
  8349  0026F6  CFF7 FFE2          	movff	tblptrh,fsr1h
  8350  0026FA  50E7               	movf	indf1,w,c
  8351  0026FC                     u3210:
  8352  0026FC  6E2B               	movwf	create_name@c,c
  8353  0026FE  2A27               	incf	create_name@si,f,c
  8354                           
  8355                           ;pff.c: 295: if (c <= ' ' || c == '/') break;
  8356  002700  0E20               	movlw	32
  8357  002702  642B               	cpfsgt	create_name@c,c
  8358  002704  D085               	goto	l3404
  8359  002706  502B               	movf	create_name@c,w,c
  8360  002708  0A2F               	xorlw	47
  8361  00270A  B4D8               	btfsc	status,2,c
  8362  00270C  D081               	goto	l3404
  8363                           
  8364                           ;pff.c: 296: if (c == '.' || i >= ni) {
  8365  00270E  502B               	movf	create_name@c,w,c
  8366  002710  0A2E               	xorlw	46
  8367  002712  B4D8               	btfsc	status,2,c
  8368  002714  D004               	goto	l3366
  8369  002716  5026               	movf	create_name@ni,w,c
  8370  002718  5C2A               	subwf	create_name@i,w,c
  8371  00271A  A0D8               	btfss	status,0,c
  8372  00271C  D00D               	goto	l3372
  8373  00271E                     l3366:
  8374                           
  8375                           ;pff.c: 297: if (ni != 8 || c != '.') break;
  8376  00271E  5026               	movf	create_name@ni,w,c
  8377  002720  0A08               	xorlw	8
  8378  002722  A4D8               	btfss	status,2,c
  8379  002724  D075               	goto	l3404
  8380  002726  502B               	movf	create_name@c,w,c
  8381  002728  0A2E               	xorlw	46
  8382  00272A  A4D8               	btfss	status,2,c
  8383  00272C  D071               	goto	l3404
  8384                           
  8385                           ;pff.c: 298: i = 8; ni = 11;
  8386  00272E  0E08               	movlw	8
  8387  002730  6E2A               	movwf	create_name@i,c
  8388  002732  0E0B               	movlw	11
  8389  002734  6E26               	movwf	create_name@ni,c
  8390                           
  8391                           ;pff.c: 299: continue;
  8392  002736  D7C8               	goto	l3354
  8393  002738                     l3372:
  8394                           
  8395                           ;pff.c: 300: }
  8396                           ;pff.c: 305: if ((((BYTE)(c) >= 0x81 && (BYTE)(c) <= 0x9F) || ((BYTE)(c) >= 0xE0 && (BYT
      +                          E)(c) <= 0xFC)) && i >= ni - 1) {
  8397  002738  0E80               	movlw	128
  8398  00273A  642B               	cpfsgt	create_name@c,c
  8399  00273C  D003               	goto	l3376
  8400  00273E  0E9F               	movlw	159
  8401  002740  642B               	cpfsgt	create_name@c,c
  8402  002742  D007               	goto	l3380
  8403  002744                     l3376:
  8404  002744  0EDF               	movlw	223
  8405  002746  642B               	cpfsgt	create_name@c,c
  8406  002748  D04E               	goto	l3394
  8407  00274A  0EFD               	movlw	253
  8408  00274C  5C2B               	subwf	create_name@c,w,c
  8409  00274E  B0D8               	btfsc	status,0,c
  8410  002750  D04A               	goto	l3394
  8411  002752                     l3380:
  8412  002752  0EFF               	movlw	255
  8413  002754  6E1C               	movwf	??_create_name& (0+255),c
  8414  002756  0EFF               	movlw	255
  8415  002758  6E1D               	movwf	(??_create_name+1)& (0+255),c
  8416  00275A  5026               	movf	create_name@ni,w,c
  8417  00275C  6E1E               	movwf	(??_create_name+2)& (0+255),c
  8418  00275E  6A1F               	clrf	(??_create_name+3)& (0+255),c
  8419  002760  501C               	movf	??_create_name,w,c
  8420  002762  261E               	addwf	??_create_name+2,f,c
  8421  002764  501D               	movf	??_create_name+1,w,c
  8422  002766  221F               	addwfc	??_create_name+3,f,c
  8423  002768  502A               	movf	create_name@i,w,c
  8424  00276A  6E20               	movwf	(??_create_name+4)& (0+255),c
  8425  00276C  6A21               	clrf	(??_create_name+5)& (0+255),c
  8426  00276E  5021               	movf	??_create_name+5,w,c
  8427  002770  0A80               	xorlw	128
  8428  002772  6E22               	movwf	(??_create_name+6)& (0+255),c
  8429  002774  501E               	movf	??_create_name+2,w,c
  8430  002776  5C20               	subwf	??_create_name+4,w,c
  8431  002778  501F               	movf	??_create_name+3,w,c
  8432  00277A  0A80               	xorlw	128
  8433  00277C  5822               	subwfb	(??_create_name+6)& (0+255),w,c
  8434  00277E  A0D8               	btfss	status,0,c
  8435  002780  D032               	goto	l3394
  8436                           
  8437                           ;pff.c: 306: d = p[si++];
  8438  002782  5027               	movf	create_name@si,w,c
  8439  002784  0D01               	mullw	1
  8440  002786  C024  F01C         	movff	create_name@p,??_create_name
  8441  00278A  C025  F01D         	movff	create_name@p+1,??_create_name+1
  8442  00278E  50F3               	movf	prodl,w,c
  8443  002790  261C               	addwf	??_create_name,f,c
  8444  002792  50F4               	movf	prodh,w,c
  8445  002794  221D               	addwfc	??_create_name+1,f,c
  8446  002796  C01C  FFF6         	movff	??_create_name,tblptrl
  8447  00279A  C01D  FFF7         	movff	??_create_name+1,tblptrh
  8448  00279E  6AF8               	clrf	tblptru,c
  8449  0027A0  0E07               	movlw	(high __ramtop+-1)
  8450  0027A2  64F7               	cpfsgt	tblptrh,c
  8451  0027A4  D003               	bra	u3337
  8452  0027A6  0008               	tblrd		*
  8453  0027A8  50F5               	movf	tablat,w,c
  8454  0027AA  D005               	bra	u3330
  8455  0027AC                     u3337:
  8456  0027AC  CFF6 FFE1          	movff	tblptrl,fsr1l
  8457  0027B0  CFF7 FFE2          	movff	tblptrh,fsr1h
  8458  0027B4  50E7               	movf	indf1,w,c
  8459  0027B6                     u3330:
  8460  0027B6  6E23               	movwf	create_name@d,c
  8461  0027B8  2A27               	incf	create_name@si,f,c
  8462                           
  8463                           ;pff.c: 307: sfn[i++] = c;
  8464  0027BA  502A               	movf	create_name@i,w,c
  8465  0027BC  0D01               	mullw	1
  8466  0027BE  50F3               	movf	prodl,w,c
  8467  0027C0  2428               	addwf	create_name@sfn,w,c
  8468  0027C2  6ED9               	movwf	fsr2l,c
  8469  0027C4  50F4               	movf	prodh,w,c
  8470  0027C6  2029               	addwfc	create_name@sfn+1,w,c
  8471  0027C8  6EDA               	movwf	fsr2h,c
  8472  0027CA  C02B  FFDF         	movff	create_name@c,indf2
  8473  0027CE  2A2A               	incf	create_name@i,f,c
  8474                           
  8475                           ;pff.c: 308: sfn[i++] = d;
  8476  0027D0  502A               	movf	create_name@i,w,c
  8477  0027D2  0D01               	mullw	1
  8478  0027D4  50F3               	movf	prodl,w,c
  8479  0027D6  2428               	addwf	create_name@sfn,w,c
  8480  0027D8  6ED9               	movwf	fsr2l,c
  8481  0027DA  50F4               	movf	prodh,w,c
  8482  0027DC  2029               	addwfc	create_name@sfn+1,w,c
  8483  0027DE  6EDA               	movwf	fsr2h,c
  8484  0027E0  C023  FFDF         	movff	create_name@d,indf2
  8485  0027E4  D013               	goto	L18
  8486  0027E6                     l3394:
  8487                           
  8488                           ;pff.c: 310: if ((((c)>='a')&&((c)<='z'))) c -= 0x20;
  8489  0027E6  0E60               	movlw	96
  8490  0027E8  642B               	cpfsgt	create_name@c,c
  8491  0027EA  D006               	goto	l3400
  8492  0027EC  0E7B               	movlw	123
  8493  0027EE  5C2B               	subwf	create_name@c,w,c
  8494  0027F0  B0D8               	btfsc	status,0,c
  8495  0027F2  D002               	goto	l3400
  8496  0027F4  0E20               	movlw	32
  8497  0027F6  5E2B               	subwf	create_name@c,f,c
  8498  0027F8                     l3400:
  8499                           
  8500                           ;pff.c: 311: sfn[i++] = c;
  8501  0027F8  502A               	movf	create_name@i,w,c
  8502  0027FA  0D01               	mullw	1
  8503  0027FC  50F3               	movf	prodl,w,c
  8504  0027FE  2428               	addwf	create_name@sfn,w,c
  8505  002800  6ED9               	movwf	fsr2l,c
  8506  002802  50F4               	movf	prodh,w,c
  8507  002804  2029               	addwfc	create_name@sfn+1,w,c
  8508  002806  6EDA               	movwf	fsr2h,c
  8509  002808  C02B  FFDF         	movff	create_name@c,indf2
  8510  00280C                     L18:
  8511  00280C  2A2A               	incf	create_name@i,f,c
  8512  00280E  D75C               	goto	l3354
  8513  002810                     l3404:
  8514                           
  8515                           ;pff.c: 314: *path = &p[si];
  8516  002810  5027               	movf	create_name@si,w,c
  8517  002812  0D01               	mullw	1
  8518  002814  C024  F01C         	movff	create_name@p,??_create_name
  8519  002818  C025  F01D         	movff	create_name@p+1,??_create_name+1
  8520  00281C  50F3               	movf	prodl,w,c
  8521  00281E  261C               	addwf	??_create_name,f,c
  8522  002820  50F4               	movf	prodh,w,c
  8523  002822  221D               	addwfc	??_create_name+1,f,c
  8524  002824  C01A  FFD9         	movff	create_name@path,fsr2l
  8525  002828  C01B  FFDA         	movff	create_name@path+1,fsr2h
  8526  00282C  C01C  FFDE         	movff	??_create_name,postinc2
  8527  002830  C01D  FFDD         	movff	??_create_name+1,postdec2
  8528                           
  8529                           ;pff.c: 316: sfn[11] = (c <= ' ') ? 1 : 0;
  8530  002834  EE20 F00B          	lfsr	2,11
  8531  002838  5028               	movf	create_name@sfn,w,c
  8532  00283A  26D9               	addwf	fsr2l,f,c
  8533  00283C  5029               	movf	create_name@sfn+1,w,c
  8534  00283E  22DA               	addwfc	fsr2h,f,c
  8535  002840  0E20               	movlw	32
  8536  002842  6AF3               	clrf	prodl,c
  8537  002844  642B               	cpfsgt	create_name@c,c
  8538  002846  2AF3               	incf	prodl,f,c
  8539  002848  CFF3 F01C          	movff	prodl,??_create_name
  8540  00284C  501C               	movf	??_create_name,w,c
  8541  00284E  6EDF               	movwf	indf2,c
  8542                           
  8543                           ;pff.c: 318: return FR_OK;
  8544  002850  0E00               	movlw	0
  8545  002852  0012               	return	
  8546  002854                     __end_of_create_name:
  8547                           	opt stack 0
  8548                           tblptru	equ	0xFF8
  8549                           tblptrh	equ	0xFF7
  8550                           tblptrl	equ	0xFF6
  8551                           tablat	equ	0xFF5
  8552                           prodh	equ	0xFF4
  8553                           prodl	equ	0xFF3
  8554                           intcon	equ	0xFF2
  8555                           postinc0	equ	0xFEE
  8556                           wreg	equ	0xFE8
  8557                           indf1	equ	0xFE7
  8558                           postinc1	equ	0xFE6
  8559                           postdec1	equ	0xFE5
  8560                           fsr1h	equ	0xFE2
  8561                           fsr1l	equ	0xFE1
  8562                           indf2	equ	0xFDF
  8563                           postinc2	equ	0xFDE
  8564                           postdec2	equ	0xFDD
  8565                           fsr2h	equ	0xFDA
  8566                           fsr2l	equ	0xFD9
  8567                           status	equ	0xFD8
  8568                           
  8569 ;; *************** function _mem_set *****************
  8570 ;; Defined at:
  8571 ;;		line 44 in file "../../../PIC18F/pff.c"
  8572 ;; Parameters:    Size  Location     Type
  8573 ;;  dst             2   15[COMRAM] PTR void 
  8574 ;;		 -> pf_readdir@sp(12), pf_opendir@sp(12), pf_open@sp(12), 
  8575 ;;  val             2   17[COMRAM] int 
  8576 ;;  cnt             2   19[COMRAM] int 
  8577 ;; Auto vars:     Size  Location     Type
  8578 ;;  d               2   21[COMRAM] PTR unsigned char 
  8579 ;;		 -> pf_readdir@sp(12), pf_opendir@sp(12), pf_open@sp(12), 
  8580 ;; Return value:  Size  Location     Type
  8581 ;;		None               void
  8582 ;; Registers used:
  8583 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8584 ;; Tracked objects:
  8585 ;;		On entry : 0/0
  8586 ;;		On exit  : 0/0
  8587 ;;		Unchanged: 0/0
  8588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8589 ;;      Params:         6       0       0       0       0       0       0       0       0
  8590 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8591 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8592 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8593 ;;Total ram usage:        8 bytes
  8594 ;; Hardware stack levels used:    1
  8595 ;; Hardware stack levels required when called:    2
  8596 ;; This function calls:
  8597 ;;		Nothing
  8598 ;; This function is called by:
  8599 ;;		_create_name
  8600 ;; This function uses a non-reentrant model
  8601 ;;
  8602                           
  8603                           	psect	text28
  8604  003C44                     __ptext28:
  8605                           	opt stack 0
  8606  003C44                     _mem_set:
  8607                           	opt stack 24
  8608                           
  8609                           ;pff.c: 45: char *d = (char*)dst;
  8610                           
  8611                           ;incstack = 0
  8612  003C44  C011  F017         	movff	mem_set@dst+1,mem_set@d+1
  8613  003C48  C010  F016         	movff	mem_set@dst,mem_set@d
  8614                           
  8615                           ;pff.c: 46: while (cnt--) *d++ = (char)val;
  8616  003C4C  D008               	goto	l3218
  8617  003C4E                     l3214:
  8618  003C4E  C016  FFD9         	movff	mem_set@d,fsr2l
  8619  003C52  C017  FFDA         	movff	mem_set@d+1,fsr2h
  8620  003C56  C012  FFDF         	movff	mem_set@val,indf2
  8621  003C5A  4A16               	infsnz	mem_set@d,f,c
  8622  003C5C  2A17               	incf	mem_set@d+1,f,c
  8623  003C5E                     l3218:
  8624  003C5E  0614               	decf	mem_set@cnt,f,c
  8625  003C60  A0D8               	btfss	status,0,c
  8626  003C62  0615               	decf	mem_set@cnt+1,f,c
  8627  003C64  2814               	incf	mem_set@cnt& (0+255),w,c
  8628  003C66  B4D8               	btfsc	status,2,c
  8629  003C68  2815               	incf	(mem_set@cnt+1)& (0+255),w,c
  8630  003C6A  B4D8               	btfsc	status,2,c
  8631  003C6C  0012               	return	
  8632  003C6E  D7EF               	goto	l3214
  8633  003C70                     __end_of_mem_set:
  8634                           	opt stack 0
  8635                           tblptru	equ	0xFF8
  8636                           tblptrh	equ	0xFF7
  8637                           tblptrl	equ	0xFF6
  8638                           tablat	equ	0xFF5
  8639                           prodh	equ	0xFF4
  8640                           prodl	equ	0xFF3
  8641                           intcon	equ	0xFF2
  8642                           postinc0	equ	0xFEE
  8643                           wreg	equ	0xFE8
  8644                           indf1	equ	0xFE7
  8645                           postinc1	equ	0xFE6
  8646                           postdec1	equ	0xFE5
  8647                           fsr1h	equ	0xFE2
  8648                           fsr1l	equ	0xFE1
  8649                           indf2	equ	0xFDF
  8650                           postinc2	equ	0xFDE
  8651                           postdec2	equ	0xFDD
  8652                           fsr2h	equ	0xFDA
  8653                           fsr2l	equ	0xFD9
  8654                           status	equ	0xFD8
  8655                           
  8656 ;; *************** function _pf_mount *****************
  8657 ;; Defined at:
  8658 ;;		line 456 in file "../../../PIC18F/pff.c"
  8659 ;; Parameters:    Size  Location     Type
  8660 ;;  fs              2   50[COMRAM] PTR struct _FATFS_
  8661 ;;		 -> Fs(44), 
  8662 ;; Auto vars:     Size  Location     Type
  8663 ;;  buf            36    0[BANK0 ] unsigned char [36]
  8664 ;;  fsize           4   48[BANK0 ] unsigned long 
  8665 ;;  bsect           4   44[BANK0 ] unsigned long 
  8666 ;;  mclst           4   40[BANK0 ] unsigned long 
  8667 ;;  tsect           4   36[BANK0 ] unsigned long 
  8668 ;;  fmt             1   52[BANK0 ] unsigned char 
  8669 ;; Return value:  Size  Location     Type
  8670 ;;                  1    wreg      enum E48
  8671 ;; Registers used:
  8672 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8673 ;; Tracked objects:
  8674 ;;		On entry : 0/0
  8675 ;;		On exit  : 0/0
  8676 ;;		Unchanged: 0/0
  8677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8678 ;;      Params:         2       0       0       0       0       0       0       0       0
  8679 ;;      Locals:         0      53       0       0       0       0       0       0       0
  8680 ;;      Temps:         16       0       0       0       0       0       0       0       0
  8681 ;;      Totals:        18      53       0       0       0       0       0       0       0
  8682 ;;Total ram usage:       71 bytes
  8683 ;; Hardware stack levels used:    1
  8684 ;; Hardware stack levels required when called:    7
  8685 ;; This function calls:
  8686 ;;		___lldiv
  8687 ;;		___lmul
  8688 ;;		_check_fs
  8689 ;;		_disk_initialize
  8690 ;;		_disk_readp
  8691 ;; This function is called by:
  8692 ;;		_main
  8693 ;; This function uses a non-reentrant model
  8694 ;;
  8695                           
  8696                           	psect	text29
  8697  0012CC                     __ptext29:
  8698                           	opt stack 0
  8699  0012CC                     _pf_mount:
  8700                           	opt stack 23
  8701                           
  8702                           ;pff.c: 460: BYTE fmt, buf[36];
  8703                           ;pff.c: 461: DWORD bsect, fsize, tsect, mclst;
  8704                           ;pff.c: 464: FatFs = 0;
  8705                           
  8706                           ;incstack = 0
  8707  0012CC  0E00               	movlw	0
  8708  0012CE  6E49               	movwf	_FatFs+1,c
  8709  0012D0  0E00               	movlw	0
  8710  0012D2  6E48               	movwf	_FatFs,c
  8711                           
  8712                           ;pff.c: 465: if (!fs) return FR_OK;
  8713  0012D4  5034               	movf	pf_mount@fs+1,w,c
  8714  0012D6  1033               	iorwf	pf_mount@fs,w,c
  8715  0012D8  B4D8               	btfsc	status,2,c
  8716  0012DA  D255               	goto	L19
  8717                           
  8718                           ;pff.c: 467: if (disk_initialize() & 0x01)
  8719  0012DC  EC2A  F014         	call	_disk_initialize	;wreg free
  8720  0012E0  6E35               	movwf	??_pf_mount& (0+255),c
  8721  0012E2  A035               	btfss	??_pf_mount,0,c
  8722  0012E4  D002               	goto	l5636
  8723                           
  8724                           ;pff.c: 468: return FR_NOT_READY;
  8725  0012E6  0E02               	movlw	2
  8726  0012E8  D24F               	goto	l151
  8727  0012EA                     l5636:
  8728                           
  8729                           ;pff.c: 471: bsect = 0;
  8730  0012EA  0E00               	movlw	0
  8731  0012EC  0100               	movlb	0	; () banked
  8732  0012EE  6F8C               	movwf	pf_mount@bsect& (0+255),b
  8733  0012F0  0E00               	movlw	0
  8734  0012F2  0100               	movlb	0	; () banked
  8735  0012F4  6F8D               	movwf	(pf_mount@bsect+1)& (0+255),b
  8736  0012F6  0E00               	movlw	0
  8737  0012F8  0100               	movlb	0	; () banked
  8738  0012FA  6F8E               	movwf	(pf_mount@bsect+2)& (0+255),b
  8739  0012FC  0E00               	movlw	0
  8740  0012FE  0100               	movlb	0	; () banked
  8741  001300  6F8F               	movwf	(pf_mount@bsect+3)& (0+255),b
  8742                           
  8743                           ; BSR set to: 0
  8744                           ;pff.c: 472: fmt = check_fs(buf, bsect);
  8745  001302  0100               	movlb	0	; () banked
  8746  001304  0E00               	movlw	high pf_mount@buf
  8747  001306  6E2E               	movwf	check_fs@buf+1,c
  8748  001308  0100               	movlb	0	; () banked
  8749  00130A  0E60               	movlw	low pf_mount@buf
  8750  00130C  6E2D               	movwf	check_fs@buf,c
  8751  00130E  C08C  F02F         	movff	pf_mount@bsect,check_fs@sect
  8752  001312  C08D  F030         	movff	pf_mount@bsect+1,check_fs@sect+1
  8753  001316  C08E  F031         	movff	pf_mount@bsect+2,check_fs@sect+2
  8754  00131A  C08F  F032         	movff	pf_mount@bsect+3,check_fs@sect+3
  8755  00131E  EC8A  F019         	call	_check_fs	;wreg free
  8756  001322  0100               	movlb	0	; () banked
  8757  001324  6F94               	movwf	pf_mount@fmt& (0+255),b
  8758                           
  8759                           ; BSR set to: 0
  8760                           ;pff.c: 473: if (fmt == 1) {
  8761  001326  0100               	movlb	0	; () banked
  8762  001328  0594               	decf	pf_mount@fmt& (0+255),w,b
  8763  00132A  A4D8               	btfss	status,2,c
  8764  00132C  D03B               	goto	l5652
  8765                           
  8766                           ; BSR set to: 0
  8767                           ;pff.c: 475: if (disk_readp(buf, bsect, 446, 16)) {
  8768  00132E  0100               	movlb	0	; () banked
  8769  001330  0E00               	movlw	high pf_mount@buf
  8770  001332  6E1E               	movwf	disk_readp@buff+1,c
  8771  001334  0100               	movlb	0	; () banked
  8772  001336  0E60               	movlw	low pf_mount@buf
  8773  001338  6E1D               	movwf	disk_readp@buff,c
  8774  00133A  C08C  F01F         	movff	pf_mount@bsect,disk_readp@lba
  8775  00133E  C08D  F020         	movff	pf_mount@bsect+1,disk_readp@lba+1
  8776  001342  C08E  F021         	movff	pf_mount@bsect+2,disk_readp@lba+2
  8777  001346  C08F  F022         	movff	pf_mount@bsect+3,disk_readp@lba+3
  8778  00134A  0E01               	movlw	1
  8779  00134C  6E24               	movwf	disk_readp@ofs+1,c
  8780  00134E  0EBE               	movlw	190
  8781  001350  6E23               	movwf	disk_readp@ofs,c
  8782  001352  0E00               	movlw	0
  8783  001354  6E26               	movwf	disk_readp@cnt+1,c
  8784  001356  0E10               	movlw	16
  8785  001358  6E25               	movwf	disk_readp@cnt,c
  8786  00135A  EC71  F01A         	call	_disk_readp	;wreg free
  8787  00135E  0900               	iorlw	0
  8788  001360  B4D8               	btfsc	status,2,c
  8789  001362  D002               	goto	l5646
  8790                           
  8791                           ;pff.c: 476: fmt = 3;
  8792  001364  0E03               	movlw	3
  8793  001366  D01C               	goto	L20
  8794  001368                     l5646:
  8795                           
  8796                           ;pff.c: 478: if (buf[4]) {
  8797  001368  0100               	movlb	0	; () banked
  8798  00136A  5164               	movf	(pf_mount@buf+4)& (0+255),w,b
  8799  00136C  B4D8               	btfsc	status,2,c
  8800  00136E  D01A               	goto	l5652
  8801                           
  8802                           ; BSR set to: 0
  8803                           ;pff.c: 479: bsect = (DWORD)(*(DWORD*)(BYTE*)(&buf[8]));
  8804  001370  C068  F08C         	movff	pf_mount@buf+8,pf_mount@bsect
  8805  001374  C069  F08D         	movff	pf_mount@buf+9,pf_mount@bsect+1
  8806  001378  C06A  F08E         	movff	pf_mount@buf+10,pf_mount@bsect+2
  8807  00137C  C06B  F08F         	movff	pf_mount@buf+11,pf_mount@bsect+3
  8808                           
  8809                           ; BSR set to: 0
  8810                           ;pff.c: 480: fmt = check_fs(buf, bsect);
  8811  001380  0100               	movlb	0	; () banked
  8812  001382  0E00               	movlw	high pf_mount@buf
  8813  001384  6E2E               	movwf	check_fs@buf+1,c
  8814  001386  0100               	movlb	0	; () banked
  8815  001388  0E60               	movlw	low pf_mount@buf
  8816  00138A  6E2D               	movwf	check_fs@buf,c
  8817  00138C  C08C  F02F         	movff	pf_mount@bsect,check_fs@sect
  8818  001390  C08D  F030         	movff	pf_mount@bsect+1,check_fs@sect+1
  8819  001394  C08E  F031         	movff	pf_mount@bsect+2,check_fs@sect+2
  8820  001398  C08F  F032         	movff	pf_mount@bsect+3,check_fs@sect+3
  8821  00139C  EC8A  F019         	call	_check_fs	;wreg free
  8822  0013A0                     L20:
  8823  0013A0  0100               	movlb	0	; () banked
  8824  0013A2  6F94               	movwf	pf_mount@fmt& (0+255),b
  8825  0013A4                     l5652:
  8826                           
  8827                           ; BSR set to: 0
  8828                           ;pff.c: 481: }
  8829                           ;pff.c: 482: }
  8830                           ;pff.c: 483: }
  8831                           ;pff.c: 484: if (fmt == 3) return FR_DISK_ERR;
  8832  0013A4  0100               	movlb	0	; () banked
  8833  0013A6  5194               	movf	pf_mount@fmt& (0+255),w,b
  8834  0013A8  0A03               	xorlw	3
  8835  0013AA  B4D8               	btfsc	status,2,c
  8836  0013AC  D021               	goto	u6620
  8837                           
  8838                           ; BSR set to: 0
  8839                           ;pff.c: 485: if (fmt) return FR_NO_FILESYSTEM;
  8840                           
  8841                           ; BSR set to: 0
  8842                           
  8843                           ; BSR set to: 0
  8844                           
  8845                           ; BSR set to: 0
  8846  0013AE  0100               	movlb	0	; () banked
  8847  0013B0  5194               	movf	pf_mount@fmt& (0+255),w,b
  8848  0013B2  B4D8               	btfsc	status,2,c
  8849  0013B4  D002               	goto	l5664
  8850                           
  8851                           ; BSR set to: 0
  8852  0013B6  0E07               	movlw	7
  8853  0013B8  D1E7               	goto	l151
  8854  0013BA                     l5664:
  8855                           
  8856                           ; BSR set to: 0
  8857                           ;pff.c: 488: if (disk_readp(buf, bsect, 13, sizeof(buf))) return FR_DISK_ERR;
  8858  0013BA  0100               	movlb	0	; () banked
  8859  0013BC  0E00               	movlw	high pf_mount@buf
  8860  0013BE  6E1E               	movwf	disk_readp@buff+1,c
  8861  0013C0  0100               	movlb	0	; () banked
  8862  0013C2  0E60               	movlw	low pf_mount@buf
  8863  0013C4  6E1D               	movwf	disk_readp@buff,c
  8864  0013C6  C08C  F01F         	movff	pf_mount@bsect,disk_readp@lba
  8865  0013CA  C08D  F020         	movff	pf_mount@bsect+1,disk_readp@lba+1
  8866  0013CE  C08E  F021         	movff	pf_mount@bsect+2,disk_readp@lba+2
  8867  0013D2  C08F  F022         	movff	pf_mount@bsect+3,disk_readp@lba+3
  8868  0013D6  0E00               	movlw	0
  8869  0013D8  6E24               	movwf	disk_readp@ofs+1,c
  8870  0013DA  0E0D               	movlw	13
  8871  0013DC  6E23               	movwf	disk_readp@ofs,c
  8872  0013DE  0E00               	movlw	0
  8873  0013E0  6E26               	movwf	disk_readp@cnt+1,c
  8874  0013E2  0E24               	movlw	36
  8875  0013E4  6E25               	movwf	disk_readp@cnt,c
  8876  0013E6  EC71  F01A         	call	_disk_readp	;wreg free
  8877  0013EA  0900               	iorlw	0
  8878  0013EC  B4D8               	btfsc	status,2,c
  8879  0013EE  D002               	goto	l5670
  8880  0013F0                     u6620:
  8881  0013F0  0E01               	movlw	1
  8882  0013F2  D1CA               	goto	l151
  8883  0013F4                     l5670:
  8884                           
  8885                           ;pff.c: 490: fsize = (WORD)(*(WORD*)(BYTE*)(buf+22-13));
  8886  0013F4  0100               	movlb	0	; () banked
  8887  0013F6  C069  F090         	movff	pf_mount@buf+9,pf_mount@fsize
  8888  0013FA  0100               	movlb	0	; () banked
  8889  0013FC  C06A  F091         	movff	pf_mount@buf+10,pf_mount@fsize+1
  8890  001400  0100               	movlb	0	; () banked
  8891  001402  6B92               	clrf	(pf_mount@fsize+2)& (0+255),b
  8892  001404  0100               	movlb	0	; () banked
  8893  001406  6B93               	clrf	(pf_mount@fsize+3)& (0+255),b
  8894                           
  8895                           ; BSR set to: 0
  8896                           ;pff.c: 491: if (!fsize) fsize = (DWORD)(*(DWORD*)(BYTE*)(buf+36-13));
  8897  001408  0100               	movlb	0	; () banked
  8898  00140A  5193               	movf	(pf_mount@fsize+3)& (0+255),w,b
  8899  00140C  1190               	iorwf	pf_mount@fsize& (0+255),w,b
  8900  00140E  1191               	iorwf	(pf_mount@fsize+1)& (0+255),w,b
  8901  001410  1192               	iorwf	(pf_mount@fsize+2)& (0+255),w,b
  8902  001412  A4D8               	btfss	status,2,c
  8903  001414  D008               	goto	l5676
  8904                           
  8905                           ; BSR set to: 0
  8906  001416  C077  F090         	movff	pf_mount@buf+23,pf_mount@fsize
  8907  00141A  C078  F091         	movff	pf_mount@buf+24,pf_mount@fsize+1
  8908  00141E  C079  F092         	movff	pf_mount@buf+25,pf_mount@fsize+2
  8909  001422  C07A  F093         	movff	pf_mount@buf+26,pf_mount@fsize+3
  8910  001426                     l5676:
  8911                           
  8912                           ; BSR set to: 0
  8913                           ;pff.c: 493: fsize *= buf[16-13];
  8914  001426  C090  F010         	movff	pf_mount@fsize,___lmul@multiplier
  8915  00142A  C091  F011         	movff	pf_mount@fsize+1,___lmul@multiplier+1
  8916  00142E  C092  F012         	movff	pf_mount@fsize+2,___lmul@multiplier+2
  8917  001432  C093  F013         	movff	pf_mount@fsize+3,___lmul@multiplier+3
  8918  001436  0100               	movlb	0	; () banked
  8919  001438  5163               	movf	(pf_mount@buf+3)& (0+255),w,b
  8920  00143A  6E14               	movwf	___lmul@multiplicand,c
  8921  00143C  6A15               	clrf	___lmul@multiplicand+1,c
  8922  00143E  6A16               	clrf	___lmul@multiplicand+2,c
  8923  001440  6A17               	clrf	___lmul@multiplicand+3,c
  8924  001442  EC7C  F01D         	call	___lmul	;wreg free
  8925  001446  C010  F090         	movff	?___lmul,pf_mount@fsize
  8926  00144A  C011  F091         	movff	?___lmul+1,pf_mount@fsize+1
  8927  00144E  C012  F092         	movff	?___lmul+2,pf_mount@fsize+2
  8928  001452  C013  F093         	movff	?___lmul+3,pf_mount@fsize+3
  8929                           
  8930                           ;pff.c: 494: fs->fatbase = bsect + (WORD)(*(WORD*)(BYTE*)(buf+14-13));
  8931  001456  0100               	movlb	0	; () banked
  8932  001458  5161               	movf	(pf_mount@buf+1)& (0+255),w,b
  8933  00145A  0100               	movlb	0	; () banked
  8934  00145C  258C               	addwf	pf_mount@bsect& (0+255),w,b
  8935  00145E  6E35               	movwf	??_pf_mount& (0+255),c
  8936  001460  0100               	movlb	0	; () banked
  8937  001462  5162               	movf	(pf_mount@buf+2)& (0+255),w,b
  8938  001464  0100               	movlb	0	; () banked
  8939  001466  218D               	addwfc	(pf_mount@bsect+1)& (0+255),w,b
  8940  001468  6E36               	movwf	(??_pf_mount+1)& (0+255),c
  8941  00146A  0E00               	movlw	0
  8942  00146C  0100               	movlb	0	; () banked
  8943  00146E  218E               	addwfc	(pf_mount@bsect+2)& (0+255),w,b
  8944  001470  6E37               	movwf	(??_pf_mount+2)& (0+255),c
  8945  001472  0E00               	movlw	0
  8946  001474  0100               	movlb	0	; () banked
  8947  001476  218F               	addwfc	(pf_mount@bsect+3)& (0+255),w,b
  8948  001478  6E38               	movwf	(??_pf_mount+3)& (0+255),c
  8949  00147A  EE20 F00C          	lfsr	2,12
  8950  00147E  5033               	movf	pf_mount@fs,w,c
  8951  001480  26D9               	addwf	fsr2l,f,c
  8952  001482  5034               	movf	pf_mount@fs+1,w,c
  8953  001484  22DA               	addwfc	fsr2h,f,c
  8954  001486  C035  FFDE         	movff	??_pf_mount,postinc2
  8955  00148A  C036  FFDE         	movff	??_pf_mount+1,postinc2
  8956  00148E  C037  FFDE         	movff	??_pf_mount+2,postinc2
  8957  001492  C038  FFDD         	movff	??_pf_mount+3,postdec2
  8958  001496  06D9               	decf	fsr2l,f,c
  8959  001498  06D9               	decf	fsr2l,f,c
  8960                           
  8961                           ; BSR set to: 0
  8962                           ;pff.c: 495: fs->csize = buf[13-13];
  8963  00149A  EE20 F001          	lfsr	2,1
  8964  00149E  5033               	movf	pf_mount@fs,w,c
  8965  0014A0  26D9               	addwf	fsr2l,f,c
  8966  0014A2  5034               	movf	pf_mount@fs+1,w,c
  8967  0014A4  22DA               	addwfc	fsr2h,f,c
  8968  0014A6  0100               	movlb	0	; () banked
  8969  0014A8  C060  FFDF         	movff	pf_mount@buf,indf2
  8970                           
  8971                           ; BSR set to: 0
  8972                           ;pff.c: 496: fs->n_rootdir = (WORD)(*(WORD*)(BYTE*)(buf+17-13));
  8973  0014AC  EE20 F004          	lfsr	2,4
  8974  0014B0  5033               	movf	pf_mount@fs,w,c
  8975  0014B2  26D9               	addwf	fsr2l,f,c
  8976  0014B4  5034               	movf	pf_mount@fs+1,w,c
  8977  0014B6  22DA               	addwfc	fsr2h,f,c
  8978  0014B8  0100               	movlb	0	; () banked
  8979  0014BA  C064  FFDE         	movff	pf_mount@buf+4,postinc2
  8980  0014BE  0100               	movlb	0	; () banked
  8981  0014C0  C065  FFDD         	movff	pf_mount@buf+5,postdec2
  8982                           
  8983                           ; BSR set to: 0
  8984                           ;pff.c: 497: tsect = (WORD)(*(WORD*)(BYTE*)(buf+19-13));
  8985  0014C4  0100               	movlb	0	; () banked
  8986  0014C6  C066  F084         	movff	pf_mount@buf+6,pf_mount@tsect
  8987  0014CA  0100               	movlb	0	; () banked
  8988  0014CC  C067  F085         	movff	pf_mount@buf+7,pf_mount@tsect+1
  8989  0014D0  0100               	movlb	0	; () banked
  8990  0014D2  6B86               	clrf	(pf_mount@tsect+2)& (0+255),b
  8991  0014D4  0100               	movlb	0	; () banked
  8992  0014D6  6B87               	clrf	(pf_mount@tsect+3)& (0+255),b
  8993                           
  8994                           ; BSR set to: 0
  8995                           ;pff.c: 498: if (!tsect) tsect = (DWORD)(*(DWORD*)(BYTE*)(buf+32-13));
  8996  0014D8  0100               	movlb	0	; () banked
  8997  0014DA  5187               	movf	(pf_mount@tsect+3)& (0+255),w,b
  8998  0014DC  1184               	iorwf	pf_mount@tsect& (0+255),w,b
  8999  0014DE  1185               	iorwf	(pf_mount@tsect+1)& (0+255),w,b
  9000  0014E0  1186               	iorwf	(pf_mount@tsect+2)& (0+255),w,b
  9001  0014E2  A4D8               	btfss	status,2,c
  9002  0014E4  D008               	goto	l5690
  9003                           
  9004                           ; BSR set to: 0
  9005  0014E6  C073  F084         	movff	pf_mount@buf+19,pf_mount@tsect
  9006  0014EA  C074  F085         	movff	pf_mount@buf+20,pf_mount@tsect+1
  9007  0014EE  C075  F086         	movff	pf_mount@buf+21,pf_mount@tsect+2
  9008  0014F2  C076  F087         	movff	pf_mount@buf+22,pf_mount@tsect+3
  9009  0014F6                     l5690:
  9010                           
  9011                           ; BSR set to: 0
  9012                           ;pff.c: 499: mclst = (tsect
  9013                           ;pff.c: 500: - (WORD)(*(WORD*)(BYTE*)(buf+14-13)) - fsize - fs->n_rootdir / 16
  9014                           ;pff.c: 501: ) / fs->csize + 2;
  9015  0014F6  EE20 F004          	lfsr	2,4
  9016  0014FA  5033               	movf	pf_mount@fs,w,c
  9017  0014FC  26D9               	addwf	fsr2l,f,c
  9018  0014FE  5034               	movf	pf_mount@fs+1,w,c
  9019  001500  22DA               	addwfc	fsr2h,f,c
  9020  001502  CFDE F035          	movff	postinc2,??_pf_mount
  9021  001506  CFDD F036          	movff	postdec2,??_pf_mount+1
  9022  00150A  0E04               	movlw	4
  9023  00150C  6E37               	movwf	(??_pf_mount+2)& (0+255),c
  9024  00150E                     u6655:
  9025  00150E  90D8               	bcf	status,0,c
  9026  001510  3236               	rrcf	??_pf_mount+1,f,c
  9027  001512  3235               	rrcf	??_pf_mount,f,c
  9028  001514  2E37               	decfsz	(??_pf_mount+2)& (0+255),f,c
  9029  001516  D7FB               	goto	u6655
  9030  001518  0100               	movlb	0	; () banked
  9031  00151A  5161               	movf	(pf_mount@buf+1)& (0+255),w,b
  9032  00151C  2435               	addwf	??_pf_mount,w,c
  9033  00151E  6E38               	movwf	(??_pf_mount+3)& (0+255),c
  9034  001520  0100               	movlb	0	; () banked
  9035  001522  5162               	movf	(pf_mount@buf+2)& (0+255),w,b
  9036  001524  2036               	addwfc	??_pf_mount+1,w,c
  9037  001526  6E39               	movwf	(??_pf_mount+4)& (0+255),c
  9038  001528  6A3A               	clrf	(??_pf_mount+5)& (0+255),c
  9039  00152A  B0D8               	btfsc	status,0,c
  9040  00152C  2A3A               	incf	(??_pf_mount+5)& (0+255),f,c
  9041  00152E  6A3B               	clrf	(??_pf_mount+6)& (0+255),c
  9042  001530  0100               	movlb	0	; () banked
  9043  001532  5190               	movf	pf_mount@fsize& (0+255),w,b
  9044  001534  2438               	addwf	??_pf_mount+3,w,c
  9045  001536  6E3C               	movwf	(??_pf_mount+7)& (0+255),c
  9046  001538  0100               	movlb	0	; () banked
  9047  00153A  5191               	movf	(pf_mount@fsize+1)& (0+255),w,b
  9048  00153C  2039               	addwfc	??_pf_mount+4,w,c
  9049  00153E  6E3D               	movwf	(??_pf_mount+8)& (0+255),c
  9050  001540  0100               	movlb	0	; () banked
  9051  001542  5192               	movf	(pf_mount@fsize+2)& (0+255),w,b
  9052  001544  203A               	addwfc	??_pf_mount+5,w,c
  9053  001546  6E3E               	movwf	(??_pf_mount+9)& (0+255),c
  9054  001548  0100               	movlb	0	; () banked
  9055  00154A  5193               	movf	(pf_mount@fsize+3)& (0+255),w,b
  9056  00154C  203B               	addwfc	??_pf_mount+6,w,c
  9057  00154E  6E3F               	movwf	(??_pf_mount+10)& (0+255),c
  9058  001550  1E3C               	comf	??_pf_mount+7,f,c
  9059  001552  1E3D               	comf	??_pf_mount+8,f,c
  9060  001554  1E3E               	comf	??_pf_mount+9,f,c
  9061  001556  1E3F               	comf	??_pf_mount+10,f,c
  9062  001558  2A3C               	incf	??_pf_mount+7,f,c
  9063  00155A  0E00               	movlw	0
  9064  00155C  223D               	addwfc	??_pf_mount+8,f,c
  9065  00155E  223E               	addwfc	??_pf_mount+9,f,c
  9066  001560  223F               	addwfc	??_pf_mount+10,f,c
  9067  001562  0100               	movlb	0	; () banked
  9068  001564  5184               	movf	pf_mount@tsect& (0+255),w,b
  9069  001566  243C               	addwf	??_pf_mount+7,w,c
  9070  001568  6E10               	movwf	___lldiv@dividend,c
  9071  00156A  0100               	movlb	0	; () banked
  9072  00156C  5185               	movf	(pf_mount@tsect+1)& (0+255),w,b
  9073  00156E  203D               	addwfc	??_pf_mount+8,w,c
  9074  001570  6E11               	movwf	___lldiv@dividend+1,c
  9075  001572  0100               	movlb	0	; () banked
  9076  001574  5186               	movf	(pf_mount@tsect+2)& (0+255),w,b
  9077  001576  203E               	addwfc	??_pf_mount+9,w,c
  9078  001578  6E12               	movwf	___lldiv@dividend+2,c
  9079  00157A  0100               	movlb	0	; () banked
  9080  00157C  5187               	movf	(pf_mount@tsect+3)& (0+255),w,b
  9081  00157E  203F               	addwfc	??_pf_mount+10,w,c
  9082  001580  6E13               	movwf	___lldiv@dividend+3,c
  9083  001582  EE20 F001          	lfsr	2,1
  9084  001586  5033               	movf	pf_mount@fs,w,c
  9085  001588  26D9               	addwf	fsr2l,f,c
  9086  00158A  5034               	movf	pf_mount@fs+1,w,c
  9087  00158C  22DA               	addwfc	fsr2h,f,c
  9088  00158E  50DF               	movf	indf2,w,c
  9089  001590  6E40               	movwf	(??_pf_mount+11)& (0+255),c
  9090  001592  5040               	movf	??_pf_mount+11,w,c
  9091  001594  6E14               	movwf	___lldiv@divisor,c
  9092  001596  6A15               	clrf	___lldiv@divisor+1,c
  9093  001598  6A16               	clrf	___lldiv@divisor+2,c
  9094  00159A  6A17               	clrf	___lldiv@divisor+3,c
  9095  00159C  EC71  F01C         	call	___lldiv	;wreg free
  9096  0015A0  C010  F041         	movff	?___lldiv,??_pf_mount+12
  9097  0015A4  C011  F042         	movff	?___lldiv+1,??_pf_mount+13
  9098  0015A8  C012  F043         	movff	?___lldiv+2,??_pf_mount+14
  9099  0015AC  C013  F044         	movff	?___lldiv+3,??_pf_mount+15
  9100  0015B0  0E02               	movlw	2
  9101  0015B2  2441               	addwf	??_pf_mount+12,w,c
  9102  0015B4  0100               	movlb	0	; () banked
  9103  0015B6  6F88               	movwf	pf_mount@mclst& (0+255),b
  9104  0015B8  0E00               	movlw	0
  9105  0015BA  2042               	addwfc	??_pf_mount+13,w,c
  9106  0015BC  0100               	movlb	0	; () banked
  9107  0015BE  6F89               	movwf	(pf_mount@mclst+1)& (0+255),b
  9108  0015C0  0E00               	movlw	0
  9109  0015C2  2043               	addwfc	??_pf_mount+14,w,c
  9110  0015C4  0100               	movlb	0	; () banked
  9111  0015C6  6F8A               	movwf	(pf_mount@mclst+2)& (0+255),b
  9112  0015C8  0E00               	movlw	0
  9113  0015CA  2044               	addwfc	??_pf_mount+15,w,c
  9114  0015CC  0100               	movlb	0	; () banked
  9115  0015CE  6F8B               	movwf	(pf_mount@mclst+3)& (0+255),b
  9116                           
  9117                           ; BSR set to: 0
  9118                           ;pff.c: 502: fs->max_clust = (DWORD)mclst;
  9119  0015D0  EE20 F008          	lfsr	2,8
  9120  0015D4  5033               	movf	pf_mount@fs,w,c
  9121  0015D6  26D9               	addwf	fsr2l,f,c
  9122  0015D8  5034               	movf	pf_mount@fs+1,w,c
  9123  0015DA  22DA               	addwfc	fsr2h,f,c
  9124  0015DC  0100               	movlb	0	; () banked
  9125  0015DE  C088  FFDE         	movff	pf_mount@mclst,postinc2
  9126  0015E2  0100               	movlb	0	; () banked
  9127  0015E4  C089  FFDE         	movff	pf_mount@mclst+1,postinc2
  9128  0015E8  0100               	movlb	0	; () banked
  9129  0015EA  C08A  FFDE         	movff	pf_mount@mclst+2,postinc2
  9130  0015EE  0100               	movlb	0	; () banked
  9131  0015F0  C08B  FFDE         	movff	pf_mount@mclst+3,postinc2
  9132                           
  9133                           ; BSR set to: 0
  9134                           ;pff.c: 504: fmt = 1;
  9135  0015F4  0E01               	movlw	1
  9136  0015F6  0100               	movlb	0	; () banked
  9137  0015F8  6F94               	movwf	pf_mount@fmt& (0+255),b
  9138                           
  9139                           ; BSR set to: 0
  9140                           ;pff.c: 505: if (mclst >= 0xFF7) fmt = 2;
  9141  0015FA  0EF7               	movlw	247
  9142  0015FC  0100               	movlb	0	; () banked
  9143  0015FE  5D88               	subwf	pf_mount@mclst& (0+255),w,b
  9144  001600  0E0F               	movlw	15
  9145  001602  0100               	movlb	0	; () banked
  9146  001604  5989               	subwfb	(pf_mount@mclst+1)& (0+255),w,b
  9147  001606  0E00               	movlw	0
  9148  001608  0100               	movlb	0	; () banked
  9149  00160A  598A               	subwfb	(pf_mount@mclst+2)& (0+255),w,b
  9150  00160C  0E00               	movlw	0
  9151  00160E  0100               	movlb	0	; () banked
  9152  001610  598B               	subwfb	(pf_mount@mclst+3)& (0+255),w,b
  9153  001612  A0D8               	btfss	status,0,c
  9154  001614  D003               	goto	l5700
  9155                           
  9156                           ; BSR set to: 0
  9157  001616  0E02               	movlw	2
  9158  001618  0100               	movlb	0	; () banked
  9159  00161A  6F94               	movwf	pf_mount@fmt& (0+255),b
  9160  00161C                     l5700:
  9161                           
  9162                           ; BSR set to: 0
  9163                           ;pff.c: 506: if (mclst >= 0xFFF7)
  9164  00161C  0EF7               	movlw	247
  9165  00161E  0100               	movlb	0	; () banked
  9166  001620  5D88               	subwf	pf_mount@mclst& (0+255),w,b
  9167  001622  0EFF               	movlw	255
  9168  001624  0100               	movlb	0	; () banked
  9169  001626  5989               	subwfb	(pf_mount@mclst+1)& (0+255),w,b
  9170  001628  0E00               	movlw	0
  9171  00162A  0100               	movlb	0	; () banked
  9172  00162C  598A               	subwfb	(pf_mount@mclst+2)& (0+255),w,b
  9173  00162E  0E00               	movlw	0
  9174  001630  0100               	movlb	0	; () banked
  9175  001632  598B               	subwfb	(pf_mount@mclst+3)& (0+255),w,b
  9176  001634  A0D8               	btfss	status,0,c
  9177  001636  D003               	goto	l5704
  9178                           
  9179                           ; BSR set to: 0
  9180                           ;pff.c: 508: fmt = 3;
  9181  001638  0E03               	movlw	3
  9182  00163A  0100               	movlb	0	; () banked
  9183  00163C  6F94               	movwf	pf_mount@fmt& (0+255),b
  9184  00163E                     l5704:
  9185                           
  9186                           ; BSR set to: 0
  9187                           ;pff.c: 513: fs->fs_type = fmt;
  9188  00163E  C033  FFD9         	movff	pf_mount@fs,fsr2l
  9189  001642  C034  FFDA         	movff	pf_mount@fs+1,fsr2h
  9190  001646  0100               	movlb	0	; () banked
  9191  001648  C094  FFDF         	movff	pf_mount@fmt,indf2
  9192                           
  9193                           ; BSR set to: 0
  9194                           ;pff.c: 515: if (fmt == 3)
  9195  00164C  0100               	movlb	0	; () banked
  9196  00164E  5194               	movf	pf_mount@fmt& (0+255),w,b
  9197  001650  0A03               	xorlw	3
  9198  001652  A4D8               	btfss	status,2,c
  9199  001654  D013               	goto	l5710
  9200                           
  9201                           ; BSR set to: 0
  9202                           ;pff.c: 516: fs->dirbase = (DWORD)(*(DWORD*)(BYTE*)(buf+(44-13)));
  9203  001656  EE20 F010          	lfsr	2,16
  9204  00165A  5033               	movf	pf_mount@fs,w,c
  9205  00165C  26D9               	addwf	fsr2l,f,c
  9206  00165E  5034               	movf	pf_mount@fs+1,w,c
  9207  001660  22DA               	addwfc	fsr2h,f,c
  9208  001662  0100               	movlb	0	; () banked
  9209  001664  C07F  FFDE         	movff	pf_mount@buf+31,postinc2
  9210  001668  0100               	movlb	0	; () banked
  9211  00166A  C080  FFDE         	movff	pf_mount@buf+32,postinc2
  9212  00166E  0100               	movlb	0	; () banked
  9213  001670  C081  FFDE         	movff	pf_mount@buf+33,postinc2
  9214  001674  0100               	movlb	0	; () banked
  9215  001676  C082  FFDE         	movff	pf_mount@buf+34,postinc2
  9216  00167A  D02E               	goto	l165
  9217  00167C                     l5710:
  9218                           
  9219                           ; BSR set to: 0
  9220                           ;pff.c: 517: else
  9221                           ;pff.c: 519: fs->dirbase = fs->fatbase + fsize;
  9222  00167C  EE20 F00C          	lfsr	2,12
  9223  001680  5033               	movf	pf_mount@fs,w,c
  9224  001682  26D9               	addwf	fsr2l,f,c
  9225  001684  5034               	movf	pf_mount@fs+1,w,c
  9226  001686  22DA               	addwfc	fsr2h,f,c
  9227  001688  CFDE F035          	movff	postinc2,??_pf_mount
  9228  00168C  CFDE F036          	movff	postinc2,??_pf_mount+1
  9229  001690  CFDE F037          	movff	postinc2,??_pf_mount+2
  9230  001694  CFDE F038          	movff	postinc2,??_pf_mount+3
  9231  001698  0100               	movlb	0	; () banked
  9232  00169A  5190               	movf	pf_mount@fsize& (0+255),w,b
  9233  00169C  2435               	addwf	??_pf_mount,w,c
  9234  00169E  6E39               	movwf	(??_pf_mount+4)& (0+255),c
  9235  0016A0  0100               	movlb	0	; () banked
  9236  0016A2  5191               	movf	(pf_mount@fsize+1)& (0+255),w,b
  9237  0016A4  2036               	addwfc	??_pf_mount+1,w,c
  9238  0016A6  6E3A               	movwf	(??_pf_mount+5)& (0+255),c
  9239  0016A8  0100               	movlb	0	; () banked
  9240  0016AA  5192               	movf	(pf_mount@fsize+2)& (0+255),w,b
  9241  0016AC  2037               	addwfc	??_pf_mount+2,w,c
  9242  0016AE  6E3B               	movwf	(??_pf_mount+6)& (0+255),c
  9243  0016B0  0100               	movlb	0	; () banked
  9244  0016B2  5193               	movf	(pf_mount@fsize+3)& (0+255),w,b
  9245  0016B4  2038               	addwfc	??_pf_mount+3,w,c
  9246  0016B6  6E3C               	movwf	(??_pf_mount+7)& (0+255),c
  9247  0016B8  EE20 F010          	lfsr	2,16
  9248  0016BC  5033               	movf	pf_mount@fs,w,c
  9249  0016BE  26D9               	addwf	fsr2l,f,c
  9250  0016C0  5034               	movf	pf_mount@fs+1,w,c
  9251  0016C2  22DA               	addwfc	fsr2h,f,c
  9252  0016C4  C039  FFDE         	movff	??_pf_mount+4,postinc2
  9253  0016C8  C03A  FFDE         	movff	??_pf_mount+5,postinc2
  9254  0016CC  C03B  FFDE         	movff	??_pf_mount+6,postinc2
  9255  0016D0  C03C  FFDD         	movff	??_pf_mount+7,postdec2
  9256  0016D4  06D9               	decf	fsr2l,f,c
  9257  0016D6  06D9               	decf	fsr2l,f,c
  9258  0016D8                     l165:
  9259                           
  9260                           ; BSR set to: 0
  9261                           ;pff.c: 520: fs->database = fs->fatbase + fsize + fs->n_rootdir / 16;
  9262  0016D8  EE20 F00C          	lfsr	2,12
  9263  0016DC  5033               	movf	pf_mount@fs,w,c
  9264  0016DE  26D9               	addwf	fsr2l,f,c
  9265  0016E0  5034               	movf	pf_mount@fs+1,w,c
  9266  0016E2  22DA               	addwfc	fsr2h,f,c
  9267  0016E4  CFDE F035          	movff	postinc2,??_pf_mount
  9268  0016E8  CFDE F036          	movff	postinc2,??_pf_mount+1
  9269  0016EC  CFDE F037          	movff	postinc2,??_pf_mount+2
  9270  0016F0  CFDE F038          	movff	postinc2,??_pf_mount+3
  9271  0016F4  EE20 F004          	lfsr	2,4
  9272  0016F8  5033               	movf	pf_mount@fs,w,c
  9273  0016FA  26D9               	addwf	fsr2l,f,c
  9274  0016FC  5034               	movf	pf_mount@fs+1,w,c
  9275  0016FE  22DA               	addwfc	fsr2h,f,c
  9276  001700  CFDE F039          	movff	postinc2,??_pf_mount+4
  9277  001704  CFDD F03A          	movff	postdec2,??_pf_mount+5
  9278  001708  0E04               	movlw	4
  9279  00170A  6E3B               	movwf	(??_pf_mount+6)& (0+255),c
  9280  00170C                     u6695:
  9281  00170C  90D8               	bcf	status,0,c
  9282  00170E  323A               	rrcf	??_pf_mount+5,f,c
  9283  001710  3239               	rrcf	??_pf_mount+4,f,c
  9284  001712  2E3B               	decfsz	(??_pf_mount+6)& (0+255),f,c
  9285  001714  D7FB               	goto	u6695
  9286  001716  5039               	movf	??_pf_mount+4,w,c
  9287  001718  2435               	addwf	??_pf_mount,w,c
  9288  00171A  6E3C               	movwf	(??_pf_mount+7)& (0+255),c
  9289  00171C  503A               	movf	??_pf_mount+5,w,c
  9290  00171E  2036               	addwfc	??_pf_mount+1,w,c
  9291  001720  6E3D               	movwf	(??_pf_mount+8)& (0+255),c
  9292  001722  0E00               	movlw	0
  9293  001724  2037               	addwfc	??_pf_mount+2,w,c
  9294  001726  6E3E               	movwf	(??_pf_mount+9)& (0+255),c
  9295  001728  0E00               	movlw	0
  9296  00172A  2038               	addwfc	??_pf_mount+3,w,c
  9297  00172C  6E3F               	movwf	(??_pf_mount+10)& (0+255),c
  9298  00172E  0100               	movlb	0	; () banked
  9299  001730  5190               	movf	pf_mount@fsize& (0+255),w,b
  9300  001732  243C               	addwf	??_pf_mount+7,w,c
  9301  001734  6E40               	movwf	(??_pf_mount+11)& (0+255),c
  9302  001736  0100               	movlb	0	; () banked
  9303  001738  5191               	movf	(pf_mount@fsize+1)& (0+255),w,b
  9304  00173A  203D               	addwfc	??_pf_mount+8,w,c
  9305  00173C  6E41               	movwf	(??_pf_mount+12)& (0+255),c
  9306  00173E  0100               	movlb	0	; () banked
  9307  001740  5192               	movf	(pf_mount@fsize+2)& (0+255),w,b
  9308  001742  203E               	addwfc	??_pf_mount+9,w,c
  9309  001744  6E42               	movwf	(??_pf_mount+13)& (0+255),c
  9310  001746  0100               	movlb	0	; () banked
  9311  001748  5193               	movf	(pf_mount@fsize+3)& (0+255),w,b
  9312  00174A  203F               	addwfc	??_pf_mount+10,w,c
  9313  00174C  6E43               	movwf	(??_pf_mount+14)& (0+255),c
  9314  00174E  EE20 F014          	lfsr	2,20
  9315  001752  5033               	movf	pf_mount@fs,w,c
  9316  001754  26D9               	addwf	fsr2l,f,c
  9317  001756  5034               	movf	pf_mount@fs+1,w,c
  9318  001758  22DA               	addwfc	fsr2h,f,c
  9319  00175A  C040  FFDE         	movff	??_pf_mount+11,postinc2
  9320  00175E  C041  FFDE         	movff	??_pf_mount+12,postinc2
  9321  001762  C042  FFDE         	movff	??_pf_mount+13,postinc2
  9322  001766  C043  FFDD         	movff	??_pf_mount+14,postdec2
  9323  00176A  06D9               	decf	fsr2l,f,c
  9324  00176C  06D9               	decf	fsr2l,f,c
  9325                           
  9326                           ;pff.c: 522: fs->flag = 0;
  9327  00176E  EE20 F002          	lfsr	2,2
  9328  001772  5033               	movf	pf_mount@fs,w,c
  9329  001774  26D9               	addwf	fsr2l,f,c
  9330  001776  5034               	movf	pf_mount@fs+1,w,c
  9331  001778  22DA               	addwfc	fsr2h,f,c
  9332  00177A  0E00               	movlw	0
  9333  00177C  6EDF               	movwf	indf2,c
  9334                           
  9335                           ; BSR set to: 0
  9336                           ;pff.c: 523: FatFs = fs;
  9337  00177E  C034  F049         	movff	pf_mount@fs+1,_FatFs+1
  9338  001782  C033  F048         	movff	pf_mount@fs,_FatFs
  9339  001786                     L19:
  9340                           
  9341                           ; BSR set to: 0
  9342                           ;pff.c: 525: return FR_OK;
  9343  001786  0E00               	movlw	0
  9344  001788                     l151:
  9345  001788  0012               	return	
  9346  00178A                     __end_of_pf_mount:
  9347                           	opt stack 0
  9348                           tblptru	equ	0xFF8
  9349                           tblptrh	equ	0xFF7
  9350                           tblptrl	equ	0xFF6
  9351                           tablat	equ	0xFF5
  9352                           prodh	equ	0xFF4
  9353                           prodl	equ	0xFF3
  9354                           intcon	equ	0xFF2
  9355                           postinc0	equ	0xFEE
  9356                           wreg	equ	0xFE8
  9357                           indf1	equ	0xFE7
  9358                           postinc1	equ	0xFE6
  9359                           postdec1	equ	0xFE5
  9360                           fsr1h	equ	0xFE2
  9361                           fsr1l	equ	0xFE1
  9362                           indf2	equ	0xFDF
  9363                           postinc2	equ	0xFDE
  9364                           postdec2	equ	0xFDD
  9365                           fsr2h	equ	0xFDA
  9366                           fsr2l	equ	0xFD9
  9367                           status	equ	0xFD8
  9368                           
  9369 ;; *************** function _disk_initialize *****************
  9370 ;; Defined at:
  9371 ;;		line 144 in file "../../../PIC18F/sd_mmc.c"
  9372 ;; Parameters:    Size  Location     Type
  9373 ;;		None
  9374 ;; Auto vars:     Size  Location     Type
  9375 ;;  ocr             4   29[COMRAM] unsigned char [4]
  9376 ;;  tmr             2   37[COMRAM] unsigned short 
  9377 ;;  n               1   39[COMRAM] unsigned char 
  9378 ;;  ty              1   36[COMRAM] unsigned char 
  9379 ;;  cmd             1   35[COMRAM] unsigned char 
  9380 ;; Return value:  Size  Location     Type
  9381 ;;                  1    wreg      unsigned char 
  9382 ;; Registers used:
  9383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9384 ;; Tracked objects:
  9385 ;;		On entry : 0/0
  9386 ;;		On exit  : 0/0
  9387 ;;		Unchanged: 0/0
  9388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9389 ;;      Params:         0       0       0       0       0       0       0       0       0
  9390 ;;      Locals:        11       0       0       0       0       0       0       0       0
  9391 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9392 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9393 ;;Total ram usage:       12 bytes
  9394 ;; Hardware stack levels used:    1
  9395 ;; Hardware stack levels required when called:    5
  9396 ;; This function calls:
  9397 ;;		_init_spi
  9398 ;;		_rcv_spi
  9399 ;;		_release_spi
  9400 ;;		_send_cmd
  9401 ;; This function is called by:
  9402 ;;		_pf_mount
  9403 ;; This function uses a non-reentrant model
  9404 ;;
  9405                           
  9406                           	psect	text30
  9407  002854                     __ptext30:
  9408                           	opt stack 0
  9409  002854                     _disk_initialize:
  9410                           	opt stack 24
  9411                           
  9412                           ;sd_mmc.c: 146: BYTE n, cmd, ty, ocr[4];
  9413                           ;sd_mmc.c: 147: WORD tmr;
  9414                           ;sd_mmc.c: 149: init_spi();
  9415                           
  9416                           ;incstack = 0
  9417  002854  EC38  F01E         	call	_init_spi	;wreg free
  9418                           
  9419                           ;sd_mmc.c: 154: for (n = 100; n; n--) rcv_spi();
  9420  002858  0E64               	movlw	100
  9421  00285A  6E28               	movwf	disk_initialize@n,c
  9422  00285C  D003               	goto	l5360
  9423  00285E                     l5356:
  9424  00285E  EC81  F01E         	call	_rcv_spi	;wreg free
  9425  002862  0628               	decf	disk_initialize@n,f,c
  9426  002864                     l5360:
  9427  002864  6628               	tstfsz	disk_initialize@n,c
  9428  002866  D7FB               	goto	l5356
  9429                           
  9430                           ;sd_mmc.c: 156: ty = 0;
  9431  002868  0E00               	movlw	0
  9432  00286A  6E25               	movwf	disk_initialize@ty,c
  9433                           
  9434                           ;sd_mmc.c: 157: if (send_cmd((0x40+0), 0) == 1) {
  9435  00286C  0E00               	movlw	0
  9436  00286E  6E15               	movwf	send_cmd@arg,c
  9437  002870  0E00               	movlw	0
  9438  002872  6E16               	movwf	send_cmd@arg+1,c
  9439  002874  0E00               	movlw	0
  9440  002876  6E17               	movwf	send_cmd@arg+2,c
  9441  002878  0E00               	movlw	0
  9442  00287A  6E18               	movwf	send_cmd@arg+3,c
  9443  00287C  0E40               	movlw	64
  9444  00287E  EC01  F01A         	call	_send_cmd
  9445  002882  6E1D               	movwf	??_disk_initialize& (0+255),c
  9446  002884  041D               	decf	??_disk_initialize,w,c
  9447  002886  A4D8               	btfss	status,2,c
  9448  002888  D0B8               	goto	l5432
  9449                           
  9450                           ;sd_mmc.c: 159: if (send_cmd((0x40+8), 0x1AA) == 0) {
  9451  00288A  0EAA               	movlw	170
  9452  00288C  6E15               	movwf	send_cmd@arg,c
  9453  00288E  0E01               	movlw	1
  9454  002890  6E16               	movwf	send_cmd@arg+1,c
  9455  002892  0E00               	movlw	0
  9456  002894  6E17               	movwf	send_cmd@arg+2,c
  9457  002896  0E00               	movlw	0
  9458  002898  6E18               	movwf	send_cmd@arg+3,c
  9459  00289A  0E48               	movlw	72
  9460  00289C  EC01  F01A         	call	_send_cmd
  9461  0028A0  0900               	iorlw	0
  9462  0028A2  A4D8               	btfss	status,2,c
  9463  0028A4  D064               	goto	l5414
  9464                           
  9465                           ;sd_mmc.c: 160: for (n = 0; n < 4; n++) ocr[n] = rcv_spi();
  9466  0028A6  0E00               	movlw	0
  9467  0028A8  6E28               	movwf	disk_initialize@n,c
  9468  0028AA  D00C               	goto	L24
  9469  0028AC                     l5374:
  9470  0028AC  5028               	movf	disk_initialize@n,w,c
  9471  0028AE  0D01               	mullw	1
  9472  0028B0  0E1E               	movlw	low disk_initialize@ocr
  9473  0028B2  24F3               	addwf	prodl,w,c
  9474  0028B4  6ED9               	movwf	fsr2l,c
  9475  0028B6  0E00               	movlw	high disk_initialize@ocr
  9476  0028B8  20F4               	addwfc	prodh,w,c
  9477  0028BA  6EDA               	movwf	fsr2h,c
  9478  0028BC  EC81  F01E         	call	_rcv_spi	;wreg free
  9479  0028C0  6EDF               	movwf	indf2,c
  9480  0028C2  2A28               	incf	disk_initialize@n,f,c
  9481  0028C4                     L24:
  9482  0028C4  0E03               	movlw	3
  9483  0028C6  6428               	cpfsgt	disk_initialize@n,c
  9484  0028C8  D7F1               	goto	l5374
  9485                           
  9486                           ;sd_mmc.c: 161: if (ocr[2] == 0x01 && ocr[3] == 0xAA) {
  9487  0028CA  0420               	decf	disk_initialize@ocr+2,w,c
  9488  0028CC  A4D8               	btfss	status,2,c
  9489  0028CE  D095               	goto	l5432
  9490  0028D0  5021               	movf	disk_initialize@ocr+3,w,c
  9491  0028D2  0AAA               	xorlw	170
  9492  0028D4  A4D8               	btfss	status,2,c
  9493  0028D6  D091               	goto	l5432
  9494                           
  9495                           ;sd_mmc.c: 162: for (tmr = 12000; tmr && send_cmd((0xC0+41), 1UL << 30); tmr--) ;
  9496  0028D8  0E2E               	movlw	46
  9497  0028DA  6E27               	movwf	disk_initialize@tmr+1,c
  9498  0028DC  0EE0               	movlw	224
  9499  0028DE  6E26               	movwf	disk_initialize@tmr,c
  9500  0028E0  D003               	goto	l5388
  9501  0028E2                     l5386:
  9502  0028E2  0626               	decf	disk_initialize@tmr,f,c
  9503  0028E4  A0D8               	btfss	status,0,c
  9504  0028E6  0627               	decf	disk_initialize@tmr+1,f,c
  9505  0028E8                     l5388:
  9506  0028E8  5027               	movf	disk_initialize@tmr+1,w,c
  9507  0028EA  1026               	iorwf	disk_initialize@tmr,w,c
  9508  0028EC  B4D8               	btfsc	status,2,c
  9509  0028EE  D00E               	goto	l5392
  9510  0028F0  0E00               	movlw	0
  9511  0028F2  6E15               	movwf	send_cmd@arg,c
  9512  0028F4  0E00               	movlw	0
  9513  0028F6  6E16               	movwf	send_cmd@arg+1,c
  9514  0028F8  0E00               	movlw	0
  9515  0028FA  6E17               	movwf	send_cmd@arg+2,c
  9516  0028FC  0E40               	movlw	64
  9517  0028FE  6E18               	movwf	send_cmd@arg+3,c
  9518  002900  0EE9               	movlw	233
  9519  002902  EC01  F01A         	call	_send_cmd
  9520  002906  0900               	iorlw	0
  9521  002908  A4D8               	btfss	status,2,c
  9522  00290A  D7EB               	goto	l5386
  9523  00290C                     l5392:
  9524                           
  9525                           ;sd_mmc.c: 163: if (tmr && send_cmd((0x40+58), 0) == 0) {
  9526  00290C  5027               	movf	disk_initialize@tmr+1,w,c
  9527  00290E  1026               	iorwf	disk_initialize@tmr,w,c
  9528  002910  B4D8               	btfsc	status,2,c
  9529  002912  D073               	goto	l5432
  9530  002914  0E00               	movlw	0
  9531  002916  6E15               	movwf	send_cmd@arg,c
  9532  002918  0E00               	movlw	0
  9533  00291A  6E16               	movwf	send_cmd@arg+1,c
  9534  00291C  0E00               	movlw	0
  9535  00291E  6E17               	movwf	send_cmd@arg+2,c
  9536  002920  0E00               	movlw	0
  9537  002922  6E18               	movwf	send_cmd@arg+3,c
  9538  002924  0E7A               	movlw	122
  9539  002926  EC01  F01A         	call	_send_cmd
  9540  00292A  0900               	iorlw	0
  9541  00292C  A4D8               	btfss	status,2,c
  9542  00292E  D065               	goto	l5432
  9543                           
  9544                           ;sd_mmc.c: 164: for (n = 0; n < 4; n++) ocr[n] = rcv_spi();
  9545  002930  0E00               	movlw	0
  9546  002932  6E28               	movwf	disk_initialize@n,c
  9547  002934  D00C               	goto	L23
  9548  002936                     l5402:
  9549  002936  5028               	movf	disk_initialize@n,w,c
  9550  002938  0D01               	mullw	1
  9551  00293A  0E1E               	movlw	low disk_initialize@ocr
  9552  00293C  24F3               	addwf	prodl,w,c
  9553  00293E  6ED9               	movwf	fsr2l,c
  9554  002940  0E00               	movlw	high disk_initialize@ocr
  9555  002942  20F4               	addwfc	prodh,w,c
  9556  002944  6EDA               	movwf	fsr2h,c
  9557  002946  EC81  F01E         	call	_rcv_spi	;wreg free
  9558  00294A  6EDF               	movwf	indf2,c
  9559  00294C  2A28               	incf	disk_initialize@n,f,c
  9560  00294E                     L23:
  9561  00294E  0E03               	movlw	3
  9562  002950  6428               	cpfsgt	disk_initialize@n,c
  9563  002952  D7F1               	goto	l5402
  9564                           
  9565                           ;sd_mmc.c: 165: ty = (ocr[0] & 0x40) ? 0x04 | 0x08 : 0x04;
  9566  002954  BC1E               	btfsc	disk_initialize@ocr,6,c
  9567  002956  D004               	goto	l5410
  9568  002958  0E00               	movlw	0
  9569  00295A  6E23               	movwf	_disk_initialize$807+1,c
  9570  00295C  0E04               	movlw	4
  9571  00295E  D003               	goto	L21
  9572  002960                     l5410:
  9573  002960  0E00               	movlw	0
  9574  002962  6E23               	movwf	_disk_initialize$807+1,c
  9575  002964  0E0C               	movlw	12
  9576  002966                     L21:
  9577  002966  6E22               	movwf	_disk_initialize$807,c
  9578  002968  C022  F025         	movff	_disk_initialize$807,disk_initialize@ty
  9579  00296C  D046               	goto	l5432
  9580  00296E                     l5414:
  9581                           
  9582                           ;sd_mmc.c: 169: else {
  9583                           ;sd_mmc.c: 170: if (send_cmd((0xC0+41), 0) <= 1) {
  9584  00296E  0E00               	movlw	0
  9585  002970  6E15               	movwf	send_cmd@arg,c
  9586  002972  0E00               	movlw	0
  9587  002974  6E16               	movwf	send_cmd@arg+1,c
  9588  002976  0E00               	movlw	0
  9589  002978  6E17               	movwf	send_cmd@arg+2,c
  9590  00297A  0E00               	movlw	0
  9591  00297C  6E18               	movwf	send_cmd@arg+3,c
  9592  00297E  0EE9               	movlw	233
  9593  002980  EC01  F01A         	call	_send_cmd
  9594  002984  6E1D               	movwf	??_disk_initialize& (0+255),c
  9595  002986  0E02               	movlw	2
  9596  002988  5C1D               	subwf	??_disk_initialize,w,c
  9597  00298A  B0D8               	btfsc	status,0,c
  9598  00298C  D004               	goto	l5418
  9599                           
  9600                           ;sd_mmc.c: 171: ty = 0x02; cmd = (0xC0+41);
  9601  00298E  0E02               	movlw	2
  9602  002990  6E25               	movwf	disk_initialize@ty,c
  9603  002992  0EE9               	movlw	233
  9604  002994  D003               	goto	L22
  9605  002996                     l5418:
  9606                           
  9607                           ;sd_mmc.c: 173: ty = 0x01; cmd = (0x40+1);
  9608  002996  0E01               	movlw	1
  9609  002998  6E25               	movwf	disk_initialize@ty,c
  9610  00299A  0E41               	movlw	65
  9611  00299C                     L22:
  9612  00299C  6E24               	movwf	disk_initialize@cmd,c
  9613                           
  9614                           ;sd_mmc.c: 174: }
  9615                           ;sd_mmc.c: 175: for (tmr = 25000; tmr && send_cmd(cmd, 0); tmr--) ;
  9616  00299E  0E61               	movlw	97
  9617  0029A0  6E27               	movwf	disk_initialize@tmr+1,c
  9618  0029A2  0EA8               	movlw	168
  9619  0029A4  6E26               	movwf	disk_initialize@tmr,c
  9620  0029A6  D003               	goto	l5422
  9621  0029A8                     l5420:
  9622  0029A8  0626               	decf	disk_initialize@tmr,f,c
  9623  0029AA  A0D8               	btfss	status,0,c
  9624  0029AC  0627               	decf	disk_initialize@tmr+1,f,c
  9625  0029AE                     l5422:
  9626  0029AE  5027               	movf	disk_initialize@tmr+1,w,c
  9627  0029B0  1026               	iorwf	disk_initialize@tmr,w,c
  9628  0029B2  B4D8               	btfsc	status,2,c
  9629  0029B4  D00E               	goto	l5426
  9630  0029B6  0E00               	movlw	0
  9631  0029B8  6E15               	movwf	send_cmd@arg,c
  9632  0029BA  0E00               	movlw	0
  9633  0029BC  6E16               	movwf	send_cmd@arg+1,c
  9634  0029BE  0E00               	movlw	0
  9635  0029C0  6E17               	movwf	send_cmd@arg+2,c
  9636  0029C2  0E00               	movlw	0
  9637  0029C4  6E18               	movwf	send_cmd@arg+3,c
  9638  0029C6  5024               	movf	disk_initialize@cmd,w,c
  9639  0029C8  EC01  F01A         	call	_send_cmd
  9640  0029CC  0900               	iorlw	0
  9641  0029CE  A4D8               	btfss	status,2,c
  9642  0029D0  D7EB               	goto	l5420
  9643  0029D2                     l5426:
  9644                           
  9645                           ;sd_mmc.c: 176: if (!tmr || send_cmd((0x40+16), 512) != 0)
  9646  0029D2  5027               	movf	disk_initialize@tmr+1,w,c
  9647  0029D4  1026               	iorwf	disk_initialize@tmr,w,c
  9648  0029D6  B4D8               	btfsc	status,2,c
  9649  0029D8  D00E               	goto	l5430
  9650  0029DA  0E00               	movlw	0
  9651  0029DC  6E15               	movwf	send_cmd@arg,c
  9652  0029DE  0E02               	movlw	2
  9653  0029E0  6E16               	movwf	send_cmd@arg+1,c
  9654  0029E2  0E00               	movlw	0
  9655  0029E4  6E17               	movwf	send_cmd@arg+2,c
  9656  0029E6  0E00               	movlw	0
  9657  0029E8  6E18               	movwf	send_cmd@arg+3,c
  9658  0029EA  0E50               	movlw	80
  9659  0029EC  EC01  F01A         	call	_send_cmd
  9660  0029F0  0900               	iorlw	0
  9661  0029F2  B4D8               	btfsc	status,2,c
  9662  0029F4  D002               	goto	l5432
  9663  0029F6                     l5430:
  9664                           
  9665                           ;sd_mmc.c: 177: ty = 0;
  9666  0029F6  0E00               	movlw	0
  9667  0029F8  6E25               	movwf	disk_initialize@ty,c
  9668  0029FA                     l5432:
  9669                           
  9670                           ;sd_mmc.c: 178: }
  9671                           ;sd_mmc.c: 179: }
  9672                           ;sd_mmc.c: 180: CardType = ty;
  9673  0029FA  C025  F04E         	movff	disk_initialize@ty,_CardType
  9674                           
  9675                           ;sd_mmc.c: 181: release_spi();
  9676  0029FE  EC86  F01E         	call	_release_spi	;wreg free
  9677                           
  9678                           ;sd_mmc.c: 183: if(ty) SSPCON1 &= 0b11110000;
  9679  002A02  5025               	movf	disk_initialize@ty,w,c
  9680  002A04  B4D8               	btfsc	status,2,c
  9681  002A06  D002               	goto	l5440
  9682  002A08  0EF0               	movlw	240
  9683  002A0A  16C6               	andwf	4038,f,c	;volatile
  9684  002A0C                     l5440:
  9685                           
  9686                           ;sd_mmc.c: 185: return ty ? 0 : 0x01;
  9687  002A0C  5025               	movf	disk_initialize@ty,w,c
  9688  002A0E  A4D8               	btfss	status,2,c
  9689  002A10  D002               	goto	u6380
  9690  002A12  0E01               	movlw	1
  9691  002A14  D001               	goto	l376
  9692  002A16                     u6380:
  9693  002A16  0E00               	movlw	0
  9694  002A18                     l376:
  9695  002A18  0012               	return	
  9696  002A1A                     __end_of_disk_initialize:
  9697                           	opt stack 0
  9698                           tblptru	equ	0xFF8
  9699                           tblptrh	equ	0xFF7
  9700                           tblptrl	equ	0xFF6
  9701                           tablat	equ	0xFF5
  9702                           prodh	equ	0xFF4
  9703                           prodl	equ	0xFF3
  9704                           intcon	equ	0xFF2
  9705                           postinc0	equ	0xFEE
  9706                           wreg	equ	0xFE8
  9707                           indf1	equ	0xFE7
  9708                           postinc1	equ	0xFE6
  9709                           postdec1	equ	0xFE5
  9710                           fsr1h	equ	0xFE2
  9711                           fsr1l	equ	0xFE1
  9712                           indf2	equ	0xFDF
  9713                           postinc2	equ	0xFDE
  9714                           postdec2	equ	0xFDD
  9715                           fsr2h	equ	0xFDA
  9716                           fsr2l	equ	0xFD9
  9717                           status	equ	0xFD8
  9718                           
  9719 ;; *************** function _init_spi *****************
  9720 ;; Defined at:
  9721 ;;		line 9 in file "../../../PIC18F/spi_pic18.c"
  9722 ;; Parameters:    Size  Location     Type
  9723 ;;		None
  9724 ;; Auto vars:     Size  Location     Type
  9725 ;;		None
  9726 ;; Return value:  Size  Location     Type
  9727 ;;		None               void
  9728 ;; Registers used:
  9729 ;;		wreg, status,2, status,0
  9730 ;; Tracked objects:
  9731 ;;		On entry : 0/0
  9732 ;;		On exit  : 0/0
  9733 ;;		Unchanged: 0/0
  9734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9735 ;;      Params:         0       0       0       0       0       0       0       0       0
  9736 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9737 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9738 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9739 ;;Total ram usage:        0 bytes
  9740 ;; Hardware stack levels used:    1
  9741 ;; Hardware stack levels required when called:    2
  9742 ;; This function calls:
  9743 ;;		Nothing
  9744 ;; This function is called by:
  9745 ;;		_disk_initialize
  9746 ;; This function uses a non-reentrant model
  9747 ;;
  9748                           
  9749                           	psect	text31
  9750  003C70                     __ptext31:
  9751                           	opt stack 0
  9752  003C70                     _init_spi:
  9753                           	opt stack 26
  9754                           
  9755                           ;spi_pic18.c: 11: TRISCbits.TRISC6 = 0;
  9756                           
  9757                           ;incstack = 0
  9758  003C70  9C94               	bcf	3988,6,c	;volatile
  9759                           
  9760                           ;spi_pic18.c: 12: TRISCbits.TRISC7 = 0;
  9761  003C72  9E94               	bcf	3988,7,c	;volatile
  9762                           
  9763                           ;spi_pic18.c: 13: TRISBbits.TRISB0 = 1;
  9764  003C74  8093               	bsf	3987,0,c	;volatile
  9765                           
  9766                           ;spi_pic18.c: 14: TRISBbits.TRISB1 = 0;
  9767  003C76  9293               	bcf	3987,1,c	;volatile
  9768                           
  9769                           ;spi_pic18.c: 16: ADCON1 = 0xFF;
  9770  003C78  68C1               	setf	4033,c	;volatile
  9771                           
  9772                           ;spi_pic18.c: 18: SSPSTAT &= 0x3F;
  9773  003C7A  0E3F               	movlw	63
  9774  003C7C  16C7               	andwf	4039,f,c	;volatile
  9775                           
  9776                           ;spi_pic18.c: 19: SSPCON1 = 0x00;
  9777  003C7E  0E00               	movlw	0
  9778  003C80  6EC6               	movwf	4038,c	;volatile
  9779                           
  9780                           ;spi_pic18.c: 21: SSPSTATbits.CKE = 1;
  9781  003C82  8CC7               	bsf	4039,6,c	;volatile
  9782                           
  9783                           ;spi_pic18.c: 22: SSPSTATbits.SMP = 0;
  9784  003C84  9EC7               	bcf	4039,7,c	;volatile
  9785                           
  9786                           ;spi_pic18.c: 24: SSPCON1 |= 0b00000010;
  9787  003C86  82C6               	bsf	4038,1,c	;volatile
  9788                           
  9789                           ;spi_pic18.c: 25: SSPCON1 |= 0b00100000;
  9790  003C88  8AC6               	bsf	4038,5,c	;volatile
  9791                           
  9792                           ;spi_pic18.c: 27: SSPCON1bits.WCOL = 0;
  9793  003C8A  9EC6               	bcf	4038,7,c	;volatile
  9794  003C8C  0012               	return	
  9795  003C8E                     __end_of_init_spi:
  9796                           	opt stack 0
  9797                           tblptru	equ	0xFF8
  9798                           tblptrh	equ	0xFF7
  9799                           tblptrl	equ	0xFF6
  9800                           tablat	equ	0xFF5
  9801                           prodh	equ	0xFF4
  9802                           prodl	equ	0xFF3
  9803                           intcon	equ	0xFF2
  9804                           postinc0	equ	0xFEE
  9805                           wreg	equ	0xFE8
  9806                           indf1	equ	0xFE7
  9807                           postinc1	equ	0xFE6
  9808                           postdec1	equ	0xFE5
  9809                           fsr1h	equ	0xFE2
  9810                           fsr1l	equ	0xFE1
  9811                           indf2	equ	0xFDF
  9812                           postinc2	equ	0xFDE
  9813                           postdec2	equ	0xFDD
  9814                           fsr2h	equ	0xFDA
  9815                           fsr2l	equ	0xFD9
  9816                           status	equ	0xFD8
  9817                           
  9818 ;; *************** function _check_fs *****************
  9819 ;; Defined at:
  9820 ;;		line 422 in file "../../../PIC18F/pff.c"
  9821 ;; Parameters:    Size  Location     Type
  9822 ;;  buf             2   44[COMRAM] PTR unsigned char 
  9823 ;;		 -> pf_mount@buf(36), 
  9824 ;;  sect            4   46[COMRAM] unsigned long 
  9825 ;; Auto vars:     Size  Location     Type
  9826 ;;		None
  9827 ;; Return value:  Size  Location     Type
  9828 ;;                  1    wreg      unsigned char 
  9829 ;; Registers used:
  9830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9831 ;; Tracked objects:
  9832 ;;		On entry : 0/0
  9833 ;;		On exit  : 0/0
  9834 ;;		Unchanged: 0/0
  9835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9836 ;;      Params:         6       0       0       0       0       0       0       0       0
  9837 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9838 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9839 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9840 ;;Total ram usage:        6 bytes
  9841 ;; Hardware stack levels used:    1
  9842 ;; Hardware stack levels required when called:    6
  9843 ;; This function calls:
  9844 ;;		_disk_readp
  9845 ;; This function is called by:
  9846 ;;		_pf_mount
  9847 ;; This function uses a non-reentrant model
  9848 ;;
  9849                           
  9850                           	psect	text32
  9851  003314                     __ptext32:
  9852                           	opt stack 0
  9853  003314                     _check_fs:
  9854                           	opt stack 23
  9855                           
  9856                           ;pff.c: 427: if (disk_readp(buf, sect, 510, 2))
  9857                           
  9858                           ;incstack = 0
  9859  003314  C02E  F01E         	movff	check_fs@buf+1,disk_readp@buff+1
  9860  003318  C02D  F01D         	movff	check_fs@buf,disk_readp@buff
  9861  00331C  C02F  F01F         	movff	check_fs@sect,disk_readp@lba
  9862  003320  C030  F020         	movff	check_fs@sect+1,disk_readp@lba+1
  9863  003324  C031  F021         	movff	check_fs@sect+2,disk_readp@lba+2
  9864  003328  C032  F022         	movff	check_fs@sect+3,disk_readp@lba+3
  9865  00332C  0E01               	movlw	1
  9866  00332E  6E24               	movwf	disk_readp@ofs+1,c
  9867  003330  0EFE               	movlw	254
  9868  003332  6E23               	movwf	disk_readp@ofs,c
  9869  003334  0E00               	movlw	0
  9870  003336  6E26               	movwf	disk_readp@cnt+1,c
  9871  003338  0E02               	movlw	2
  9872  00333A  6E25               	movwf	disk_readp@cnt,c
  9873  00333C  EC71  F01A         	call	_disk_readp	;wreg free
  9874  003340  0900               	iorlw	0
  9875  003342  B4D8               	btfsc	status,2,c
  9876  003344  D002               	goto	l5326
  9877                           
  9878                           ;pff.c: 428: return 3;
  9879  003346  0E03               	movlw	3
  9880  003348  D05B               	goto	l144
  9881  00334A                     l5326:
  9882                           
  9883                           ;pff.c: 429: if ((WORD)(*(WORD*)(BYTE*)(buf)) != 0xAA55)
  9884  00334A  C02D  FFD9         	movff	check_fs@buf,fsr2l
  9885  00334E  C02E  FFDA         	movff	check_fs@buf+1,fsr2h
  9886  003352  2AD9               	incf	fsr2l,f,c
  9887  003354  50DD               	movf	postdec2,w,c
  9888  003356  0AAA               	xorlw	170
  9889  003358  0E55               	movlw	85
  9890  00335A  B4D8               	btfsc	status,2,c
  9891  00335C  18DF               	xorwf	indf2,w,c
  9892  00335E  B4D8               	btfsc	status,2,c
  9893  003360  D002               	goto	l5332
  9894                           
  9895                           ;pff.c: 430: return 2;
  9896  003362  0E02               	movlw	2
  9897  003364  D04D               	goto	l144
  9898  003366                     l5332:
  9899                           
  9900                           ;pff.c: 432: if (!disk_readp(buf, sect, 54, 2) && (WORD)(*(WORD*)(BYTE*)(buf)) == 0x4146
      +                          )
  9901  003366  C02E  F01E         	movff	check_fs@buf+1,disk_readp@buff+1
  9902  00336A  C02D  F01D         	movff	check_fs@buf,disk_readp@buff
  9903  00336E  C02F  F01F         	movff	check_fs@sect,disk_readp@lba
  9904  003372  C030  F020         	movff	check_fs@sect+1,disk_readp@lba+1
  9905  003376  C031  F021         	movff	check_fs@sect+2,disk_readp@lba+2
  9906  00337A  C032  F022         	movff	check_fs@sect+3,disk_readp@lba+3
  9907  00337E  0E00               	movlw	0
  9908  003380  6E24               	movwf	disk_readp@ofs+1,c
  9909  003382  0E36               	movlw	54
  9910  003384  6E23               	movwf	disk_readp@ofs,c
  9911  003386  0E00               	movlw	0
  9912  003388  6E26               	movwf	disk_readp@cnt+1,c
  9913  00338A  0E02               	movlw	2
  9914  00338C  6E25               	movwf	disk_readp@cnt,c
  9915  00338E  EC71  F01A         	call	_disk_readp	;wreg free
  9916  003392  0900               	iorlw	0
  9917  003394  A4D8               	btfss	status,2,c
  9918  003396  D00C               	goto	l5340
  9919  003398  C02D  FFD9         	movff	check_fs@buf,fsr2l
  9920  00339C  C02E  FFDA         	movff	check_fs@buf+1,fsr2h
  9921  0033A0  2AD9               	incf	fsr2l,f,c
  9922  0033A2  50DD               	movf	postdec2,w,c
  9923  0033A4  0A41               	xorlw	65
  9924  0033A6  0E46               	movlw	70
  9925  0033A8  B4D8               	btfsc	status,2,c
  9926  0033AA  18DF               	xorwf	indf2,w,c
  9927  0033AC  B4D8               	btfsc	status,2,c
  9928  0033AE  D025               	goto	u6170
  9929  0033B0                     l5340:
  9930                           
  9931                           ;pff.c: 435: if (!disk_readp(buf, sect, 82, 2) && (WORD)(*(WORD*)(BYTE*)(buf)) == 0x4146
      +                          )
  9932  0033B0  C02E  F01E         	movff	check_fs@buf+1,disk_readp@buff+1
  9933  0033B4  C02D  F01D         	movff	check_fs@buf,disk_readp@buff
  9934  0033B8  C02F  F01F         	movff	check_fs@sect,disk_readp@lba
  9935  0033BC  C030  F020         	movff	check_fs@sect+1,disk_readp@lba+1
  9936  0033C0  C031  F021         	movff	check_fs@sect+2,disk_readp@lba+2
  9937  0033C4  C032  F022         	movff	check_fs@sect+3,disk_readp@lba+3
  9938  0033C8  0E00               	movlw	0
  9939  0033CA  6E24               	movwf	disk_readp@ofs+1,c
  9940  0033CC  0E52               	movlw	82
  9941  0033CE  6E23               	movwf	disk_readp@ofs,c
  9942  0033D0  0E00               	movlw	0
  9943  0033D2  6E26               	movwf	disk_readp@cnt+1,c
  9944  0033D4  0E02               	movlw	2
  9945  0033D6  6E25               	movwf	disk_readp@cnt,c
  9946  0033D8  EC71  F01A         	call	_disk_readp	;wreg free
  9947  0033DC  0900               	iorlw	0
  9948  0033DE  A4D8               	btfss	status,2,c
  9949  0033E0  D00E               	goto	l5348
  9950  0033E2  C02D  FFD9         	movff	check_fs@buf,fsr2l
  9951  0033E6  C02E  FFDA         	movff	check_fs@buf+1,fsr2h
  9952  0033EA  2AD9               	incf	fsr2l,f,c
  9953  0033EC  50DD               	movf	postdec2,w,c
  9954  0033EE  0A41               	xorlw	65
  9955  0033F0  0E46               	movlw	70
  9956  0033F2  B4D8               	btfsc	status,2,c
  9957  0033F4  18DF               	xorwf	indf2,w,c
  9958  0033F6  A4D8               	btfss	status,2,c
  9959  0033F8  D002               	goto	l5348
  9960  0033FA                     u6170:
  9961                           
  9962                           ;pff.c: 436: return 0;
  9963  0033FA  0E00               	movlw	0
  9964  0033FC  D001               	goto	l144
  9965  0033FE                     l5348:
  9966                           
  9967                           ;pff.c: 438: return 1;
  9968  0033FE  0E01               	movlw	1
  9969  003400                     l144:
  9970  003400  0012               	return	
  9971  003402                     __end_of_check_fs:
  9972                           	opt stack 0
  9973                           tblptru	equ	0xFF8
  9974                           tblptrh	equ	0xFF7
  9975                           tblptrl	equ	0xFF6
  9976                           tablat	equ	0xFF5
  9977                           prodh	equ	0xFF4
  9978                           prodl	equ	0xFF3
  9979                           intcon	equ	0xFF2
  9980                           postinc0	equ	0xFEE
  9981                           wreg	equ	0xFE8
  9982                           indf1	equ	0xFE7
  9983                           postinc1	equ	0xFE6
  9984                           postdec1	equ	0xFE5
  9985                           fsr1h	equ	0xFE2
  9986                           fsr1l	equ	0xFE1
  9987                           indf2	equ	0xFDF
  9988                           postinc2	equ	0xFDE
  9989                           postdec2	equ	0xFDD
  9990                           fsr2h	equ	0xFDA
  9991                           fsr2l	equ	0xFD9
  9992                           status	equ	0xFD8
  9993                           
  9994 ;; *************** function _disk_readp *****************
  9995 ;; Defined at:
  9996 ;;		line 194 in file "../../../PIC18F/sd_mmc.c"
  9997 ;; Parameters:    Size  Location     Type
  9998 ;;  buff            2   28[COMRAM] PTR unsigned char 
  9999 ;;		 -> Buff(256), pf_readdir@dir(32), pf_opendir@dir(32), pf_open@dir(32), 
 10000 ;;		 -> pf_mount@buf(36), NULL(0), get_fat@buf(4), 
 10001 ;;  lba             4   30[COMRAM] unsigned long 
 10002 ;;  ofs             2   34[COMRAM] unsigned short 
 10003 ;;  cnt             2   36[COMRAM] unsigned short 
 10004 ;; Auto vars:     Size  Location     Type
 10005 ;;  bc              2   42[COMRAM] unsigned short 
 10006 ;;  rc              1   41[COMRAM] unsigned char 
 10007 ;;  res             1   40[COMRAM] enum E4788
 10008 ;; Return value:  Size  Location     Type
 10009 ;;                  1    wreg      enum E79
 10010 ;; Registers used:
 10011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10012 ;; Tracked objects:
 10013 ;;		On entry : 0/0
 10014 ;;		On exit  : 0/0
 10015 ;;		Unchanged: 0/0
 10016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10017 ;;      Params:        10       0       0       0       0       0       0       0       0
 10018 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10019 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10020 ;;      Totals:        16       0       0       0       0       0       0       0       0
 10021 ;;Total ram usage:       16 bytes
 10022 ;; Hardware stack levels used:    1
 10023 ;; Hardware stack levels required when called:    5
 10024 ;; This function calls:
 10025 ;;		_rcv_spi
 10026 ;;		_release_spi
 10027 ;;		_send_cmd
 10028 ;; This function is called by:
 10029 ;;		_get_fat
 10030 ;;		_dir_find
 10031 ;;		_dir_read
 10032 ;;		_check_fs
 10033 ;;		_pf_mount
 10034 ;;		_pf_read
 10035 ;; This function uses a non-reentrant model
 10036 ;;
 10037                           
 10038                           	psect	text33
 10039  0034E2                     __ptext33:
 10040                           	opt stack 0
 10041  0034E2                     _disk_readp:
 10042                           	opt stack 22
 10043                           
 10044                           ;sd_mmc.c: 201: DRESULT res;
 10045                           ;sd_mmc.c: 202: BYTE rc;
 10046                           ;sd_mmc.c: 203: WORD bc;
 10047                           ;sd_mmc.c: 206: if (!(CardType & 0x08)) lba *= 512;
 10048                           
 10049                           ;incstack = 0
 10050  0034E2  B64E               	btfsc	_CardType,3,c
 10051  0034E4  D008               	goto	l4916
 10052  0034E6  0E09               	movlw	9
 10053  0034E8                     u5265:
 10054  0034E8  90D8               	bcf	status,0,c
 10055  0034EA  361F               	rlcf	disk_readp@lba,f,c
 10056  0034EC  3620               	rlcf	disk_readp@lba+1,f,c
 10057  0034EE  3621               	rlcf	disk_readp@lba+2,f,c
 10058  0034F0  3622               	rlcf	disk_readp@lba+3,f,c
 10059  0034F2  2EE8               	decfsz	wreg,f,c
 10060  0034F4  D7F9               	goto	u5265
 10061  0034F6                     l4916:
 10062                           
 10063                           ;sd_mmc.c: 208: res = RES_ERROR;
 10064  0034F6  0E01               	movlw	1
 10065  0034F8  6E29               	movwf	disk_readp@res,c
 10066                           
 10067                           ;sd_mmc.c: 209: if (send_cmd((0x40+17), lba) == 0) {
 10068  0034FA  C01F  F015         	movff	disk_readp@lba,send_cmd@arg
 10069  0034FE  C020  F016         	movff	disk_readp@lba+1,send_cmd@arg+1
 10070  003502  C021  F017         	movff	disk_readp@lba+2,send_cmd@arg+2
 10071  003506  C022  F018         	movff	disk_readp@lba+3,send_cmd@arg+3
 10072  00350A  0E51               	movlw	81
 10073  00350C  EC01  F01A         	call	_send_cmd
 10074  003510  0900               	iorlw	0
 10075  003512  A4D8               	btfss	status,2,c
 10076  003514  D04F               	goto	l4948
 10077                           
 10078                           ;sd_mmc.c: 211: bc = 30000;
 10079  003516  0E75               	movlw	117
 10080  003518  6E2C               	movwf	disk_readp@bc+1,c
 10081  00351A  0E30               	movlw	48
 10082  00351C  6E2B               	movwf	disk_readp@bc,c
 10083  00351E                     l4922:
 10084                           
 10085                           ;sd_mmc.c: 213: rc = rcv_spi();
 10086  00351E  EC81  F01E         	call	_rcv_spi	;wreg free
 10087  003522  6E2A               	movwf	disk_readp@rc,c
 10088                           
 10089                           ;sd_mmc.c: 214: } while (rc == 0xFF && --bc);
 10090  003524  282A               	incf	disk_readp@rc,w,c
 10091  003526  A4D8               	btfss	status,2,c
 10092  003528  D007               	goto	l4928
 10093  00352A  062B               	decf	disk_readp@bc,f,c
 10094  00352C  A0D8               	btfss	status,0,c
 10095  00352E  062C               	decf	disk_readp@bc+1,f,c
 10096  003530  502C               	movf	(disk_readp@bc+1)& (0+255),w,c
 10097  003532  102B               	iorwf	disk_readp@bc& (0+255),w,c
 10098  003534  A4D8               	btfss	status,2,c
 10099  003536  D7F3               	goto	l4922
 10100  003538                     l4928:
 10101                           
 10102                           ;sd_mmc.c: 216: if (rc == 0xFE) {
 10103  003538  502A               	movf	disk_readp@rc,w,c
 10104  00353A  0AFE               	xorlw	254
 10105  00353C  A4D8               	btfss	status,2,c
 10106  00353E  D03A               	goto	l4948
 10107                           
 10108                           ;sd_mmc.c: 217: bc = 514 - ofs - cnt;
 10109  003540  C023  F027         	movff	disk_readp@ofs,??_disk_readp
 10110  003544  C024  F028         	movff	disk_readp@ofs+1,??_disk_readp+1
 10111  003548  5025               	movf	disk_readp@cnt,w,c
 10112  00354A  2627               	addwf	??_disk_readp,f,c
 10113  00354C  5026               	movf	disk_readp@cnt+1,w,c
 10114  00354E  2228               	addwfc	??_disk_readp+1,f,c
 10115  003550  1E27               	comf	??_disk_readp,f,c
 10116  003552  1E28               	comf	??_disk_readp+1,f,c
 10117  003554  4A27               	infsnz	??_disk_readp,f,c
 10118  003556  2A28               	incf	??_disk_readp+1,f,c
 10119  003558  0E02               	movlw	2
 10120  00355A  2427               	addwf	??_disk_readp,w,c
 10121  00355C  6E2B               	movwf	disk_readp@bc,c
 10122  00355E  0E02               	movlw	2
 10123  003560  2028               	addwfc	??_disk_readp+1,w,c
 10124  003562  6E2C               	movwf	disk_readp@bc+1,c
 10125                           
 10126                           ;sd_mmc.c: 220: if (ofs) {
 10127  003564  5024               	movf	disk_readp@ofs+1,w,c
 10128  003566  1023               	iorwf	disk_readp@ofs,w,c
 10129  003568  B4D8               	btfsc	status,2,c
 10130  00356A  D009               	goto	l4936
 10131  00356C                     l4932:
 10132  00356C  EC81  F01E         	call	_rcv_spi	;wreg free
 10133  003570  0623               	decf	disk_readp@ofs,f,c
 10134  003572  A0D8               	btfss	status,0,c
 10135  003574  0624               	decf	disk_readp@ofs+1,f,c
 10136  003576  5024               	movf	(disk_readp@ofs+1)& (0+255),w,c
 10137  003578  1023               	iorwf	disk_readp@ofs& (0+255),w,c
 10138  00357A  A4D8               	btfss	status,2,c
 10139  00357C  D7F7               	goto	l4932
 10140  00357E                     l4936:
 10141                           
 10142                           ;sd_mmc.c: 226: *buff++ = rcv_spi();
 10143  00357E  EC81  F01E         	call	_rcv_spi	;wreg free
 10144  003582  C01D  FFD9         	movff	disk_readp@buff,fsr2l
 10145  003586  C01E  FFDA         	movff	disk_readp@buff+1,fsr2h
 10146  00358A  6EDF               	movwf	indf2,c
 10147  00358C  4A1D               	infsnz	disk_readp@buff,f,c
 10148  00358E  2A1E               	incf	disk_readp@buff+1,f,c
 10149                           
 10150                           ;sd_mmc.c: 227: while (--cnt);
 10151  003590  0625               	decf	disk_readp@cnt,f,c
 10152  003592  A0D8               	btfss	status,0,c
 10153  003594  0626               	decf	disk_readp@cnt+1,f,c
 10154  003596  5026               	movf	(disk_readp@cnt+1)& (0+255),w,c
 10155  003598  1025               	iorwf	disk_readp@cnt& (0+255),w,c
 10156  00359A  A4D8               	btfss	status,2,c
 10157  00359C  D7F0               	goto	l4936
 10158  00359E                     l4942:
 10159  00359E  EC81  F01E         	call	_rcv_spi	;wreg free
 10160  0035A2  062B               	decf	disk_readp@bc,f,c
 10161  0035A4  A0D8               	btfss	status,0,c
 10162  0035A6  062C               	decf	disk_readp@bc+1,f,c
 10163  0035A8  502C               	movf	(disk_readp@bc+1)& (0+255),w,c
 10164  0035AA  102B               	iorwf	disk_readp@bc& (0+255),w,c
 10165  0035AC  A4D8               	btfss	status,2,c
 10166  0035AE  D7F7               	goto	l4942
 10167                           
 10168                           ;sd_mmc.c: 232: res = RES_OK;
 10169  0035B0  0E00               	movlw	0
 10170  0035B2  6E29               	movwf	disk_readp@res,c
 10171  0035B4                     l4948:
 10172                           
 10173                           ;sd_mmc.c: 233: }
 10174                           ;sd_mmc.c: 234: }
 10175                           ;sd_mmc.c: 236: release_spi();
 10176  0035B4  EC86  F01E         	call	_release_spi	;wreg free
 10177                           
 10178                           ;sd_mmc.c: 238: return res;
 10179  0035B8  5029               	movf	disk_readp@res,w,c
 10180  0035BA  0012               	return	
 10181  0035BC                     __end_of_disk_readp:
 10182                           	opt stack 0
 10183                           tblptru	equ	0xFF8
 10184                           tblptrh	equ	0xFF7
 10185                           tblptrl	equ	0xFF6
 10186                           tablat	equ	0xFF5
 10187                           prodh	equ	0xFF4
 10188                           prodl	equ	0xFF3
 10189                           intcon	equ	0xFF2
 10190                           postinc0	equ	0xFEE
 10191                           wreg	equ	0xFE8
 10192                           indf1	equ	0xFE7
 10193                           postinc1	equ	0xFE6
 10194                           postdec1	equ	0xFE5
 10195                           fsr1h	equ	0xFE2
 10196                           fsr1l	equ	0xFE1
 10197                           indf2	equ	0xFDF
 10198                           postinc2	equ	0xFDE
 10199                           postdec2	equ	0xFDD
 10200                           fsr2h	equ	0xFDA
 10201                           fsr2l	equ	0xFD9
 10202                           status	equ	0xFD8
 10203                           
 10204 ;; *************** function _send_cmd *****************
 10205 ;; Defined at:
 10206 ;;		line 66 in file "../../../PIC18F/sd_mmc.c"
 10207 ;; Parameters:    Size  Location     Type
 10208 ;;  cmd             1    wreg     unsigned char 
 10209 ;;  arg             4   20[COMRAM] unsigned long 
 10210 ;; Auto vars:     Size  Location     Type
 10211 ;;  cmd             1   27[COMRAM] unsigned char 
 10212 ;;  n               1   26[COMRAM] unsigned char 
 10213 ;;  res             1   25[COMRAM] unsigned char 
 10214 ;; Return value:  Size  Location     Type
 10215 ;;                  1    wreg      unsigned char 
 10216 ;; Registers used:
 10217 ;;		wreg, status,2, status,0, cstack
 10218 ;; Tracked objects:
 10219 ;;		On entry : 0/0
 10220 ;;		On exit  : 0/0
 10221 ;;		Unchanged: 0/0
 10222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10223 ;;      Params:         4       0       0       0       0       0       0       0       0
 10224 ;;      Locals:         3       0       0       0       0       0       0       0       0
 10225 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10226 ;;      Totals:         8       0       0       0       0       0       0       0       0
 10227 ;;Total ram usage:        8 bytes
 10228 ;; Hardware stack levels used:    1
 10229 ;; Hardware stack levels required when called:    4
 10230 ;; This function calls:
 10231 ;;		_rcv_spi
 10232 ;;		_wait_ready
 10233 ;;		_xmit_spi
 10234 ;; This function is called by:
 10235 ;;		_disk_initialize
 10236 ;;		_disk_readp
 10237 ;; This function uses a non-reentrant model
 10238 ;;
 10239                           
 10240                           	psect	text34
 10241  003402                     __ptext34:
 10242                           	opt stack 0
 10243  003402                     _send_cmd:
 10244                           	opt stack 22
 10245                           
 10246                           ;incstack = 0
 10247                           ;send_cmd@cmd stored from wreg
 10248  003402  6E1C               	movwf	send_cmd@cmd,c
 10249                           
 10250                           ;sd_mmc.c: 71: BYTE n, res;
 10251                           ;sd_mmc.c: 74: LATCbits.LATC6 = 1;
 10252  003404  8C8B               	bsf	3979,6,c	;volatile
 10253                           
 10254                           ;sd_mmc.c: 75: LATCbits.LATC6 = 0;
 10255  003406  9C8B               	bcf	3979,6,c	;volatile
 10256                           
 10257                           ;sd_mmc.c: 77: if (wait_ready() != 0xFF) {
 10258  003408  ECED  F01D         	call	_wait_ready	;wreg free
 10259  00340C  6E19               	movwf	??_send_cmd& (0+255),c
 10260  00340E  2819               	incf	??_send_cmd,w,c
 10261  003410  B4D8               	btfsc	status,2,c
 10262  003412  D002               	goto	l324
 10263                           
 10264                           ;sd_mmc.c: 78: return 0xFF;
 10265  003414  0EFF               	movlw	255
 10266  003416  D064               	goto	l325
 10267  003418                     l324:
 10268                           
 10269                           ;sd_mmc.c: 79: }
 10270                           ;sd_mmc.c: 81: if (cmd & 0x80) {
 10271  003418  AE1C               	btfss	send_cmd@cmd,7,c
 10272  00341A  D033               	goto	l4882
 10273                           
 10274                           ;sd_mmc.c: 82: cmd &= 0x7F;
 10275  00341C  9E1C               	bcf	send_cmd@cmd,7,c
 10276                           
 10277                           ;sd_mmc.c: 87: xmit_spi(cmd);
 10278  00341E  501C               	movf	send_cmd@cmd,w,c
 10279  003420  EC78  F01E         	call	_xmit_spi
 10280                           
 10281                           ;sd_mmc.c: 88: xmit_spi((BYTE)(arg >> 24));
 10282  003424  5018               	movf	send_cmd@arg+3,w,c
 10283  003426  EC78  F01E         	call	_xmit_spi
 10284                           
 10285                           ;sd_mmc.c: 89: xmit_spi((BYTE)(arg >> 16));
 10286  00342A  5017               	movf	send_cmd@arg+2,w,c
 10287  00342C  EC78  F01E         	call	_xmit_spi
 10288                           
 10289                           ;sd_mmc.c: 90: xmit_spi((BYTE)(arg >> 8));
 10290  003430  5016               	movf	send_cmd@arg+1,w,c
 10291  003432  EC78  F01E         	call	_xmit_spi
 10292                           
 10293                           ;sd_mmc.c: 91: xmit_spi((BYTE)arg);
 10294  003436  5015               	movf	send_cmd@arg,w,c
 10295  003438  EC78  F01E         	call	_xmit_spi
 10296                           
 10297                           ;sd_mmc.c: 92: n = 0x01;
 10298  00343C  0E01               	movlw	1
 10299  00343E  6E1B               	movwf	send_cmd@n,c
 10300                           
 10301                           ;sd_mmc.c: 93: if (cmd == (0x40+0)) n = 0x95;
 10302  003440  501C               	movf	send_cmd@cmd,w,c
 10303  003442  0A40               	xorlw	64
 10304  003444  A4D8               	btfss	status,2,c
 10305  003446  D002               	goto	l4858
 10306  003448  0E95               	movlw	149
 10307  00344A  6E1B               	movwf	send_cmd@n,c
 10308  00344C                     l4858:
 10309                           
 10310                           ;sd_mmc.c: 94: if (cmd == (0x40+8)) n = 0x87;
 10311  00344C  501C               	movf	send_cmd@cmd,w,c
 10312  00344E  0A48               	xorlw	72
 10313  003450  A4D8               	btfss	status,2,c
 10314  003452  D002               	goto	l4862
 10315  003454  0E87               	movlw	135
 10316  003456  6E1B               	movwf	send_cmd@n,c
 10317  003458                     l4862:
 10318                           
 10319                           ;sd_mmc.c: 95: xmit_spi(n);
 10320  003458  501B               	movf	send_cmd@n,w,c
 10321  00345A  EC78  F01E         	call	_xmit_spi
 10322                           
 10323                           ;sd_mmc.c: 98: if (cmd == (0x40+12)) rcv_spi();
 10324  00345E  501C               	movf	send_cmd@cmd,w,c
 10325  003460  0A4C               	xorlw	76
 10326  003462  B4D8               	btfsc	status,2,c
 10327  003464  EC81  F01E         	call	_rcv_spi	;wreg free
 10328                           
 10329                           ;sd_mmc.c: 100: n = 10;
 10330  003468  0E0A               	movlw	10
 10331  00346A  6E1B               	movwf	send_cmd@n,c
 10332  00346C                     l4870:
 10333                           
 10334                           ;sd_mmc.c: 102: res = rcv_spi();
 10335  00346C  EC81  F01E         	call	_rcv_spi	;wreg free
 10336  003470  6E1A               	movwf	send_cmd@res,c
 10337                           
 10338                           ;sd_mmc.c: 103: while ((res & 0x80) && --n);
 10339  003472  AE1A               	btfss	send_cmd@res,7,c
 10340  003474  D002               	goto	l4876
 10341  003476  2E1B               	decfsz	send_cmd@n,f,c
 10342  003478  D7F9               	goto	l4870
 10343  00347A                     l4876:
 10344                           
 10345                           ;sd_mmc.c: 105: if (res > 1) return res;
 10346  00347A  0E01               	movlw	1
 10347  00347C  641A               	cpfsgt	send_cmd@res,c
 10348  00347E  D001               	goto	l4882
 10349  003480  D02E               	goto	l4908
 10350  003482                     l4882:
 10351                           
 10352                           ;sd_mmc.c: 106: }
 10353                           ;sd_mmc.c: 110: xmit_spi(cmd);
 10354  003482  501C               	movf	send_cmd@cmd,w,c
 10355  003484  EC78  F01E         	call	_xmit_spi
 10356                           
 10357                           ;sd_mmc.c: 111: xmit_spi((BYTE)(arg >> 24));
 10358  003488  5018               	movf	send_cmd@arg+3,w,c
 10359  00348A  EC78  F01E         	call	_xmit_spi
 10360                           
 10361                           ;sd_mmc.c: 112: xmit_spi((BYTE)(arg >> 16));
 10362  00348E  5017               	movf	send_cmd@arg+2,w,c
 10363  003490  EC78  F01E         	call	_xmit_spi
 10364                           
 10365                           ;sd_mmc.c: 113: xmit_spi((BYTE)(arg >> 8));
 10366  003494  5016               	movf	send_cmd@arg+1,w,c
 10367  003496  EC78  F01E         	call	_xmit_spi
 10368                           
 10369                           ;sd_mmc.c: 114: xmit_spi((BYTE)arg);
 10370  00349A  5015               	movf	send_cmd@arg,w,c
 10371  00349C  EC78  F01E         	call	_xmit_spi
 10372                           
 10373                           ;sd_mmc.c: 115: n = 0x01;
 10374  0034A0  0E01               	movlw	1
 10375  0034A2  6E1B               	movwf	send_cmd@n,c
 10376                           
 10377                           ;sd_mmc.c: 116: if (cmd == (0x40+0)) n = 0x95;
 10378  0034A4  501C               	movf	send_cmd@cmd,w,c
 10379  0034A6  0A40               	xorlw	64
 10380  0034A8  A4D8               	btfss	status,2,c
 10381  0034AA  D002               	goto	l4890
 10382  0034AC  0E95               	movlw	149
 10383  0034AE  6E1B               	movwf	send_cmd@n,c
 10384  0034B0                     l4890:
 10385                           
 10386                           ;sd_mmc.c: 117: if (cmd == (0x40+8)) n = 0x87;
 10387  0034B0  501C               	movf	send_cmd@cmd,w,c
 10388  0034B2  0A48               	xorlw	72
 10389  0034B4  A4D8               	btfss	status,2,c
 10390  0034B6  D002               	goto	l4894
 10391  0034B8  0E87               	movlw	135
 10392  0034BA  6E1B               	movwf	send_cmd@n,c
 10393  0034BC                     l4894:
 10394                           
 10395                           ;sd_mmc.c: 118: xmit_spi(n);
 10396  0034BC  501B               	movf	send_cmd@n,w,c
 10397  0034BE  EC78  F01E         	call	_xmit_spi
 10398                           
 10399                           ;sd_mmc.c: 121: if (cmd == (0x40+12)) rcv_spi();
 10400  0034C2  501C               	movf	send_cmd@cmd,w,c
 10401  0034C4  0A4C               	xorlw	76
 10402  0034C6  B4D8               	btfsc	status,2,c
 10403  0034C8  EC81  F01E         	call	_rcv_spi	;wreg free
 10404                           
 10405                           ;sd_mmc.c: 123: n = 10;
 10406  0034CC  0E0A               	movlw	10
 10407  0034CE  6E1B               	movwf	send_cmd@n,c
 10408  0034D0                     l4902:
 10409                           
 10410                           ;sd_mmc.c: 125: res = rcv_spi();
 10411  0034D0  EC81  F01E         	call	_rcv_spi	;wreg free
 10412  0034D4  6E1A               	movwf	send_cmd@res,c
 10413                           
 10414                           ;sd_mmc.c: 126: while ((res & 0x80) && --n);
 10415  0034D6  AE1A               	btfss	send_cmd@res,7,c
 10416  0034D8  D002               	goto	l4908
 10417  0034DA  2E1B               	decfsz	send_cmd@n,f,c
 10418  0034DC  D7F9               	goto	l4902
 10419  0034DE                     l4908:
 10420                           
 10421                           ;sd_mmc.c: 128: return res;
 10422  0034DE  501A               	movf	send_cmd@res,w,c
 10423  0034E0                     l325:
 10424  0034E0  0012               	return	
 10425  0034E2                     __end_of_send_cmd:
 10426                           	opt stack 0
 10427                           tblptru	equ	0xFF8
 10428                           tblptrh	equ	0xFF7
 10429                           tblptrl	equ	0xFF6
 10430                           tablat	equ	0xFF5
 10431                           prodh	equ	0xFF4
 10432                           prodl	equ	0xFF3
 10433                           intcon	equ	0xFF2
 10434                           postinc0	equ	0xFEE
 10435                           wreg	equ	0xFE8
 10436                           indf1	equ	0xFE7
 10437                           postinc1	equ	0xFE6
 10438                           postdec1	equ	0xFE5
 10439                           fsr1h	equ	0xFE2
 10440                           fsr1l	equ	0xFE1
 10441                           indf2	equ	0xFDF
 10442                           postinc2	equ	0xFDE
 10443                           postdec2	equ	0xFDD
 10444                           fsr2h	equ	0xFDA
 10445                           fsr2l	equ	0xFD9
 10446                           status	equ	0xFD8
 10447                           
 10448 ;; *************** function _xmit_spi *****************
 10449 ;; Defined at:
 10450 ;;		line 30 in file "../../../PIC18F/spi_pic18.c"
 10451 ;; Parameters:    Size  Location     Type
 10452 ;;  c               1    wreg     unsigned char 
 10453 ;; Auto vars:     Size  Location     Type
 10454 ;;  c               1   16[COMRAM] unsigned char 
 10455 ;;  temp            1   15[COMRAM] unsigned char 
 10456 ;; Return value:  Size  Location     Type
 10457 ;;		None               void
 10458 ;; Registers used:
 10459 ;;		wreg
 10460 ;; Tracked objects:
 10461 ;;		On entry : 0/0
 10462 ;;		On exit  : 0/0
 10463 ;;		Unchanged: 0/0
 10464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10465 ;;      Params:         0       0       0       0       0       0       0       0       0
 10466 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10467 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10468 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10469 ;;Total ram usage:        2 bytes
 10470 ;; Hardware stack levels used:    1
 10471 ;; Hardware stack levels required when called:    2
 10472 ;; This function calls:
 10473 ;;		Nothing
 10474 ;; This function is called by:
 10475 ;;		_send_cmd
 10476 ;; This function uses a non-reentrant model
 10477 ;;
 10478                           
 10479                           	psect	text35
 10480  003CF0                     __ptext35:
 10481                           	opt stack 0
 10482  003CF0                     _xmit_spi:
 10483                           	opt stack 23
 10484                           
 10485                           ;incstack = 0
 10486                           ;xmit_spi@c stored from wreg
 10487  003CF0  6E11               	movwf	xmit_spi@c,c
 10488                           
 10489                           ;spi_pic18.c: 32: unsigned char temp;
 10490                           ;spi_pic18.c: 33: temp = SSPBUF;
 10491  003CF2  CFC9 F010          	movff	4041,xmit_spi@temp	;volatile
 10492                           
 10493                           ;spi_pic18.c: 34: PIR1bits.SSPIF = 0;
 10494  003CF6  969E               	bcf	3998,3,c	;volatile
 10495                           
 10496                           ;spi_pic18.c: 36: SSPBUF = c;
 10497  003CF8  C011  FFC9         	movff	xmit_spi@c,4041	;volatile
 10498  003CFC                     l417:
 10499  003CFC  B69E               	btfsc	3998,3,c	;volatile
 10500  003CFE  0012               	return	
 10501  003D00  D7FD               	goto	l417
 10502  003D02                     __end_of_xmit_spi:
 10503                           	opt stack 0
 10504                           tblptru	equ	0xFF8
 10505                           tblptrh	equ	0xFF7
 10506                           tblptrl	equ	0xFF6
 10507                           tablat	equ	0xFF5
 10508                           prodh	equ	0xFF4
 10509                           prodl	equ	0xFF3
 10510                           intcon	equ	0xFF2
 10511                           postinc0	equ	0xFEE
 10512                           wreg	equ	0xFE8
 10513                           indf1	equ	0xFE7
 10514                           postinc1	equ	0xFE6
 10515                           postdec1	equ	0xFE5
 10516                           fsr1h	equ	0xFE2
 10517                           fsr1l	equ	0xFE1
 10518                           indf2	equ	0xFDF
 10519                           postinc2	equ	0xFDE
 10520                           postdec2	equ	0xFDD
 10521                           fsr2h	equ	0xFDA
 10522                           fsr2l	equ	0xFD9
 10523                           status	equ	0xFD8
 10524                           
 10525 ;; *************** function _wait_ready *****************
 10526 ;; Defined at:
 10527 ;;		line 48 in file "../../../PIC18F/sd_mmc.c"
 10528 ;; Parameters:    Size  Location     Type
 10529 ;;		None
 10530 ;; Auto vars:     Size  Location     Type
 10531 ;;  msg            10    0        unsigned char [10]
 10532 ;;  timeout         4   15[COMRAM] unsigned long 
 10533 ;;  res             1   19[COMRAM] unsigned char 
 10534 ;; Return value:  Size  Location     Type
 10535 ;;                  1    wreg      unsigned char 
 10536 ;; Registers used:
 10537 ;;		wreg, status,2, status,0, cstack
 10538 ;; Tracked objects:
 10539 ;;		On entry : 0/0
 10540 ;;		On exit  : 0/0
 10541 ;;		Unchanged: 0/0
 10542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10543 ;;      Params:         0       0       0       0       0       0       0       0       0
 10544 ;;      Locals:         5       0       0       0       0       0       0       0       0
 10545 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10546 ;;      Totals:         5       0       0       0       0       0       0       0       0
 10547 ;;Total ram usage:        5 bytes
 10548 ;; Hardware stack levels used:    1
 10549 ;; Hardware stack levels required when called:    3
 10550 ;; This function calls:
 10551 ;;		_rcv_spi
 10552 ;; This function is called by:
 10553 ;;		_send_cmd
 10554 ;; This function uses a non-reentrant model
 10555 ;;
 10556                           
 10557                           	psect	text36
 10558  003BDA                     __ptext36:
 10559                           	opt stack 0
 10560  003BDA                     _wait_ready:
 10561                           	opt stack 22
 10562                           
 10563                           ;sd_mmc.c: 50: BYTE res;
 10564                           ;sd_mmc.c: 51: DWORD timeout = 0x7FFF;
 10565                           
 10566                           ;incstack = 0
 10567  003BDA  0EFF               	movlw	255
 10568  003BDC  6E10               	movwf	wait_ready@timeout,c
 10569  003BDE  0E7F               	movlw	127
 10570  003BE0  6E11               	movwf	wait_ready@timeout+1,c
 10571  003BE2  0E00               	movlw	0
 10572  003BE4  6E12               	movwf	wait_ready@timeout+2,c
 10573  003BE6  0E00               	movlw	0
 10574  003BE8  6E13               	movwf	wait_ready@timeout+3,c
 10575  003BEA                     l4814:
 10576                           
 10577                           ;sd_mmc.c: 55: res = rcv_spi();
 10578  003BEA  EC81  F01E         	call	_rcv_spi	;wreg free
 10579  003BEE  6E14               	movwf	wait_ready@res,c
 10580                           
 10581                           ;sd_mmc.c: 56: while ((res != 0xFF) && (--timeout));
 10582  003BF0  2814               	incf	wait_ready@res,w,c
 10583  003BF2  B4D8               	btfsc	status,2,c
 10584  003BF4  D00B               	goto	l4820
 10585  003BF6  0610               	decf	wait_ready@timeout,f,c
 10586  003BF8  0E00               	movlw	0
 10587  003BFA  5A11               	subwfb	wait_ready@timeout+1,f,c
 10588  003BFC  5A12               	subwfb	wait_ready@timeout+2,f,c
 10589  003BFE  5A13               	subwfb	wait_ready@timeout+3,f,c
 10590  003C00  5013               	movf	(wait_ready@timeout+3)& (0+255),w,c
 10591  003C02  1010               	iorwf	wait_ready@timeout& (0+255),w,c
 10592  003C04  1011               	iorwf	(wait_ready@timeout+1)& (0+255),w,c
 10593  003C06  1012               	iorwf	(wait_ready@timeout+2)& (0+255),w,c
 10594  003C08  A4D8               	btfss	status,2,c
 10595  003C0A  D7EF               	goto	l4814
 10596  003C0C                     l4820:
 10597                           
 10598                           ;sd_mmc.c: 58: return res;
 10599  003C0C  5014               	movf	wait_ready@res,w,c
 10600  003C0E  0012               	return	
 10601  003C10                     __end_of_wait_ready:
 10602                           	opt stack 0
 10603                           tblptru	equ	0xFF8
 10604                           tblptrh	equ	0xFF7
 10605                           tblptrl	equ	0xFF6
 10606                           tablat	equ	0xFF5
 10607                           prodh	equ	0xFF4
 10608                           prodl	equ	0xFF3
 10609                           intcon	equ	0xFF2
 10610                           postinc0	equ	0xFEE
 10611                           wreg	equ	0xFE8
 10612                           indf1	equ	0xFE7
 10613                           postinc1	equ	0xFE6
 10614                           postdec1	equ	0xFE5
 10615                           fsr1h	equ	0xFE2
 10616                           fsr1l	equ	0xFE1
 10617                           indf2	equ	0xFDF
 10618                           postinc2	equ	0xFDE
 10619                           postdec2	equ	0xFDD
 10620                           fsr2h	equ	0xFDA
 10621                           fsr2l	equ	0xFD9
 10622                           status	equ	0xFD8
 10623                           
 10624 ;; *************** function _release_spi *****************
 10625 ;; Defined at:
 10626 ;;		line 37 in file "../../../PIC18F/sd_mmc.c"
 10627 ;; Parameters:    Size  Location     Type
 10628 ;;		None
 10629 ;; Auto vars:     Size  Location     Type
 10630 ;;		None
 10631 ;; Return value:  Size  Location     Type
 10632 ;;		None               void
 10633 ;; Registers used:
 10634 ;;		wreg, status,2, cstack
 10635 ;; Tracked objects:
 10636 ;;		On entry : 0/0
 10637 ;;		On exit  : 0/0
 10638 ;;		Unchanged: 0/0
 10639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10640 ;;      Params:         0       0       0       0       0       0       0       0       0
 10641 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10642 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10643 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10644 ;;Total ram usage:        0 bytes
 10645 ;; Hardware stack levels used:    1
 10646 ;; Hardware stack levels required when called:    3
 10647 ;; This function calls:
 10648 ;;		_rcv_spi
 10649 ;; This function is called by:
 10650 ;;		_disk_initialize
 10651 ;;		_disk_readp
 10652 ;; This function uses a non-reentrant model
 10653 ;;
 10654                           
 10655                           	psect	text37
 10656  003D0C                     __ptext37:
 10657                           	opt stack 0
 10658  003D0C                     _release_spi:
 10659                           	opt stack 23
 10660                           
 10661                           ;sd_mmc.c: 39: LATCbits.LATC6 = 1;
 10662                           
 10663                           ;incstack = 0
 10664  003D0C  8C8B               	bsf	3979,6,c	;volatile
 10665                           
 10666                           ;sd_mmc.c: 40: rcv_spi();
 10667  003D0E  EC81  F01E         	call	_rcv_spi	;wreg free
 10668  003D12  0012               	return	
 10669  003D14                     __end_of_release_spi:
 10670                           	opt stack 0
 10671                           tblptru	equ	0xFF8
 10672                           tblptrh	equ	0xFF7
 10673                           tblptrl	equ	0xFF6
 10674                           tablat	equ	0xFF5
 10675                           prodh	equ	0xFF4
 10676                           prodl	equ	0xFF3
 10677                           intcon	equ	0xFF2
 10678                           postinc0	equ	0xFEE
 10679                           wreg	equ	0xFE8
 10680                           indf1	equ	0xFE7
 10681                           postinc1	equ	0xFE6
 10682                           postdec1	equ	0xFE5
 10683                           fsr1h	equ	0xFE2
 10684                           fsr1l	equ	0xFE1
 10685                           indf2	equ	0xFDF
 10686                           postinc2	equ	0xFDE
 10687                           postdec2	equ	0xFDD
 10688                           fsr2h	equ	0xFDA
 10689                           fsr2l	equ	0xFD9
 10690                           status	equ	0xFD8
 10691                           
 10692 ;; *************** function _rcv_spi *****************
 10693 ;; Defined at:
 10694 ;;		line 41 in file "../../../PIC18F/spi_pic18.c"
 10695 ;; Parameters:    Size  Location     Type
 10696 ;;		None
 10697 ;; Auto vars:     Size  Location     Type
 10698 ;;		None
 10699 ;; Return value:  Size  Location     Type
 10700 ;;                  1    wreg      unsigned char 
 10701 ;; Registers used:
 10702 ;;		wreg, status,2
 10703 ;; Tracked objects:
 10704 ;;		On entry : 0/0
 10705 ;;		On exit  : 0/0
 10706 ;;		Unchanged: 0/0
 10707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10708 ;;      Params:         0       0       0       0       0       0       0       0       0
 10709 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10710 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10711 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10712 ;;Total ram usage:        0 bytes
 10713 ;; Hardware stack levels used:    1
 10714 ;; Hardware stack levels required when called:    2
 10715 ;; This function calls:
 10716 ;;		Nothing
 10717 ;; This function is called by:
 10718 ;;		_release_spi
 10719 ;;		_wait_ready
 10720 ;;		_send_cmd
 10721 ;;		_disk_initialize
 10722 ;;		_disk_readp
 10723 ;; This function uses a non-reentrant model
 10724 ;;
 10725                           
 10726                           	psect	text38
 10727  003D02                     __ptext38:
 10728                           	opt stack 0
 10729  003D02                     _rcv_spi:
 10730                           	opt stack 22
 10731                           
 10732                           ;spi_pic18.c: 46: SSPBUF = 0xFF;
 10733                           
 10734                           ;incstack = 0
 10735  003D02  68C9               	setf	4041,c	;volatile
 10736  003D04                     l423:
 10737  003D04  A0C7               	btfss	4039,0,c	;volatile
 10738  003D06  D7FE               	goto	l423
 10739                           
 10740                           ;spi_pic18.c: 49: return ( SSPBUF );
 10741  003D08  50C9               	movf	4041,w,c	;volatile
 10742  003D0A  0012               	return	
 10743  003D0C                     __end_of_rcv_spi:
 10744                           	opt stack 0
 10745                           tblptru	equ	0xFF8
 10746                           tblptrh	equ	0xFF7
 10747                           tblptrl	equ	0xFF6
 10748                           tablat	equ	0xFF5
 10749                           prodh	equ	0xFF4
 10750                           prodl	equ	0xFF3
 10751                           intcon	equ	0xFF2
 10752                           postinc0	equ	0xFEE
 10753                           wreg	equ	0xFE8
 10754                           indf1	equ	0xFE7
 10755                           postinc1	equ	0xFE6
 10756                           postdec1	equ	0xFE5
 10757                           fsr1h	equ	0xFE2
 10758                           fsr1l	equ	0xFE1
 10759                           indf2	equ	0xFDF
 10760                           postinc2	equ	0xFDE
 10761                           postdec2	equ	0xFDD
 10762                           fsr2h	equ	0xFDA
 10763                           fsr2l	equ	0xFD9
 10764                           status	equ	0xFD8
 10765                           
 10766 ;; *************** function ___lmul *****************
 10767 ;; Defined at:
 10768 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul32.c"
 10769 ;; Parameters:    Size  Location     Type
 10770 ;;  multiplier      4   15[COMRAM] unsigned long 
 10771 ;;  multiplicand    4   19[COMRAM] unsigned long 
 10772 ;; Auto vars:     Size  Location     Type
 10773 ;;  product         4   23[COMRAM] unsigned long 
 10774 ;; Return value:  Size  Location     Type
 10775 ;;                  4   15[COMRAM] unsigned long 
 10776 ;; Registers used:
 10777 ;;		wreg, status,2, status,0
 10778 ;; Tracked objects:
 10779 ;;		On entry : 0/0
 10780 ;;		On exit  : 0/0
 10781 ;;		Unchanged: 0/0
 10782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10783 ;;      Params:         8       0       0       0       0       0       0       0       0
 10784 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10785 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10786 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10787 ;;Total ram usage:       12 bytes
 10788 ;; Hardware stack levels used:    1
 10789 ;; Hardware stack levels required when called:    2
 10790 ;; This function calls:
 10791 ;;		Nothing
 10792 ;; This function is called by:
 10793 ;;		_clust2sect
 10794 ;;		_pf_mount
 10795 ;; This function uses a non-reentrant model
 10796 ;;
 10797                           
 10798                           	psect	text39
 10799  003AF8                     __ptext39:
 10800                           	opt stack 0
 10801  003AF8                     ___lmul:
 10802                           	opt stack 25
 10803                           
 10804                           ;incstack = 0
 10805  003AF8  0E00               	movlw	0
 10806  003AFA  6E18               	movwf	___lmul@product,c
 10807  003AFC  0E00               	movlw	0
 10808  003AFE  6E19               	movwf	___lmul@product+1,c
 10809  003B00  0E00               	movlw	0
 10810  003B02  6E1A               	movwf	___lmul@product+2,c
 10811  003B04  0E00               	movlw	0
 10812  003B06  6E1B               	movwf	___lmul@product+3,c
 10813  003B08                     l3138:
 10814  003B08  A010               	btfss	___lmul@multiplier,0,c
 10815  003B0A  D008               	goto	l3142
 10816  003B0C  5014               	movf	___lmul@multiplicand,w,c
 10817  003B0E  2618               	addwf	___lmul@product,f,c
 10818  003B10  5015               	movf	___lmul@multiplicand+1,w,c
 10819  003B12  2219               	addwfc	___lmul@product+1,f,c
 10820  003B14  5016               	movf	___lmul@multiplicand+2,w,c
 10821  003B16  221A               	addwfc	___lmul@product+2,f,c
 10822  003B18  5017               	movf	___lmul@multiplicand+3,w,c
 10823  003B1A  221B               	addwfc	___lmul@product+3,f,c
 10824  003B1C                     l3142:
 10825  003B1C  90D8               	bcf	status,0,c
 10826  003B1E  3614               	rlcf	___lmul@multiplicand,f,c
 10827  003B20  3615               	rlcf	___lmul@multiplicand+1,f,c
 10828  003B22  3616               	rlcf	___lmul@multiplicand+2,f,c
 10829  003B24  3617               	rlcf	___lmul@multiplicand+3,f,c
 10830  003B26  90D8               	bcf	status,0,c
 10831  003B28  3213               	rrcf	___lmul@multiplier+3,f,c
 10832  003B2A  3212               	rrcf	___lmul@multiplier+2,f,c
 10833  003B2C  3211               	rrcf	___lmul@multiplier+1,f,c
 10834  003B2E  3210               	rrcf	___lmul@multiplier,f,c
 10835  003B30  5013               	movf	___lmul@multiplier+3,w,c
 10836  003B32  1010               	iorwf	___lmul@multiplier,w,c
 10837  003B34  1011               	iorwf	___lmul@multiplier+1,w,c
 10838  003B36  1012               	iorwf	___lmul@multiplier+2,w,c
 10839  003B38  A4D8               	btfss	status,2,c
 10840  003B3A  D7E6               	goto	l3138
 10841  003B3C  C018  F010         	movff	___lmul@product,?___lmul
 10842  003B40  C019  F011         	movff	___lmul@product+1,?___lmul+1
 10843  003B44  C01A  F012         	movff	___lmul@product+2,?___lmul+2
 10844  003B48  C01B  F013         	movff	___lmul@product+3,?___lmul+3
 10845  003B4C  0012               	return	
 10846  003B4E                     __end_of___lmul:
 10847                           	opt stack 0
 10848                           tblptru	equ	0xFF8
 10849                           tblptrh	equ	0xFF7
 10850                           tblptrl	equ	0xFF6
 10851                           tablat	equ	0xFF5
 10852                           prodh	equ	0xFF4
 10853                           prodl	equ	0xFF3
 10854                           intcon	equ	0xFF2
 10855                           postinc0	equ	0xFEE
 10856                           wreg	equ	0xFE8
 10857                           indf1	equ	0xFE7
 10858                           postinc1	equ	0xFE6
 10859                           postdec1	equ	0xFE5
 10860                           fsr1h	equ	0xFE2
 10861                           fsr1l	equ	0xFE1
 10862                           indf2	equ	0xFDF
 10863                           postinc2	equ	0xFDE
 10864                           postdec2	equ	0xFDD
 10865                           fsr2h	equ	0xFDA
 10866                           fsr2l	equ	0xFD9
 10867                           status	equ	0xFD8
 10868                           
 10869 ;; *************** function ___lldiv *****************
 10870 ;; Defined at:
 10871 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lldiv.c"
 10872 ;; Parameters:    Size  Location     Type
 10873 ;;  dividend        4   15[COMRAM] unsigned long 
 10874 ;;  divisor         4   19[COMRAM] unsigned long 
 10875 ;; Auto vars:     Size  Location     Type
 10876 ;;  quotient        4   23[COMRAM] unsigned long 
 10877 ;;  counter         1   27[COMRAM] unsigned char 
 10878 ;; Return value:  Size  Location     Type
 10879 ;;                  4   15[COMRAM] unsigned long 
 10880 ;; Registers used:
 10881 ;;		wreg, status,2, status,0
 10882 ;; Tracked objects:
 10883 ;;		On entry : 0/0
 10884 ;;		On exit  : 0/0
 10885 ;;		Unchanged: 0/0
 10886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10887 ;;      Params:         8       0       0       0       0       0       0       0       0
 10888 ;;      Locals:         5       0       0       0       0       0       0       0       0
 10889 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10890 ;;      Totals:        13       0       0       0       0       0       0       0       0
 10891 ;;Total ram usage:       13 bytes
 10892 ;; Hardware stack levels used:    1
 10893 ;; Hardware stack levels required when called:    2
 10894 ;; This function calls:
 10895 ;;		Nothing
 10896 ;; This function is called by:
 10897 ;;		_pf_mount
 10898 ;;		_pf_lseek
 10899 ;;		_set_sampling_rate
 10900 ;; This function uses a non-reentrant model
 10901 ;;
 10902                           
 10903                           	psect	text40
 10904  0038E2                     __ptext40:
 10905                           	opt stack 0
 10906  0038E2                     ___lldiv:
 10907                           	opt stack 25
 10908                           
 10909                           ;incstack = 0
 10910  0038E2  0E00               	movlw	0
 10911  0038E4  6E18               	movwf	___lldiv@quotient,c
 10912  0038E6  0E00               	movlw	0
 10913  0038E8  6E19               	movwf	___lldiv@quotient+1,c
 10914  0038EA  0E00               	movlw	0
 10915  0038EC  6E1A               	movwf	___lldiv@quotient+2,c
 10916  0038EE  0E00               	movlw	0
 10917  0038F0  6E1B               	movwf	___lldiv@quotient+3,c
 10918  0038F2  5017               	movf	___lldiv@divisor+3,w,c
 10919  0038F4  1014               	iorwf	___lldiv@divisor,w,c
 10920  0038F6  1015               	iorwf	___lldiv@divisor+1,w,c
 10921  0038F8  1016               	iorwf	___lldiv@divisor+2,w,c
 10922  0038FA  B4D8               	btfsc	status,2,c
 10923  0038FC  D02A               	goto	l996
 10924  0038FE  0E01               	movlw	1
 10925  003900  6E1C               	movwf	___lldiv@counter,c
 10926  003902  D006               	goto	l3420
 10927  003904                     l3418:
 10928  003904  90D8               	bcf	status,0,c
 10929  003906  3614               	rlcf	___lldiv@divisor,f,c
 10930  003908  3615               	rlcf	___lldiv@divisor+1,f,c
 10931  00390A  3616               	rlcf	___lldiv@divisor+2,f,c
 10932  00390C  3617               	rlcf	___lldiv@divisor+3,f,c
 10933  00390E  2A1C               	incf	___lldiv@counter,f,c
 10934  003910                     l3420:
 10935  003910  AE17               	btfss	___lldiv@divisor+3,7,c
 10936  003912  D7F8               	goto	l3418
 10937  003914                     l3422:
 10938  003914  90D8               	bcf	status,0,c
 10939  003916  3618               	rlcf	___lldiv@quotient,f,c
 10940  003918  3619               	rlcf	___lldiv@quotient+1,f,c
 10941  00391A  361A               	rlcf	___lldiv@quotient+2,f,c
 10942  00391C  361B               	rlcf	___lldiv@quotient+3,f,c
 10943  00391E  5014               	movf	___lldiv@divisor,w,c
 10944  003920  5C10               	subwf	___lldiv@dividend,w,c
 10945  003922  5015               	movf	___lldiv@divisor+1,w,c
 10946  003924  5811               	subwfb	___lldiv@dividend+1,w,c
 10947  003926  5016               	movf	___lldiv@divisor+2,w,c
 10948  003928  5812               	subwfb	___lldiv@dividend+2,w,c
 10949  00392A  5017               	movf	___lldiv@divisor+3,w,c
 10950  00392C  5813               	subwfb	___lldiv@dividend+3,w,c
 10951  00392E  A0D8               	btfss	status,0,c
 10952  003930  D009               	goto	l3430
 10953  003932  5014               	movf	___lldiv@divisor,w,c
 10954  003934  5E10               	subwf	___lldiv@dividend,f,c
 10955  003936  5015               	movf	___lldiv@divisor+1,w,c
 10956  003938  5A11               	subwfb	___lldiv@dividend+1,f,c
 10957  00393A  5016               	movf	___lldiv@divisor+2,w,c
 10958  00393C  5A12               	subwfb	___lldiv@dividend+2,f,c
 10959  00393E  5017               	movf	___lldiv@divisor+3,w,c
 10960  003940  5A13               	subwfb	___lldiv@dividend+3,f,c
 10961  003942  8018               	bsf	___lldiv@quotient,0,c
 10962  003944                     l3430:
 10963  003944  90D8               	bcf	status,0,c
 10964  003946  3217               	rrcf	___lldiv@divisor+3,f,c
 10965  003948  3216               	rrcf	___lldiv@divisor+2,f,c
 10966  00394A  3215               	rrcf	___lldiv@divisor+1,f,c
 10967  00394C  3214               	rrcf	___lldiv@divisor,f,c
 10968  00394E  2E1C               	decfsz	___lldiv@counter,f,c
 10969  003950  D7E1               	goto	l3422
 10970  003952                     l996:
 10971  003952  C018  F010         	movff	___lldiv@quotient,?___lldiv
 10972  003956  C019  F011         	movff	___lldiv@quotient+1,?___lldiv+1
 10973  00395A  C01A  F012         	movff	___lldiv@quotient+2,?___lldiv+2
 10974  00395E  C01B  F013         	movff	___lldiv@quotient+3,?___lldiv+3
 10975  003962  0012               	return	
 10976  003964                     __end_of___lldiv:
 10977                           	opt stack 0
 10978                           tblptru	equ	0xFF8
 10979                           tblptrh	equ	0xFF7
 10980                           tblptrl	equ	0xFF6
 10981                           tablat	equ	0xFF5
 10982                           prodh	equ	0xFF4
 10983                           prodl	equ	0xFF3
 10984                           intcon	equ	0xFF2
 10985                           postinc0	equ	0xFEE
 10986                           wreg	equ	0xFE8
 10987                           indf1	equ	0xFE7
 10988                           postinc1	equ	0xFE6
 10989                           postdec1	equ	0xFE5
 10990                           fsr1h	equ	0xFE2
 10991                           fsr1l	equ	0xFE1
 10992                           indf2	equ	0xFDF
 10993                           postinc2	equ	0xFDE
 10994                           postdec2	equ	0xFDD
 10995                           fsr2h	equ	0xFDA
 10996                           fsr2l	equ	0xFD9
 10997                           status	equ	0xFD8
 10998                           
 10999 ;; *************** function _isr *****************
 11000 ;; Defined at:
 11001 ;;		line 76 in file "../../../PIC18F/pwm_audio.c"
 11002 ;; Parameters:    Size  Location     Type
 11003 ;;		None
 11004 ;; Auto vars:     Size  Location     Type
 11005 ;;		None
 11006 ;; Return value:  Size  Location     Type
 11007 ;;		None               void
 11008 ;; Registers used:
 11009 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11010 ;; Tracked objects:
 11011 ;;		On entry : 0/0
 11012 ;;		On exit  : 0/0
 11013 ;;		Unchanged: 0/0
 11014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11015 ;;      Params:         0       0       0       0       0       0       0       0       0
 11016 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11017 ;;      Temps:         14       0       0       0       0       0       0       0       0
 11018 ;;      Totals:        14       0       0       0       0       0       0       0       0
 11019 ;;Total ram usage:       14 bytes
 11020 ;; Hardware stack levels used:    1
 11021 ;; Hardware stack levels required when called:    1
 11022 ;; This function calls:
 11023 ;;		_set_pwm1_duty
 11024 ;; This function is called by:
 11025 ;;		Interrupt level 2
 11026 ;; This function uses a non-reentrant model
 11027 ;;
 11028                           
 11029                           	psect	intcode
 11030  000008                     __pintcode:
 11031                           	opt stack 0
 11032  000008                     _isr:
 11033                           	opt stack 19
 11034                           
 11035                           ;incstack = 0
 11036  000008  CFFA F002          	movff	pclath,??_isr
 11037  00000C  CFFB F003          	movff	pclatu,??_isr+1
 11038  000010  CFE9 F004          	movff	fsr0l,??_isr+2
 11039  000014  ED9A  F01B         	call	int_func,f	;refresh shadow registers
 11040                           pclatu	equ	0xFFB
 11041                           pclath	equ	0xFFA
 11042                           tblptru	equ	0xFF8
 11043                           tblptrh	equ	0xFF7
 11044                           tblptrl	equ	0xFF6
 11045                           tablat	equ	0xFF5
 11046                           prodh	equ	0xFF4
 11047                           prodl	equ	0xFF3
 11048                           intcon	equ	0xFF2
 11049                           postinc0	equ	0xFEE
 11050                           fsr0l	equ	0xFE9
 11051                           wreg	equ	0xFE8
 11052                           indf1	equ	0xFE7
 11053                           postinc1	equ	0xFE6
 11054                           postdec1	equ	0xFE5
 11055                           fsr1h	equ	0xFE2
 11056                           fsr1l	equ	0xFE1
 11057                           indf2	equ	0xFDF
 11058                           postinc2	equ	0xFDE
 11059                           postdec2	equ	0xFDD
 11060                           fsr2h	equ	0xFDA
 11061                           fsr2l	equ	0xFD9
 11062                           status	equ	0xFD8
 11063                           
 11064                           	psect	intcode_body
 11065  003734                     __pintcode_body:
 11066                           	opt stack 19
 11067  003734                     int_func:
 11068                           	opt stack 19
 11069  003734  0006               	pop		; remove dummy address from shadow register refresh
 11070  003736  CFEA F005          	movff	fsr0h,??_isr+3
 11071  00373A  CFE1 F006          	movff	fsr1l,??_isr+4
 11072  00373E  CFE2 F007          	movff	fsr1h,??_isr+5
 11073  003742  CFD9 F008          	movff	fsr2l,??_isr+6
 11074  003746  CFDA F009          	movff	fsr2h,??_isr+7
 11075  00374A  CFF3 F00A          	movff	prodl,??_isr+8
 11076  00374E  CFF4 F00B          	movff	prodh,??_isr+9
 11077  003752  CFF6 F00C          	movff	tblptrl,??_isr+10
 11078  003756  CFF7 F00D          	movff	tblptrh,??_isr+11
 11079  00375A  CFF8 F00E          	movff	tblptru,??_isr+12
 11080  00375E  CFF5 F00F          	movff	tablat,??_isr+13
 11081                           
 11082                           ;pwm_audio.c: 79: if((PIE1bits.TMR1IE)&&(PIR1bits.TMR1IF))
 11083  003762  B09D               	btfsc	3997,0,c	;volatile
 11084  003764  A09E               	btfss	3998,0,c	;volatile
 11085  003766  D01D               	goto	i2l287
 11086                           
 11087                           ;pwm_audio.c: 80: {
 11088                           ;pwm_audio.c: 81: TMR1H = TMR1H_preload;
 11089  003768  C04F  FFCF         	movff	_TMR1H_preload,4047	;volatile
 11090                           
 11091                           ;pwm_audio.c: 82: TMR1L = TMR1L_preload;
 11092  00376C  C050  FFCE         	movff	_TMR1L_preload,4046	;volatile
 11093                           
 11094                           ;pwm_audio.c: 84: set_pwm1_duty ( WAV_L_BUFF[pWAVOUT] );
 11095  003770  0103               	movlb	3	; () banked
 11096  003772  0E00               	movlw	low _WAV_L_BUFF
 11097  003774  244C               	addwf	_pWAVOUT,w,c	;volatile
 11098  003776  6ED9               	movwf	fsr2l,c
 11099  003778  0103               	movlb	3	; () banked
 11100  00377A  0E03               	movlw	high _WAV_L_BUFF
 11101  00377C  204D               	addwfc	_pWAVOUT+1,w,c	;volatile
 11102  00377E  6EDA               	movwf	fsr2h,c
 11103  003780  50DF               	movf	indf2,w,c
 11104  003782  EC61  F01E         	call	_set_pwm1_duty
 11105                           
 11106                           ;pwm_audio.c: 86: ++pWAVOUT;
 11107  003786  4A4C               	infsnz	_pWAVOUT,f,c	;volatile
 11108  003788  2A4D               	incf	_pWAVOUT+1,f,c	;volatile
 11109                           
 11110                           ;pwm_audio.c: 87: pWAVOUT &= (256-1);
 11111  00378A  0EFF               	movlw	255
 11112  00378C  164C               	andwf	_pWAVOUT,f,c	;volatile
 11113  00378E  0E00               	movlw	0
 11114  003790  164D               	andwf	_pWAVOUT+1,f,c	;volatile
 11115                           
 11116                           ;pwm_audio.c: 89: if(pWAVOUT == pWAVIN)
 11117  003792  504B               	movf	_pWAVIN+1,w,c	;volatile
 11118  003794  184D               	xorwf	_pWAVOUT+1,w,c	;volatile
 11119  003796  E102               	bnz	i2u504_45
 11120  003798  504A               	movf	_pWAVIN,w,c	;volatile
 11121  00379A  184C               	xorwf	_pWAVOUT,w,c	;volatile
 11122  00379C                     i2u504_45:
 11123  00379C  B4D8               	btfsc	status,2,c
 11124                           
 11125                           ;pwm_audio.c: 90: {
 11126                           ;pwm_audio.c: 92: PIE1bits.TMR1IE = 1;
 11127  00379E  809D               	bsf	3997,0,c	;volatile
 11128                           
 11129                           ;pwm_audio.c: 93: }
 11130                           ;pwm_audio.c: 95: PIR1bits.TMR1IF=0;
 11131  0037A0  909E               	bcf	3998,0,c	;volatile
 11132  0037A2                     i2l287:
 11133  0037A2  C00F  FFF5         	movff	??_isr+13,tablat
 11134  0037A6  C00E  FFF8         	movff	??_isr+12,tblptru
 11135  0037AA  C00D  FFF7         	movff	??_isr+11,tblptrh
 11136  0037AE  C00C  FFF6         	movff	??_isr+10,tblptrl
 11137  0037B2  C00B  FFF4         	movff	??_isr+9,prodh
 11138  0037B6  C00A  FFF3         	movff	??_isr+8,prodl
 11139  0037BA  C009  FFDA         	movff	??_isr+7,fsr2h
 11140  0037BE  C008  FFD9         	movff	??_isr+6,fsr2l
 11141  0037C2  C007  FFE2         	movff	??_isr+5,fsr1h
 11142  0037C6  C006  FFE1         	movff	??_isr+4,fsr1l
 11143  0037CA  C005  FFEA         	movff	??_isr+3,fsr0h
 11144  0037CE  C004  FFE9         	movff	??_isr+2,fsr0l
 11145  0037D2  C003  FFFB         	movff	??_isr+1,pclatu
 11146  0037D6  C002  FFFA         	movff	??_isr,pclath
 11147  0037DA  0011               	retfie		f
 11148  0037DC                     __end_of_isr:
 11149                           	opt stack 0
 11150                           pclatu	equ	0xFFB
 11151                           pclath	equ	0xFFA
 11152                           tblptru	equ	0xFF8
 11153                           tblptrh	equ	0xFF7
 11154                           tblptrl	equ	0xFF6
 11155                           tablat	equ	0xFF5
 11156                           prodh	equ	0xFF4
 11157                           prodl	equ	0xFF3
 11158                           intcon	equ	0xFF2
 11159                           postinc0	equ	0xFEE
 11160                           fsr0h	equ	0xFEA
 11161                           fsr0l	equ	0xFE9
 11162                           wreg	equ	0xFE8
 11163                           indf1	equ	0xFE7
 11164                           postinc1	equ	0xFE6
 11165                           postdec1	equ	0xFE5
 11166                           fsr1h	equ	0xFE2
 11167                           fsr1l	equ	0xFE1
 11168                           indf2	equ	0xFDF
 11169                           postinc2	equ	0xFDE
 11170                           postdec2	equ	0xFDD
 11171                           fsr2h	equ	0xFDA
 11172                           fsr2l	equ	0xFD9
 11173                           status	equ	0xFD8
 11174                           
 11175 ;; *************** function _set_pwm1_duty *****************
 11176 ;; Defined at:
 11177 ;;		line 43 in file "../../../PIC18F/pwm_audio.c"
 11178 ;; Parameters:    Size  Location     Type
 11179 ;;  duty1           1    wreg     unsigned char 
 11180 ;; Auto vars:     Size  Location     Type
 11181 ;;  duty1           1    0[COMRAM] unsigned char 
 11182 ;; Return value:  Size  Location     Type
 11183 ;;		None               void
 11184 ;; Registers used:
 11185 ;;		wreg, status,2, status,0
 11186 ;; Tracked objects:
 11187 ;;		On entry : 0/0
 11188 ;;		On exit  : 0/0
 11189 ;;		Unchanged: 0/0
 11190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11191 ;;      Params:         0       0       0       0       0       0       0       0       0
 11192 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11193 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11194 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11195 ;;Total ram usage:        1 bytes
 11196 ;; Hardware stack levels used:    1
 11197 ;; This function calls:
 11198 ;;		Nothing
 11199 ;; This function is called by:
 11200 ;;		_isr
 11201 ;; This function uses a non-reentrant model
 11202 ;;
 11203                           
 11204                           	psect	text42
 11205  003CC2                     __ptext42:
 11206                           	opt stack 0
 11207  003CC2                     _set_pwm1_duty:
 11208                           	opt stack 19
 11209                           
 11210                           ;incstack = 0
 11211                           ;set_pwm1_duty@duty1 stored from wreg
 11212  003CC2  6E01               	movwf	set_pwm1_duty@duty1,c
 11213                           
 11214                           ;pwm_audio.c: 45: CCPR1L = duty1>>2;
 11215  003CC4  4001               	rrncf	set_pwm1_duty@duty1,w,c
 11216  003CC6  42E8               	rrncf	wreg,f,c
 11217  003CC8  0B3F               	andlw	63
 11218  003CCA  6EBE               	movwf	4030,c	;volatile
 11219                           
 11220                           ;pwm_audio.c: 46: CCP1CON &= 0b11001111;
 11221  003CCC  0ECF               	movlw	207
 11222  003CCE  16BD               	andwf	4029,f,c	;volatile
 11223                           
 11224                           ;pwm_audio.c: 47: CCP1CON |= (duty1<<4)&0b00110000;
 11225  003CD0  3801               	swapf	set_pwm1_duty@duty1,w,c
 11226  003CD2  0BF0               	andlw	240
 11227  003CD4  0B30               	andlw	48
 11228  003CD6  12BD               	iorwf	4029,f,c	;volatile
 11229  003CD8  0012               	return	
 11230  003CDA                     __end_of_set_pwm1_duty:
 11231                           	opt stack 0
 11232                           pclatu	equ	0xFFB
 11233                           pclath	equ	0xFFA
 11234                           tblptru	equ	0xFF8
 11235                           tblptrh	equ	0xFF7
 11236                           tblptrl	equ	0xFF6
 11237                           tablat	equ	0xFF5
 11238                           prodh	equ	0xFF4
 11239                           prodl	equ	0xFF3
 11240                           intcon	equ	0xFF2
 11241                           postinc0	equ	0xFEE
 11242                           fsr0h	equ	0xFEA
 11243                           fsr0l	equ	0xFE9
 11244                           wreg	equ	0xFE8
 11245                           indf1	equ	0xFE7
 11246                           postinc1	equ	0xFE6
 11247                           postdec1	equ	0xFE5
 11248                           fsr1h	equ	0xFE2
 11249                           fsr1l	equ	0xFE1
 11250                           indf2	equ	0xFDF
 11251                           postinc2	equ	0xFDE
 11252                           postdec2	equ	0xFDD
 11253                           fsr2h	equ	0xFDA
 11254                           fsr2l	equ	0xFD9
 11255                           status	equ	0xFD8
 11256                           pclatu	equ	0xFFB
 11257                           pclath	equ	0xFFA
 11258                           tblptru	equ	0xFF8
 11259                           tblptrh	equ	0xFF7
 11260                           tblptrl	equ	0xFF6
 11261                           tablat	equ	0xFF5
 11262                           prodh	equ	0xFF4
 11263                           prodl	equ	0xFF3
 11264                           intcon	equ	0xFF2
 11265                           postinc0	equ	0xFEE
 11266                           fsr0h	equ	0xFEA
 11267                           fsr0l	equ	0xFE9
 11268                           wreg	equ	0xFE8
 11269                           indf1	equ	0xFE7
 11270                           postinc1	equ	0xFE6
 11271                           postdec1	equ	0xFE5
 11272                           fsr1h	equ	0xFE2
 11273                           fsr1l	equ	0xFE1
 11274                           indf2	equ	0xFDF
 11275                           postinc2	equ	0xFDE
 11276                           postdec2	equ	0xFDD
 11277                           fsr2h	equ	0xFDA
 11278                           fsr2l	equ	0xFD9
 11279                           status	equ	0xFD8
 11280                           
 11281                           	psect	rparam
 11282  0000                     pclatu	equ	0xFFB
 11283                           pclath	equ	0xFFA
 11284                           tblptru	equ	0xFF8
 11285                           tblptrh	equ	0xFF7
 11286                           tblptrl	equ	0xFF6
 11287                           tablat	equ	0xFF5
 11288                           prodh	equ	0xFF4
 11289                           prodl	equ	0xFF3
 11290                           intcon	equ	0xFF2
 11291                           postinc0	equ	0xFEE
 11292                           fsr0h	equ	0xFEA
 11293                           fsr0l	equ	0xFE9
 11294                           wreg	equ	0xFE8
 11295                           indf1	equ	0xFE7
 11296                           postinc1	equ	0xFE6
 11297                           postdec1	equ	0xFE5
 11298                           fsr1h	equ	0xFE2
 11299                           fsr1l	equ	0xFE1
 11300                           indf2	equ	0xFDF
 11301                           postinc2	equ	0xFDE
 11302                           postdec2	equ	0xFDD
 11303                           fsr2h	equ	0xFDA
 11304                           fsr2l	equ	0xFD9
 11305                           status	equ	0xFD8


Data Sizes:
    Strings     5
    Constant    0
    Data        0
    BSS         609
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     71      80
    BANK0           160    135     157
    BANK1           256      0      66
    BANK2           256      0     256
    BANK3           256      0     256
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 22
		 -> Fno.fname(BANK1[13]), Fno(BANK1[22]), NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 22
		 -> Fno.fname(BANK1[13]), Fno(BANK1[22]), NULL(NULL[0]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 22
		 -> Fno.fname(BANK1[13]), Fno(BANK1[22]), NULL(NULL[0]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 22
		 -> Fno.fname(BANK1[13]), Fno(BANK1[22]), NULL(NULL[0]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 22
		 -> Fno.fname(BANK1[13]), Fno(BANK1[22]), NULL(NULL[0]), 

    Dir1.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK0[12]), pf_opendir@sp(BANK0[12]), pf_open@sp(BANK0[12]), 

    play_wave_file@fn	PTR const unsigned char  size(2) Largest target is 22
		 -> Fno.fname(BANK1[13]), Fno(BANK1[22]), 

    Fs.buf	PTR unsigned char  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK0[32]), pf_opendir@dir(BANK0[32]), pf_open@dir(BANK0[32]), 

    disk_readp@buff	PTR unsigned char  size(2) Largest target is 256
		 -> Buff(BANK2[256]), pf_readdir@dir(BANK0[32]), pf_opendir@dir(BANK0[32]), pf_open@dir(BANK0[32]), 
		 -> pf_mount@buf(BANK0[36]), NULL(NULL[0]), get_fat@buf(BANK0[4]), 

    pf_readdir@fno	PTR struct _FILINFO_ size(2) Largest target is 22
		 -> Fno(BANK1[22]), 

    pf_readdir@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK0[12]), pf_opendir@sp(BANK0[12]), pf_open@sp(BANK0[12]), 

    pf_readdir@dj	PTR struct _Dir_ size(2) Largest target is 17
		 -> Dir1(BANK0[16]), 

    pf_readdir@fs.buf	PTR unsigned char  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK0[32]), pf_opendir@dir(BANK0[32]), pf_open@dir(BANK0[32]), 

    pf_readdir@fs	PTR struct _FATFS_ size(2) Largest target is 45
		 -> Fs(BANK1[44]), NULL(NULL[0]), 

    pf_opendir@path	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_1(CODE[1]), 

    pf_opendir@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK0[12]), pf_opendir@sp(BANK0[12]), pf_open@sp(BANK0[12]), 

    pf_opendir@dj	PTR struct _Dir_ size(2) Largest target is 17
		 -> Dir1(BANK0[16]), 

    pf_opendir@fs.buf	PTR unsigned char  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK0[32]), pf_opendir@dir(BANK0[32]), pf_open@dir(BANK0[32]), 

    pf_opendir@fs	PTR struct _FATFS_ size(2) Largest target is 45
		 -> Fs(BANK1[44]), NULL(NULL[0]), 

    pf_lseek@fs.buf	PTR unsigned char  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK0[32]), pf_opendir@dir(BANK0[32]), pf_open@dir(BANK0[32]), 

    pf_lseek@fs	PTR struct _FATFS_ size(2) Largest target is 45
		 -> Fs(BANK1[44]), NULL(NULL[0]), 

    pf_read$348	PTR unsigned char  size(2) Largest target is 256
		 -> Buff(BANK2[256]), NULL(NULL[0]), 

    pf_read@br	PTR unsigned short  size(2) Largest target is 2
		 -> rb(BANK0[2]), 

    pf_read@fs.buf	PTR unsigned char  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK0[32]), pf_opendir@dir(BANK0[32]), pf_open@dir(BANK0[32]), 

    pf_read@fs	PTR struct _FATFS_ size(2) Largest target is 45
		 -> Fs(BANK1[44]), NULL(NULL[0]), 

    pf_read@buff	PTR void  size(2) Largest target is 256
		 -> Buff(BANK2[256]), 

    pf_read@rbuff	PTR unsigned char  size(2) Largest target is 256
		 -> Buff(BANK2[256]), 

    pf_open@path	PTR const unsigned char  size(2) Largest target is 22
		 -> Fno.fname(BANK1[13]), Fno(BANK1[22]), 

    pf_open@fs.buf	PTR unsigned char  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK0[32]), pf_opendir@dir(BANK0[32]), pf_open@dir(BANK0[32]), 

    pf_open@fs	PTR struct _FATFS_ size(2) Largest target is 45
		 -> Fs(BANK1[44]), NULL(NULL[0]), 

    dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK0[12]), pf_opendir@sp(BANK0[12]), pf_open@sp(BANK0[12]), 

    pf_mount@fs.buf	PTR unsigned char  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK0[32]), pf_opendir@dir(BANK0[32]), pf_open@dir(BANK0[32]), 

    pf_mount@fs	PTR struct _FATFS_ size(2) Largest target is 45
		 -> Fs(BANK1[44]), 

    check_fs@buf	PTR unsigned char  size(2) Largest target is 36
		 -> pf_mount@buf(BANK0[36]), 

    follow_path@dir	PTR unsigned char  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK0[32]), pf_opendir@dir(BANK0[32]), pf_open@dir(BANK0[32]), 

    follow_path@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK0[12]), pf_opendir@sp(BANK0[12]), pf_open@sp(BANK0[12]), 

    follow_path@dj	PTR struct _Dir_ size(2) Largest target is 17
		 -> Dir1(BANK0[16]), pf_open@dj(BANK0[16]), 

    follow_path@path	PTR const unsigned char  size(2) Largest target is 22
		 -> Fno.fname(BANK1[13]), Fno(BANK1[22]), STR_1(CODE[1]), 

    get_fileinfo@dir	PTR unsigned char  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK0[32]), pf_opendir@dir(BANK0[32]), pf_open@dir(BANK0[32]), 

    get_fileinfo@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK0[12]), pf_opendir@sp(BANK0[12]), pf_open@sp(BANK0[12]), 

    get_fileinfo@dj	PTR struct _Dir_ size(2) Largest target is 17
		 -> Dir1(BANK0[16]), 

    get_fileinfo@fno	PTR struct _FILINFO_ size(2) Largest target is 22
		 -> Fno(BANK1[22]), 

    get_fileinfo@p	PTR unsigned char  size(2) Largest target is 22
		 -> Fno.fname(BANK1[13]), Fno(BANK1[22]), 

    create_name@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> follow_path@path(BANK0[2]), 

    create_name@p	PTR const unsigned char  size(2) Largest target is 22
		 -> Fno(BANK1[22]), STR_1(CODE[1]), 

    create_name@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK0[12]), pf_opendir@sp(BANK0[12]), pf_open@sp(BANK0[12]), 

    create_name@dj	PTR struct _Dir_ size(2) Largest target is 17
		 -> Dir1(BANK0[16]), pf_open@dj(BANK0[16]), 

    create_name@sfn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK0[12]), pf_opendir@sp(BANK0[12]), pf_open@sp(BANK0[12]), 

    dir_read@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK0[12]), pf_opendir@sp(BANK0[12]), pf_open@sp(BANK0[12]), 

    dir_read@dj	PTR struct _Dir_ size(2) Largest target is 17
		 -> Dir1(BANK0[16]), 

    dir_read@dir	PTR unsigned char  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK0[32]), pf_opendir@dir(BANK0[32]), pf_open@dir(BANK0[32]), 

    dir_find@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK0[12]), pf_opendir@sp(BANK0[12]), pf_open@sp(BANK0[12]), 

    FatFs.buf	PTR unsigned char  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK0[32]), pf_opendir@dir(BANK0[32]), pf_open@dir(BANK0[32]), 

    dir_find@dir	PTR unsigned char  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK0[32]), pf_opendir@dir(BANK0[32]), pf_open@dir(BANK0[32]), 

    dir_find@dj	PTR struct _Dir_ size(2) Largest target is 17
		 -> Dir1(BANK0[16]), pf_open@dj(BANK0[16]), 

    dir_next@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK0[12]), pf_opendir@sp(BANK0[12]), pf_open@sp(BANK0[12]), 

    dir_next@dj	PTR struct _Dir_ size(2) Largest target is 17
		 -> Dir1(BANK0[16]), pf_open@dj(BANK0[16]), 

    dir_next@fs.buf	PTR unsigned char  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK0[32]), pf_opendir@dir(BANK0[32]), pf_open@dir(BANK0[32]), 

    dir_next@fs	PTR struct _FATFS_ size(2) Largest target is 45
		 -> Fs(BANK1[44]), NULL(NULL[0]), 

    S50_Dir_$fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK0[12]), pf_opendir@sp(BANK0[12]), pf_open@sp(BANK0[12]), 

    dir_rewind@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK0[12]), pf_opendir@sp(BANK0[12]), pf_open@sp(BANK0[12]), 

    dir_rewind@dj	PTR struct _Dir_ size(2) Largest target is 17
		 -> Dir1(BANK0[16]), pf_open@dj(BANK0[16]), 

    dir_rewind@fs.buf	PTR unsigned char  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK0[32]), pf_opendir@dir(BANK0[32]), pf_open@dir(BANK0[32]), 

    dir_rewind@fs	PTR struct _FATFS_ size(2) Largest target is 45
		 -> Fs(BANK1[44]), NULL(NULL[0]), 

    clust2sect@fs.buf	PTR unsigned char  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK0[32]), pf_opendir@dir(BANK0[32]), pf_open@dir(BANK0[32]), 

    clust2sect@fs	PTR struct _FATFS_ size(2) Largest target is 45
		 -> Fs(BANK1[44]), NULL(NULL[0]), 

    S21_FATFS_$buf	PTR unsigned char  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK0[32]), pf_opendir@dir(BANK0[32]), pf_open@dir(BANK0[32]), 

    get_fat@fs.buf	PTR unsigned char  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK0[32]), pf_opendir@dir(BANK0[32]), pf_open@dir(BANK0[32]), 

    FatFs	PTR struct _FATFS_ size(2) Largest target is 45
		 -> Fs(BANK1[44]), NULL(NULL[0]), 

    get_fat@fs	PTR struct _FATFS_ size(2) Largest target is 45
		 -> Fs(BANK1[44]), NULL(NULL[0]), 

    mem_cmp@src	PTR const void  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK0[12]), pf_opendir@sp(BANK0[12]), pf_open@sp(BANK0[12]), 

    mem_cmp@s	PTR const unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK0[12]), pf_opendir@sp(BANK0[12]), pf_open@sp(BANK0[12]), 

    mem_cmp@dst	PTR const void  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK0[32]), pf_opendir@dir(BANK0[32]), pf_open@dir(BANK0[32]), 

    mem_cmp@d	PTR const unsigned char  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK0[32]), pf_opendir@dir(BANK0[32]), pf_open@dir(BANK0[32]), 

    mem_set@dst	PTR void  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK0[12]), pf_opendir@sp(BANK0[12]), pf_open@sp(BANK0[12]), 

    mem_set@d	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK0[12]), pf_opendir@sp(BANK0[12]), pf_open@sp(BANK0[12]), 


Critical Paths under _main in COMRAM

    _strstr->_strncmp
    _strncmp->_strlen
    _load_header->_pf_read
    _set_sampling_rate->___lldiv
    _pf_read->_get_fat
    _pf_lseek->_get_fat
    _pf_readdir->_dir_read
    _dir_read->_dir_next
    _follow_path->_dir_find
    _dir_find->_dir_next
    _dir_rewind->_clust2sect
    _dir_next->_get_fat
    _get_fat->_disk_readp
    _clust2sect->___lmul
    _create_name->_mem_set
    _pf_mount->_check_fs
    _disk_initialize->_send_cmd
    _check_fs->_disk_readp
    _disk_readp->_send_cmd
    _send_cmd->_wait_ready

Critical Paths under _isr in COMRAM

    _isr->_set_pwm1_duty

Critical Paths under _main in BANK0

    _main->_play_wave_file
    _play_wave_file->_pf_open
    _pf_open->_follow_path
    _load_header->_pf_lseek
    _load_header->_pf_read
    _pf_read->_get_fat
    _pf_lseek->_get_fat
    _pf_readdir->_dir_read
    _dir_read->_dir_next
    _pf_opendir->_follow_path
    _follow_path->_dir_find
    _dir_find->_dir_next
    _dir_next->_get_fat

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  122920
                           _pf_mount
                         _pf_opendir
                         _pf_readdir
                     _play_wave_file
                     _pwm_audio_init
                             _strstr
 ---------------------------------------------------------------------------------
 (1) _strstr                                               4     0      4     913
                                             30 COMRAM     4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              9     3      6     293
                                             21 COMRAM     9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     143
                                             15 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _strchr                                               4     0      4     194
                                             15 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _pwm_audio_init                                       0     0      0       0
                           _pwm_init
                        _timer1_init
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pwm_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _play_wave_file                                      17    15      2   61031
                                            118 BANK0     17    15      2
                        _load_header
                            _pf_open
                            _pf_read
                           _wav_putc
 ---------------------------------------------------------------------------------
 (2) _wav_putc                                             3     3      0      22
                                             15 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _pf_open                                             73    71      2   19384
                                             45 BANK0     73    71      2
                        _follow_path
 ---------------------------------------------------------------------------------
 (2) _load_header                                         20    16      4   25530
                                             64 COMRAM     4     4      0
                                             44 BANK0     16    12      4
                           _pf_lseek
                            _pf_read
                  _set_sampling_rate
 ---------------------------------------------------------------------------------
 (3) _set_sampling_rate                                   12     8      4     652
                                             28 COMRAM    12     8      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _pf_read                                             36    30      6   15423
                                             58 COMRAM     6     0      6
                                             14 BANK0     30    30      0
                            ___llmod
                         _clust2sect
                         _disk_readp
                            _get_fat
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     211
                                             15 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (3) _pf_lseek                                            34    30      4    9198
                                             58 COMRAM     4     0      4
                                             14 BANK0     30    30      0
                            ___lldiv
                         _clust2sect
                            _get_fat
 ---------------------------------------------------------------------------------
 (1) _pf_readdir                                          51    47      4   24556
                                             31 BANK0     51    47      4
                           _dir_next
                           _dir_read
                         _dir_rewind
                       _get_fileinfo
 ---------------------------------------------------------------------------------
 (2) _get_fileinfo                                        14    10      4     734
                                             15 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) _dir_read                                            11     9      2   13847
                                             67 COMRAM     2     0      2
                                             22 BANK0      9     9      0
                           _dir_next
                         _disk_readp
 ---------------------------------------------------------------------------------
 (1) _pf_opendir                                          59    55      4   20504
                                             45 BANK0     59    55      4
                         _dir_rewind
                        _follow_path
 ---------------------------------------------------------------------------------
 (3) _follow_path                                         19    15      4   18523
                                             26 BANK0     19    15      4
                        _create_name
                           _dir_find
                         _dir_rewind
 ---------------------------------------------------------------------------------
 (4) _dir_find                                             8     6      2   15309
                                             67 COMRAM     4     2      2
                                             22 BANK0      4     4      0
                           _dir_next
                         _dir_rewind
                         _disk_readp
                            _mem_cmp
 ---------------------------------------------------------------------------------
 (5) _mem_cmp                                             15     9      6     295
                                             15 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (4) _dir_rewind                                          16    14      2    1201
                                             42 COMRAM    16    14      2
                         _clust2sect
 ---------------------------------------------------------------------------------
 (5) _dir_next                                            17    15      2    8000
                                             58 COMRAM     9     7      2
                                             14 BANK0      8     8      0
                         _clust2sect
                            _get_fat
 ---------------------------------------------------------------------------------
 (3) _get_fat                                             28    24      4    6522
                                             44 COMRAM    14    10      4
                                              0 BANK0     14    14      0
                         _disk_readp
 ---------------------------------------------------------------------------------
 (3) _clust2sect                                          15    11      4     654
                                             27 COMRAM    15    11      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _create_name                                         20    16      4    1162
                                             23 COMRAM    20    16      4
                            _mem_set
 ---------------------------------------------------------------------------------
 (5) _mem_set                                              8     2      6     249
                                             15 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _pf_mount                                            71    69      2   15916
                                             50 COMRAM    18    16      2
                                              0 BANK0     53    53      0
                            ___lldiv
                             ___lmul
                           _check_fs
                    _disk_initialize
                         _disk_readp
 ---------------------------------------------------------------------------------
 (2) _disk_initialize                                     12    12      0    2218
                                             28 COMRAM    12    12      0
                           _init_spi
                            _rcv_spi
                        _release_spi
                           _send_cmd
 ---------------------------------------------------------------------------------
 (3) _init_spi                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _check_fs                                             6     0      6    5804
                                             44 COMRAM     6     0      6
                         _disk_readp
 ---------------------------------------------------------------------------------
 (4) _disk_readp                                          16     6     10    5265
                                             28 COMRAM    16     6     10
                            _rcv_spi
                        _release_spi
                           _send_cmd
 ---------------------------------------------------------------------------------
 (5) _send_cmd                                             8     4      4    1492
                                             20 COMRAM     8     4      4
                            _rcv_spi
                         _wait_ready
                           _xmit_spi
 ---------------------------------------------------------------------------------
 (6) _xmit_spi                                             2     2      0      34
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) _wait_ready                                          15    15      0      99
                                             15 COMRAM     5     5      0
                            _rcv_spi
 ---------------------------------------------------------------------------------
 (5) _release_spi                                          0     0      0       0
                            _rcv_spi
 ---------------------------------------------------------------------------------
 (7) _rcv_spi                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     330
                                             15 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     532
                                             15 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _isr                                                14    14      0      44
                                              1 COMRAM    14    14      0
                      _set_pwm1_duty
 ---------------------------------------------------------------------------------
 (12) _set_pwm1_duty                                       1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _pf_mount
     ___lldiv
     ___lmul
     _check_fs
       _disk_readp
         _rcv_spi
         _release_spi
           _rcv_spi
         _send_cmd
           _rcv_spi
           _wait_ready
             _rcv_spi
           _xmit_spi
     _disk_initialize
       _init_spi
       _rcv_spi
       _release_spi
         _rcv_spi
       _send_cmd
         _rcv_spi
         _wait_ready
           _rcv_spi
         _xmit_spi
     _disk_readp
       _rcv_spi
       _release_spi
         _rcv_spi
       _send_cmd
         _rcv_spi
         _wait_ready
           _rcv_spi
         _xmit_spi
   _pf_opendir
     _dir_rewind
       _clust2sect
         ___lmul
     _follow_path
       _create_name
         _mem_set
       _dir_find
         _dir_next
           _clust2sect
             ___lmul
           _get_fat
             _disk_readp
               _rcv_spi
               _release_spi
                 _rcv_spi
               _send_cmd
                 _rcv_spi
                 _wait_ready
                   _rcv_spi
                 _xmit_spi
         _dir_rewind
           _clust2sect
             ___lmul
         _disk_readp
           _rcv_spi
           _release_spi
             _rcv_spi
           _send_cmd
             _rcv_spi
             _wait_ready
               _rcv_spi
             _xmit_spi
         _mem_cmp
       _dir_rewind
         _clust2sect
           ___lmul
   _pf_readdir
     _dir_next
       _clust2sect
         ___lmul
       _get_fat
         _disk_readp
           _rcv_spi
           _release_spi
             _rcv_spi
           _send_cmd
             _rcv_spi
             _wait_ready
               _rcv_spi
             _xmit_spi
     _dir_read
       _dir_next
         _clust2sect
           ___lmul
         _get_fat
           _disk_readp
             _rcv_spi
             _release_spi
               _rcv_spi
             _send_cmd
               _rcv_spi
               _wait_ready
                 _rcv_spi
               _xmit_spi
       _disk_readp
         _rcv_spi
         _release_spi
           _rcv_spi
         _send_cmd
           _rcv_spi
           _wait_ready
             _rcv_spi
           _xmit_spi
     _dir_rewind
       _clust2sect
         ___lmul
     _get_fileinfo
   _play_wave_file
     _load_header
       _pf_lseek
         ___lldiv
         _clust2sect
           ___lmul
         _get_fat
           _disk_readp
             _rcv_spi
             _release_spi
               _rcv_spi
             _send_cmd
               _rcv_spi
               _wait_ready
                 _rcv_spi
               _xmit_spi
       _pf_read
         ___llmod
         _clust2sect
           ___lmul
         _disk_readp
           _rcv_spi
           _release_spi
             _rcv_spi
           _send_cmd
             _rcv_spi
             _wait_ready
               _rcv_spi
             _xmit_spi
         _get_fat
           _disk_readp
             _rcv_spi
             _release_spi
               _rcv_spi
             _send_cmd
               _rcv_spi
               _wait_ready
                 _rcv_spi
               _xmit_spi
       _set_sampling_rate
         ___lldiv
     _pf_open
       _follow_path
         _create_name
           _mem_set
         _dir_find
           _dir_next
             _clust2sect
               ___lmul
             _get_fat
               _disk_readp
                 _rcv_spi
                 _release_spi
                   _rcv_spi
                 _send_cmd
                   _rcv_spi
                   _wait_ready
                     _rcv_spi
                   _xmit_spi
           _dir_rewind
             _clust2sect
               ___lmul
           _disk_readp
             _rcv_spi
             _release_spi
               _rcv_spi
             _send_cmd
               _rcv_spi
               _wait_ready
                 _rcv_spi
               _xmit_spi
           _mem_cmp
         _dir_rewind
           _clust2sect
             ___lmul
     _pf_read
       ___llmod
       _clust2sect
         ___lmul
       _disk_readp
         _rcv_spi
         _release_spi
           _rcv_spi
         _send_cmd
           _rcv_spi
           _wait_ready
             _rcv_spi
           _xmit_spi
       _get_fat
         _disk_readp
           _rcv_spi
           _release_spi
             _rcv_spi
           _send_cmd
             _rcv_spi
             _wait_ready
               _rcv_spi
             _xmit_spi
     _wav_putc
   _pwm_audio_init
     _pwm_init
     _timer1_init
   _strstr
     _strchr
     _strlen
     _strncmp
       _strlen (ARG)

 _isr (ROOT)
   _set_pwm1_duty

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0     100      11      100.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      42       7       25.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     87      9D       5       98.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     47      50       1       84.2%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     32F      20        0.0%
DATA                 0      0     32F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Mar 04 18:40:15 2015

            _pwm_audio_init 3C8E                 get_fat@clst 002D                create_name@c 002B  
              create_name@d 0023                create_name@i 002A                create_name@p 0024  
               _SSPSTATbits 000FC7                          l26 1B48                          l19 39CA  
                        l28 17E2                          l52 30CC                          l53 3044  
                        l63 267A                          _Fs 0100                 __CFG_BOR$ON 000000  
                        _rb 00FB               pf_mount@bsect 008C                 __CFG_BORV$3 000000  
             pf_mount@mclst 0088               pf_mount@fsize 0090                __CFG_CP0$OFF 000000  
             create_name@dj 0018                __CFG_CP1$OFF 000000               pf_mount@tsect 0084  
             create_name@ni 0026                __CFG_CP2$OFF 000000               create_name@si 0027  
              __CFG_CP3$OFF 000000                         l201 0DA0                         l203 089C  
                       l151 1788                         l144 3400                         l219 2F94  
                       l324 3418                         l325 34E0                         l165 16D8  
                       l182 1152                         l423 3D04                         l417 3CFC  
                       l177 12CA                         l169 2D0E                         l452 21BE  
                       l376 2A18                         l465 2090                         l466 20B4  
                       l468 20DA                         l478 1F00                         l996 3952  
              __CFG_CPB$OFF 000000                         _PR2 000FCB                __CFG_CPD$OFF 000000  
                       _Fno 012C                         _isr 0008                         fsr2 000FD9  
                       prod 000FF3                         wreg 000FE8                disk_readp@bc 002B  
              disk_readp@rc 002A           disk_initialize@ty 0025              create_name@sfn 0028  
              __CFG_LVP$OFF 000000                __CFG_WDT$OFF 000000                        l1006 3A90  
                      l1104 3C10                        l1121 38E0                        l1106 3C42  
                      l1098 385E                        l4100 3862                        l3142 3B1C  
                      l3214 3C4E                        l4110 38C8                        l3400 27F8  
                      l3208 3618                        l3224 397C                        l4104 388E  
                      l3138 3B08                        l3218 3C5E                        l5002 1B1C  
                      l3242 300E                        l4122 3C28                        l3420 3910  
                      l3404 2810                        l5004 1B38                        l3252 308A  
                      l4108 38C0                        l3430 3944                        l3422 3914  
                      l5030 250E                        l3254 30AE                        l3238 300A  
                      l5110 22A4                        l5102 2222                        l5040 25BA  
                      l3440 3A5A                        l3418 3904                        l3354 26C8  
                      l5050 2664                        l3442 3A5E                        l5210 12A6  
                      l4090 3BA6                        l4402 3818                        l3380 2752  
                      l3372 2738                        l4092 3BAA                        l4404 3840  
                      l3366 271E                        l5046 25FC                        l5134 237A  
                      l5126 2318                        l5310 2E14                        l3446 3A82  
                      l3438 3A4E                        l5150 0DD8                        l3376 2744  
                      l5136 2428                        l5304 2DFC                        l5312 2E3E  
                      l3712 2A68                        l5216 12B2                        l4408 3856  
                      l5410 2960                        l5402 2936                        l3394 27E6  
                      l5066 30FE                        l3722 2A90                        l3730 2AA8  
                      l5170 0FF8                        l5162 0EC4                        l5340 33B0  
                      l5332 3366                        l5420 29A8                        l5084 31E0  
                      l5316 2E5A                        l5244 0AE2                        l5172 1022  
                      l5156 0DFA                        l5326 334A                        l5430 29F6  
                      l5422 29AE                        l5414 296E                        l5078 3192  
                      l5094 21C2                        l3742 2AD2                        l5246 0B38  
                      l5190 11BC                        l5440 2A0C                        l5432 29FA  
                      l5360 2864                        l5088 31F8                        l5096 21C8  
                      l5256 0C2E                        l5426 29D2                        l5418 2996  
                      l5282 2D30                        l5274 0D8A                        l5194 11D2  
                      l5178 1092                        l5450 2BB2                        l4820 3C0C  
                      l5348 33FE                        l5356 285E                        l5700 161C  
                      l3756 2B06                        l5196 11DE                        l5540 211A  
                      l3932 3B50                        l4396 37DE                        l4814 3BEA  
                      l4902 34D0                        l5374 28AC                        l5710 167C  
                      l5294 2DC8                        l3758 2B8A                        l6262 2152  
                      l6270 2196                        l5470 2C3A                        l5462 2C28  
                      l5392 290C                        l5704 163E                        l6264 2164  
                      l6272 21A0                        l4922 351E                        l5386 28E2  
                      l5722 2E7A                        l6266 2172                        l6274 21AA  
                      l5538 20EC                        l5546 211E                        l5490 1F72  
                      l5482 1F30                        l5466 2C36                        l4908 34DE  
                      l4932 356C                        l4916 34F6                        l5388 28E8  
                      l5652 13A4                        l5636 12EA                        l5740 2F84  
                      l6268 2184                        l6276 21B4                        l5812 1C9E  
                      l4870 346C                        l4862 3458                        l4942 359E  
                      l5670 13F4                        l5646 1368                        l5734 2F64  
                      l5750 3218                        l5806 1C80                        l5814 1CAA  
                      l4936 357E                        l4928 3538                        l5664 13BA  
                      l5736 2F6A                        l5832 1D6E                        l5840 1D98  
                      l4890 34B0                        l4858 344C                        l4882 3482  
                      l5690 14F6                        l5498 1FC4                        l5818 1CC0  
                      l4876 347A                        l4948 35B4                        l5676 1426  
                      l4980 19B8                        l5764 32AE                        l5756 3270  
                      l5844 1DB0                        l5860 1E54                        ?_isr 0001  
                      l4894 34BC                        l5838 1D8C                        l4992 1A64  
                      l4984 19C6                        l4968 1896                        l5776 330E  
                      l5864 1E6A                        l5880 1EFC                        l5792 1BCA  
                      l4978 1996                        l5858 1E48                        l5890 36A6  
                      l5878 1EF2                        l5894 36CE                        l5886 3690  
                      l5898 3702                        STR_1 0805                        STR_2 0801  
                      u3210 26FC                        u3217 26F2                        u3330 27B6  
                      u6000 0CD4                        u3337 27AC                        u4305 3B6E  
                      u6005 0CC8                        u6030 2D9E                        u6025 2D74  
                      u6036 2DA0                        u5265 34E8                        u6170 33FA  
                      u5450 1AB0                        u5435 19A6                        u5525 251E  
                      u5550 25F8                        u5455 1AA6                        u5375 181C  
                      u5640 21EC                        u5800 0F36                        u6380 2A16  
                      u6620 13F0                        u5580 3168                        u5660 2216  
                      u5805 0F2A                        u5750 2372                        u5575 3140  
                      u5647 21E2                        u5680 2260                        u5586 316A  
                      u5667 220C                        u6655 150E                        u5687 2256  
                      u5935 0912                        u6495 2062                        u6695 170C  
            ??_get_fileinfo 0014                        _Dir1 00EB                        _Buff 0200  
                      _main 368C                        fsr0h 000FEA                        fsr1h 000FE2  
                      fsr0l 000FE9                        fsr2h 000FDA                        indf1 000FE7  
                      fsr1l 000FE1                        indf2 000FDF                        fsr2l 000FD9  
                      pclat 000FFA                        prodh 000FF4                        prodl 000FF3  
                      start 0018          load_header@ChunkID 0090               __CFG_IESO$OFF 000000  
    __end_of_pwm_audio_init 3CA8               disk_readp@lba 001F               disk_readp@cnt 0025  
             disk_readp@ofs 0023               disk_readp@res 0029          disk_initialize@cmd 0024  
              ?_follow_path 007A          disk_initialize@ocr 001E          disk_initialize@tmr 0026  
           create_name@path 001A               get_fileinfo@c 001A               get_fileinfo@i 001D  
             get_fileinfo@p 0018                       ??_isr 0002                ?_load_header 008C  
            __CFG_CCP2MX$ON 000000                       ?_main 0001     __size_of_play_wave_file 03B8  
           __end_of___lldiv 3964             __end_of___llmod 3AA2                       _T2CON 000FCA  
                     i2l287 37A2                       _TMR1H 000FCF                       _TMR1L 000FCE  
             __CFG_USBDIV$2 000000                       _TRISC 000F94                       _FatFs 0048  
             __CFG_PWRT$OFF 000000       set_sampling_rate@rate 001D               __CFG_WRT0$OFF 000000  
             __CFG_WRT1$OFF 000000               __CFG_WRT2$OFF 000000         ___lmul@multiplicand 0014  
             __CFG_WRT3$OFF 000000              __CFG_EBTR0$OFF 000000              __CFG_FCMEN$OFF 000000  
            __CFG_EBTR1$OFF 000000              __CFG_EBTR2$OFF 000000              __CFG_EBTR3$OFF 000000  
           __end_of_get_fat 1B4A               __CFG_WRTB$OFF 000000               __CFG_WRTC$OFF 000000  
             __CFG_WRTD$OFF 000000              __CFG_EBTRB$OFF 000000             __end_of_mem_cmp 39D4  
           __end_of_mem_set 3C70             __end_of_pf_read 12CC             __end_of_pf_open 2D10  
           __end_of_rcv_spi 3D0C                       tablat 000FF5                       status 000FD8  
           __end_of_strncmp 38E2              __CFG_PBADEN$ON 000000              disk_readp@buff 001D  
           ?_pwm_audio_init 0001              __CFG_MCLRE$OFF 000000             __initialization 3AA2  
              __end_of_main 3734                clust2sect@fs 0029              get_fileinfo@dj 0010  
                    ??_main 0048                ?_release_spi 0001               __activetblptr 000002  
            __CFG_PLLDIV$12 000000                      _ADCON1 000FC1            ___llmod@dividend 0010  
                    _CCPR1L 000FBE                      _CCPR2L 000FBB           _set_sampling_rate 39D4  
                    _SSPBUF 000FC9            __end_of_check_fs 3402        __size_of_create_name 01D8  
        ?_set_sampling_rate 001D    __size_of_disk_initialize 01C6            __end_of_dir_find 31FE  
            __CFG_XINST$OFF 000000            __end_of_dir_read 2E60            __end_of_dir_next 267C  
                    _pWAVIN 004A                      ___lmul 3AF8              __CFG_STVREN$ON 000000  
                 ??___lldiv 0018                   ??___llmod 0018                ?_timer1_init 0001  
       ??_set_sampling_rate 0021            __end_of_init_spi 3C8E                      clear_0 3AAA  
                    clear_1 3ABE                      clear_2 3AD0                      clear_3 3ADC  
                    clear_4 3AE8            __end_of_pf_lseek 0DA2            __end_of_pf_mount 178A  
      __end_of_get_fileinfo 2B98                 pf_read@buff 003B                 pf_read@clst 0084  
        set_pwm1_duty@duty1 0001                 pf_read@sect 007C                 pf_read@rcnt 0088  
                 ??_get_fat 0031                      _strchr 3C10                      _strlen 3B9C  
           play_wave_file@i 00E3                      _strstr 37DC            __end_of_send_cmd 34E2  
                 ??_mem_cmp 0016                   ??_mem_set 0016                   ??_pf_read 006E  
                 ??_pf_open 008F                __mediumconst 0000                   ??_rcv_spi 0010  
                    tblptrh 000FF7                      tblptrl 000FF6                      tblptru 000FF8  
               pf_lseek@bcs 0082            __end_of_wav_putc 3B9C                 pf_lseek@ofs 003B  
          __end_of_pwm_init 3CC2                 pf_open@path 008D                   ??_strncmp 001C  
 __end_of_set_sampling_rate 3A3C            __end_of_xmit_spi 3D02                  __accesstop 0060  
   __end_of__initialization 3AEE                 pf_mount@buf 0060                 pf_mount@fmt 0094  
            __pcstackCOMRAM 0001        __size_of_follow_path 026E              _play_wave_file 1B4A  
     __end_of_set_pwm1_duty 3CDA        __size_of_load_header 02BE             get_fileinfo@dir 001B  
           get_fileinfo@fno 0012                  __pbssBANK0 00E7                  __pbssBANK1 0100  
                __pbssBANK2 0200                  __pbssBANK3 0300                     ?___lmul 0010  
    __end_of_play_wave_file 1F02                     _CCP1CON 000FBD                     _CCP2CON 000FBA  
         ??_disk_initialize 001D              ___lmul@product 0018                 _NumChannels 00E9  
                   ?_strchr 0010                     ?_strlen 0010                     ?_strstr 001F  
                _dir_rewind 2F9A                   ?_check_fs 002D                  _disk_readp 34E2  
      __size_of_release_spi 0008              follow_path@dir 008A              follow_path@res 008C  
   load_header@SamplingRate 0094                 send_cmd@cmd 001C                 send_cmd@arg 0015  
               send_cmd@res 001A                   ?_dir_find 0044                   ?_dir_read 0044  
                 ?_dir_next 003B                     _SSPCON1 000FC6                     _SSPSTAT 000FC7  
                _clust2sect 35BC  __size_of_set_sampling_rate 0068            ??_pwm_audio_init 0010  
           __CFG_VREGEN$OFF 000000                   ?_init_spi 0001                   ?_pf_lseek 003B  
                 ?_pf_mount 0033                   ?_send_cmd 0015                     __Hparam 0000  
                   __Lparam 0000       __size_of_get_fileinfo 017E                     _pWAVOUT 004C  
                 ?_wav_putc 0001             __size_of___lmul 0056                     ___lldiv 38E2  
                   ___llmod 3A3C                   ?_pwm_init 0001                __psmallconst 0800  
           ?_play_wave_file 00D6                     __pcinit 3AA2                  _pf_readdir 31FE  
       _disk_initialize$807 0022                     __ramtop 0800                   ?_xmit_spi 0001  
      __size_of_timer1_init 0016                     __ptext0 368C                     __ptext1 37DC  
                   __ptext2 3860                     __ptext3 3B9C                     __ptext4 3C10  
                   __ptext5 3C8E                     __ptext6 3CDA                     __ptext7 3CA8  
                   __ptext8 1B4A                     __ptext9 3B4E                     _get_fat 178A  
                _pf_opendir 2E60             __size_of_strchr 0034             __size_of_strlen 003E  
                 _T1CONbits 000FCD             __size_of_strstr 0084                     _mem_cmp 3964  
                   _mem_set 3C44                     _pf_read 0DA2                __size_of_isr 37D4  
                   _pf_open 2B98                  ??_check_fs 0033                     _rcv_spi 3D02  
                ??_dir_find 0046                  ??_dir_read 0076                  ??_dir_next 003D  
              pf_read@rbuff 0078                xmit_spi@temp 0010                     _strncmp 3860  
            __pintcode_body 3734            play_wave_file@fn 00D6            play_wave_file@sz 00DD  
      end_of_initialization 3AEE                _get_fileinfo 2A1A               __Lmediumconst 0000  
                   int_func 3734                  ??_init_spi 0010                  ??_pf_lseek 006E  
              pf_readdir@dj 007F                pf_readdir@fs 00AF                  ??_pf_mount 0035  
              pf_readdir@sp 00A3             ___lldiv@divisor 0014                  ??_send_cmd 0019  
           ___lldiv@counter 001C                pf_lseek@clst 0086                pf_lseek@sect 007A  
                   postdec1 000FE5                     postdec2 000FDD                     postinc0 000FEE  
                   postinc1 000FE6                     postinc2 000FDE                  ??_wav_putc 0010  
                ??_pwm_init 0010                  _wait_ready 3BDA                     strlen@s 0010  
                dir_find@dj 0044                  ??_xmit_spi 0010                  dir_read@dj 0044  
               ?_dir_rewind 002B                  dir_next@dj 003B                  dir_next@fs 006E  
              pf_opendir@dj 008D                 ?_disk_readp 001D                pf_opendir@fs 00C5  
              pf_opendir@sp 00B9                   _TRISBbits 000F93                   _TRISCbits 000F94  
                get_fat@buf 0062                  get_fat@ofs 0068                 ?_clust2sect 001C  
             ??_create_name 001C            disk_initialize@n 0028              __end_of___lmul 3B4E  
               ?_pf_readdir 007F              clust2sect@clst 001C                 ?_pf_opendir 008D  
            __end_of_strchr 3C44              __end_of_strlen 3BDA              __end_of_strstr 3860  
       start_initialization 3AA2                 __end_of_isr 37DC                  mem_cmp@cnt 0014  
                mem_cmp@dst 0010                  mem_cmp@src 0012             ___llmod@divisor 0014  
           _disk_initialize 2854                  mem_set@cnt 0014                  mem_set@dst 0010  
           ___llmod@counter 0018                  mem_set@val 0012         __size_of_dir_rewind 0134  
         wait_ready@timeout 0010               _BitsPerSample 00E7               ??_follow_path 007E  
       __size_of_disk_readp 00DA         __end_of_create_name 2854                    ??___lmul 0018  
                pf_read@btr 003D                 ?_wait_ready 0001               ??_load_header 0041  
          __CFG_LPT1OSC$OFF 000000         __size_of_clust2sect 00D0                  pf_lseek@fs 008A  
                pf_open@dir 00A3                  pf_open@res 00C3                    ??_strchr 0014  
                  ??_strlen 0012                    ??_strstr 0023                  pf_mount@fs 0033  
               __pbssCOMRAM 0048               __pcstackBANK0 0060         __end_of__stringdata 0806  
         __size_of_check_fs 00EE                check_fs@sect 002F           __size_of_dir_find 0130  
         __size_of_dir_read 0150           __size_of_dir_next 024E         __size_of_pf_readdir 0116  
       __size_of_pf_opendir 013A      __size_of_set_pwm1_duty 0018           __size_of_init_spi 001E  
          ??_play_wave_file 00D8           __size_of_pf_lseek 059A           __size_of_pf_mount 04BE  
                 __pintcode 0008           __size_of_send_cmd 00E0                    ?___lldiv 0010  
                  ?___llmod 0010               follow_path@dj 007A           __size_of_wav_putc 004E  
       __end_of_follow_path 242E           __size_of_pwm_init 001A               ??_release_spi 0010  
                  ?_get_fat 002D                 __smallconst 0800                    ?_mem_cmp 0010  
                  ?_mem_set 0010     play_wave_file@amplitude 00E1                    ?_pf_read 003B  
                  ?_pf_open 008D           __size_of_xmit_spi 0012         __end_of_load_header 21C0  
                  ?_rcv_spi 0001              _dir_rewind$154 0031               _TMR1H_preload 004F  
   __end_of_disk_initialize 2A1A                 _get_fat$110 0060                    ?_strncmp 0016  
       __size_of_wait_ready 0036               _TMR1L_preload 0050                 _create_name 267C  
                  _LATCbits 000F8B                    _PIE1bits 000F9D             follow_path@path 007C  
                  i2u504_45 379C                    _PIR1bits 000F9E            __CFG_WDTPS$32768 000000  
             ??_timer1_init 0010                   dir_find@c 0076                   dir_read@a 007A  
                 dir_read@c 007D                   dir_next@i 0074                   get_fat@bc 006A  
                 get_fat@fs 006C                   get_fat@wc 0066                 __stringdata 0801  
              ??_dir_rewind 002D               _set_pwm1_duty 3CC2                    _CardType 004E  
              ??_disk_readp 0027         __end_of_release_spi 3D14                ??_clust2sect 0020  
         ___lmul@multiplier 0010    set_sampling_rate@preload 0025               load_header@sz 0098  
                  __Hrparam 0000          __end_of_dir_rewind 30CE                    __Lrparam 0000  
               _follow_path 21C0          __end_of_disk_readp 35BC                   pf_read@br 003F  
                 pf_read@dr 0077                   pf_read@fs 008A     __size_of_pwm_audio_init 001A  
                 pf_open@dj 00C6                   pf_open@fs 00C4                   pf_open@sp 0097  
          __size_of___lldiv 0082            __size_of___llmod 0066                ??_pf_readdir 0046  
               _load_header 1F02                 _pf_read$348 007A          __end_of_clust2sect 368C  
              ??_pf_opendir 0091                 check_fs@buf 002D              ?_set_pwm1_duty 0001  
          __size_of_get_fat 03C0         __end_of_timer1_init 3CF0                    _check_fs 3314  
          __size_of_mem_cmp 0070            __size_of_mem_set 002C            __size_of_pf_read 052A  
          __size_of_pf_open 0178            __size_of_rcv_spi 000A                    __ptext10 2B98  
                  __ptext11 1F02                    __ptext20 21C0                    __ptext12 39D4  
                  __ptext21 30CE                    __ptext13 0DA2                    __ptext30 2854  
                  __ptext22 3964                    __ptext14 3A3C                    __ptext31 3C70  
                  __ptext23 2F9A                    __ptext15 0808                    __ptext40 38E2  
                  __ptext32 3314                    __ptext24 242E                    __ptext16 31FE  
                  __ptext33 34E2                    __ptext25 178A                    __ptext17 2A1A  
                  __ptext42 3CC2                    __ptext34 3402                    __ptext26 35BC  
                  __ptext18 2D10                    __ptext35 3CF0                    __ptext27 267C  
                  __ptext19 2E60                    __ptext36 3BDA                    __ptext28 3C44  
                  __ptext37 3D0C                    __ptext29 12CC                    __ptext38 3D02  
                  __ptext39 3AF8                    _dir_find 30CE                    _dir_read 2D10  
                  _dir_next 242E            ?_disk_initialize 0001                   send_cmd@n 001B  
          __size_of_strncmp 0082               __size_of_main 00A8                    _init_spi 3C70  
                  _pf_lseek 0808                    _pf_mount 12CC          __end_of_pf_readdir 3314  
                strncmp@len 001A          __end_of_pf_opendir 2F9A                    _send_cmd 3402  
                  _wav_putc 3B4E                    _pwm_init 3CA8                ??_wait_ready 0010  
             pf_read@remain 0080                    _xmit_spi 3CF0                   wav_putc@c 0012  
         play_wave_file@res 00DC       __CFG_CPUDIV$OSC1_PLL2 000000                 _release_spi 3D0C  
                  mem_cmp@d 0019                    mem_cmp@r 001D                    mem_cmp@s 001B  
                _INTCONbits 000FF2                    mem_set@d 0016               pf_readdir@dir 0083  
             pf_readdir@fno 0081               pf_readdir@res 00B1               wait_ready@res 0014  
                  intlevel2 0000                   strchr@chr 0012                   strchr@ptr 0010  
        __end_of_wait_ready 3C10            ___lldiv@dividend 0010                   strncmp@s1 0016  
                 strncmp@s2 0018                   xmit_spi@c 0011               pf_lseek@ifptr 007E  
               _timer1_init 3CDA             ??_set_pwm1_duty 0001         __CFG_FOSC$INTOSC_HS 000000  
          ___lldiv@quotient 0018                    strlen@cp 0014              dir_rewind@clst 0037  
               dir_find@dir 0077                 dir_find@res 0079                 _SSPCON1bits 000FC6  
                  strstr@s1 001F                    strstr@s2 0021                dir_next@clst 0070  
               dir_read@dir 007B                 dir_read@res 007E              pf_opendir@path 008F  
             ?_get_fileinfo 0010                ?_create_name 0018                  _WAV_L_BUFF 0300  
             pf_opendir@dir 0099                dir_rewind@dj 002B                dir_rewind@fs 0035  
             pf_opendir@res 00C7  
