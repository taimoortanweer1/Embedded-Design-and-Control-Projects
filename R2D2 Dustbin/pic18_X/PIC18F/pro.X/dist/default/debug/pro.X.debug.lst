

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Mar 04 18:39:30 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    61  0000                     _ADCON1	set	4033
    62  0000                     _CCP1CON	set	4029
    63  0000                     _CCP2CON	set	4026
    64  0000                     _CCPR1L	set	4030
    65  0000                     _CCPR2L	set	4027
    66  0000                     _INTCONbits	set	4082
    67  0000                     _LATCbits	set	3979
    68  0000                     _PIE1bits	set	3997
    69  0000                     _PIR1bits	set	3998
    70  0000                     _PR2	set	4043
    71  0000                     _SSPBUF	set	4041
    72  0000                     _SSPCON1	set	4038
    73  0000                     _SSPCON1bits	set	4038
    74  0000                     _SSPSTAT	set	4039
    75  0000                     _SSPSTATbits	set	4039
    76  0000                     _T1CONbits	set	4045
    77  0000                     _T2CON	set	4042
    78  0000                     _TMR1H	set	4047
    79  0000                     _TMR1L	set	4046
    80  0000                     _TRISBbits	set	3987
    81  0000                     _TRISC	set	3988
    82  0000                     _TRISCbits	set	3988
    83                           
    84                           	psect	smallconst
    85  000800                     __psmallconst:
    86                           	opt stack 0
    87  000800  00                 	db	0
    88  000801                     __stringdata:
    89                           	opt stack 0
    90  000801                     STR_2:
    91  000801  2E                 	db	46
    92  000802  57                 	db	87	;'W'
    93  000803  41                 	db	65	;'A'
    94  000804  56                 	db	86	;'V'
    95  000805  00                 	db	0
    96  000806                     __end_of__stringdata:
    97                           	opt stack 0
    98                           
    99                           ; #config settings
   100  000806  00                 	db	0	; dummy byte at the end
   101  0000                     
   102                           	psect	cinit
   103  003AA6                     __pcinit:
   104                           	opt stack 0
   105  003AA6                     start_initialization:
   106                           	opt stack 0
   107  003AA6                     __initialization:
   108                           	opt stack 0
   109                           
   110                           ; Clear objects allocated to BANK4 (256 bytes)
   111  003AA6  EE04  F000         	lfsr	0,__pbssBANK4
   112  003AAA  EE11 F000          	lfsr	1,256
   113  003AAE                     clear_0:
   114  003AAE  6AEE               	clrf	postinc0,c
   115  003AB0  50E5               	movf	postdec1,w,c
   116  003AB2  50E1               	movf	fsr1l,w,c
   117  003AB4  E1FC               	bnz	clear_0
   118  003AB6  50E2               	movf	fsr1h,w,c
   119  003AB8  E1FA               	bnz	clear_0
   120                           
   121                           ; Clear objects allocated to BANK2 (256 bytes)
   122  003ABA  EE02  F000         	lfsr	0,__pbssBANK2
   123  003ABE  EE11 F000          	lfsr	1,256
   124  003AC2                     clear_1:
   125  003AC2  6AEE               	clrf	postinc0,c
   126  003AC4  50E5               	movf	postdec1,w,c
   127  003AC6  50E1               	movf	fsr1l,w,c
   128  003AC8  E1FC               	bnz	clear_1
   129  003ACA  50E2               	movf	fsr1h,w,c
   130  003ACC  E1FA               	bnz	clear_1
   131                           
   132                           ; Clear objects allocated to BANK1 (66 bytes)
   133  003ACE  EE01  F000         	lfsr	0,__pbssBANK1
   134  003AD2  0E42               	movlw	66
   135  003AD4                     clear_2:
   136  003AD4  6AEE               	clrf	postinc0,c
   137  003AD6  06E8               	decf	wreg,f,c
   138  003AD8  E1FD               	bnz	clear_2
   139                           
   140                           ; Clear objects allocated to BANK0 (22 bytes)
   141  003ADA  EE00  F0E7         	lfsr	0,__pbssBANK0
   142  003ADE  0E16               	movlw	22
   143  003AE0                     clear_3:
   144  003AE0  6AEE               	clrf	postinc0,c
   145  003AE2  06E8               	decf	wreg,f,c
   146  003AE4  E1FD               	bnz	clear_3
   147                           
   148                           ; Clear objects allocated to COMRAM (9 bytes)
   149  003AE6  EE00  F048         	lfsr	0,__pbssCOMRAM
   150  003AEA  0E09               	movlw	9
   151  003AEC                     clear_4:
   152  003AEC  6AEE               	clrf	postinc0,c
   153  003AEE  06E8               	decf	wreg,f,c
   154  003AF0  E1FD               	bnz	clear_4
   155  003AF2                     end_of_initialization:
   156                           	opt stack 0
   157  003AF2                     __end_of__initialization:
   158                           	opt stack 0
   159  003AF2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   160  003AF4  6EF8               	movwf	tblptru,c
   161  003AF6  0100               	movlb	0
   162  003AF8  EF46  F01B         	goto	_main	;jump to C main() function
   163                           tblptru	equ	0xFF8
   164                           postinc0	equ	0xFEE
   165                           wreg	equ	0xFE8
   166                           postdec1	equ	0xFE5
   167                           fsr1h	equ	0xFE2
   168                           fsr1l	equ	0xFE1
   169                           
   170                           	psect	bssCOMRAM
   171  000048                     __pbssCOMRAM:
   172                           	opt stack 0
   173  000048                     _FatFs:
   174                           	opt stack 0
   175  000048                     	ds	2
   176  00004A                     _pWAVIN:
   177                           	opt stack 0
   178  00004A                     	ds	2
   179  00004C                     _pWAVOUT:
   180                           	opt stack 0
   181  00004C                     	ds	2
   182  00004E                     _CardType:
   183                           	opt stack 0
   184  00004E                     	ds	1
   185  00004F                     _TMR1H_preload:
   186                           	opt stack 0
   187  00004F                     	ds	1
   188  000050                     _TMR1L_preload:
   189                           	opt stack 0
   190  000050                     	ds	1
   191                           tblptru	equ	0xFF8
   192                           postinc0	equ	0xFEE
   193                           wreg	equ	0xFE8
   194                           postdec1	equ	0xFE5
   195                           fsr1h	equ	0xFE2
   196                           fsr1l	equ	0xFE1
   197                           
   198                           	psect	bssBANK0
   199  0000E7                     __pbssBANK0:
   200                           	opt stack 0
   201  0000E7                     _BitsPerSample:
   202                           	opt stack 0
   203  0000E7                     	ds	2
   204  0000E9                     _NumChannels:
   205                           	opt stack 0
   206  0000E9                     	ds	2
   207  0000EB                     _Dir1:
   208                           	opt stack 0
   209  0000EB                     	ds	16
   210  0000FB                     _rb:
   211                           	opt stack 0
   212  0000FB                     	ds	2
   213                           tblptru	equ	0xFF8
   214                           postinc0	equ	0xFEE
   215                           wreg	equ	0xFE8
   216                           postdec1	equ	0xFE5
   217                           fsr1h	equ	0xFE2
   218                           fsr1l	equ	0xFE1
   219                           
   220                           	psect	bssBANK1
   221  000100                     __pbssBANK1:
   222                           	opt stack 0
   223  000100                     _Fs:
   224                           	opt stack 0
   225  000100                     	ds	44
   226  00012C                     _Fno:
   227                           	opt stack 0
   228  00012C                     	ds	22
   229                           tblptru	equ	0xFF8
   230                           postinc0	equ	0xFEE
   231                           wreg	equ	0xFE8
   232                           postdec1	equ	0xFE5
   233                           fsr1h	equ	0xFE2
   234                           fsr1l	equ	0xFE1
   235                           
   236                           	psect	bssBANK2
   237  000200                     __pbssBANK2:
   238                           	opt stack 0
   239  000200                     _Buff:
   240                           	opt stack 0
   241  000200                     	ds	256
   242                           tblptru	equ	0xFF8
   243                           postinc0	equ	0xFEE
   244                           wreg	equ	0xFE8
   245                           postdec1	equ	0xFE5
   246                           fsr1h	equ	0xFE2
   247                           fsr1l	equ	0xFE1
   248                           
   249                           	psect	bssBANK4
   250  000400                     __pbssBANK4:
   251                           	opt stack 0
   252  000400                     _WAV_L_BUFF:
   253                           	opt stack 0
   254  000400                     	ds	256
   255                           tblptru	equ	0xFF8
   256                           postinc0	equ	0xFEE
   257                           wreg	equ	0xFE8
   258                           postdec1	equ	0xFE5
   259                           fsr1h	equ	0xFE2
   260                           fsr1l	equ	0xFE1
   261                           
   262                           	psect	cstackBANK0
   263  000060                     __pcstackBANK0:
   264                           	opt stack 0
   265  000060                     _get_fat$110:
   266                           	opt stack 0
   267  000060                     pf_mount@buf:
   268                           	opt stack 0
   269                           
   270                           ; 36 bytes @ 0x0
   271  000060                     	ds	2
   272  000062                     get_fat@buf:
   273                           	opt stack 0
   274                           
   275                           ; 4 bytes @ 0x2
   276  000062                     	ds	4
   277  000066                     get_fat@wc:
   278                           	opt stack 0
   279                           
   280                           ; 2 bytes @ 0x6
   281  000066                     	ds	2
   282  000068                     get_fat@ofs:
   283                           	opt stack 0
   284                           
   285                           ; 2 bytes @ 0x8
   286  000068                     	ds	2
   287  00006A                     get_fat@bc:
   288                           	opt stack 0
   289                           
   290                           ; 2 bytes @ 0xA
   291  00006A                     	ds	2
   292  00006C                     get_fat@fs:
   293                           	opt stack 0
   294                           
   295                           ; 2 bytes @ 0xC
   296  00006C                     	ds	2
   297  00006E                     ??_pf_read:
   298  00006E                     ??_pf_lseek:
   299  00006E                     dir_next@fs:
   300                           	opt stack 0
   301                           
   302                           ; 2 bytes @ 0xE
   303  00006E                     	ds	2
   304  000070                     dir_next@clst:
   305                           	opt stack 0
   306                           
   307                           ; 4 bytes @ 0x10
   308  000070                     	ds	4
   309  000074                     dir_next@i:
   310                           	opt stack 0
   311                           
   312                           ; 2 bytes @ 0x14
   313  000074                     	ds	2
   314  000076                     ??_dir_read:
   315  000076                     dir_find@c:
   316                           	opt stack 0
   317                           
   318                           ; 1 bytes @ 0x16
   319  000076                     	ds	1
   320  000077                     pf_read@dr:
   321                           	opt stack 0
   322  000077                     dir_find@dir:
   323                           	opt stack 0
   324                           
   325                           ; 2 bytes @ 0x17
   326  000077                     	ds	1
   327  000078                     pf_read@rbuff:
   328                           	opt stack 0
   329                           
   330                           ; 2 bytes @ 0x18
   331  000078                     	ds	1
   332  000079                     dir_find@res:
   333                           	opt stack 0
   334                           
   335                           ; 1 bytes @ 0x19
   336  000079                     	ds	1
   337  00007A                     dir_read@a:
   338                           	opt stack 0
   339  00007A                     follow_path@dj:
   340                           	opt stack 0
   341  00007A                     _pf_read$348:
   342                           	opt stack 0
   343  00007A                     pf_lseek@sect:
   344                           	opt stack 0
   345                           
   346                           ; 4 bytes @ 0x1A
   347  00007A                     	ds	1
   348  00007B                     dir_read@dir:
   349                           	opt stack 0
   350                           
   351                           ; 2 bytes @ 0x1B
   352  00007B                     	ds	1
   353  00007C                     follow_path@path:
   354                           	opt stack 0
   355  00007C                     pf_read@sect:
   356                           	opt stack 0
   357                           
   358                           ; 4 bytes @ 0x1C
   359  00007C                     	ds	1
   360  00007D                     dir_read@c:
   361                           	opt stack 0
   362                           
   363                           ; 1 bytes @ 0x1D
   364  00007D                     	ds	1
   365  00007E                     ??_follow_path:
   366  00007E                     dir_read@res:
   367                           	opt stack 0
   368  00007E                     pf_lseek@ifptr:
   369                           	opt stack 0
   370                           
   371                           ; 4 bytes @ 0x1E
   372  00007E                     	ds	1
   373  00007F                     pf_readdir@dj:
   374                           	opt stack 0
   375                           
   376                           ; 2 bytes @ 0x1F
   377  00007F                     	ds	1
   378  000080                     pf_read@remain:
   379                           	opt stack 0
   380                           
   381                           ; 4 bytes @ 0x20
   382  000080                     	ds	1
   383  000081                     pf_readdir@fno:
   384                           	opt stack 0
   385                           
   386                           ; 2 bytes @ 0x21
   387  000081                     	ds	1
   388  000082                     pf_lseek@bcs:
   389                           	opt stack 0
   390                           
   391                           ; 4 bytes @ 0x22
   392  000082                     	ds	1
   393  000083                     pf_readdir@dir:
   394                           	opt stack 0
   395                           
   396                           ; 32 bytes @ 0x23
   397  000083                     	ds	1
   398  000084                     pf_mount@tsect:
   399                           	opt stack 0
   400  000084                     pf_read@clst:
   401                           	opt stack 0
   402                           
   403                           ; 4 bytes @ 0x24
   404  000084                     	ds	2
   405  000086                     pf_lseek@clst:
   406                           	opt stack 0
   407                           
   408                           ; 4 bytes @ 0x26
   409  000086                     	ds	2
   410  000088                     pf_read@rcnt:
   411                           	opt stack 0
   412  000088                     pf_mount@mclst:
   413                           	opt stack 0
   414                           
   415                           ; 4 bytes @ 0x28
   416  000088                     	ds	2
   417  00008A                     follow_path@dir:
   418                           	opt stack 0
   419  00008A                     pf_read@fs:
   420                           	opt stack 0
   421  00008A                     pf_lseek@fs:
   422                           	opt stack 0
   423                           
   424                           ; 2 bytes @ 0x2A
   425  00008A                     	ds	2
   426  00008C                     ?_load_header:
   427                           	opt stack 0
   428  00008C                     follow_path@res:
   429                           	opt stack 0
   430  00008C                     pf_mount@bsect:
   431                           	opt stack 0
   432                           
   433                           ; 4 bytes @ 0x2C
   434  00008C                     	ds	1
   435  00008D                     pf_open@path:
   436                           	opt stack 0
   437  00008D                     pf_opendir@dj:
   438                           	opt stack 0
   439                           
   440                           ; 2 bytes @ 0x2D
   441  00008D                     	ds	2
   442  00008F                     ??_pf_open:
   443  00008F                     pf_opendir@path:
   444                           	opt stack 0
   445                           
   446                           ; 2 bytes @ 0x2F
   447  00008F                     	ds	1
   448  000090                     pf_mount@fsize:
   449                           	opt stack 0
   450  000090                     load_header@ChunkID:
   451                           	opt stack 0
   452                           
   453                           ; 4 bytes @ 0x30
   454  000090                     	ds	1
   455  000091                     ??_pf_opendir:
   456                           
   457                           ; 0 bytes @ 0x31
   458  000091                     	ds	3
   459  000094                     pf_mount@fmt:
   460                           	opt stack 0
   461  000094                     load_header@SamplingRate:
   462                           	opt stack 0
   463                           
   464                           ; 4 bytes @ 0x34
   465  000094                     	ds	3
   466  000097                     pf_open@sp:
   467                           	opt stack 0
   468                           
   469                           ; 12 bytes @ 0x37
   470  000097                     	ds	1
   471  000098                     load_header@sz:
   472                           	opt stack 0
   473                           
   474                           ; 4 bytes @ 0x38
   475  000098                     	ds	1
   476  000099                     pf_opendir@dir:
   477                           	opt stack 0
   478                           
   479                           ; 32 bytes @ 0x39
   480  000099                     	ds	10
   481  0000A3                     pf_readdir@sp:
   482                           	opt stack 0
   483  0000A3                     pf_open@dir:
   484                           	opt stack 0
   485                           
   486                           ; 32 bytes @ 0x43
   487  0000A3                     	ds	12
   488  0000AF                     pf_readdir@fs:
   489                           	opt stack 0
   490                           
   491                           ; 2 bytes @ 0x4F
   492  0000AF                     	ds	2
   493  0000B1                     pf_readdir@res:
   494                           	opt stack 0
   495                           
   496                           ; 1 bytes @ 0x51
   497  0000B1                     	ds	8
   498  0000B9                     pf_opendir@sp:
   499                           	opt stack 0
   500                           
   501                           ; 12 bytes @ 0x59
   502  0000B9                     	ds	10
   503  0000C3                     pf_open@res:
   504                           	opt stack 0
   505                           
   506                           ; 1 bytes @ 0x63
   507  0000C3                     	ds	1
   508  0000C4                     pf_open@fs:
   509                           	opt stack 0
   510                           
   511                           ; 2 bytes @ 0x64
   512  0000C4                     	ds	1
   513  0000C5                     pf_opendir@fs:
   514                           	opt stack 0
   515                           
   516                           ; 2 bytes @ 0x65
   517  0000C5                     	ds	1
   518  0000C6                     pf_open@dj:
   519                           	opt stack 0
   520                           
   521                           ; 16 bytes @ 0x66
   522  0000C6                     	ds	1
   523  0000C7                     pf_opendir@res:
   524                           	opt stack 0
   525                           
   526                           ; 1 bytes @ 0x67
   527  0000C7                     	ds	15
   528  0000D6                     play_wave_file@fn:
   529                           	opt stack 0
   530                           
   531                           ; 2 bytes @ 0x76
   532  0000D6                     	ds	2
   533  0000D8                     ??_play_wave_file:
   534                           
   535                           ; 0 bytes @ 0x78
   536  0000D8                     	ds	4
   537  0000DC                     play_wave_file@res:
   538                           	opt stack 0
   539                           
   540                           ; 1 bytes @ 0x7C
   541  0000DC                     	ds	1
   542  0000DD                     play_wave_file@sz:
   543                           	opt stack 0
   544                           
   545                           ; 4 bytes @ 0x7D
   546  0000DD                     	ds	4
   547  0000E1                     play_wave_file@amplitude:
   548                           	opt stack 0
   549                           
   550                           ; 2 bytes @ 0x81
   551  0000E1                     	ds	2
   552  0000E3                     play_wave_file@i:
   553                           	opt stack 0
   554                           
   555                           ; 4 bytes @ 0x83
   556  0000E3                     	ds	4
   557                           tblptru	equ	0xFF8
   558                           postinc0	equ	0xFEE
   559                           wreg	equ	0xFE8
   560                           postdec1	equ	0xFE5
   561                           fsr1h	equ	0xFE2
   562                           fsr1l	equ	0xFE1
   563                           
   564                           	psect	cstackCOMRAM
   565  000001                     __pcstackCOMRAM:
   566                           	opt stack 0
   567  000001                     set_pwm1_duty@duty1:
   568                           	opt stack 0
   569                           
   570                           ; 1 bytes @ 0x0
   571  000001                     	ds	1
   572  000002                     ??_isr:
   573                           
   574                           ; 0 bytes @ 0x1
   575  000002                     	ds	14
   576  000010                     ??_wav_putc:
   577  000010                     ?_strlen:
   578                           	opt stack 0
   579  000010                     ?_strchr:
   580                           	opt stack 0
   581  000010                     ?_mem_cmp:
   582                           	opt stack 0
   583  000010                     ?___lmul:
   584                           	opt stack 0
   585  000010                     ?___lldiv:
   586                           	opt stack 0
   587  000010                     ?___llmod:
   588                           	opt stack 0
   589  000010                     xmit_spi@temp:
   590                           	opt stack 0
   591  000010                     mem_set@dst:
   592                           	opt stack 0
   593  000010                     mem_cmp@dst:
   594                           	opt stack 0
   595  000010                     get_fileinfo@dj:
   596                           	opt stack 0
   597  000010                     strchr@ptr:
   598                           	opt stack 0
   599  000010                     strlen@s:
   600                           	opt stack 0
   601  000010                     wait_ready@timeout:
   602                           	opt stack 0
   603  000010                     delay@i:
   604                           	opt stack 0
   605  000010                     ___lmul@multiplier:
   606                           	opt stack 0
   607  000010                     ___lldiv@dividend:
   608                           	opt stack 0
   609  000010                     ___llmod@dividend:
   610                           	opt stack 0
   611                           
   612                           ; 4 bytes @ 0xF
   613  000010                     	ds	1
   614  000011                     xmit_spi@c:
   615                           	opt stack 0
   616                           
   617                           ; 1 bytes @ 0x10
   618  000011                     	ds	1
   619  000012                     ??_strlen:
   620  000012                     wav_putc@c:
   621                           	opt stack 0
   622  000012                     mem_set@val:
   623                           	opt stack 0
   624  000012                     mem_cmp@src:
   625                           	opt stack 0
   626  000012                     get_fileinfo@fno:
   627                           	opt stack 0
   628  000012                     strchr@chr:
   629                           	opt stack 0
   630                           
   631                           ; 2 bytes @ 0x11
   632  000012                     	ds	2
   633  000014                     ??_get_fileinfo:
   634  000014                     wait_ready@res:
   635                           	opt stack 0
   636  000014                     mem_set@cnt:
   637                           	opt stack 0
   638  000014                     mem_cmp@cnt:
   639                           	opt stack 0
   640  000014                     strlen@cp:
   641                           	opt stack 0
   642  000014                     ___lmul@multiplicand:
   643                           	opt stack 0
   644  000014                     ___lldiv@divisor:
   645                           	opt stack 0
   646  000014                     ___llmod@divisor:
   647                           	opt stack 0
   648                           
   649                           ; 4 bytes @ 0x13
   650  000014                     	ds	1
   651  000015                     send_cmd@arg:
   652                           	opt stack 0
   653                           
   654                           ; 4 bytes @ 0x14
   655  000015                     	ds	1
   656  000016                     ??_mem_cmp:
   657  000016                     ?_strncmp:
   658                           	opt stack 0
   659  000016                     mem_set@d:
   660                           	opt stack 0
   661  000016                     strncmp@s1:
   662                           	opt stack 0
   663                           
   664                           ; 2 bytes @ 0x15
   665  000016                     	ds	2
   666  000018                     ___llmod@counter:
   667                           	opt stack 0
   668  000018                     create_name@dj:
   669                           	opt stack 0
   670  000018                     get_fileinfo@p:
   671                           	opt stack 0
   672  000018                     strncmp@s2:
   673                           	opt stack 0
   674  000018                     ___lmul@product:
   675                           	opt stack 0
   676  000018                     ___lldiv@quotient:
   677                           	opt stack 0
   678                           
   679                           ; 4 bytes @ 0x17
   680  000018                     	ds	1
   681  000019                     ??_send_cmd:
   682  000019                     mem_cmp@d:
   683                           	opt stack 0
   684                           
   685                           ; 2 bytes @ 0x18
   686  000019                     	ds	1
   687  00001A                     get_fileinfo@c:
   688                           	opt stack 0
   689  00001A                     send_cmd@res:
   690                           	opt stack 0
   691  00001A                     create_name@path:
   692                           	opt stack 0
   693  00001A                     strncmp@len:
   694                           	opt stack 0
   695                           
   696                           ; 2 bytes @ 0x19
   697  00001A                     	ds	1
   698  00001B                     send_cmd@n:
   699                           	opt stack 0
   700  00001B                     mem_cmp@s:
   701                           	opt stack 0
   702  00001B                     get_fileinfo@dir:
   703                           	opt stack 0
   704                           
   705                           ; 2 bytes @ 0x1A
   706  00001B                     	ds	1
   707  00001C                     ??_strncmp:
   708  00001C                     ??_create_name:
   709  00001C                     ?_clust2sect:
   710                           	opt stack 0
   711  00001C                     send_cmd@cmd:
   712                           	opt stack 0
   713  00001C                     ___lldiv@counter:
   714                           	opt stack 0
   715  00001C                     clust2sect@clst:
   716                           	opt stack 0
   717                           
   718                           ; 4 bytes @ 0x1B
   719  00001C                     	ds	1
   720  00001D                     ??_disk_initialize:
   721  00001D                     get_fileinfo@i:
   722                           	opt stack 0
   723  00001D                     mem_cmp@r:
   724                           	opt stack 0
   725  00001D                     disk_readp@buff:
   726                           	opt stack 0
   727  00001D                     set_sampling_rate@rate:
   728                           	opt stack 0
   729                           
   730                           ; 4 bytes @ 0x1C
   731  00001D                     	ds	1
   732  00001E                     disk_initialize@ocr:
   733                           	opt stack 0
   734                           
   735                           ; 4 bytes @ 0x1D
   736  00001E                     	ds	1
   737  00001F                     ?_strstr:
   738                           	opt stack 0
   739  00001F                     strstr@s1:
   740                           	opt stack 0
   741  00001F                     disk_readp@lba:
   742                           	opt stack 0
   743                           
   744                           ; 4 bytes @ 0x1E
   745  00001F                     	ds	1
   746  000020                     ??_clust2sect:
   747                           
   748                           ; 0 bytes @ 0x1F
   749  000020                     	ds	1
   750  000021                     ??_set_sampling_rate:
   751  000021                     strstr@s2:
   752                           	opt stack 0
   753                           
   754                           ; 2 bytes @ 0x20
   755  000021                     	ds	1
   756  000022                     _disk_initialize$807:
   757                           	opt stack 0
   758                           
   759                           ; 2 bytes @ 0x21
   760  000022                     	ds	1
   761  000023                     create_name@d:
   762                           	opt stack 0
   763  000023                     disk_readp@ofs:
   764                           	opt stack 0
   765                           
   766                           ; 2 bytes @ 0x22
   767  000023                     	ds	1
   768  000024                     disk_initialize@cmd:
   769                           	opt stack 0
   770  000024                     create_name@p:
   771                           	opt stack 0
   772                           
   773                           ; 2 bytes @ 0x23
   774  000024                     	ds	1
   775  000025                     disk_initialize@ty:
   776                           	opt stack 0
   777  000025                     disk_readp@cnt:
   778                           	opt stack 0
   779  000025                     set_sampling_rate@preload:
   780                           	opt stack 0
   781                           
   782                           ; 4 bytes @ 0x24
   783  000025                     	ds	1
   784  000026                     create_name@ni:
   785                           	opt stack 0
   786  000026                     disk_initialize@tmr:
   787                           	opt stack 0
   788                           
   789                           ; 2 bytes @ 0x25
   790  000026                     	ds	1
   791  000027                     ??_disk_readp:
   792  000027                     create_name@si:
   793                           	opt stack 0
   794                           
   795                           ; 1 bytes @ 0x26
   796  000027                     	ds	1
   797  000028                     disk_initialize@n:
   798                           	opt stack 0
   799  000028                     create_name@sfn:
   800                           	opt stack 0
   801                           
   802                           ; 2 bytes @ 0x27
   803  000028                     	ds	1
   804  000029                     disk_readp@res:
   805                           	opt stack 0
   806  000029                     clust2sect@fs:
   807                           	opt stack 0
   808                           
   809                           ; 2 bytes @ 0x28
   810  000029                     	ds	1
   811  00002A                     create_name@i:
   812                           	opt stack 0
   813  00002A                     disk_readp@rc:
   814                           	opt stack 0
   815                           
   816                           ; 1 bytes @ 0x29
   817  00002A                     	ds	1
   818  00002B                     create_name@c:
   819                           	opt stack 0
   820  00002B                     dir_rewind@dj:
   821                           	opt stack 0
   822  00002B                     disk_readp@bc:
   823                           	opt stack 0
   824                           
   825                           ; 2 bytes @ 0x2A
   826  00002B                     	ds	2
   827  00002D                     ??_dir_rewind:
   828  00002D                     ?_get_fat:
   829                           	opt stack 0
   830  00002D                     check_fs@buf:
   831                           	opt stack 0
   832  00002D                     get_fat@clst:
   833                           	opt stack 0
   834                           
   835                           ; 4 bytes @ 0x2C
   836  00002D                     	ds	2
   837  00002F                     check_fs@sect:
   838                           	opt stack 0
   839                           
   840                           ; 4 bytes @ 0x2E
   841  00002F                     	ds	2
   842  000031                     ??_get_fat:
   843  000031                     _dir_rewind$154:
   844                           	opt stack 0
   845                           
   846                           ; 4 bytes @ 0x30
   847  000031                     	ds	2
   848  000033                     pf_mount@fs:
   849                           	opt stack 0
   850                           
   851                           ; 2 bytes @ 0x32
   852  000033                     	ds	2
   853  000035                     ??_pf_mount:
   854  000035                     dir_rewind@fs:
   855                           	opt stack 0
   856                           
   857                           ; 2 bytes @ 0x34
   858  000035                     	ds	2
   859  000037                     dir_rewind@clst:
   860                           	opt stack 0
   861                           
   862                           ; 4 bytes @ 0x36
   863  000037                     	ds	4
   864  00003B                     dir_next@dj:
   865                           	opt stack 0
   866  00003B                     pf_read@buff:
   867                           	opt stack 0
   868  00003B                     pf_lseek@ofs:
   869                           	opt stack 0
   870                           
   871                           ; 4 bytes @ 0x3A
   872  00003B                     	ds	2
   873  00003D                     ??_dir_next:
   874  00003D                     pf_read@btr:
   875                           	opt stack 0
   876                           
   877                           ; 2 bytes @ 0x3C
   878  00003D                     	ds	2
   879  00003F                     pf_read@br:
   880                           	opt stack 0
   881                           
   882                           ; 2 bytes @ 0x3E
   883  00003F                     	ds	2
   884  000041                     ??_load_header:
   885                           
   886                           ; 0 bytes @ 0x40
   887  000041                     	ds	3
   888  000044                     dir_find@dj:
   889                           	opt stack 0
   890  000044                     dir_read@dj:
   891                           	opt stack 0
   892                           
   893                           ; 2 bytes @ 0x43
   894  000044                     	ds	2
   895  000046                     ??_dir_find:
   896  000046                     
   897                           ; 0 bytes @ 0x45
   898  000046                     	ds	2
   899  000048                     tblptru	equ	0xFF8
   900                           postinc0	equ	0xFEE
   901                           wreg	equ	0xFE8
   902                           postdec1	equ	0xFE5
   903                           fsr1h	equ	0xFE2
   904                           fsr1l	equ	0xFE1
   905                           
   906                           ; 0 bytes @ 0x47
   907 ;;
   908 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   909 ;;
   910 ;; *************** function _main *****************
   911 ;; Defined at:
   912 ;;		line 101 in file "../../../PIC18F/main.c"
   913 ;; Parameters:    Size  Location     Type
   914 ;;		None
   915 ;; Auto vars:     Size  Location     Type
   916 ;;		None
   917 ;; Return value:  Size  Location     Type
   918 ;;		None               void
   919 ;; Registers used:
   920 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   921 ;; Tracked objects:
   922 ;;		On entry : 0/0
   923 ;;		On exit  : 0/0
   924 ;;		Unchanged: 0/0
   925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   926 ;;      Params:         0       0       0       0       0       0       0       0       0
   927 ;;      Locals:         0       0       0       0       0       0       0       0       0
   928 ;;      Temps:          0       0       0       0       0       0       0       0       0
   929 ;;      Totals:         0       0       0       0       0       0       0       0       0
   930 ;;Total ram usage:        0 bytes
   931 ;; Hardware stack levels required when called:   12
   932 ;; This function calls:
   933 ;;		_delay
   934 ;;		_pf_mount
   935 ;;		_pf_opendir
   936 ;;		_pf_readdir
   937 ;;		_play_wave_file
   938 ;;		_pwm_audio_init
   939 ;;		_strstr
   940 ;; This function is called by:
   941 ;;		Startup code after reset
   942 ;; This function uses a non-reentrant model
   943 ;;
   944                           
   945                           	psect	text0
   946  00368C                     __ptext0:
   947                           	opt stack 0
   948  00368C                     _main:
   949                           	opt stack 18
   950                           
   951                           ;main.c: 110: pwm_audio_init();
   952                           
   953                           ;incstack = 0
   954  00368C  EC60  F01E         	call	_pwm_audio_init	;wreg free
   955  003690                     l5896:
   956                           
   957                           ;main.c: 114: if (pf_mount(&Fs) ) continue;
   958  003690  0101               	movlb	1	; () banked
   959  003692  0E01               	movlw	high _Fs
   960  003694  6E34               	movwf	pf_mount@fs+1,c
   961  003696  0101               	movlb	1	; () banked
   962  003698  0E00               	movlw	low _Fs
   963  00369A  6E33               	movwf	pf_mount@fs,c
   964  00369C  EC66  F009         	call	_pf_mount	;wreg free
   965  0036A0  0900               	iorlw	0
   966  0036A2  A4D8               	btfss	status,2,c
   967  0036A4  D7F5               	goto	l5896
   968  0036A6                     l5900:
   969                           
   970                           ;main.c: 116: if (pf_opendir(&Dir1, "")) break;
   971  0036A6  0100               	movlb	0	; () banked
   972  0036A8  0E00               	movlw	high _Dir1
   973  0036AA  0100               	movlb	0	; () banked
   974  0036AC  6F8E               	movwf	(pf_opendir@dj+1)& (0+255),b
   975  0036AE  0100               	movlb	0	; () banked
   976  0036B0  0EEB               	movlw	low _Dir1
   977  0036B2  0100               	movlb	0	; () banked
   978  0036B4  6F8D               	movwf	pf_opendir@dj& (0+255),b
   979  0036B6  0E08               	movlw	high (STR_2+4)
   980  0036B8  0100               	movlb	0	; () banked
   981  0036BA  6F90               	movwf	(pf_opendir@path+1)& (0+255),b
   982  0036BC  0E05               	movlw	low (STR_2+4)
   983  0036BE  0100               	movlb	0	; () banked
   984  0036C0  6F8F               	movwf	pf_opendir@path& (0+255),b
   985  0036C2  EC30  F017         	call	_pf_opendir	;wreg free
   986  0036C6  0900               	iorlw	0
   987  0036C8  A4D8               	btfss	status,2,c
   988  0036CA  D7E2               	goto	l5896
   989  0036CC  D01C               	goto	l5910
   990  0036CE                     l5904:
   991                           
   992                           ;main.c: 118: if( strstr(Fno.fname, ".WAV") ){
   993  0036CE  0101               	movlb	1	; () banked
   994  0036D0  0E01               	movlw	high (_Fno+9)
   995  0036D2  6E20               	movwf	strstr@s1+1,c
   996  0036D4  0101               	movlb	1	; () banked
   997  0036D6  0E35               	movlw	low (_Fno+9)
   998  0036D8  6E1F               	movwf	strstr@s1,c
   999  0036DA  0E08               	movlw	high STR_2
  1000  0036DC  6E22               	movwf	strstr@s2+1,c
  1001  0036DE  0E01               	movlw	low STR_2
  1002  0036E0  6E21               	movwf	strstr@s2,c
  1003  0036E2  ECF0  F01B         	call	_strstr	;wreg free
  1004  0036E6  5020               	movf	?_strstr+1,w,c
  1005  0036E8  101F               	iorwf	?_strstr,w,c
  1006  0036EA  B4D8               	btfsc	status,2,c
  1007  0036EC  D00C               	goto	l5910
  1008                           
  1009                           ;main.c: 119: play_wave_file(Fno.fname);
  1010  0036EE  0101               	movlb	1	; () banked
  1011  0036F0  0E01               	movlw	high (_Fno+9)
  1012  0036F2  0100               	movlb	0	; () banked
  1013  0036F4  6FD7               	movwf	(play_wave_file@fn+1)& (0+255),b
  1014  0036F6  0101               	movlb	1	; () banked
  1015  0036F8  0E35               	movlw	low (_Fno+9)
  1016  0036FA  0100               	movlb	0	; () banked
  1017  0036FC  6FD6               	movwf	play_wave_file@fn& (0+255),b
  1018  0036FE  ECA5  F00D         	call	_play_wave_file	;wreg free
  1019                           
  1020                           ;main.c: 120: delay();
  1021  003702  EC24  F01E         	call	_delay	;wreg free
  1022  003706                     l5910:
  1023  003706  0100               	movlb	0	; () banked
  1024  003708  0E00               	movlw	high _Dir1
  1025  00370A  0100               	movlb	0	; () banked
  1026  00370C  6F80               	movwf	(pf_readdir@dj+1)& (0+255),b
  1027  00370E  0100               	movlb	0	; () banked
  1028  003710  0EEB               	movlw	low _Dir1
  1029  003712  0100               	movlb	0	; () banked
  1030  003714  6F7F               	movwf	pf_readdir@dj& (0+255),b
  1031  003716  0101               	movlb	1	; () banked
  1032  003718  0E01               	movlw	high _Fno
  1033  00371A  0100               	movlb	0	; () banked
  1034  00371C  6F82               	movwf	(pf_readdir@fno+1)& (0+255),b
  1035  00371E  0101               	movlb	1	; () banked
  1036  003720  0E2C               	movlw	low _Fno
  1037  003722  0100               	movlb	0	; () banked
  1038  003724  6F81               	movwf	pf_readdir@fno& (0+255),b
  1039  003726  ECFF  F018         	call	_pf_readdir	;wreg free
  1040  00372A  0900               	iorlw	0
  1041  00372C  A4D8               	btfss	status,2,c
  1042  00372E  D7BB               	goto	l5900
  1043  003730  0101               	movlb	1	; () banked
  1044  003732  6735               	tstfsz	(_Fno+9)& (0+255),b
  1045  003734  D7CC               	goto	l5904
  1046  003736  D7B7               	goto	l5900
  1047  003738                     __end_of_main:
  1048                           	opt stack 0
  1049                           tblptru	equ	0xFF8
  1050                           postinc0	equ	0xFEE
  1051                           wreg	equ	0xFE8
  1052                           postdec1	equ	0xFE5
  1053                           fsr1h	equ	0xFE2
  1054                           fsr1l	equ	0xFE1
  1055                           status	equ	0xFD8
  1056                           
  1057 ;; *************** function _strstr *****************
  1058 ;; Defined at:
  1059 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\strstr.c"
  1060 ;; Parameters:    Size  Location     Type
  1061 ;;  s1              2   30[COMRAM] PTR const unsigned char 
  1062 ;;		 -> Fno.fname(13), Fno(22), NULL(0), 
  1063 ;;  s2              2   32[COMRAM] PTR const unsigned char 
  1064 ;;		 -> STR_2(5), 
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;		None
  1067 ;; Return value:  Size  Location     Type
  1068 ;;                  2   30[COMRAM] PTR unsigned char 
  1069 ;; Registers used:
  1070 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1071 ;; Tracked objects:
  1072 ;;		On entry : 0/0
  1073 ;;		On exit  : 0/0
  1074 ;;		Unchanged: 0/0
  1075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1076 ;;      Params:         4       0       0       0       0       0       0       0       0
  1077 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1078 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1079 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1080 ;;Total ram usage:        4 bytes
  1081 ;; Hardware stack levels used:    1
  1082 ;; Hardware stack levels required when called:    3
  1083 ;; This function calls:
  1084 ;;		_strchr
  1085 ;;		_strlen
  1086 ;;		_strncmp
  1087 ;; This function is called by:
  1088 ;;		_main
  1089 ;; This function uses a non-reentrant model
  1090 ;;
  1091                           
  1092                           	psect	text1
  1093  0037E0                     __ptext1:
  1094                           	opt stack 0
  1095  0037E0                     _strstr:
  1096                           	opt stack 26
  1097                           
  1098                           ; BSR set to: 1
  1099                           ;incstack = 0
  1100  0037E0  D031               	goto	l4408
  1101  0037E2                     l4400:
  1102  0037E2  C020  F017         	movff	strstr@s1+1,strncmp@s1+1
  1103  0037E6  C01F  F016         	movff	strstr@s1,strncmp@s1
  1104  0037EA  C022  F019         	movff	strstr@s2+1,strncmp@s2+1
  1105  0037EE  C021  F018         	movff	strstr@s2,strncmp@s2
  1106  0037F2  C022  F011         	movff	strstr@s2+1,strlen@s+1
  1107  0037F6  C021  F010         	movff	strstr@s2,strlen@s
  1108  0037FA  ECD0  F01D         	call	_strlen	;wreg free
  1109  0037FE  C010  F01A         	movff	?_strlen,strncmp@len
  1110  003802  C011  F01B         	movff	?_strlen+1,strncmp@len+1
  1111  003806  EC32  F01C         	call	_strncmp	;wreg free
  1112  00380A  5017               	movf	?_strncmp+1,w,c
  1113  00380C  1016               	iorwf	?_strncmp,w,c
  1114  00380E  A4D8               	btfss	status,2,c
  1115  003810  D005               	goto	l4406
  1116  003812  C020  F020         	movff	strstr@s1+1,?_strstr+1
  1117  003816  C01F  F01F         	movff	strstr@s1,?_strstr
  1118  00381A  D023               	goto	l1100
  1119  00381C                     l4406:
  1120  00381C  0E01               	movlw	1
  1121  00381E  241F               	addwf	strstr@s1,w,c
  1122  003820  6E10               	movwf	strchr@ptr,c
  1123  003822  0E00               	movlw	0
  1124  003824  2020               	addwfc	strstr@s1+1,w,c
  1125  003826  6E11               	movwf	strchr@ptr+1,c
  1126  003828  C021  FFF6         	movff	strstr@s2,tblptrl
  1127  00382C  C022  FFF7         	movff	strstr@s2+1,tblptrh
  1128  003830                     	if	0	;tblptru may be non-zero
  1129  003830                     	endif
  1130  003830                     	if	0	;tblptru may be non-zero
  1131  003830                     	endif
  1132  003830  0008               	tblrd		*
  1133  003832  50F5               	movf	tablat,w,c
  1134  003834  6E12               	movwf	strchr@chr,c
  1135  003836  6A13               	clrf	strchr@chr+1,c
  1136  003838  EC0A  F01E         	call	_strchr	;wreg free
  1137  00383C  C010  F01F         	movff	?_strchr,strstr@s1
  1138  003840  C011  F020         	movff	?_strchr+1,strstr@s1+1
  1139  003844                     l4408:
  1140  003844  5020               	movf	strstr@s1+1,w,c
  1141  003846  101F               	iorwf	strstr@s1,w,c
  1142  003848  B4D8               	btfsc	status,2,c
  1143  00384A  D007               	goto	l4412
  1144  00384C  C01F  FFD9         	movff	strstr@s1,fsr2l
  1145  003850  C020  FFDA         	movff	strstr@s1+1,fsr2h
  1146  003854  50DF               	movf	indf2,w,c
  1147  003856  A4D8               	btfss	status,2,c
  1148  003858  D7C4               	goto	l4400
  1149  00385A                     l4412:
  1150  00385A  0E00               	movlw	0
  1151  00385C  6E20               	movwf	?_strstr+1,c
  1152  00385E  0E00               	movlw	0
  1153  003860  6E1F               	movwf	?_strstr,c
  1154  003862                     l1100:
  1155  003862  0012               	return	
  1156  003864                     __end_of_strstr:
  1157                           	opt stack 0
  1158                           tblptru	equ	0xFF8
  1159                           tblptrh	equ	0xFF7
  1160                           tblptrl	equ	0xFF6
  1161                           tablat	equ	0xFF5
  1162                           postinc0	equ	0xFEE
  1163                           wreg	equ	0xFE8
  1164                           postdec1	equ	0xFE5
  1165                           fsr1h	equ	0xFE2
  1166                           fsr1l	equ	0xFE1
  1167                           indf2	equ	0xFDF
  1168                           fsr2h	equ	0xFDA
  1169                           fsr2l	equ	0xFD9
  1170                           status	equ	0xFD8
  1171                           
  1172 ;; *************** function _strncmp *****************
  1173 ;; Defined at:
  1174 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\strncmp.c"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;  s1              2   21[COMRAM] PTR const unsigned char 
  1177 ;;		 -> Fno.fname(13), Fno(22), NULL(0), 
  1178 ;;  s2              2   23[COMRAM] PTR const unsigned char 
  1179 ;;		 -> STR_2(5), 
  1180 ;;  len             2   25[COMRAM] unsigned int 
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;		None
  1183 ;; Return value:  Size  Location     Type
  1184 ;;                  2   21[COMRAM] int 
  1185 ;; Registers used:
  1186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1187 ;; Tracked objects:
  1188 ;;		On entry : 0/0
  1189 ;;		On exit  : 0/0
  1190 ;;		Unchanged: 0/0
  1191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1192 ;;      Params:         6       0       0       0       0       0       0       0       0
  1193 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1194 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1195 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1196 ;;Total ram usage:        9 bytes
  1197 ;; Hardware stack levels used:    1
  1198 ;; Hardware stack levels required when called:    2
  1199 ;; This function calls:
  1200 ;;		Nothing
  1201 ;; This function is called by:
  1202 ;;		_strstr
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206                           	psect	text2
  1207  003864                     __ptext2:
  1208                           	opt stack 0
  1209  003864                     _strncmp:
  1210                           	opt stack 26
  1211                           
  1212                           ;incstack = 0
  1213  003864  D033               	goto	l4114
  1214  003866                     l4104:
  1215  003866  C016  FFD9         	movff	strncmp@s1,fsr2l
  1216  00386A  C017  FFDA         	movff	strncmp@s1+1,fsr2h
  1217  00386E  50DF               	movf	indf2,w,c
  1218  003870  B4D8               	btfsc	status,2,c
  1219  003872  D00F               	goto	l4108
  1220  003874  C018  FFF6         	movff	strncmp@s2,tblptrl
  1221  003878  C019  FFF7         	movff	strncmp@s2+1,tblptrh
  1222  00387C                     	if	0	;tblptru may be non-zero
  1223  00387C                     	endif
  1224  00387C                     	if	0	;tblptru may be non-zero
  1225  00387C                     	endif
  1226  00387C  0008               	tblrd		*
  1227  00387E  CFF5 F01C          	movff	tablat,??_strncmp
  1228  003882  C016  FFD9         	movff	strncmp@s1,fsr2l
  1229  003886  C017  FFDA         	movff	strncmp@s1+1,fsr2h
  1230  00388A  50DF               	movf	indf2,w,c
  1231  00388C  181C               	xorwf	??_strncmp,w,c
  1232  00388E  B4D8               	btfsc	status,2,c
  1233  003890  D019               	goto	l4112
  1234  003892                     l4108:
  1235  003892  C018  FFF6         	movff	strncmp@s2,tblptrl
  1236  003896  C019  FFF7         	movff	strncmp@s2+1,tblptrh
  1237  00389A                     	if	0	;tblptru may be non-zero
  1238  00389A                     	endif
  1239  00389A                     	if	0	;tblptru may be non-zero
  1240  00389A                     	endif
  1241  00389A  0008               	tblrd		*
  1242  00389C  50F5               	movf	tablat,w,c
  1243  00389E  6E1C               	movwf	??_strncmp& (0+255),c
  1244  0038A0  6A1D               	clrf	(??_strncmp+1)& (0+255),c
  1245  0038A2  1E1C               	comf	??_strncmp,f,c
  1246  0038A4  1E1D               	comf	??_strncmp+1,f,c
  1247  0038A6  4A1C               	infsnz	??_strncmp,f,c
  1248  0038A8  2A1D               	incf	??_strncmp+1,f,c
  1249  0038AA  C016  FFD9         	movff	strncmp@s1,fsr2l
  1250  0038AE  C017  FFDA         	movff	strncmp@s1+1,fsr2h
  1251  0038B2  50DF               	movf	indf2,w,c
  1252  0038B4  6E1E               	movwf	(??_strncmp+2)& (0+255),c
  1253  0038B6  501E               	movf	??_strncmp+2,w,c
  1254  0038B8  241C               	addwf	??_strncmp,w,c
  1255  0038BA  6E16               	movwf	?_strncmp,c
  1256  0038BC  0E00               	movlw	0
  1257  0038BE  201D               	addwfc	??_strncmp+1,w,c
  1258  0038C0  6E17               	movwf	?_strncmp+1,c
  1259  0038C2  D010               	goto	l1123
  1260  0038C4                     l4112:
  1261  0038C4  4A16               	infsnz	strncmp@s1,f,c
  1262  0038C6  2A17               	incf	strncmp@s1+1,f,c
  1263  0038C8  4A18               	infsnz	strncmp@s2,f,c
  1264  0038CA  2A19               	incf	strncmp@s2+1,f,c
  1265  0038CC                     l4114:
  1266  0038CC  061A               	decf	strncmp@len,f,c
  1267  0038CE  A0D8               	btfss	status,0,c
  1268  0038D0  061B               	decf	strncmp@len+1,f,c
  1269  0038D2  281A               	incf	strncmp@len& (0+255),w,c
  1270  0038D4  B4D8               	btfsc	status,2,c
  1271  0038D6  281B               	incf	(strncmp@len+1)& (0+255),w,c
  1272  0038D8  A4D8               	btfss	status,2,c
  1273  0038DA  D7C5               	goto	l4104
  1274  0038DC  0E00               	movlw	0
  1275  0038DE  6E17               	movwf	?_strncmp+1,c
  1276  0038E0  0E00               	movlw	0
  1277  0038E2  6E16               	movwf	?_strncmp,c
  1278  0038E4                     l1123:
  1279  0038E4  0012               	return	
  1280  0038E6                     __end_of_strncmp:
  1281                           	opt stack 0
  1282                           tblptru	equ	0xFF8
  1283                           tblptrh	equ	0xFF7
  1284                           tblptrl	equ	0xFF6
  1285                           tablat	equ	0xFF5
  1286                           postinc0	equ	0xFEE
  1287                           wreg	equ	0xFE8
  1288                           postdec1	equ	0xFE5
  1289                           fsr1h	equ	0xFE2
  1290                           fsr1l	equ	0xFE1
  1291                           indf2	equ	0xFDF
  1292                           fsr2h	equ	0xFDA
  1293                           fsr2l	equ	0xFD9
  1294                           status	equ	0xFD8
  1295                           
  1296 ;; *************** function _strlen *****************
  1297 ;; Defined at:
  1298 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\strlen.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;  s               2   15[COMRAM] PTR const unsigned char 
  1301 ;;		 -> STR_2(5), 
  1302 ;; Auto vars:     Size  Location     Type
  1303 ;;  cp              2   19[COMRAM] PTR const unsigned char 
  1304 ;;		 -> STR_2(5), 
  1305 ;; Return value:  Size  Location     Type
  1306 ;;                  2   15[COMRAM] unsigned int 
  1307 ;; Registers used:
  1308 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1309 ;; Tracked objects:
  1310 ;;		On entry : 0/0
  1311 ;;		On exit  : 0/0
  1312 ;;		Unchanged: 0/0
  1313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1314 ;;      Params:         2       0       0       0       0       0       0       0       0
  1315 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1316 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1317 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1318 ;;Total ram usage:        6 bytes
  1319 ;; Hardware stack levels used:    1
  1320 ;; Hardware stack levels required when called:    2
  1321 ;; This function calls:
  1322 ;;		Nothing
  1323 ;; This function is called by:
  1324 ;;		_strstr
  1325 ;; This function uses a non-reentrant model
  1326 ;;
  1327                           
  1328                           	psect	text3
  1329  003BA0                     __ptext3:
  1330                           	opt stack 0
  1331  003BA0                     _strlen:
  1332                           	opt stack 26
  1333                           
  1334                           ;incstack = 0
  1335  003BA0  C011  F015         	movff	strlen@s+1,strlen@cp+1
  1336  003BA4  C010  F014         	movff	strlen@s,strlen@cp
  1337  003BA8  D002               	goto	l4096
  1338  003BAA                     l4094:
  1339  003BAA  4A14               	infsnz	strlen@cp,f,c
  1340  003BAC  2A15               	incf	strlen@cp+1,f,c
  1341  003BAE                     l4096:
  1342  003BAE  C014  FFF6         	movff	strlen@cp,tblptrl
  1343  003BB2  C015  FFF7         	movff	strlen@cp+1,tblptrh
  1344  003BB6                     	if	0	;tblptru may be non-zero
  1345  003BB6                     	endif
  1346  003BB6                     	if	0	;tblptru may be non-zero
  1347  003BB6                     	endif
  1348  003BB6  0008               	tblrd		*
  1349  003BB8  50F5               	movf	tablat,w,c
  1350  003BBA  0900               	iorlw	0
  1351  003BBC  A4D8               	btfss	status,2,c
  1352  003BBE  D7F5               	goto	l4094
  1353  003BC0  C010  F012         	movff	strlen@s,??_strlen
  1354  003BC4  C011  F013         	movff	strlen@s+1,??_strlen+1
  1355  003BC8  1E12               	comf	??_strlen,f,c
  1356  003BCA  1E13               	comf	??_strlen+1,f,c
  1357  003BCC  4A12               	infsnz	??_strlen,f,c
  1358  003BCE  2A13               	incf	??_strlen+1,f,c
  1359  003BD0  5014               	movf	strlen@cp,w,c
  1360  003BD2  2412               	addwf	??_strlen,w,c
  1361  003BD4  6E10               	movwf	?_strlen,c
  1362  003BD6  5015               	movf	strlen@cp+1,w,c
  1363  003BD8  2013               	addwfc	??_strlen+1,w,c
  1364  003BDA  6E11               	movwf	?_strlen+1,c
  1365  003BDC  0012               	return	
  1366  003BDE                     __end_of_strlen:
  1367                           	opt stack 0
  1368                           tblptru	equ	0xFF8
  1369                           tblptrh	equ	0xFF7
  1370                           tblptrl	equ	0xFF6
  1371                           tablat	equ	0xFF5
  1372                           postinc0	equ	0xFEE
  1373                           wreg	equ	0xFE8
  1374                           postdec1	equ	0xFE5
  1375                           fsr1h	equ	0xFE2
  1376                           fsr1l	equ	0xFE1
  1377                           indf2	equ	0xFDF
  1378                           fsr2h	equ	0xFDA
  1379                           fsr2l	equ	0xFD9
  1380                           status	equ	0xFD8
  1381                           
  1382 ;; *************** function _strchr *****************
  1383 ;; Defined at:
  1384 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\strchr.c"
  1385 ;; Parameters:    Size  Location     Type
  1386 ;;  ptr             2   15[COMRAM] PTR const unsigned char 
  1387 ;;		 -> Fno.fname(13), Fno(22), NULL(0), 
  1388 ;;  chr             2   17[COMRAM] int 
  1389 ;; Auto vars:     Size  Location     Type
  1390 ;;		None
  1391 ;; Return value:  Size  Location     Type
  1392 ;;                  2   15[COMRAM] PTR unsigned char 
  1393 ;; Registers used:
  1394 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1400 ;;      Params:         4       0       0       0       0       0       0       0       0
  1401 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1402 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1403 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1404 ;;Total ram usage:        4 bytes
  1405 ;; Hardware stack levels used:    1
  1406 ;; Hardware stack levels required when called:    2
  1407 ;; This function calls:
  1408 ;;		Nothing
  1409 ;; This function is called by:
  1410 ;;		_strstr
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414                           	psect	text4
  1415  003C14                     __ptext4:
  1416                           	opt stack 0
  1417  003C14                     _strchr:
  1418                           	opt stack 26
  1419  003C14                     l1106:
  1420  003C14  5012               	movf	strchr@chr,w,c
  1421  003C16  C010  FFD9         	movff	strchr@ptr,fsr2l
  1422  003C1A  C011  FFDA         	movff	strchr@ptr+1,fsr2h
  1423  003C1E  62DF               	cpfseq	indf2,c
  1424  003C20  D005               	goto	l4126
  1425  003C22  C011  F011         	movff	strchr@ptr+1,?_strchr+1
  1426  003C26  C010  F010         	movff	strchr@ptr,?_strchr
  1427  003C2A  D00D               	goto	l1108
  1428  003C2C                     l4126:
  1429  003C2C  C010  FFD9         	movff	strchr@ptr,fsr2l
  1430  003C30  C011  FFDA         	movff	strchr@ptr+1,fsr2h
  1431  003C34  4A10               	infsnz	strchr@ptr,f,c
  1432  003C36  2A11               	incf	strchr@ptr+1,f,c
  1433  003C38  50DF               	movf	indf2,w,c
  1434  003C3A  A4D8               	btfss	status,2,c
  1435  003C3C  D7EB               	goto	l1106
  1436  003C3E  0E00               	movlw	0
  1437  003C40  6E11               	movwf	?_strchr+1,c
  1438  003C42  0E00               	movlw	0
  1439  003C44  6E10               	movwf	?_strchr,c
  1440  003C46                     l1108:
  1441  003C46  0012               	return	
  1442  003C48                     __end_of_strchr:
  1443                           	opt stack 0
  1444                           tblptru	equ	0xFF8
  1445                           tblptrh	equ	0xFF7
  1446                           tblptrl	equ	0xFF6
  1447                           tablat	equ	0xFF5
  1448                           postinc0	equ	0xFEE
  1449                           wreg	equ	0xFE8
  1450                           postdec1	equ	0xFE5
  1451                           fsr1h	equ	0xFE2
  1452                           fsr1l	equ	0xFE1
  1453                           indf2	equ	0xFDF
  1454                           fsr2h	equ	0xFDA
  1455                           fsr2l	equ	0xFD9
  1456                           status	equ	0xFD8
  1457                           
  1458 ;; *************** function _pwm_audio_init *****************
  1459 ;; Defined at:
  1460 ;;		line 103 in file "../../../PIC18F/pwm_audio.c"
  1461 ;; Parameters:    Size  Location     Type
  1462 ;;		None
  1463 ;; Auto vars:     Size  Location     Type
  1464 ;;		None
  1465 ;; Return value:  Size  Location     Type
  1466 ;;		None               void
  1467 ;; Registers used:
  1468 ;;		wreg, status,2, cstack
  1469 ;; Tracked objects:
  1470 ;;		On entry : 0/0
  1471 ;;		On exit  : 0/0
  1472 ;;		Unchanged: 0/0
  1473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1474 ;;      Params:         0       0       0       0       0       0       0       0       0
  1475 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1476 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1477 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1478 ;;Total ram usage:        0 bytes
  1479 ;; Hardware stack levels used:    1
  1480 ;; Hardware stack levels required when called:    3
  1481 ;; This function calls:
  1482 ;;		_pwm_init
  1483 ;;		_timer1_init
  1484 ;; This function is called by:
  1485 ;;		_main
  1486 ;; This function uses a non-reentrant model
  1487 ;;
  1488                           
  1489                           	psect	text5
  1490  003CC0                     __ptext5:
  1491                           	opt stack 0
  1492  003CC0                     _pwm_audio_init:
  1493                           	opt stack 26
  1494                           
  1495                           ;pwm_audio.c: 105: pwm_init();
  1496                           
  1497                           ;incstack = 0
  1498  003CC0  EC6D  F01E         	call	_pwm_init	;wreg free
  1499                           
  1500                           ;pwm_audio.c: 106: timer1_init();
  1501  003CC4  EC86  F01E         	call	_timer1_init	;wreg free
  1502                           
  1503                           ;pwm_audio.c: 108: pWAVIN = pWAVOUT = 0;
  1504  003CC8  0E00               	movlw	0
  1505  003CCA  6E4D               	movwf	_pWAVOUT+1,c	;volatile
  1506  003CCC  0E00               	movlw	0
  1507  003CCE  6E4C               	movwf	_pWAVOUT,c	;volatile
  1508  003CD0  C04C  F04A         	movff	_pWAVOUT,_pWAVIN	;volatile
  1509  003CD4  C04D  F04B         	movff	_pWAVOUT+1,_pWAVIN+1	;volatile
  1510  003CD8  0012               	return	
  1511  003CDA                     __end_of_pwm_audio_init:
  1512                           	opt stack 0
  1513                           tblptru	equ	0xFF8
  1514                           tblptrh	equ	0xFF7
  1515                           tblptrl	equ	0xFF6
  1516                           tablat	equ	0xFF5
  1517                           postinc0	equ	0xFEE
  1518                           wreg	equ	0xFE8
  1519                           postdec1	equ	0xFE5
  1520                           fsr1h	equ	0xFE2
  1521                           fsr1l	equ	0xFE1
  1522                           indf2	equ	0xFDF
  1523                           fsr2h	equ	0xFDA
  1524                           fsr2l	equ	0xFD9
  1525                           status	equ	0xFD8
  1526                           
  1527 ;; *************** function _timer1_init *****************
  1528 ;; Defined at:
  1529 ;;		line 57 in file "../../../PIC18F/pwm_audio.c"
  1530 ;; Parameters:    Size  Location     Type
  1531 ;;		None
  1532 ;; Auto vars:     Size  Location     Type
  1533 ;;		None
  1534 ;; Return value:  Size  Location     Type
  1535 ;;		None               void
  1536 ;; Registers used:
  1537 ;;		wreg, status,2
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1543 ;;      Params:         0       0       0       0       0       0       0       0       0
  1544 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1545 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1546 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1547 ;;Total ram usage:        0 bytes
  1548 ;; Hardware stack levels used:    1
  1549 ;; Hardware stack levels required when called:    2
  1550 ;; This function calls:
  1551 ;;		Nothing
  1552 ;; This function is called by:
  1553 ;;		_pwm_audio_init
  1554 ;; This function uses a non-reentrant model
  1555 ;;
  1556                           
  1557                           	psect	text6
  1558  003D0C                     __ptext6:
  1559                           	opt stack 0
  1560  003D0C                     _timer1_init:
  1561                           	opt stack 26
  1562                           
  1563                           ;pwm_audio.c: 59: T1CONbits.RD16 = 1;
  1564                           
  1565                           ;incstack = 0
  1566  003D0C  8ECD               	bsf	4045,7,c	;volatile
  1567                           
  1568                           ;pwm_audio.c: 61: T1CONbits.TMR1CS = 0;
  1569  003D0E  92CD               	bcf	4045,1,c	;volatile
  1570                           
  1571                           ;pwm_audio.c: 63: TMR1H = 0;
  1572  003D10  0E00               	movlw	0
  1573  003D12  6ECF               	movwf	4047,c	;volatile
  1574                           
  1575                           ;pwm_audio.c: 64: TMR1L = 0;
  1576  003D14  0E00               	movlw	0
  1577  003D16  6ECE               	movwf	4046,c	;volatile
  1578                           
  1579                           ;pwm_audio.c: 66: INTCONbits.GIE = 1;
  1580  003D18  8EF2               	bsf	intcon,7,c	;volatile
  1581                           
  1582                           ;pwm_audio.c: 67: INTCONbits.PEIE = 1;
  1583  003D1A  8CF2               	bsf	intcon,6,c	;volatile
  1584                           
  1585                           ;pwm_audio.c: 69: PIR1bits.TMR1IF = 0;
  1586  003D1C  909E               	bcf	3998,0,c	;volatile
  1587                           
  1588                           ;pwm_audio.c: 72: T1CONbits.TMR1ON = 1;
  1589  003D1E  80CD               	bsf	4045,0,c	;volatile
  1590  003D20  0012               	return	
  1591  003D22                     __end_of_timer1_init:
  1592                           	opt stack 0
  1593                           tblptru	equ	0xFF8
  1594                           tblptrh	equ	0xFF7
  1595                           tblptrl	equ	0xFF6
  1596                           tablat	equ	0xFF5
  1597                           intcon	equ	0xFF2
  1598                           postinc0	equ	0xFEE
  1599                           wreg	equ	0xFE8
  1600                           postdec1	equ	0xFE5
  1601                           fsr1h	equ	0xFE2
  1602                           fsr1l	equ	0xFE1
  1603                           indf2	equ	0xFDF
  1604                           fsr2h	equ	0xFDA
  1605                           fsr2l	equ	0xFD9
  1606                           status	equ	0xFD8
  1607                           
  1608 ;; *************** function _pwm_init *****************
  1609 ;; Defined at:
  1610 ;;		line 27 in file "../../../PIC18F/pwm_audio.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;		None
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;		None
  1615 ;; Return value:  Size  Location     Type
  1616 ;;		None               void
  1617 ;; Registers used:
  1618 ;;		wreg, status,2
  1619 ;; Tracked objects:
  1620 ;;		On entry : 0/0
  1621 ;;		On exit  : 0/0
  1622 ;;		Unchanged: 0/0
  1623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1624 ;;      Params:         0       0       0       0       0       0       0       0       0
  1625 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1626 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1627 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1628 ;;Total ram usage:        0 bytes
  1629 ;; Hardware stack levels used:    1
  1630 ;; Hardware stack levels required when called:    2
  1631 ;; This function calls:
  1632 ;;		Nothing
  1633 ;; This function is called by:
  1634 ;;		_pwm_audio_init
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           
  1638                           	psect	text7
  1639  003CDA                     __ptext7:
  1640                           	opt stack 0
  1641  003CDA                     _pwm_init:
  1642                           	opt stack 26
  1643                           
  1644                           ;pwm_audio.c: 29: PR2 = 0b00111111 ;
  1645                           
  1646                           ;incstack = 0
  1647  003CDA  0E3F               	movlw	63
  1648  003CDC  6ECB               	movwf	4043,c	;volatile
  1649                           
  1650                           ;pwm_audio.c: 30: T2CON = 0b00000100 ;
  1651  003CDE  0E04               	movlw	4
  1652  003CE0  6ECA               	movwf	4042,c	;volatile
  1653                           
  1654                           ;pwm_audio.c: 33: CCPR1L = 0b00011111 ;
  1655  003CE2  0E1F               	movlw	31
  1656  003CE4  6EBE               	movwf	4030,c	;volatile
  1657                           
  1658                           ;pwm_audio.c: 34: CCP1CON = 0b00111100 ;
  1659  003CE6  0E3C               	movlw	60
  1660  003CE8  6EBD               	movwf	4029,c	;volatile
  1661                           
  1662                           ;pwm_audio.c: 37: CCPR2L = 0b00011111 ;
  1663  003CEA  0E1F               	movlw	31
  1664  003CEC  6EBB               	movwf	4027,c	;volatile
  1665                           
  1666                           ;pwm_audio.c: 38: CCP2CON = 0b00111100 ;
  1667  003CEE  0E3C               	movlw	60
  1668  003CF0  6EBA               	movwf	4026,c	;volatile
  1669  003CF2  0012               	return	
  1670  003CF4                     __end_of_pwm_init:
  1671                           	opt stack 0
  1672                           tblptru	equ	0xFF8
  1673                           tblptrh	equ	0xFF7
  1674                           tblptrl	equ	0xFF6
  1675                           tablat	equ	0xFF5
  1676                           intcon	equ	0xFF2
  1677                           postinc0	equ	0xFEE
  1678                           wreg	equ	0xFE8
  1679                           postdec1	equ	0xFE5
  1680                           fsr1h	equ	0xFE2
  1681                           fsr1l	equ	0xFE1
  1682                           indf2	equ	0xFDF
  1683                           fsr2h	equ	0xFDA
  1684                           fsr2l	equ	0xFD9
  1685                           status	equ	0xFD8
  1686                           
  1687 ;; *************** function _play_wave_file *****************
  1688 ;; Defined at:
  1689 ;;		line 85 in file "../../../PIC18F/wave_file.c"
  1690 ;; Parameters:    Size  Location     Type
  1691 ;;  fn              2  118[BANK0 ] PTR const unsigned char 
  1692 ;;		 -> Fno.fname(13), Fno(22), 
  1693 ;; Auto vars:     Size  Location     Type
  1694 ;;  i               4  131[BANK0 ] unsigned long 
  1695 ;;  sz              4  125[BANK0 ] unsigned long 
  1696 ;;  amplitude       2  129[BANK0 ] unsigned short 
  1697 ;;  res             1  124[BANK0 ] enum E4814
  1698 ;; Return value:  Size  Location     Type
  1699 ;;                  2  118[BANK0 ] unsigned int 
  1700 ;; Registers used:
  1701 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1702 ;; Tracked objects:
  1703 ;;		On entry : 0/0
  1704 ;;		On exit  : 0/0
  1705 ;;		Unchanged: 0/0
  1706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1707 ;;      Params:         0       2       0       0       0       0       0       0       0
  1708 ;;      Locals:         0      11       0       0       0       0       0       0       0
  1709 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1710 ;;      Totals:         0      17       0       0       0       0       0       0       0
  1711 ;;Total ram usage:       17 bytes
  1712 ;; Hardware stack levels used:    1
  1713 ;; Hardware stack levels required when called:   11
  1714 ;; This function calls:
  1715 ;;		_load_header
  1716 ;;		_pf_open
  1717 ;;		_pf_read
  1718 ;;		_wav_putc
  1719 ;; This function is called by:
  1720 ;;		_main
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724                           	psect	text8
  1725  001B4A                     __ptext8:
  1726                           	opt stack 0
  1727  001B4A                     _play_wave_file:
  1728                           	opt stack 18
  1729                           
  1730                           ;wave_file.c: 87: DWORD sz, i;
  1731                           ;wave_file.c: 88: WORD amplitude;
  1732                           ;wave_file.c: 89: FRESULT res;
  1733                           ;wave_file.c: 91: if ((res = pf_open(fn)) == FR_OK) {
  1734                           
  1735                           ;incstack = 0
  1736  001B4A  0100               	movlb	0	; () banked
  1737  001B4C  C0D7  F08E         	movff	play_wave_file@fn+1,pf_open@path+1
  1738  001B50  0100               	movlb	0	; () banked
  1739  001B52  C0D6  F08D         	movff	play_wave_file@fn,pf_open@path
  1740  001B56  ECCC  F015         	call	_pf_open	;wreg free
  1741  001B5A  0100               	movlb	0	; () banked
  1742  001B5C  6FDC               	movwf	play_wave_file@res& (0+255),b
  1743  001B5E  0100               	movlb	0	; () banked
  1744  001B60  67DC               	tstfsz	play_wave_file@res& (0+255),b
  1745  001B62  D1CE               	goto	l478
  1746                           
  1747                           ; BSR set to: 0
  1748                           ;wave_file.c: 93: sz = load_header();
  1749  001B64  EC81  F00F         	call	_load_header	;wreg free
  1750  001B68  C08C  F0DD         	movff	?_load_header,play_wave_file@sz
  1751  001B6C  C08D  F0DE         	movff	?_load_header+1,play_wave_file@sz+1
  1752  001B70  C08E  F0DF         	movff	?_load_header+2,play_wave_file@sz+2
  1753  001B74  C08F  F0E0         	movff	?_load_header+3,play_wave_file@sz+3
  1754                           
  1755                           ;wave_file.c: 94: if (sz < 256) return (UINT)sz;
  1756  001B78  0E00               	movlw	0
  1757  001B7A  0100               	movlb	0	; () banked
  1758  001B7C  6FD8               	movwf	??_play_wave_file& (0+255),b
  1759  001B7E  0E01               	movlw	1
  1760  001B80  6FD9               	movwf	(??_play_wave_file+1)& (0+255),b
  1761  001B82  0E00               	movlw	0
  1762  001B84  6FDA               	movwf	(??_play_wave_file+2)& (0+255),b
  1763  001B86  0E00               	movlw	0
  1764  001B88  6FDB               	movwf	(??_play_wave_file+3)& (0+255),b
  1765  001B8A  0100               	movlb	0	; () banked
  1766  001B8C  51D8               	movf	??_play_wave_file& (0+255),w,b
  1767  001B8E  0100               	movlb	0	; () banked
  1768  001B90  5DDD               	subwf	play_wave_file@sz& (0+255),w,b
  1769  001B92  0100               	movlb	0	; () banked
  1770  001B94  51D9               	movf	(??_play_wave_file+1)& (0+255),w,b
  1771  001B96  0100               	movlb	0	; () banked
  1772  001B98  59DE               	subwfb	(play_wave_file@sz+1)& (0+255),w,b
  1773  001B9A  0100               	movlb	0	; () banked
  1774  001B9C  51DA               	movf	(??_play_wave_file+2)& (0+255),w,b
  1775  001B9E  0100               	movlb	0	; () banked
  1776  001BA0  59DF               	subwfb	(play_wave_file@sz+2)& (0+255),w,b
  1777  001BA2  0100               	movlb	0	; () banked
  1778  001BA4  51DB               	movf	(??_play_wave_file+3)& (0+255),w,b
  1779  001BA6  0100               	movlb	0	; () banked
  1780  001BA8  59E0               	subwfb	(play_wave_file@sz+3)& (0+255),w,b
  1781  001BAA  A0D8               	btfss	status,0,c
  1782  001BAC  D1A9               	goto	l478
  1783                           
  1784                           ; BSR set to: 0
  1785                           ;wave_file.c: 95: TRISC &= 0b11111001;
  1786                           
  1787                           ; BSR set to: 0
  1788                           
  1789                           ; BSR set to: 0
  1790                           ;	Return value of _play_wave_file is never used
  1791  001BAE  0EF9               	movlw	249
  1792  001BB0  1694               	andwf	3988,f,c	;volatile
  1793                           
  1794                           ;wave_file.c: 96: if( (NumChannels==2) && (BitsPerSample==16) ){
  1795  001BB2  0100               	movlb	0	; () banked
  1796  001BB4  51E9               	movf	_NumChannels& (0+255),w,b
  1797  001BB6  0A02               	xorlw	2
  1798  001BB8  11EA               	iorwf	(_NumChannels+1)& (0+255),w,b
  1799  001BBA  A4D8               	btfss	status,2,c
  1800  001BBC  D076               	goto	l5824
  1801                           
  1802                           ; BSR set to: 0
  1803  001BBE  0100               	movlb	0	; () banked
  1804  001BC0  51E7               	movf	_BitsPerSample& (0+255),w,b
  1805  001BC2  0A10               	xorlw	16
  1806  001BC4  11E8               	iorwf	(_BitsPerSample+1)& (0+255),w,b
  1807  001BC6  A4D8               	btfss	status,2,c
  1808  001BC8  D070               	goto	l5824
  1809  001BCA                     l5802:
  1810                           
  1811                           ; BSR set to: 0
  1812                           ;wave_file.c: 98: pf_read(Buff, 256, &rb);
  1813  001BCA  0102               	movlb	2	; () banked
  1814  001BCC  0E02               	movlw	high _Buff
  1815  001BCE  6E3C               	movwf	pf_read@buff+1,c
  1816  001BD0  0102               	movlb	2	; () banked
  1817  001BD2  0E00               	movlw	low _Buff
  1818  001BD4  6E3B               	movwf	pf_read@buff,c
  1819  001BD6  0E01               	movlw	1
  1820  001BD8  6E3E               	movwf	pf_read@btr+1,c
  1821  001BDA  0E00               	movlw	0
  1822  001BDC  6E3D               	movwf	pf_read@btr,c
  1823  001BDE  0100               	movlb	0	; () banked
  1824  001BE0  0E00               	movlw	high _rb
  1825  001BE2  6E40               	movwf	pf_read@br+1,c
  1826  001BE4  0100               	movlb	0	; () banked
  1827  001BE6  0EFB               	movlw	low _rb
  1828  001BE8  6E3F               	movwf	pf_read@br,c
  1829  001BEA  ECD1  F006         	call	_pf_read	;wreg free
  1830                           
  1831                           ;wave_file.c: 100: for(i=0; i<(256>>2); i++){
  1832  001BEE  0E00               	movlw	0
  1833  001BF0  0100               	movlb	0	; () banked
  1834  001BF2  6FE3               	movwf	play_wave_file@i& (0+255),b
  1835  001BF4  0E00               	movlw	0
  1836  001BF6  0100               	movlb	0	; () banked
  1837  001BF8  6FE4               	movwf	(play_wave_file@i+1)& (0+255),b
  1838  001BFA  0E00               	movlw	0
  1839  001BFC  0100               	movlb	0	; () banked
  1840  001BFE  6FE5               	movwf	(play_wave_file@i+2)& (0+255),b
  1841  001C00  0E00               	movlw	0
  1842  001C02  0100               	movlb	0	; () banked
  1843  001C04  6FE6               	movwf	(play_wave_file@i+3)& (0+255),b
  1844  001C06                     
  1845                           ; BSR set to: 0
  1846  001C06  0E40               	movlw	64
  1847  001C08  0100               	movlb	0	; () banked
  1848  001C0A  5DE3               	subwf	play_wave_file@i& (0+255),w,b
  1849  001C0C  0E00               	movlw	0
  1850  001C0E  0100               	movlb	0	; () banked
  1851  001C10  59E4               	subwfb	(play_wave_file@i+1)& (0+255),w,b
  1852  001C12  0E00               	movlw	0
  1853  001C14  0100               	movlb	0	; () banked
  1854  001C16  59E5               	subwfb	(play_wave_file@i+2)& (0+255),w,b
  1855  001C18  0E00               	movlw	0
  1856  001C1A  0100               	movlb	0	; () banked
  1857  001C1C  59E6               	subwfb	(play_wave_file@i+3)& (0+255),w,b
  1858  001C1E  B0D8               	btfsc	status,0,c
  1859  001C20  D03E               	goto	l5822
  1860                           
  1861                           ; BSR set to: 0
  1862                           ;wave_file.c: 101: amplitude = Buff[(i<<2)+1];
  1863                           
  1864                           ; BSR set to: 0
  1865                           
  1866                           ; BSR set to: 0
  1867  001C22  0100               	movlb	0	; () banked
  1868  001C24  C0E3  F0D8         	movff	play_wave_file@i,??_play_wave_file
  1869  001C28  0100               	movlb	0	; () banked
  1870  001C2A  C0E4  F0D9         	movff	play_wave_file@i+1,??_play_wave_file+1
  1871  001C2E  0100               	movlb	0	; () banked
  1872  001C30  90D8               	bcf	status,0,c
  1873  001C32  37D8               	rlcf	??_play_wave_file& (0+255),f,b
  1874  001C34  37D9               	rlcf	(??_play_wave_file+1)& (0+255),f,b
  1875  001C36  0100               	movlb	0	; () banked
  1876  001C38  90D8               	bcf	status,0,c
  1877  001C3A  37D8               	rlcf	??_play_wave_file& (0+255),f,b
  1878  001C3C  37D9               	rlcf	(??_play_wave_file+1)& (0+255),f,b
  1879  001C3E  0E01               	movlw	1
  1880  001C40  0100               	movlb	0	; () banked
  1881  001C42  27D8               	addwf	??_play_wave_file& (0+255),f,b
  1882  001C44  0E00               	movlw	0
  1883  001C46  23D9               	addwfc	(??_play_wave_file+1)& (0+255),f,b
  1884  001C48  0102               	movlb	2	; () banked
  1885  001C4A  0E00               	movlw	low _Buff
  1886  001C4C  0100               	movlb	0	; () banked
  1887  001C4E  25D8               	addwf	??_play_wave_file& (0+255),w,b
  1888  001C50  6ED9               	movwf	fsr2l,c
  1889  001C52  0102               	movlb	2	; () banked
  1890  001C54  0E02               	movlw	high _Buff
  1891  001C56  0100               	movlb	0	; () banked
  1892  001C58  21D9               	addwfc	(??_play_wave_file+1)& (0+255),w,b
  1893  001C5A  6EDA               	movwf	fsr2h,c
  1894  001C5C  50DF               	movf	indf2,w,c
  1895  001C5E  0100               	movlb	0	; () banked
  1896  001C60  6FDA               	movwf	(??_play_wave_file+2)& (0+255),b
  1897  001C62  0100               	movlb	0	; () banked
  1898  001C64  51DA               	movf	(??_play_wave_file+2)& (0+255),w,b
  1899  001C66  0100               	movlb	0	; () banked
  1900  001C68  6FE1               	movwf	play_wave_file@amplitude& (0+255),b
  1901  001C6A  0100               	movlb	0	; () banked
  1902  001C6C  6BE2               	clrf	(play_wave_file@amplitude+1)& (0+255),b
  1903                           
  1904                           ; BSR set to: 0
  1905                           ;wave_file.c: 103: if(amplitude&0x80) amplitude = 0;
  1906  001C6E  0100               	movlb	0	; () banked
  1907  001C70  AFE1               	btfss	play_wave_file@amplitude& (0+255),7,b
  1908  001C72  D006               	goto	l5816
  1909                           
  1910                           ; BSR set to: 0
  1911  001C74  0E00               	movlw	0
  1912  001C76  0100               	movlb	0	; () banked
  1913  001C78  6FE2               	movwf	(play_wave_file@amplitude+1)& (0+255),b
  1914  001C7A  0E00               	movlw	0
  1915  001C7C  0100               	movlb	0	; () banked
  1916  001C7E  6FE1               	movwf	play_wave_file@amplitude& (0+255),b
  1917  001C80                     l5816:
  1918                           
  1919                           ; BSR set to: 0
  1920                           ;wave_file.c: 105: wav_putc( amplitude );
  1921  001C80  0100               	movlb	0	; () banked
  1922  001C82  51E1               	movf	play_wave_file@amplitude& (0+255),w,b
  1923  001C84  ECA9  F01D         	call	_wav_putc
  1924  001C88  0E01               	movlw	1
  1925  001C8A  0100               	movlb	0	; () banked
  1926  001C8C  27E3               	addwf	play_wave_file@i& (0+255),f,b
  1927  001C8E  0E00               	movlw	0
  1928  001C90  0100               	movlb	0	; () banked
  1929  001C92  23E4               	addwfc	(play_wave_file@i+1)& (0+255),f,b
  1930  001C94  0100               	movlb	0	; () banked
  1931  001C96  23E5               	addwfc	(play_wave_file@i+2)& (0+255),f,b
  1932  001C98  0100               	movlb	0	; () banked
  1933  001C9A  23E6               	addwfc	(play_wave_file@i+3)& (0+255),f,b
  1934  001C9C  D7B4               	goto	L1
  1935  001C9E                     l5822:
  1936                           
  1937                           ; BSR set to: 0
  1938                           ;wave_file.c: 106: }
  1939                           ;wave_file.c: 107: }while(rb==256);
  1940  001C9E  0100               	movlb	0	; () banked
  1941  001CA0  05FC               	decf	(_rb+1)& (0+255),w,b
  1942  001CA2  11FB               	iorwf	_rb& (0+255),w,b
  1943  001CA4  A4D8               	btfss	status,2,c
  1944  001CA6  D12A               	goto	l5890
  1945  001CA8  D790               	goto	l5802
  1946  001CAA                     l5824:
  1947                           
  1948                           ; BSR set to: 0
  1949                           ;wave_file.c: 109: else if( (NumChannels==1) && (BitsPerSample==16) ){
  1950  001CAA  0100               	movlb	0	; () banked
  1951  001CAC  05E9               	decf	_NumChannels& (0+255),w,b
  1952  001CAE  11EA               	iorwf	(_NumChannels+1)& (0+255),w,b
  1953  001CB0  A4D8               	btfss	status,2,c
  1954  001CB2  D072               	goto	l5850
  1955                           
  1956                           ; BSR set to: 0
  1957  001CB4  0100               	movlb	0	; () banked
  1958  001CB6  51E7               	movf	_BitsPerSample& (0+255),w,b
  1959  001CB8  0A10               	xorlw	16
  1960  001CBA  11E8               	iorwf	(_BitsPerSample+1)& (0+255),w,b
  1961  001CBC  A4D8               	btfss	status,2,c
  1962  001CBE  D06C               	goto	l5850
  1963  001CC0                     l5828:
  1964                           
  1965                           ; BSR set to: 0
  1966                           ;wave_file.c: 111: pf_read(Buff, 256, &rb);
  1967  001CC0  0102               	movlb	2	; () banked
  1968  001CC2  0E02               	movlw	high _Buff
  1969  001CC4  6E3C               	movwf	pf_read@buff+1,c
  1970  001CC6  0102               	movlb	2	; () banked
  1971  001CC8  0E00               	movlw	low _Buff
  1972  001CCA  6E3B               	movwf	pf_read@buff,c
  1973  001CCC  0E01               	movlw	1
  1974  001CCE  6E3E               	movwf	pf_read@btr+1,c
  1975  001CD0  0E00               	movlw	0
  1976  001CD2  6E3D               	movwf	pf_read@btr,c
  1977  001CD4  0100               	movlb	0	; () banked
  1978  001CD6  0E00               	movlw	high _rb
  1979  001CD8  6E40               	movwf	pf_read@br+1,c
  1980  001CDA  0100               	movlb	0	; () banked
  1981  001CDC  0EFB               	movlw	low _rb
  1982  001CDE  6E3F               	movwf	pf_read@br,c
  1983  001CE0  ECD1  F006         	call	_pf_read	;wreg free
  1984                           
  1985                           ;wave_file.c: 113: for(i=0; i<(256>>1); i++){
  1986  001CE4  0E00               	movlw	0
  1987  001CE6  0100               	movlb	0	; () banked
  1988  001CE8  6FE3               	movwf	play_wave_file@i& (0+255),b
  1989  001CEA  0E00               	movlw	0
  1990  001CEC  0100               	movlb	0	; () banked
  1991  001CEE  6FE4               	movwf	(play_wave_file@i+1)& (0+255),b
  1992  001CF0  0E00               	movlw	0
  1993  001CF2  0100               	movlb	0	; () banked
  1994  001CF4  6FE5               	movwf	(play_wave_file@i+2)& (0+255),b
  1995  001CF6  0E00               	movlw	0
  1996  001CF8  0100               	movlb	0	; () banked
  1997  001CFA  6FE6               	movwf	(play_wave_file@i+3)& (0+255),b
  1998  001CFC                     
  1999                           ; BSR set to: 0
  2000  001CFC  0E80               	movlw	128
  2001  001CFE  0100               	movlb	0	; () banked
  2002  001D00  5DE3               	subwf	play_wave_file@i& (0+255),w,b
  2003  001D02  0E00               	movlw	0
  2004  001D04  0100               	movlb	0	; () banked
  2005  001D06  59E4               	subwfb	(play_wave_file@i+1)& (0+255),w,b
  2006  001D08  0E00               	movlw	0
  2007  001D0A  0100               	movlb	0	; () banked
  2008  001D0C  59E5               	subwfb	(play_wave_file@i+2)& (0+255),w,b
  2009  001D0E  0E00               	movlw	0
  2010  001D10  0100               	movlb	0	; () banked
  2011  001D12  59E6               	subwfb	(play_wave_file@i+3)& (0+255),w,b
  2012  001D14  B0D8               	btfsc	status,0,c
  2013  001D16  D03A               	goto	l5848
  2014                           
  2015                           ; BSR set to: 0
  2016                           ;wave_file.c: 114: amplitude = Buff[(i<<1)+1];
  2017                           
  2018                           ; BSR set to: 0
  2019                           
  2020                           ; BSR set to: 0
  2021  001D18  0100               	movlb	0	; () banked
  2022  001D1A  C0E3  F0D8         	movff	play_wave_file@i,??_play_wave_file
  2023  001D1E  0100               	movlb	0	; () banked
  2024  001D20  C0E4  F0D9         	movff	play_wave_file@i+1,??_play_wave_file+1
  2025  001D24  90D8               	bcf	status,0,c
  2026  001D26  0100               	movlb	0	; () banked
  2027  001D28  37D8               	rlcf	??_play_wave_file& (0+255),f,b
  2028  001D2A  37D9               	rlcf	(??_play_wave_file+1)& (0+255),f,b
  2029  001D2C  0E01               	movlw	1
  2030  001D2E  0100               	movlb	0	; () banked
  2031  001D30  27D8               	addwf	??_play_wave_file& (0+255),f,b
  2032  001D32  0E00               	movlw	0
  2033  001D34  23D9               	addwfc	(??_play_wave_file+1)& (0+255),f,b
  2034  001D36  0102               	movlb	2	; () banked
  2035  001D38  0E00               	movlw	low _Buff
  2036  001D3A  0100               	movlb	0	; () banked
  2037  001D3C  25D8               	addwf	??_play_wave_file& (0+255),w,b
  2038  001D3E  6ED9               	movwf	fsr2l,c
  2039  001D40  0102               	movlb	2	; () banked
  2040  001D42  0E02               	movlw	high _Buff
  2041  001D44  0100               	movlb	0	; () banked
  2042  001D46  21D9               	addwfc	(??_play_wave_file+1)& (0+255),w,b
  2043  001D48  6EDA               	movwf	fsr2h,c
  2044  001D4A  50DF               	movf	indf2,w,c
  2045  001D4C  0100               	movlb	0	; () banked
  2046  001D4E  6FDA               	movwf	(??_play_wave_file+2)& (0+255),b
  2047  001D50  0100               	movlb	0	; () banked
  2048  001D52  51DA               	movf	(??_play_wave_file+2)& (0+255),w,b
  2049  001D54  0100               	movlb	0	; () banked
  2050  001D56  6FE1               	movwf	play_wave_file@amplitude& (0+255),b
  2051  001D58  0100               	movlb	0	; () banked
  2052  001D5A  6BE2               	clrf	(play_wave_file@amplitude+1)& (0+255),b
  2053                           
  2054                           ; BSR set to: 0
  2055                           ;wave_file.c: 116: if(amplitude&0x80) amplitude = 0;
  2056  001D5C  0100               	movlb	0	; () banked
  2057  001D5E  AFE1               	btfss	play_wave_file@amplitude& (0+255),7,b
  2058  001D60  D006               	goto	l5842
  2059                           
  2060                           ; BSR set to: 0
  2061  001D62  0E00               	movlw	0
  2062  001D64  0100               	movlb	0	; () banked
  2063  001D66  6FE2               	movwf	(play_wave_file@amplitude+1)& (0+255),b
  2064  001D68  0E00               	movlw	0
  2065  001D6A  0100               	movlb	0	; () banked
  2066  001D6C  6FE1               	movwf	play_wave_file@amplitude& (0+255),b
  2067  001D6E                     l5842:
  2068                           
  2069                           ; BSR set to: 0
  2070                           ;wave_file.c: 118: wav_putc( amplitude );
  2071  001D6E  0100               	movlb	0	; () banked
  2072  001D70  51E1               	movf	play_wave_file@amplitude& (0+255),w,b
  2073  001D72  ECA9  F01D         	call	_wav_putc
  2074  001D76  0E01               	movlw	1
  2075  001D78  0100               	movlb	0	; () banked
  2076  001D7A  27E3               	addwf	play_wave_file@i& (0+255),f,b
  2077  001D7C  0E00               	movlw	0
  2078  001D7E  0100               	movlb	0	; () banked
  2079  001D80  23E4               	addwfc	(play_wave_file@i+1)& (0+255),f,b
  2080  001D82  0100               	movlb	0	; () banked
  2081  001D84  23E5               	addwfc	(play_wave_file@i+2)& (0+255),f,b
  2082  001D86  0100               	movlb	0	; () banked
  2083  001D88  23E6               	addwfc	(play_wave_file@i+3)& (0+255),f,b
  2084  001D8A  D7B8               	goto	L2
  2085  001D8C                     l5848:
  2086                           
  2087                           ; BSR set to: 0
  2088                           ;wave_file.c: 119: }
  2089                           ;wave_file.c: 120: }while(rb==256);
  2090  001D8C  0100               	movlb	0	; () banked
  2091  001D8E  05FC               	decf	(_rb+1)& (0+255),w,b
  2092  001D90  11FB               	iorwf	_rb& (0+255),w,b
  2093  001D92  A4D8               	btfss	status,2,c
  2094  001D94  D0B3               	goto	l5890
  2095  001D96  D794               	goto	l5828
  2096  001D98                     l5850:
  2097                           
  2098                           ; BSR set to: 0
  2099                           ;wave_file.c: 122: else if( (NumChannels==2) && (BitsPerSample==8) ){
  2100  001D98  0100               	movlb	0	; () banked
  2101  001D9A  51E9               	movf	_NumChannels& (0+255),w,b
  2102  001D9C  0A02               	xorlw	2
  2103  001D9E  11EA               	iorwf	(_NumChannels+1)& (0+255),w,b
  2104  001DA0  A4D8               	btfss	status,2,c
  2105  001DA2  D058               	goto	l5870
  2106                           
  2107                           ; BSR set to: 0
  2108  001DA4  0100               	movlb	0	; () banked
  2109  001DA6  51E7               	movf	_BitsPerSample& (0+255),w,b
  2110  001DA8  0A08               	xorlw	8
  2111  001DAA  11E8               	iorwf	(_BitsPerSample+1)& (0+255),w,b
  2112  001DAC  A4D8               	btfss	status,2,c
  2113  001DAE  D052               	goto	l5870
  2114  001DB0                     l5854:
  2115                           
  2116                           ; BSR set to: 0
  2117                           ;wave_file.c: 124: pf_read(Buff, 256, &rb);
  2118  001DB0  0102               	movlb	2	; () banked
  2119  001DB2  0E02               	movlw	high _Buff
  2120  001DB4  6E3C               	movwf	pf_read@buff+1,c
  2121  001DB6  0102               	movlb	2	; () banked
  2122  001DB8  0E00               	movlw	low _Buff
  2123  001DBA  6E3B               	movwf	pf_read@buff,c
  2124  001DBC  0E01               	movlw	1
  2125  001DBE  6E3E               	movwf	pf_read@btr+1,c
  2126  001DC0  0E00               	movlw	0
  2127  001DC2  6E3D               	movwf	pf_read@btr,c
  2128  001DC4  0100               	movlb	0	; () banked
  2129  001DC6  0E00               	movlw	high _rb
  2130  001DC8  6E40               	movwf	pf_read@br+1,c
  2131  001DCA  0100               	movlb	0	; () banked
  2132  001DCC  0EFB               	movlw	low _rb
  2133  001DCE  6E3F               	movwf	pf_read@br,c
  2134  001DD0  ECD1  F006         	call	_pf_read	;wreg free
  2135                           
  2136                           ;wave_file.c: 125: for(i=0; i<(256>>1); i++) wav_putc(Buff[i<<1]);
  2137  001DD4  0E00               	movlw	0
  2138  001DD6  0100               	movlb	0	; () banked
  2139  001DD8  6FE3               	movwf	play_wave_file@i& (0+255),b
  2140  001DDA  0E00               	movlw	0
  2141  001DDC  0100               	movlb	0	; () banked
  2142  001DDE  6FE4               	movwf	(play_wave_file@i+1)& (0+255),b
  2143  001DE0  0E00               	movlw	0
  2144  001DE2  0100               	movlb	0	; () banked
  2145  001DE4  6FE5               	movwf	(play_wave_file@i+2)& (0+255),b
  2146  001DE6  0E00               	movlw	0
  2147  001DE8  0100               	movlb	0	; () banked
  2148  001DEA  6FE6               	movwf	(play_wave_file@i+3)& (0+255),b
  2149  001DEC                     
  2150                           ; BSR set to: 0
  2151  001DEC  0E80               	movlw	128
  2152  001DEE  0100               	movlb	0	; () banked
  2153  001DF0  5DE3               	subwf	play_wave_file@i& (0+255),w,b
  2154  001DF2  0E00               	movlw	0
  2155  001DF4  0100               	movlb	0	; () banked
  2156  001DF6  59E4               	subwfb	(play_wave_file@i+1)& (0+255),w,b
  2157  001DF8  0E00               	movlw	0
  2158  001DFA  0100               	movlb	0	; () banked
  2159  001DFC  59E5               	subwfb	(play_wave_file@i+2)& (0+255),w,b
  2160  001DFE  0E00               	movlw	0
  2161  001E00  0100               	movlb	0	; () banked
  2162  001E02  59E6               	subwfb	(play_wave_file@i+3)& (0+255),w,b
  2163  001E04  B0D8               	btfsc	status,0,c
  2164  001E06  D020               	goto	l5868
  2165                           
  2166                           ; BSR set to: 0
  2167                           
  2168                           ; BSR set to: 0
  2169                           
  2170                           ; BSR set to: 0
  2171  001E08  0E00               	movlw	low _Buff
  2172  001E0A  0100               	movlb	0	; () banked
  2173  001E0C  6FD8               	movwf	??_play_wave_file& (0+255),b
  2174  001E0E  0E02               	movlw	high _Buff
  2175  001E10  6FD9               	movwf	(??_play_wave_file+1)& (0+255),b
  2176  001E12  90D8               	bcf	status,0,c
  2177  001E14  0100               	movlb	0	; () banked
  2178  001E16  35E3               	rlcf	play_wave_file@i& (0+255),w,b
  2179  001E18  6ED9               	movwf	fsr2l,c
  2180  001E1A  0100               	movlb	0	; () banked
  2181  001E1C  35E4               	rlcf	(play_wave_file@i+1)& (0+255),w,b
  2182  001E1E  6EDA               	movwf	fsr2h,c
  2183  001E20  0100               	movlb	0	; () banked
  2184  001E22  51D8               	movf	??_play_wave_file& (0+255),w,b
  2185  001E24  26D9               	addwf	fsr2l,f,c
  2186  001E26  0100               	movlb	0	; () banked
  2187  001E28  51D9               	movf	(??_play_wave_file+1)& (0+255),w,b
  2188  001E2A  22DA               	addwfc	fsr2h,f,c
  2189  001E2C  50DF               	movf	indf2,w,c
  2190  001E2E  ECA9  F01D         	call	_wav_putc
  2191  001E32  0E01               	movlw	1
  2192  001E34  0100               	movlb	0	; () banked
  2193  001E36  27E3               	addwf	play_wave_file@i& (0+255),f,b
  2194  001E38  0E00               	movlw	0
  2195  001E3A  0100               	movlb	0	; () banked
  2196  001E3C  23E4               	addwfc	(play_wave_file@i+1)& (0+255),f,b
  2197  001E3E  0100               	movlb	0	; () banked
  2198  001E40  23E5               	addwfc	(play_wave_file@i+2)& (0+255),f,b
  2199  001E42  0100               	movlb	0	; () banked
  2200  001E44  23E6               	addwfc	(play_wave_file@i+3)& (0+255),f,b
  2201  001E46  D7D2               	goto	L3
  2202  001E48                     l5868:
  2203                           
  2204                           ; BSR set to: 0
  2205                           ;wave_file.c: 126: }while(rb==256);
  2206  001E48  0100               	movlb	0	; () banked
  2207  001E4A  05FC               	decf	(_rb+1)& (0+255),w,b
  2208  001E4C  11FB               	iorwf	_rb& (0+255),w,b
  2209  001E4E  A4D8               	btfss	status,2,c
  2210  001E50  D055               	goto	l5890
  2211  001E52  D7AE               	goto	l5854
  2212  001E54                     l5870:
  2213                           
  2214                           ; BSR set to: 0
  2215                           ;wave_file.c: 128: else if( (NumChannels==1) && (BitsPerSample==8) ){
  2216  001E54  0100               	movlb	0	; () banked
  2217  001E56  05E9               	decf	_NumChannels& (0+255),w,b
  2218  001E58  11EA               	iorwf	(_NumChannels+1)& (0+255),w,b
  2219  001E5A  A4D8               	btfss	status,2,c
  2220  001E5C  D04F               	goto	l5890
  2221                           
  2222                           ; BSR set to: 0
  2223  001E5E  0100               	movlb	0	; () banked
  2224  001E60  51E7               	movf	_BitsPerSample& (0+255),w,b
  2225  001E62  0A08               	xorlw	8
  2226  001E64  11E8               	iorwf	(_BitsPerSample+1)& (0+255),w,b
  2227  001E66  A4D8               	btfss	status,2,c
  2228  001E68  D049               	goto	l5890
  2229  001E6A                     l5874:
  2230                           
  2231                           ; BSR set to: 0
  2232                           ;wave_file.c: 130: pf_read(Buff, 256, &rb);
  2233  001E6A  0102               	movlb	2	; () banked
  2234  001E6C  0E02               	movlw	high _Buff
  2235  001E6E  6E3C               	movwf	pf_read@buff+1,c
  2236  001E70  0102               	movlb	2	; () banked
  2237  001E72  0E00               	movlw	low _Buff
  2238  001E74  6E3B               	movwf	pf_read@buff,c
  2239  001E76  0E01               	movlw	1
  2240  001E78  6E3E               	movwf	pf_read@btr+1,c
  2241  001E7A  0E00               	movlw	0
  2242  001E7C  6E3D               	movwf	pf_read@btr,c
  2243  001E7E  0100               	movlb	0	; () banked
  2244  001E80  0E00               	movlw	high _rb
  2245  001E82  6E40               	movwf	pf_read@br+1,c
  2246  001E84  0100               	movlb	0	; () banked
  2247  001E86  0EFB               	movlw	low _rb
  2248  001E88  6E3F               	movwf	pf_read@br,c
  2249  001E8A  ECD1  F006         	call	_pf_read	;wreg free
  2250                           
  2251                           ;wave_file.c: 131: for(i=0; i<256; i++) wav_putc(Buff[i]);
  2252  001E8E  0E00               	movlw	0
  2253  001E90  0100               	movlb	0	; () banked
  2254  001E92  6FE3               	movwf	play_wave_file@i& (0+255),b
  2255  001E94  0E00               	movlw	0
  2256  001E96  0100               	movlb	0	; () banked
  2257  001E98  6FE4               	movwf	(play_wave_file@i+1)& (0+255),b
  2258  001E9A  0E00               	movlw	0
  2259  001E9C  0100               	movlb	0	; () banked
  2260  001E9E  6FE5               	movwf	(play_wave_file@i+2)& (0+255),b
  2261  001EA0  0E00               	movlw	0
  2262  001EA2  0100               	movlb	0	; () banked
  2263  001EA4  6FE6               	movwf	(play_wave_file@i+3)& (0+255),b
  2264  001EA6                     
  2265                           ; BSR set to: 0
  2266  001EA6  0E00               	movlw	0
  2267  001EA8  0100               	movlb	0	; () banked
  2268  001EAA  5DE3               	subwf	play_wave_file@i& (0+255),w,b
  2269  001EAC  0E01               	movlw	1
  2270  001EAE  0100               	movlb	0	; () banked
  2271  001EB0  59E4               	subwfb	(play_wave_file@i+1)& (0+255),w,b
  2272  001EB2  0E00               	movlw	0
  2273  001EB4  0100               	movlb	0	; () banked
  2274  001EB6  59E5               	subwfb	(play_wave_file@i+2)& (0+255),w,b
  2275  001EB8  0E00               	movlw	0
  2276  001EBA  0100               	movlb	0	; () banked
  2277  001EBC  59E6               	subwfb	(play_wave_file@i+3)& (0+255),w,b
  2278  001EBE  B0D8               	btfsc	status,0,c
  2279  001EC0  D018               	goto	l5888
  2280                           
  2281                           ; BSR set to: 0
  2282                           
  2283                           ; BSR set to: 0
  2284                           
  2285                           ; BSR set to: 0
  2286  001EC2  0102               	movlb	2	; () banked
  2287  001EC4  0E00               	movlw	low _Buff
  2288  001EC6  0100               	movlb	0	; () banked
  2289  001EC8  25E3               	addwf	play_wave_file@i& (0+255),w,b
  2290  001ECA  6ED9               	movwf	fsr2l,c
  2291  001ECC  0102               	movlb	2	; () banked
  2292  001ECE  0E02               	movlw	high _Buff
  2293  001ED0  0100               	movlb	0	; () banked
  2294  001ED2  21E4               	addwfc	(play_wave_file@i+1)& (0+255),w,b
  2295  001ED4  6EDA               	movwf	fsr2h,c
  2296  001ED6  50DF               	movf	indf2,w,c
  2297  001ED8  ECA9  F01D         	call	_wav_putc
  2298  001EDC  0E01               	movlw	1
  2299  001EDE  0100               	movlb	0	; () banked
  2300  001EE0  27E3               	addwf	play_wave_file@i& (0+255),f,b
  2301  001EE2  0E00               	movlw	0
  2302  001EE4  0100               	movlb	0	; () banked
  2303  001EE6  23E4               	addwfc	(play_wave_file@i+1)& (0+255),f,b
  2304  001EE8  0100               	movlb	0	; () banked
  2305  001EEA  23E5               	addwfc	(play_wave_file@i+2)& (0+255),f,b
  2306  001EEC  0100               	movlb	0	; () banked
  2307  001EEE  23E6               	addwfc	(play_wave_file@i+3)& (0+255),f,b
  2308  001EF0  D7DA               	goto	L4
  2309  001EF2                     l5888:
  2310                           
  2311                           ; BSR set to: 0
  2312                           ;wave_file.c: 132: }while(rb==256);
  2313  001EF2  0100               	movlb	0	; () banked
  2314  001EF4  05FC               	decf	(_rb+1)& (0+255),w,b
  2315  001EF6  11FB               	iorwf	_rb& (0+255),w,b
  2316  001EF8  B4D8               	btfsc	status,2,c
  2317  001EFA  D7B7               	goto	l5874
  2318  001EFC                     l5890:
  2319                           
  2320                           ; BSR set to: 0
  2321                           ;wave_file.c: 133: }
  2322                           ;wave_file.c: 135: TRISC |= 0b00000110;
  2323  001EFC  0E06               	movlw	6
  2324  001EFE  1294               	iorwf	3988,f,c	;volatile
  2325  001F00                     l478:
  2326                           
  2327                           ; BSR set to: 0
  2328  001F00  0012               	return	
  2329  001F02                     __end_of_play_wave_file:
  2330                           	opt stack 0
  2331                           tblptru	equ	0xFF8
  2332                           tblptrh	equ	0xFF7
  2333                           tblptrl	equ	0xFF6
  2334                           tablat	equ	0xFF5
  2335                           intcon	equ	0xFF2
  2336                           postinc0	equ	0xFEE
  2337                           wreg	equ	0xFE8
  2338                           postdec1	equ	0xFE5
  2339                           fsr1h	equ	0xFE2
  2340                           fsr1l	equ	0xFE1
  2341                           indf2	equ	0xFDF
  2342                           fsr2h	equ	0xFDA
  2343                           fsr2l	equ	0xFD9
  2344                           status	equ	0xFD8
  2345                           
  2346 ;; *************** function _wav_putc *****************
  2347 ;; Defined at:
  2348 ;;		line 135 in file "../../../PIC18F/pwm_audio.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;  c               1    wreg     unsigned char 
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;  c               1   17[COMRAM] unsigned char 
  2353 ;; Return value:  Size  Location     Type
  2354 ;;		None               void
  2355 ;; Registers used:
  2356 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2362 ;;      Params:         0       0       0       0       0       0       0       0       0
  2363 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2364 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2365 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2366 ;;Total ram usage:        3 bytes
  2367 ;; Hardware stack levels used:    1
  2368 ;; Hardware stack levels required when called:    2
  2369 ;; This function calls:
  2370 ;;		Nothing
  2371 ;; This function is called by:
  2372 ;;		_play_wave_file
  2373 ;; This function uses a non-reentrant model
  2374 ;;
  2375                           
  2376                           	psect	text9
  2377  003B52                     __ptext9:
  2378                           	opt stack 0
  2379  003B52                     _wav_putc:
  2380                           	opt stack 26
  2381                           
  2382                           ; BSR set to: 0
  2383                           ;incstack = 0
  2384                           ;wav_putc@c stored from wreg
  2385  003B52  6E12               	movwf	wav_putc@c,c
  2386  003B54                     l3936:
  2387  003B54  0E01               	movlw	1
  2388  003B56  244A               	addwf	_pWAVIN,w,c	;volatile
  2389  003B58  6E10               	movwf	??_wav_putc& (0+255),c
  2390  003B5A  0E00               	movlw	0
  2391  003B5C  204B               	addwfc	_pWAVIN+1,w,c	;volatile
  2392  003B5E  6E11               	movwf	(??_wav_putc+1)& (0+255),c
  2393  003B60  0EFF               	movlw	255
  2394  003B62  1610               	andwf	??_wav_putc,f,c
  2395  003B64  0E00               	movlw	0
  2396  003B66  1611               	andwf	??_wav_putc+1,f,c
  2397  003B68  504D               	movf	_pWAVOUT+1,w,c	;volatile
  2398  003B6A  1811               	xorwf	??_wav_putc+1,w,c
  2399  003B6C  E102               	bnz	u4305
  2400  003B6E  504C               	movf	_pWAVOUT,w,c	;volatile
  2401  003B70  1810               	xorwf	??_wav_putc,w,c
  2402  003B72                     u4305:
  2403  003B72  B4D8               	btfsc	status,2,c
  2404  003B74  D7EF               	goto	l3936
  2405                           
  2406                           ;pwm_audio.c: 139: WAV_L_BUFF[pWAVIN] = c;
  2407  003B76  0104               	movlb	4	; () banked
  2408  003B78  0E00               	movlw	low _WAV_L_BUFF
  2409  003B7A  244A               	addwf	_pWAVIN,w,c	;volatile
  2410  003B7C  6ED9               	movwf	fsr2l,c
  2411  003B7E  0104               	movlb	4	; () banked
  2412  003B80  0E04               	movlw	high _WAV_L_BUFF
  2413  003B82  204B               	addwfc	_pWAVIN+1,w,c	;volatile
  2414  003B84  6EDA               	movwf	fsr2h,c
  2415  003B86  C012  FFDF         	movff	wav_putc@c,indf2
  2416                           
  2417                           ; BSR set to: 4
  2418                           ;pwm_audio.c: 140: pWAVIN = (pWAVIN + 1) & (256-1);
  2419  003B8A  0E01               	movlw	1
  2420  003B8C  244A               	addwf	_pWAVIN,w,c	;volatile
  2421  003B8E  6E10               	movwf	??_wav_putc& (0+255),c
  2422  003B90  0E00               	movlw	0
  2423  003B92  204B               	addwfc	_pWAVIN+1,w,c	;volatile
  2424  003B94  6E11               	movwf	(??_wav_putc+1)& (0+255),c
  2425  003B96  5010               	movf	??_wav_putc,w,c
  2426  003B98  6E4A               	movwf	_pWAVIN,c	;volatile
  2427  003B9A  6A4B               	clrf	_pWAVIN+1,c	;volatile
  2428                           
  2429                           ; BSR set to: 4
  2430                           ;pwm_audio.c: 142: PIE1bits.TMR1IE = 1;
  2431  003B9C  809D               	bsf	3997,0,c	;volatile
  2432                           
  2433                           ; BSR set to: 4
  2434  003B9E  0012               	return	
  2435  003BA0                     __end_of_wav_putc:
  2436                           	opt stack 0
  2437                           tblptru	equ	0xFF8
  2438                           tblptrh	equ	0xFF7
  2439                           tblptrl	equ	0xFF6
  2440                           tablat	equ	0xFF5
  2441                           intcon	equ	0xFF2
  2442                           postinc0	equ	0xFEE
  2443                           wreg	equ	0xFE8
  2444                           postdec1	equ	0xFE5
  2445                           fsr1h	equ	0xFE2
  2446                           fsr1l	equ	0xFE1
  2447                           indf2	equ	0xFDF
  2448                           fsr2h	equ	0xFDA
  2449                           fsr2l	equ	0xFD9
  2450                           status	equ	0xFD8
  2451                           
  2452 ;; *************** function _pf_open *****************
  2453 ;; Defined at:
  2454 ;;		line 535 in file "../../../PIC18F/pff.c"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;  path            2   45[BANK0 ] PTR const unsigned char 
  2457 ;;		 -> Fno.fname(13), Fno(22), 
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;  dir            32   67[BANK0 ] unsigned char [32]
  2460 ;;  dj             16  102[BANK0 ] struct _Dir_
  2461 ;;  sp             12   55[BANK0 ] unsigned char [12]
  2462 ;;  fs              2  100[BANK0 ] PTR struct _FATFS_
  2463 ;;		 -> Fs(44), NULL(0), 
  2464 ;;  res             1   99[BANK0 ] enum E48
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  1    wreg      enum E48
  2467 ;; Registers used:
  2468 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2474 ;;      Params:         0       2       0       0       0       0       0       0       0
  2475 ;;      Locals:         0      63       0       0       0       0       0       0       0
  2476 ;;      Temps:          0       8       0       0       0       0       0       0       0
  2477 ;;      Totals:         0      73       0       0       0       0       0       0       0
  2478 ;;Total ram usage:       73 bytes
  2479 ;; Hardware stack levels used:    1
  2480 ;; Hardware stack levels required when called:   10
  2481 ;; This function calls:
  2482 ;;		_follow_path
  2483 ;; This function is called by:
  2484 ;;		_play_wave_file
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           	psect	text10
  2489  002B98                     __ptext10:
  2490                           	opt stack 0
  2491  002B98                     _pf_open:
  2492                           	opt stack 18
  2493                           
  2494                           ;pff.c: 539: FRESULT res;
  2495                           ;pff.c: 540: Dir dj;
  2496                           ;pff.c: 541: BYTE sp[12], dir[32];
  2497                           ;pff.c: 542: FATFS *fs = FatFs;
  2498                           
  2499                           ; BSR set to: 4
  2500                           ;incstack = 0
  2501  002B98  0100               	movlb	0	; () banked
  2502  002B9A  C049  F0C5         	movff	_FatFs+1,pf_open@fs+1
  2503  002B9E  0100               	movlb	0	; () banked
  2504  002BA0  C048  F0C4         	movff	_FatFs,pf_open@fs
  2505                           
  2506                           ;pff.c: 545: if (!fs)
  2507  002BA4  0100               	movlb	0	; () banked
  2508  002BA6  51C5               	movf	(pf_open@fs+1)& (0+255),w,b
  2509  002BA8  11C4               	iorwf	pf_open@fs& (0+255),w,b
  2510  002BAA  A4D8               	btfss	status,2,c
  2511  002BAC  D002               	goto	l5460
  2512                           
  2513                           ; BSR set to: 0
  2514                           ;pff.c: 546: return FR_NOT_ENABLED;
  2515  002BAE  0E06               	movlw	6
  2516  002BB0  D0AE               	goto	l169
  2517  002BB2                     l5460:
  2518                           
  2519                           ; BSR set to: 0
  2520                           ;pff.c: 548: fs->flag = 0;
  2521  002BB2  0100               	movlb	0	; () banked
  2522  002BB4  EE20 F002          	lfsr	2,2
  2523  002BB8  0100               	movlb	0	; () banked
  2524  002BBA  51C4               	movf	pf_open@fs& (0+255),w,b
  2525  002BBC  26D9               	addwf	fsr2l,f,c
  2526  002BBE  0100               	movlb	0	; () banked
  2527  002BC0  51C5               	movf	(pf_open@fs+1)& (0+255),w,b
  2528  002BC2  22DA               	addwfc	fsr2h,f,c
  2529  002BC4  0E00               	movlw	0
  2530  002BC6  6EDF               	movwf	indf2,c
  2531                           
  2532                           ;pff.c: 549: fs->buf = dir;
  2533  002BC8  0100               	movlb	0	; () banked
  2534  002BCA  EE20 F006          	lfsr	2,6
  2535  002BCE  0100               	movlb	0	; () banked
  2536  002BD0  51C4               	movf	pf_open@fs& (0+255),w,b
  2537  002BD2  26D9               	addwf	fsr2l,f,c
  2538  002BD4  0100               	movlb	0	; () banked
  2539  002BD6  51C5               	movf	(pf_open@fs+1)& (0+255),w,b
  2540  002BD8  22DA               	addwfc	fsr2h,f,c
  2541  002BDA  0100               	movlb	0	; () banked
  2542  002BDC  0EA3               	movlw	low pf_open@dir
  2543  002BDE  6EDE               	movwf	postinc2,c
  2544  002BE0  0100               	movlb	0	; () banked
  2545  002BE2  0E00               	movlw	high pf_open@dir
  2546  002BE4  6EDD               	movwf	postdec2,c
  2547                           
  2548                           ; BSR set to: 0
  2549                           ;pff.c: 550: dj.fn = sp;
  2550  002BE6  0100               	movlb	0	; () banked
  2551  002BE8  0E00               	movlw	high pf_open@sp
  2552  002BEA  0100               	movlb	0	; () banked
  2553  002BEC  6FC9               	movwf	(pf_open@dj+3)& (0+255),b
  2554  002BEE  0100               	movlb	0	; () banked
  2555  002BF0  0E97               	movlw	low pf_open@sp
  2556  002BF2  0100               	movlb	0	; () banked
  2557  002BF4  6FC8               	movwf	(pf_open@dj+2)& (0+255),b
  2558                           
  2559                           ; BSR set to: 0
  2560                           ;pff.c: 551: res = follow_path(&dj, path);
  2561  002BF6  0100               	movlb	0	; () banked
  2562  002BF8  0E00               	movlw	high pf_open@dj
  2563  002BFA  0100               	movlb	0	; () banked
  2564  002BFC  6F7B               	movwf	(follow_path@dj+1)& (0+255),b
  2565  002BFE  0100               	movlb	0	; () banked
  2566  002C00  0EC6               	movlw	low pf_open@dj
  2567  002C02  0100               	movlb	0	; () banked
  2568  002C04  6F7A               	movwf	follow_path@dj& (0+255),b
  2569  002C06  0100               	movlb	0	; () banked
  2570  002C08  C08E  F07D         	movff	pf_open@path+1,follow_path@path+1
  2571  002C0C  0100               	movlb	0	; () banked
  2572  002C0E  C08D  F07C         	movff	pf_open@path,follow_path@path
  2573  002C12  ECE0  F010         	call	_follow_path	;wreg free
  2574  002C16  0100               	movlb	0	; () banked
  2575  002C18  6FC3               	movwf	pf_open@res& (0+255),b
  2576                           
  2577                           ; BSR set to: 0
  2578                           ;pff.c: 552: if (res != FR_OK) return res;
  2579  002C1A  0100               	movlb	0	; () banked
  2580  002C1C  51C3               	movf	pf_open@res& (0+255),w,b
  2581  002C1E  B4D8               	btfsc	status,2,c
  2582  002C20  D003               	goto	l5472
  2583                           
  2584                           ; BSR set to: 0
  2585  002C22  0100               	movlb	0	; () banked
  2586  002C24  51C3               	movf	pf_open@res& (0+255),w,b
  2587  002C26  D073               	goto	l169
  2588  002C28                     l5472:
  2589                           
  2590                           ; BSR set to: 0
  2591                           ;pff.c: 553: if (!dir[0] || (dir[11] & 0x10))
  2592  002C28  0100               	movlb	0	; () banked
  2593  002C2A  51A3               	movf	pf_open@dir& (0+255),w,b
  2594  002C2C  B4D8               	btfsc	status,2,c
  2595  002C2E  D003               	goto	l5476
  2596                           
  2597                           ; BSR set to: 0
  2598  002C30  0100               	movlb	0	; () banked
  2599  002C32  A9AE               	btfss	(pf_open@dir+11)& (0+255),4,b
  2600  002C34  D002               	goto	l5480
  2601  002C36                     l5476:
  2602                           
  2603                           ; BSR set to: 0
  2604                           ;pff.c: 554: return FR_NO_FILE;
  2605  002C36  0E03               	movlw	3
  2606  002C38  D06A               	goto	l169
  2607  002C3A                     l5480:
  2608                           
  2609                           ; BSR set to: 0
  2610                           ;pff.c: 556: fs->org_clust =
  2611                           ;pff.c: 558: ((DWORD)(WORD)(*(WORD*)(BYTE*)(dir+20)) << 16) |
  2612                           ;pff.c: 560: (WORD)(*(WORD*)(BYTE*)(dir+26));
  2613  002C3A  0100               	movlb	0	; () banked
  2614  002C3C  51B7               	movf	(pf_open@dir+20)& (0+255),w,b
  2615  002C3E  0100               	movlb	0	; () banked
  2616  002C40  6F8F               	movwf	??_pf_open& (0+255),b
  2617  002C42  0100               	movlb	0	; () banked
  2618  002C44  51B8               	movf	(pf_open@dir+21)& (0+255),w,b
  2619  002C46  0100               	movlb	0	; () banked
  2620  002C48  6F90               	movwf	(??_pf_open+1)& (0+255),b
  2621  002C4A  0100               	movlb	0	; () banked
  2622  002C4C  6B91               	clrf	(??_pf_open+2)& (0+255),b
  2623  002C4E  0100               	movlb	0	; () banked
  2624  002C50  6B92               	clrf	(??_pf_open+3)& (0+255),b
  2625  002C52  C090  F092         	movff	??_pf_open+1,??_pf_open+3
  2626  002C56  C08F  F091         	movff	??_pf_open,??_pf_open+2
  2627  002C5A  0100               	movlb	0	; () banked
  2628  002C5C  6B90               	clrf	(??_pf_open+1)& (0+255),b
  2629  002C5E  6B8F               	clrf	??_pf_open& (0+255),b
  2630  002C60  0100               	movlb	0	; () banked
  2631  002C62  51BD               	movf	(pf_open@dir+26)& (0+255),w,b
  2632  002C64  0100               	movlb	0	; () banked
  2633  002C66  118F               	iorwf	??_pf_open& (0+255),w,b
  2634  002C68  0100               	movlb	0	; () banked
  2635  002C6A  6F93               	movwf	(??_pf_open+4)& (0+255),b
  2636  002C6C  0100               	movlb	0	; () banked
  2637  002C6E  51BE               	movf	(pf_open@dir+27)& (0+255),w,b
  2638  002C70  0100               	movlb	0	; () banked
  2639  002C72  1190               	iorwf	(??_pf_open+1)& (0+255),w,b
  2640  002C74  0100               	movlb	0	; () banked
  2641  002C76  6F94               	movwf	(??_pf_open+5)& (0+255),b
  2642  002C78  0E00               	movlw	0
  2643  002C7A  0100               	movlb	0	; () banked
  2644  002C7C  1191               	iorwf	(??_pf_open+2)& (0+255),w,b
  2645  002C7E  0100               	movlb	0	; () banked
  2646  002C80  6F95               	movwf	(??_pf_open+6)& (0+255),b
  2647  002C82  0E00               	movlw	0
  2648  002C84  0100               	movlb	0	; () banked
  2649  002C86  1192               	iorwf	(??_pf_open+3)& (0+255),w,b
  2650  002C88  0100               	movlb	0	; () banked
  2651  002C8A  6F96               	movwf	(??_pf_open+7)& (0+255),b
  2652  002C8C  0100               	movlb	0	; () banked
  2653  002C8E  EE20 F020          	lfsr	2,32
  2654  002C92  0100               	movlb	0	; () banked
  2655  002C94  51C4               	movf	pf_open@fs& (0+255),w,b
  2656  002C96  26D9               	addwf	fsr2l,f,c
  2657  002C98  0100               	movlb	0	; () banked
  2658  002C9A  51C5               	movf	(pf_open@fs+1)& (0+255),w,b
  2659  002C9C  22DA               	addwfc	fsr2h,f,c
  2660  002C9E  C093  FFDE         	movff	??_pf_open+4,postinc2
  2661  002CA2  C094  FFDE         	movff	??_pf_open+5,postinc2
  2662  002CA6  C095  FFDE         	movff	??_pf_open+6,postinc2
  2663  002CAA  C096  FFDD         	movff	??_pf_open+7,postdec2
  2664  002CAE  06D9               	decf	fsr2l,f,c
  2665  002CB0  06D9               	decf	fsr2l,f,c
  2666                           
  2667                           ;pff.c: 561: fs->fsize = (DWORD)(*(DWORD*)(BYTE*)(dir+28));
  2668  002CB2  0100               	movlb	0	; () banked
  2669  002CB4  EE20 F01C          	lfsr	2,28
  2670  002CB8  0100               	movlb	0	; () banked
  2671  002CBA  51C4               	movf	pf_open@fs& (0+255),w,b
  2672  002CBC  26D9               	addwf	fsr2l,f,c
  2673  002CBE  0100               	movlb	0	; () banked
  2674  002CC0  51C5               	movf	(pf_open@fs+1)& (0+255),w,b
  2675  002CC2  22DA               	addwfc	fsr2h,f,c
  2676  002CC4  0100               	movlb	0	; () banked
  2677  002CC6  C0BF  FFDE         	movff	pf_open@dir+28,postinc2
  2678  002CCA  0100               	movlb	0	; () banked
  2679  002CCC  C0C0  FFDE         	movff	pf_open@dir+29,postinc2
  2680  002CD0  0100               	movlb	0	; () banked
  2681  002CD2  C0C1  FFDE         	movff	pf_open@dir+30,postinc2
  2682  002CD6  0100               	movlb	0	; () banked
  2683  002CD8  C0C2  FFDE         	movff	pf_open@dir+31,postinc2
  2684                           
  2685                           ;pff.c: 562: fs->fptr = 0;
  2686  002CDC  0100               	movlb	0	; () banked
  2687  002CDE  EE20 F018          	lfsr	2,24
  2688  002CE2  0100               	movlb	0	; () banked
  2689  002CE4  51C4               	movf	pf_open@fs& (0+255),w,b
  2690  002CE6  26D9               	addwf	fsr2l,f,c
  2691  002CE8  0100               	movlb	0	; () banked
  2692  002CEA  51C5               	movf	(pf_open@fs+1)& (0+255),w,b
  2693  002CEC  22DA               	addwfc	fsr2h,f,c
  2694  002CEE  6ADE               	clrf	postinc2,c
  2695  002CF0  6ADE               	clrf	postinc2,c
  2696  002CF2  6ADE               	clrf	postinc2,c
  2697  002CF4  6ADD               	clrf	postdec2,c
  2698                           
  2699                           ;pff.c: 563: fs->flag = 0x01;
  2700  002CF6  0100               	movlb	0	; () banked
  2701  002CF8  EE20 F002          	lfsr	2,2
  2702  002CFC  0100               	movlb	0	; () banked
  2703  002CFE  51C4               	movf	pf_open@fs& (0+255),w,b
  2704  002D00  26D9               	addwf	fsr2l,f,c
  2705  002D02  0100               	movlb	0	; () banked
  2706  002D04  51C5               	movf	(pf_open@fs+1)& (0+255),w,b
  2707  002D06  22DA               	addwfc	fsr2h,f,c
  2708  002D08  0E01               	movlw	1
  2709  002D0A  6EDF               	movwf	indf2,c
  2710                           
  2711                           ; BSR set to: 0
  2712                           ;pff.c: 565: return FR_OK;
  2713  002D0C  0E00               	movlw	0
  2714  002D0E                     l169:
  2715                           
  2716                           ; BSR set to: 0
  2717  002D0E  0012               	return	
  2718  002D10                     __end_of_pf_open:
  2719                           	opt stack 0
  2720                           tblptru	equ	0xFF8
  2721                           tblptrh	equ	0xFF7
  2722                           tblptrl	equ	0xFF6
  2723                           tablat	equ	0xFF5
  2724                           intcon	equ	0xFF2
  2725                           postinc0	equ	0xFEE
  2726                           wreg	equ	0xFE8
  2727                           postdec1	equ	0xFE5
  2728                           fsr1h	equ	0xFE2
  2729                           fsr1l	equ	0xFE1
  2730                           indf2	equ	0xFDF
  2731                           postinc2	equ	0xFDE
  2732                           postdec2	equ	0xFDD
  2733                           fsr2h	equ	0xFDA
  2734                           fsr2l	equ	0xFD9
  2735                           status	equ	0xFD8
  2736                           
  2737 ;; *************** function _load_header *****************
  2738 ;; Defined at:
  2739 ;;		line 37 in file "../../../PIC18F/wave_file.c"
  2740 ;; Parameters:    Size  Location     Type
  2741 ;;		None
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;  sz              4   56[BANK0 ] unsigned long 
  2744 ;;  SamplingRate    4   52[BANK0 ] unsigned long 
  2745 ;;  ChunkID         4   48[BANK0 ] unsigned long 
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  4   44[BANK0 ] unsigned long 
  2748 ;; Registers used:
  2749 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2755 ;;      Params:         0       4       0       0       0       0       0       0       0
  2756 ;;      Locals:         0      12       0       0       0       0       0       0       0
  2757 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2758 ;;      Totals:         4      16       0       0       0       0       0       0       0
  2759 ;;Total ram usage:       20 bytes
  2760 ;; Hardware stack levels used:    1
  2761 ;; Hardware stack levels required when called:    8
  2762 ;; This function calls:
  2763 ;;		_pf_lseek
  2764 ;;		_pf_read
  2765 ;;		_set_sampling_rate
  2766 ;; This function is called by:
  2767 ;;		_play_wave_file
  2768 ;; This function uses a non-reentrant model
  2769 ;;
  2770                           
  2771                           	psect	text11
  2772  001F02                     __ptext11:
  2773                           	opt stack 0
  2774  001F02                     _load_header:
  2775                           	opt stack 20
  2776                           
  2777                           ;wave_file.c: 39: DWORD ChunkID, SamplingRate, sz;
  2778                           ;wave_file.c: 41: if (pf_read(Buff, 12, &rb)) return 1;
  2779                           
  2780                           ; BSR set to: 0
  2781                           ;incstack = 0
  2782  001F02  0102               	movlb	2	; () banked
  2783  001F04  0E02               	movlw	high _Buff
  2784  001F06  6E3C               	movwf	pf_read@buff+1,c
  2785  001F08  0102               	movlb	2	; () banked
  2786  001F0A  0E00               	movlw	low _Buff
  2787  001F0C  6E3B               	movwf	pf_read@buff,c
  2788  001F0E  0E00               	movlw	0
  2789  001F10  6E3E               	movwf	pf_read@btr+1,c
  2790  001F12  0E0C               	movlw	12
  2791  001F14  6E3D               	movwf	pf_read@btr,c
  2792  001F16  0100               	movlb	0	; () banked
  2793  001F18  0E00               	movlw	high _rb
  2794  001F1A  6E40               	movwf	pf_read@br+1,c
  2795  001F1C  0100               	movlb	0	; () banked
  2796  001F1E  0EFB               	movlw	low _rb
  2797  001F20  6E3F               	movwf	pf_read@br,c
  2798  001F22  ECD1  F006         	call	_pf_read	;wreg free
  2799  001F26  0900               	iorlw	0
  2800  001F28  B4D8               	btfsc	status,2,c
  2801  001F2A  D002               	goto	l5492
  2802  001F2C  0E01               	movlw	1
  2803  001F2E  D015               	goto	L5
  2804  001F30                     l5492:
  2805                           
  2806                           ;wave_file.c: 42: if (rb != 12 || (DWORD)(*(DWORD*)(BYTE*)(Buff+8)) != (((DWORD)'E'<<24)
      +                          +((DWORD)'V'<<16)+((WORD)'A'<<8)+(BYTE)'W')) return 0;
  2807  001F30  0100               	movlb	0	; () banked
  2808  001F32  51FB               	movf	_rb& (0+255),w,b
  2809  001F34  0A0C               	xorlw	12
  2810  001F36  11FC               	iorwf	(_rb+1)& (0+255),w,b
  2811  001F38  A4D8               	btfss	status,2,c
  2812  001F3A  D0EF               	goto	l5550
  2813                           
  2814                           ; BSR set to: 0
  2815  001F3C  0102               	movlb	2	; () banked
  2816  001F3E  510B               	movf	(_Buff+11)& (0+255),w,b
  2817  001F40  0A45               	xorlw	69
  2818  001F42  0E57               	movlw	87
  2819  001F44  B4D8               	btfsc	status,2,c
  2820  001F46  1908               	xorwf	(_Buff+8)& (0+255),w,b
  2821  001F48  0E41               	movlw	65
  2822  001F4A  B4D8               	btfsc	status,2,c
  2823  001F4C  1909               	xorwf	(_Buff+9)& (0+255),w,b
  2824  001F4E  0E56               	movlw	86
  2825  001F50  B4D8               	btfsc	status,2,c
  2826  001F52  190A               	xorwf	(_Buff+10)& (0+255),w,b
  2827  001F54  B4D8               	btfsc	status,2,c
  2828  001F56  D00D               	goto	l5500
  2829                           
  2830                           ; BSR set to: 2
  2831  001F58  D0E0               	goto	l5550
  2832  001F5A                     L5:
  2833  001F5A  0100               	movlb	0	; () banked
  2834  001F5C  6F8C               	movwf	?_load_header& (0+255),b
  2835  001F5E  0E00               	movlw	0
  2836  001F60  0100               	movlb	0	; () banked
  2837  001F62  6F8D               	movwf	(?_load_header+1)& (0+255),b
  2838  001F64  0E00               	movlw	0
  2839  001F66  0100               	movlb	0	; () banked
  2840  001F68  6F8E               	movwf	(?_load_header+2)& (0+255),b
  2841  001F6A  0E00               	movlw	0
  2842  001F6C  0100               	movlb	0	; () banked
  2843  001F6E  6F8F               	movwf	(?_load_header+3)& (0+255),b
  2844  001F70  D126               	goto	l452
  2845  001F72                     l5500:
  2846                           
  2847                           ;wave_file.c: 45: pf_read(Buff, 8, &rb);
  2848  001F72  0102               	movlb	2	; () banked
  2849  001F74  0E02               	movlw	high _Buff
  2850  001F76  6E3C               	movwf	pf_read@buff+1,c
  2851  001F78  0102               	movlb	2	; () banked
  2852  001F7A  0E00               	movlw	low _Buff
  2853  001F7C  6E3B               	movwf	pf_read@buff,c
  2854  001F7E  0E00               	movlw	0
  2855  001F80  6E3E               	movwf	pf_read@btr+1,c
  2856  001F82  0E08               	movlw	8
  2857  001F84  6E3D               	movwf	pf_read@btr,c
  2858  001F86  0100               	movlb	0	; () banked
  2859  001F88  0E00               	movlw	high _rb
  2860  001F8A  6E40               	movwf	pf_read@br+1,c
  2861  001F8C  0100               	movlb	0	; () banked
  2862  001F8E  0EFB               	movlw	low _rb
  2863  001F90  6E3F               	movwf	pf_read@br,c
  2864  001F92  ECD1  F006         	call	_pf_read	;wreg free
  2865                           
  2866                           ;wave_file.c: 46: if (rb != 8) return 0;
  2867  001F96  0100               	movlb	0	; () banked
  2868  001F98  51FB               	movf	_rb& (0+255),w,b
  2869  001F9A  0A08               	xorlw	8
  2870  001F9C  11FC               	iorwf	(_rb+1)& (0+255),w,b
  2871  001F9E  A4D8               	btfss	status,2,c
  2872  001FA0  D0BC               	goto	l5550
  2873                           
  2874                           ; BSR set to: 0
  2875                           ;wave_file.c: 47: ChunkID = (DWORD)(*(DWORD*)(BYTE*)(&Buff[0]));
  2876                           
  2877                           ; BSR set to: 0
  2878                           
  2879                           ; BSR set to: 0
  2880  001FA2  C200  F090         	movff	_Buff,load_header@ChunkID
  2881  001FA6  C201  F091         	movff	_Buff+1,load_header@ChunkID+1
  2882  001FAA  C202  F092         	movff	_Buff+2,load_header@ChunkID+2
  2883  001FAE  C203  F093         	movff	_Buff+3,load_header@ChunkID+3
  2884                           
  2885                           ;wave_file.c: 48: sz = (DWORD)(*(DWORD*)(BYTE*)(&Buff[4]));
  2886  001FB2  C204  F098         	movff	_Buff+4,load_header@sz
  2887  001FB6  C205  F099         	movff	_Buff+5,load_header@sz+1
  2888  001FBA  C206  F09A         	movff	_Buff+6,load_header@sz+2
  2889  001FBE  C207  F09B         	movff	_Buff+7,load_header@sz+3
  2890                           
  2891                           ;wave_file.c: 50: switch (ChunkID) {
  2892  001FC2  D0AD               	goto	l5556
  2893  001FC4                     l5508:
  2894                           
  2895                           ; BSR set to: 0
  2896                           ;wave_file.c: 52: if (sz > 100 || sz < 16) return 0;
  2897  001FC4  0E65               	movlw	101
  2898  001FC6  6E41               	movwf	??_load_header& (0+255),c
  2899  001FC8  6A42               	clrf	(??_load_header+1)& (0+255),c
  2900  001FCA  6A43               	clrf	(??_load_header+2)& (0+255),c
  2901  001FCC  6A44               	clrf	(??_load_header+3)& (0+255),c
  2902  001FCE  5041               	movf	??_load_header,w,c
  2903  001FD0  0100               	movlb	0	; () banked
  2904  001FD2  5D98               	subwf	load_header@sz& (0+255),w,b
  2905  001FD4  5042               	movf	??_load_header+1,w,c
  2906  001FD6  0100               	movlb	0	; () banked
  2907  001FD8  5999               	subwfb	(load_header@sz+1)& (0+255),w,b
  2908  001FDA  5043               	movf	??_load_header+2,w,c
  2909  001FDC  0100               	movlb	0	; () banked
  2910  001FDE  599A               	subwfb	(load_header@sz+2)& (0+255),w,b
  2911  001FE0  5044               	movf	??_load_header+3,w,c
  2912  001FE2  0100               	movlb	0	; () banked
  2913  001FE4  599B               	subwfb	(load_header@sz+3)& (0+255),w,b
  2914  001FE6  B0D8               	btfsc	status,0,c
  2915  001FE8  D098               	goto	l5550
  2916                           
  2917                           ; BSR set to: 0
  2918  001FEA  0E10               	movlw	16
  2919  001FEC  6E41               	movwf	??_load_header& (0+255),c
  2920  001FEE  6A42               	clrf	(??_load_header+1)& (0+255),c
  2921  001FF0  6A43               	clrf	(??_load_header+2)& (0+255),c
  2922  001FF2  6A44               	clrf	(??_load_header+3)& (0+255),c
  2923  001FF4  5041               	movf	??_load_header,w,c
  2924  001FF6  0100               	movlb	0	; () banked
  2925  001FF8  5D98               	subwf	load_header@sz& (0+255),w,b
  2926  001FFA  5042               	movf	??_load_header+1,w,c
  2927  001FFC  0100               	movlb	0	; () banked
  2928  001FFE  5999               	subwfb	(load_header@sz+1)& (0+255),w,b
  2929  002000  5043               	movf	??_load_header+2,w,c
  2930  002002  0100               	movlb	0	; () banked
  2931  002004  599A               	subwfb	(load_header@sz+2)& (0+255),w,b
  2932  002006  5044               	movf	??_load_header+3,w,c
  2933  002008  0100               	movlb	0	; () banked
  2934  00200A  599B               	subwfb	(load_header@sz+3)& (0+255),w,b
  2935  00200C  A0D8               	btfss	status,0,c
  2936                           
  2937                           ; BSR set to: 0
  2938  00200E  D085               	goto	l5550
  2939                           
  2940                           ; BSR set to: 0
  2941                           ;wave_file.c: 53: pf_read(Buff, sz, &rb);
  2942                           
  2943                           ; BSR set to: 0
  2944                           
  2945                           ; BSR set to: 0
  2946                           
  2947                           ; BSR set to: 0
  2948  002010  0102               	movlb	2	; () banked
  2949  002012  0E02               	movlw	high _Buff
  2950  002014  6E3C               	movwf	pf_read@buff+1,c
  2951  002016  0102               	movlb	2	; () banked
  2952  002018  0E00               	movlw	low _Buff
  2953  00201A  6E3B               	movwf	pf_read@buff,c
  2954  00201C  C098  F03D         	movff	load_header@sz,pf_read@btr
  2955  002020  C099  F03E         	movff	load_header@sz+1,pf_read@btr+1
  2956  002024  0100               	movlb	0	; () banked
  2957  002026  0E00               	movlw	high _rb
  2958  002028  6E40               	movwf	pf_read@br+1,c
  2959  00202A  0100               	movlb	0	; () banked
  2960  00202C  0EFB               	movlw	low _rb
  2961  00202E  6E3F               	movwf	pf_read@br,c
  2962  002030  ECD1  F006         	call	_pf_read	;wreg free
  2963                           
  2964                           ;wave_file.c: 54: if (rb != sz) return 0;
  2965  002034  0100               	movlb	0	; () banked
  2966  002036  51FB               	movf	_rb& (0+255),w,b
  2967  002038  6E41               	movwf	??_load_header& (0+255),c
  2968  00203A  0100               	movlb	0	; () banked
  2969  00203C  51FC               	movf	(_rb+1)& (0+255),w,b
  2970  00203E  6E42               	movwf	(??_load_header+1)& (0+255),c
  2971  002040  6A43               	clrf	(??_load_header+2)& (0+255),c
  2972  002042  6A44               	clrf	(??_load_header+3)& (0+255),c
  2973  002044  0100               	movlb	0	; () banked
  2974  002046  519B               	movf	(load_header@sz+3)& (0+255),w,b
  2975  002048  1844               	xorwf	??_load_header+3,w,c
  2976  00204A  E10B               	bnz	u6505
  2977  00204C  0100               	movlb	0	; () banked
  2978  00204E  519A               	movf	(load_header@sz+2)& (0+255),w,b
  2979  002050  1843               	xorwf	??_load_header+2,w,c
  2980  002052  E107               	bnz	u6505
  2981  002054  0100               	movlb	0	; () banked
  2982  002056  5199               	movf	(load_header@sz+1)& (0+255),w,b
  2983  002058  1842               	xorwf	??_load_header+1,w,c
  2984  00205A  E103               	bnz	u6505
  2985  00205C  0100               	movlb	0	; () banked
  2986  00205E  5198               	movf	load_header@sz& (0+255),w,b
  2987  002060  1841               	xorwf	??_load_header,w,c
  2988  002062                     u6505:
  2989  002062  A4D8               	btfss	status,2,c
  2990  002064  D05A               	goto	l5550
  2991                           
  2992                           ; BSR set to: 0
  2993                           ;wave_file.c: 55: if (Buff[0] != 1) return 0;
  2994                           
  2995                           ; BSR set to: 0
  2996                           
  2997                           ; BSR set to: 0
  2998                           
  2999                           ; BSR set to: 0
  3000  002066  0102               	movlb	2	; () banked
  3001  002068  0500               	decf	_Buff& (0+255),w,b
  3002  00206A  A4D8               	btfss	status,2,c
  3003  00206C  D056               	goto	l5550
  3004                           
  3005                           ; BSR set to: 2
  3006                           ;wave_file.c: 57: NumChannels = Buff[2];
  3007                           
  3008                           ; BSR set to: 0
  3009                           
  3010                           ; BSR set to: 2
  3011  00206E  0102               	movlb	2	; () banked
  3012  002070  0100               	movlb	0	; () banked
  3013  002072  C202  F0E9         	movff	_Buff+2,_NumChannels
  3014  002076  0100               	movlb	0	; () banked
  3015  002078  6BEA               	clrf	(_NumChannels+1)& (0+255),b
  3016                           
  3017                           ; BSR set to: 0
  3018                           ;wave_file.c: 58: if (NumChannels != 1 && NumChannels != 2)
  3019  00207A  0100               	movlb	0	; () banked
  3020  00207C  05E9               	decf	_NumChannels& (0+255),w,b
  3021  00207E  11EA               	iorwf	(_NumChannels+1)& (0+255),w,b
  3022  002080  B4D8               	btfsc	status,2,c
  3023  002082  D006               	goto	l465
  3024                           
  3025                           ; BSR set to: 0
  3026  002084  0100               	movlb	0	; () banked
  3027  002086  51E9               	movf	_NumChannels& (0+255),w,b
  3028  002088  0A02               	xorlw	2
  3029  00208A  11EA               	iorwf	(_NumChannels+1)& (0+255),w,b
  3030  00208C  A4D8               	btfss	status,2,c
  3031  00208E  D045               	goto	l5550
  3032  002090                     l465:
  3033                           
  3034                           ; BSR set to: 0
  3035                           ;wave_file.c: 61: BitsPerSample = Buff[14];
  3036  002090  0102               	movlb	2	; () banked
  3037  002092  0100               	movlb	0	; () banked
  3038  002094  C20E  F0E7         	movff	_Buff+14,_BitsPerSample
  3039  002098  0100               	movlb	0	; () banked
  3040  00209A  6BE8               	clrf	(_BitsPerSample+1)& (0+255),b
  3041                           
  3042                           ; BSR set to: 0
  3043                           ;wave_file.c: 62: if (BitsPerSample != 8 && BitsPerSample != 16)
  3044  00209C  0100               	movlb	0	; () banked
  3045  00209E  51E7               	movf	_BitsPerSample& (0+255),w,b
  3046  0020A0  0A08               	xorlw	8
  3047  0020A2  11E8               	iorwf	(_BitsPerSample+1)& (0+255),w,b
  3048  0020A4  B4D8               	btfsc	status,2,c
  3049  0020A6  D006               	goto	l466
  3050                           
  3051                           ; BSR set to: 0
  3052  0020A8  0100               	movlb	0	; () banked
  3053  0020AA  51E7               	movf	_BitsPerSample& (0+255),w,b
  3054  0020AC  0A10               	xorlw	16
  3055  0020AE  11E8               	iorwf	(_BitsPerSample+1)& (0+255),w,b
  3056  0020B0  A4D8               	btfss	status,2,c
  3057  0020B2  D033               	goto	l5550
  3058  0020B4                     l466:
  3059                           
  3060                           ; BSR set to: 0
  3061                           ;wave_file.c: 65: SamplingRate = (DWORD)(*(DWORD*)(BYTE*)(Buff+4));
  3062  0020B4  C204  F094         	movff	_Buff+4,load_header@SamplingRate
  3063  0020B8  C205  F095         	movff	_Buff+5,load_header@SamplingRate+1
  3064  0020BC  C206  F096         	movff	_Buff+6,load_header@SamplingRate+2
  3065  0020C0  C207  F097         	movff	_Buff+7,load_header@SamplingRate+3
  3066                           
  3067                           ; BSR set to: 0
  3068                           ;wave_file.c: 66: set_sampling_rate( SamplingRate );
  3069  0020C4  C094  F01D         	movff	load_header@SamplingRate,set_sampling_rate@rate
  3070  0020C8  C095  F01E         	movff	load_header@SamplingRate+1,set_sampling_rate@rate+1
  3071  0020CC  C096  F01F         	movff	load_header@SamplingRate+2,set_sampling_rate@rate+2
  3072  0020D0  C097  F020         	movff	load_header@SamplingRate+3,set_sampling_rate@rate+3
  3073  0020D4  ECEC  F01C         	call	_set_sampling_rate	;wreg free
  3074                           
  3075                           ;wave_file.c: 67: break;
  3076  0020D8  D74C               	goto	l5500
  3077  0020DA                     l468:
  3078                           
  3079                           ; BSR set to: 0
  3080                           ;wave_file.c: 70: return sz;
  3081  0020DA  C098  F08C         	movff	load_header@sz,?_load_header
  3082  0020DE  C099  F08D         	movff	load_header@sz+1,?_load_header+1
  3083  0020E2  C09A  F08E         	movff	load_header@sz+2,?_load_header+2
  3084  0020E6  C09B  F08F         	movff	load_header@sz+3,?_load_header+3
  3085  0020EA  D069               	goto	l452
  3086  0020EC                     l5548:
  3087                           
  3088                           ; BSR set to: 0
  3089                           ;wave_file.c: 74: case (((DWORD)'t'<<24)+((DWORD)'c'<<16)+((WORD)'a'<<8)+(BYTE)'f'):
  3090                           ;wave_file.c: 75: pf_lseek(Fs.fptr + sz);
  3091  0020EC  0100               	movlb	0	; () banked
  3092  0020EE  5198               	movf	load_header@sz& (0+255),w,b
  3093  0020F0  0101               	movlb	1	; () banked
  3094  0020F2  2518               	addwf	(_Fs+24)& (0+255),w,b
  3095  0020F4  6E3B               	movwf	pf_lseek@ofs,c
  3096  0020F6  0100               	movlb	0	; () banked
  3097  0020F8  5199               	movf	(load_header@sz+1)& (0+255),w,b
  3098  0020FA  0101               	movlb	1	; () banked
  3099  0020FC  2119               	addwfc	(_Fs+25)& (0+255),w,b
  3100  0020FE  6E3C               	movwf	pf_lseek@ofs+1,c
  3101  002100  0100               	movlb	0	; () banked
  3102  002102  519A               	movf	(load_header@sz+2)& (0+255),w,b
  3103  002104  0101               	movlb	1	; () banked
  3104  002106  211A               	addwfc	(_Fs+26)& (0+255),w,b
  3105  002108  6E3D               	movwf	pf_lseek@ofs+2,c
  3106  00210A  0100               	movlb	0	; () banked
  3107  00210C  519B               	movf	(load_header@sz+3)& (0+255),w,b
  3108  00210E  0101               	movlb	1	; () banked
  3109  002110  211B               	addwfc	(_Fs+27)& (0+255),w,b
  3110  002112  6E3E               	movwf	pf_lseek@ofs+3,c
  3111  002114  EC04  F004         	call	_pf_lseek	;wreg free
  3112                           
  3113                           ;wave_file.c: 76: break;
  3114  002118  D72C               	goto	l5500
  3115  00211A                     l5550:
  3116                           
  3117                           ;wave_file.c: 79: return 0;
  3118  00211A  0E00               	movlw	0
  3119  00211C  D71E               	goto	L5
  3120  00211E                     l5556:
  3121                           
  3122                           ; BSR set to: 0
  3123  00211E  0100               	movlb	0	; () banked
  3124  002120  C090  F041         	movff	load_header@ChunkID,??_load_header
  3125  002124  0100               	movlb	0	; () banked
  3126  002126  C091  F042         	movff	load_header@ChunkID+1,??_load_header+1
  3127  00212A  0100               	movlb	0	; () banked
  3128  00212C  C092  F043         	movff	load_header@ChunkID+2,??_load_header+2
  3129  002130  0100               	movlb	0	; () banked
  3130  002132  C093  F044         	movff	load_header@ChunkID+3,??_load_header+3
  3131                           
  3132                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 8 sub-sw
      +                          itches
  3133                           ; Switch size 1, requested type "space"
  3134                           ; Number of cases is 4, Range of values is 32 to 116
  3135                           ; switch strategies available:
  3136                           ; Name         Instructions Cycles
  3137                           ; simple_byte           13     7 (average)
  3138                           ;	Chosen strategy is simple_byte
  3139  002136  5044               	movf	??_load_header+3,w,c
  3140  002138  0A20               	xorlw	32	; case 32
  3141  00213A  B4D8               	btfsc	status,2,c
  3142  00213C  D02C               	goto	l6282
  3143  00213E  0A74               	xorlw	116	; case 84
  3144  002140  B4D8               	btfsc	status,2,c
  3145  002142  D02E               	goto	l6284
  3146  002144  0A35               	xorlw	53	; case 97
  3147  002146  B4D8               	btfsc	status,2,c
  3148  002148  D030               	goto	l6286
  3149  00214A  0A15               	xorlw	21	; case 116
  3150  00214C  B4D8               	btfsc	status,2,c
  3151  00214E  D032               	goto	l6288
  3152  002150  D7E4               	goto	l5550
  3153  002152                     l6274:
  3154                           
  3155                           ; BSR set to: 0
  3156                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3157                           ; Switch size 1, requested type "space"
  3158                           ; Number of cases is 1, Range of values is 109 to 109
  3159                           ; switch strategies available:
  3160                           ; Name         Instructions Cycles
  3161                           ; simple_byte            4     3 (average)
  3162                           ;	Chosen strategy is simple_byte
  3163  002152  5042               	movf	??_load_header+1,w,c
  3164  002154  0A6D               	xorlw	109	; case 109
  3165  002156  A4D8               	btfss	status,2,c
  3166  002158  D7E0               	goto	l5550
  3167                           
  3168                           ; BSR set to: 0
  3169                           ; Switch size 1, requested type "space"
  3170                           ; Number of cases is 1, Range of values is 102 to 102
  3171                           ; switch strategies available:
  3172                           ; Name         Instructions Cycles
  3173                           ; simple_byte            4     3 (average)
  3174                           ;	Chosen strategy is simple_byte
  3175  00215A  5041               	movf	??_load_header,w,c
  3176  00215C  0A66               	xorlw	102	; case 102
  3177  00215E  B4D8               	btfsc	status,2,c
  3178  002160  D731               	goto	l5508
  3179  002162  D7DB               	goto	l5550
  3180  002164                     l6276:
  3181                           
  3182                           ; BSR set to: 0
  3183                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3184                           ; Switch size 1, requested type "space"
  3185                           ; Number of cases is 1, Range of values is 73 to 73
  3186                           ; switch strategies available:
  3187                           ; Name         Instructions Cycles
  3188                           ; simple_byte            4     3 (average)
  3189                           ;	Chosen strategy is simple_byte
  3190  002164  5042               	movf	??_load_header+1,w,c
  3191  002166  0A49               	xorlw	73	; case 73
  3192  002168  A4D8               	btfss	status,2,c
  3193  00216A  D7D7               	goto	l5550
  3194                           
  3195                           ; BSR set to: 0
  3196                           ; Switch size 1, requested type "space"
  3197                           ; Number of cases is 1, Range of values is 76 to 76
  3198                           ; switch strategies available:
  3199                           ; Name         Instructions Cycles
  3200                           ; simple_byte            4     3 (average)
  3201                           ;	Chosen strategy is simple_byte
  3202  00216C  5041               	movf	??_load_header,w,c
  3203  00216E  0A4C               	xorlw	76	; case 76
  3204  002170  D00F               	goto	L6
  3205  002172                     l6278:
  3206                           
  3207                           ; BSR set to: 0
  3208                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3209                           ; Switch size 1, requested type "space"
  3210                           ; Number of cases is 1, Range of values is 97 to 97
  3211                           ; switch strategies available:
  3212                           ; Name         Instructions Cycles
  3213                           ; simple_byte            4     3 (average)
  3214                           ;	Chosen strategy is simple_byte
  3215  002172  5042               	movf	??_load_header+1,w,c
  3216  002174  0A61               	xorlw	97	; case 97
  3217  002176  A4D8               	btfss	status,2,c
  3218  002178  D7D0               	goto	l5550
  3219                           
  3220                           ; BSR set to: 0
  3221                           ; Switch size 1, requested type "space"
  3222                           ; Number of cases is 1, Range of values is 100 to 100
  3223                           ; switch strategies available:
  3224                           ; Name         Instructions Cycles
  3225                           ; simple_byte            4     3 (average)
  3226                           ;	Chosen strategy is simple_byte
  3227  00217A  5041               	movf	??_load_header,w,c
  3228  00217C  0A64               	xorlw	100	; case 100
  3229  00217E  B4D8               	btfsc	status,2,c
  3230  002180  D7AC               	goto	l468
  3231  002182  D7CB               	goto	l5550
  3232  002184                     l6280:
  3233                           
  3234                           ; BSR set to: 0
  3235                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3236                           ; Switch size 1, requested type "space"
  3237                           ; Number of cases is 1, Range of values is 97 to 97
  3238                           ; switch strategies available:
  3239                           ; Name         Instructions Cycles
  3240                           ; simple_byte            4     3 (average)
  3241                           ;	Chosen strategy is simple_byte
  3242  002184  5042               	movf	??_load_header+1,w,c
  3243  002186  0A61               	xorlw	97	; case 97
  3244  002188  A4D8               	btfss	status,2,c
  3245  00218A  D7C7               	goto	l5550
  3246                           
  3247                           ; BSR set to: 0
  3248                           ; Switch size 1, requested type "space"
  3249                           ; Number of cases is 1, Range of values is 102 to 102
  3250                           ; switch strategies available:
  3251                           ; Name         Instructions Cycles
  3252                           ; simple_byte            4     3 (average)
  3253                           ;	Chosen strategy is simple_byte
  3254  00218C  5041               	movf	??_load_header,w,c
  3255  00218E  0A66               	xorlw	102	; case 102
  3256  002190                     L6:
  3257  002190  B4D8               	btfsc	status,2,c
  3258  002192  D7AC               	goto	l5548
  3259  002194  D7C2               	goto	l5550
  3260  002196                     l6282:
  3261                           
  3262                           ; BSR set to: 0
  3263                           ; Switch size 1, requested type "space"
  3264                           ; Number of cases is 1, Range of values is 116 to 116
  3265                           ; switch strategies available:
  3266                           ; Name         Instructions Cycles
  3267                           ; simple_byte            4     3 (average)
  3268                           ;	Chosen strategy is simple_byte
  3269  002196  5043               	movf	??_load_header+2,w,c
  3270  002198  0A74               	xorlw	116	; case 116
  3271  00219A  B4D8               	btfsc	status,2,c
  3272  00219C  D7DA               	goto	l6274
  3273  00219E  D7BD               	goto	l5550
  3274  0021A0                     l6284:
  3275                           
  3276                           ; BSR set to: 0
  3277                           ; Switch size 1, requested type "space"
  3278                           ; Number of cases is 1, Range of values is 83 to 83
  3279                           ; switch strategies available:
  3280                           ; Name         Instructions Cycles
  3281                           ; simple_byte            4     3 (average)
  3282                           ;	Chosen strategy is simple_byte
  3283  0021A0  5043               	movf	??_load_header+2,w,c
  3284  0021A2  0A53               	xorlw	83	; case 83
  3285  0021A4  B4D8               	btfsc	status,2,c
  3286  0021A6  D7DE               	goto	l6276
  3287  0021A8  D7B8               	goto	l5550
  3288  0021AA                     l6286:
  3289                           
  3290                           ; BSR set to: 0
  3291                           ; Switch size 1, requested type "space"
  3292                           ; Number of cases is 1, Range of values is 116 to 116
  3293                           ; switch strategies available:
  3294                           ; Name         Instructions Cycles
  3295                           ; simple_byte            4     3 (average)
  3296                           ;	Chosen strategy is simple_byte
  3297  0021AA  5043               	movf	??_load_header+2,w,c
  3298  0021AC  0A74               	xorlw	116	; case 116
  3299  0021AE  B4D8               	btfsc	status,2,c
  3300  0021B0  D7E0               	goto	l6278
  3301  0021B2  D7B3               	goto	l5550
  3302  0021B4                     l6288:
  3303                           
  3304                           ; BSR set to: 0
  3305                           ; Switch size 1, requested type "space"
  3306                           ; Number of cases is 1, Range of values is 99 to 99
  3307                           ; switch strategies available:
  3308                           ; Name         Instructions Cycles
  3309                           ; simple_byte            4     3 (average)
  3310                           ;	Chosen strategy is simple_byte
  3311  0021B4  5043               	movf	??_load_header+2,w,c
  3312  0021B6  0A63               	xorlw	99	; case 99
  3313  0021B8  B4D8               	btfsc	status,2,c
  3314  0021BA  D7E4               	goto	l6280
  3315  0021BC  D7AE               	goto	l5550
  3316  0021BE                     l452:
  3317                           
  3318                           ; BSR set to: 0
  3319  0021BE  0012               	return	
  3320  0021C0                     __end_of_load_header:
  3321                           	opt stack 0
  3322                           tblptru	equ	0xFF8
  3323                           tblptrh	equ	0xFF7
  3324                           tblptrl	equ	0xFF6
  3325                           tablat	equ	0xFF5
  3326                           intcon	equ	0xFF2
  3327                           postinc0	equ	0xFEE
  3328                           wreg	equ	0xFE8
  3329                           postdec1	equ	0xFE5
  3330                           fsr1h	equ	0xFE2
  3331                           fsr1l	equ	0xFE1
  3332                           indf2	equ	0xFDF
  3333                           postinc2	equ	0xFDE
  3334                           postdec2	equ	0xFDD
  3335                           fsr2h	equ	0xFDA
  3336                           fsr2l	equ	0xFD9
  3337                           status	equ	0xFD8
  3338                           
  3339 ;; *************** function _set_sampling_rate *****************
  3340 ;; Defined at:
  3341 ;;		line 126 in file "../../../PIC18F/pwm_audio.c"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;  rate            4   28[COMRAM] unsigned long 
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;  preload         4   36[COMRAM] unsigned long 
  3346 ;; Return value:  Size  Location     Type
  3347 ;;		None               void
  3348 ;; Registers used:
  3349 ;;		wreg, status,2, status,0, cstack
  3350 ;; Tracked objects:
  3351 ;;		On entry : 0/0
  3352 ;;		On exit  : 0/0
  3353 ;;		Unchanged: 0/0
  3354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3355 ;;      Params:         4       0       0       0       0       0       0       0       0
  3356 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3357 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3358 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3359 ;;Total ram usage:       12 bytes
  3360 ;; Hardware stack levels used:    1
  3361 ;; Hardware stack levels required when called:    3
  3362 ;; This function calls:
  3363 ;;		___lldiv
  3364 ;; This function is called by:
  3365 ;;		_load_header
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           
  3369                           	psect	text12
  3370  0039D8                     __ptext12:
  3371                           	opt stack 0
  3372  0039D8                     _set_sampling_rate:
  3373                           	opt stack 24
  3374                           
  3375                           ;pwm_audio.c: 128: unsigned long preload;
  3376                           ;pwm_audio.c: 130: preload = 65536 - ( 12000000 / rate );
  3377                           
  3378                           ; BSR set to: 0
  3379                           ;incstack = 0
  3380  0039D8  0E00               	movlw	0
  3381  0039DA  6E10               	movwf	___lldiv@dividend,c
  3382  0039DC  0E1B               	movlw	27
  3383  0039DE  6E11               	movwf	___lldiv@dividend+1,c
  3384  0039E0  0EB7               	movlw	183
  3385  0039E2  6E12               	movwf	___lldiv@dividend+2,c
  3386  0039E4  0E00               	movlw	0
  3387  0039E6  6E13               	movwf	___lldiv@dividend+3,c
  3388  0039E8  C01D  F014         	movff	set_sampling_rate@rate,___lldiv@divisor
  3389  0039EC  C01E  F015         	movff	set_sampling_rate@rate+1,___lldiv@divisor+1
  3390  0039F0  C01F  F016         	movff	set_sampling_rate@rate+2,___lldiv@divisor+2
  3391  0039F4  C020  F017         	movff	set_sampling_rate@rate+3,___lldiv@divisor+3
  3392  0039F8  EC73  F01C         	call	___lldiv	;wreg free
  3393  0039FC  C010  F021         	movff	?___lldiv,??_set_sampling_rate
  3394  003A00  C011  F022         	movff	?___lldiv+1,??_set_sampling_rate+1
  3395  003A04  C012  F023         	movff	?___lldiv+2,??_set_sampling_rate+2
  3396  003A08  C013  F024         	movff	?___lldiv+3,??_set_sampling_rate+3
  3397  003A0C  1E21               	comf	??_set_sampling_rate,f,c
  3398  003A0E  1E22               	comf	??_set_sampling_rate+1,f,c
  3399  003A10  1E23               	comf	??_set_sampling_rate+2,f,c
  3400  003A12  1E24               	comf	??_set_sampling_rate+3,f,c
  3401  003A14  2A21               	incf	??_set_sampling_rate,f,c
  3402  003A16  0E00               	movlw	0
  3403  003A18  2222               	addwfc	??_set_sampling_rate+1,f,c
  3404  003A1A  2223               	addwfc	??_set_sampling_rate+2,f,c
  3405  003A1C  2224               	addwfc	??_set_sampling_rate+3,f,c
  3406  003A1E  0E00               	movlw	0
  3407  003A20  2421               	addwf	??_set_sampling_rate,w,c
  3408  003A22  6E25               	movwf	set_sampling_rate@preload,c
  3409  003A24  0E00               	movlw	0
  3410  003A26  2022               	addwfc	??_set_sampling_rate+1,w,c
  3411  003A28  6E26               	movwf	set_sampling_rate@preload+1,c
  3412  003A2A  0E01               	movlw	1
  3413  003A2C  2023               	addwfc	??_set_sampling_rate+2,w,c
  3414  003A2E  6E27               	movwf	set_sampling_rate@preload+2,c
  3415  003A30  0E00               	movlw	0
  3416  003A32  2024               	addwfc	??_set_sampling_rate+3,w,c
  3417  003A34  6E28               	movwf	set_sampling_rate@preload+3,c
  3418                           
  3419                           ;pwm_audio.c: 131: TMR1H_preload = (unsigned char)(preload>>8);
  3420  003A36  C026  F04F         	movff	set_sampling_rate@preload+1,_TMR1H_preload
  3421                           
  3422                           ;pwm_audio.c: 132: TMR1L_preload = (unsigned char)(preload & 0x00FF);
  3423  003A3A  C025  F050         	movff	set_sampling_rate@preload,_TMR1L_preload
  3424  003A3E  0012               	return	
  3425  003A40                     __end_of_set_sampling_rate:
  3426                           	opt stack 0
  3427                           tblptru	equ	0xFF8
  3428                           tblptrh	equ	0xFF7
  3429                           tblptrl	equ	0xFF6
  3430                           tablat	equ	0xFF5
  3431                           intcon	equ	0xFF2
  3432                           postinc0	equ	0xFEE
  3433                           wreg	equ	0xFE8
  3434                           postdec1	equ	0xFE5
  3435                           fsr1h	equ	0xFE2
  3436                           fsr1l	equ	0xFE1
  3437                           indf2	equ	0xFDF
  3438                           postinc2	equ	0xFDE
  3439                           postdec2	equ	0xFDD
  3440                           fsr2h	equ	0xFDA
  3441                           fsr2l	equ	0xFD9
  3442                           status	equ	0xFD8
  3443                           
  3444 ;; *************** function _pf_read *****************
  3445 ;; Defined at:
  3446 ;;		line 576 in file "../../../PIC18F/pff.c"
  3447 ;; Parameters:    Size  Location     Type
  3448 ;;  buff            2   58[COMRAM] PTR void 
  3449 ;;		 -> Buff(256), 
  3450 ;;  btr             2   60[COMRAM] unsigned short 
  3451 ;;  br              2   62[COMRAM] PTR unsigned short 
  3452 ;;		 -> rb(2), 
  3453 ;; Auto vars:     Size  Location     Type
  3454 ;;  clst            4   36[BANK0 ] unsigned long 
  3455 ;;  remain          4   32[BANK0 ] unsigned long 
  3456 ;;  sect            4   28[BANK0 ] unsigned long 
  3457 ;;  fs              2   42[BANK0 ] PTR struct _FATFS_
  3458 ;;		 -> Fs(44), NULL(0), 
  3459 ;;  rcnt            2   40[BANK0 ] unsigned short 
  3460 ;;  rbuff           2   24[BANK0 ] PTR unsigned char 
  3461 ;;		 -> Buff(256), 
  3462 ;;  dr              1   23[BANK0 ] enum E79
  3463 ;; Return value:  Size  Location     Type
  3464 ;;                  1    wreg      enum E48
  3465 ;; Registers used:
  3466 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3467 ;; Tracked objects:
  3468 ;;		On entry : 0/0
  3469 ;;		On exit  : 0/0
  3470 ;;		Unchanged: 0/0
  3471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3472 ;;      Params:         6       0       0       0       0       0       0       0       0
  3473 ;;      Locals:         0      21       0       0       0       0       0       0       0
  3474 ;;      Temps:          0       9       0       0       0       0       0       0       0
  3475 ;;      Totals:         6      30       0       0       0       0       0       0       0
  3476 ;;Total ram usage:       36 bytes
  3477 ;; Hardware stack levels used:    1
  3478 ;; Hardware stack levels required when called:    7
  3479 ;; This function calls:
  3480 ;;		___llmod
  3481 ;;		_clust2sect
  3482 ;;		_disk_readp
  3483 ;;		_get_fat
  3484 ;; This function is called by:
  3485 ;;		_load_header
  3486 ;;		_play_wave_file
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489                           
  3490                           	psect	text13
  3491  000DA2                     __ptext13:
  3492                           	opt stack 0
  3493  000DA2                     _pf_read:
  3494                           	opt stack 21
  3495                           
  3496                           ;pff.c: 582: DRESULT dr;
  3497                           ;pff.c: 583: DWORD clst;
  3498                           ;pff.c: 584: DWORD sect, remain;
  3499                           ;pff.c: 585: BYTE *rbuff = buff;
  3500                           
  3501                           ;incstack = 0
  3502  000DA2  0100               	movlb	0	; () banked
  3503  000DA4  C03C  F079         	movff	pf_read@buff+1,pf_read@rbuff+1
  3504  000DA8  0100               	movlb	0	; () banked
  3505  000DAA  C03B  F078         	movff	pf_read@buff,pf_read@rbuff
  3506                           
  3507                           ;pff.c: 586: WORD rcnt;
  3508                           ;pff.c: 587: FATFS *fs = FatFs;
  3509  000DAE  0100               	movlb	0	; () banked
  3510  000DB0  C049  F08B         	movff	_FatFs+1,pf_read@fs+1
  3511  000DB4  0100               	movlb	0	; () banked
  3512  000DB6  C048  F08A         	movff	_FatFs,pf_read@fs
  3513                           
  3514                           ; BSR set to: 0
  3515                           ;pff.c: 590: *br = 0;
  3516  000DBA  C03F  FFD9         	movff	pf_read@br,fsr2l
  3517  000DBE  C040  FFDA         	movff	pf_read@br+1,fsr2h
  3518  000DC2  0E00               	movlw	0
  3519  000DC4  6EDE               	movwf	postinc2,c
  3520  000DC6  0E00               	movlw	0
  3521  000DC8  6EDD               	movwf	postdec2,c
  3522                           
  3523                           ; BSR set to: 0
  3524                           ;pff.c: 591: if (!fs) return FR_NOT_ENABLED;
  3525  000DCA  0100               	movlb	0	; () banked
  3526  000DCC  518B               	movf	(pf_read@fs+1)& (0+255),w,b
  3527  000DCE  118A               	iorwf	pf_read@fs& (0+255),w,b
  3528  000DD0  A4D8               	btfss	status,2,c
  3529  000DD2  D002               	goto	l5160
  3530                           
  3531                           ; BSR set to: 0
  3532  000DD4  0E06               	movlw	6
  3533  000DD6  D279               	goto	l177
  3534  000DD8                     l5160:
  3535                           
  3536                           ; BSR set to: 0
  3537                           ;pff.c: 592: if (!(fs->flag & 0x01))
  3538  000DD8  0100               	movlb	0	; () banked
  3539  000DDA  EE20 F002          	lfsr	2,2
  3540  000DDE  0100               	movlb	0	; () banked
  3541  000DE0  518A               	movf	pf_read@fs& (0+255),w,b
  3542  000DE2  26D9               	addwf	fsr2l,f,c
  3543  000DE4  0100               	movlb	0	; () banked
  3544  000DE6  518B               	movf	(pf_read@fs+1)& (0+255),w,b
  3545  000DE8  22DA               	addwfc	fsr2h,f,c
  3546  000DEA  50DF               	movf	indf2,w,c
  3547  000DEC  0100               	movlb	0	; () banked
  3548  000DEE  6F6E               	movwf	??_pf_read& (0+255),b
  3549  000DF0  0100               	movlb	0	; () banked
  3550  000DF2  B16E               	btfsc	??_pf_read& (0+255),0,b
  3551  000DF4  D002               	goto	l5166
  3552                           
  3553                           ; BSR set to: 0
  3554                           ;pff.c: 593: return FR_NOT_OPENED;
  3555  000DF6  0E05               	movlw	5
  3556  000DF8  D268               	goto	l177
  3557  000DFA                     l5166:
  3558                           
  3559                           ; BSR set to: 0
  3560                           ;pff.c: 595: remain = fs->fsize - fs->fptr;
  3561  000DFA  0100               	movlb	0	; () banked
  3562  000DFC  EE20 F01C          	lfsr	2,28
  3563  000E00  0100               	movlb	0	; () banked
  3564  000E02  518A               	movf	pf_read@fs& (0+255),w,b
  3565  000E04  26D9               	addwf	fsr2l,f,c
  3566  000E06  0100               	movlb	0	; () banked
  3567  000E08  518B               	movf	(pf_read@fs+1)& (0+255),w,b
  3568  000E0A  22DA               	addwfc	fsr2h,f,c
  3569  000E0C  CFDE F06E          	movff	postinc2,??_pf_read
  3570  000E10  CFDE F06F          	movff	postinc2,??_pf_read+1
  3571  000E14  CFDE F070          	movff	postinc2,??_pf_read+2
  3572  000E18  CFDE F071          	movff	postinc2,??_pf_read+3
  3573  000E1C  0100               	movlb	0	; () banked
  3574  000E1E  EE20 F018          	lfsr	2,24
  3575  000E22  0100               	movlb	0	; () banked
  3576  000E24  518A               	movf	pf_read@fs& (0+255),w,b
  3577  000E26  26D9               	addwf	fsr2l,f,c
  3578  000E28  0100               	movlb	0	; () banked
  3579  000E2A  518B               	movf	(pf_read@fs+1)& (0+255),w,b
  3580  000E2C  22DA               	addwfc	fsr2h,f,c
  3581  000E2E  CFDE F072          	movff	postinc2,??_pf_read+4
  3582  000E32  CFDE F073          	movff	postinc2,??_pf_read+5
  3583  000E36  CFDE F074          	movff	postinc2,??_pf_read+6
  3584  000E3A  CFDE F075          	movff	postinc2,??_pf_read+7
  3585  000E3E  0100               	movlb	0	; () banked
  3586  000E40  1F72               	comf	(??_pf_read+4)& (0+255),f,b
  3587  000E42  1F73               	comf	(??_pf_read+5)& (0+255),f,b
  3588  000E44  1F74               	comf	(??_pf_read+6)& (0+255),f,b
  3589  000E46  1F75               	comf	(??_pf_read+7)& (0+255),f,b
  3590  000E48  2B72               	incf	(??_pf_read+4)& (0+255),f,b
  3591  000E4A  0E00               	movlw	0
  3592  000E4C  2373               	addwfc	(??_pf_read+5)& (0+255),f,b
  3593  000E4E  2374               	addwfc	(??_pf_read+6)& (0+255),f,b
  3594  000E50  2375               	addwfc	(??_pf_read+7)& (0+255),f,b
  3595  000E52  0100               	movlb	0	; () banked
  3596  000E54  516E               	movf	??_pf_read& (0+255),w,b
  3597  000E56  0100               	movlb	0	; () banked
  3598  000E58  2572               	addwf	(??_pf_read+4)& (0+255),w,b
  3599  000E5A  0100               	movlb	0	; () banked
  3600  000E5C  6F80               	movwf	pf_read@remain& (0+255),b
  3601  000E5E  0100               	movlb	0	; () banked
  3602  000E60  516F               	movf	(??_pf_read+1)& (0+255),w,b
  3603  000E62  0100               	movlb	0	; () banked
  3604  000E64  2173               	addwfc	(??_pf_read+5)& (0+255),w,b
  3605  000E66  0100               	movlb	0	; () banked
  3606  000E68  6F81               	movwf	(pf_read@remain+1)& (0+255),b
  3607  000E6A  0100               	movlb	0	; () banked
  3608  000E6C  5170               	movf	(??_pf_read+2)& (0+255),w,b
  3609  000E6E  0100               	movlb	0	; () banked
  3610  000E70  2174               	addwfc	(??_pf_read+6)& (0+255),w,b
  3611  000E72  0100               	movlb	0	; () banked
  3612  000E74  6F82               	movwf	(pf_read@remain+2)& (0+255),b
  3613  000E76  0100               	movlb	0	; () banked
  3614  000E78  5171               	movf	(??_pf_read+3)& (0+255),w,b
  3615  000E7A  0100               	movlb	0	; () banked
  3616  000E7C  2175               	addwfc	(??_pf_read+7)& (0+255),w,b
  3617  000E7E  0100               	movlb	0	; () banked
  3618  000E80  6F83               	movwf	(pf_read@remain+3)& (0+255),b
  3619                           
  3620                           ; BSR set to: 0
  3621                           ;pff.c: 596: if (btr > remain) btr = (WORD)remain;
  3622  000E82  503D               	movf	pf_read@btr,w,c
  3623  000E84  0100               	movlb	0	; () banked
  3624  000E86  6F6E               	movwf	??_pf_read& (0+255),b
  3625  000E88  503E               	movf	pf_read@btr+1,w,c
  3626  000E8A  0100               	movlb	0	; () banked
  3627  000E8C  6F6F               	movwf	(??_pf_read+1)& (0+255),b
  3628  000E8E  0100               	movlb	0	; () banked
  3629  000E90  6B70               	clrf	(??_pf_read+2)& (0+255),b
  3630  000E92  0100               	movlb	0	; () banked
  3631  000E94  6B71               	clrf	(??_pf_read+3)& (0+255),b
  3632  000E96  0100               	movlb	0	; () banked
  3633  000E98  516E               	movf	??_pf_read& (0+255),w,b
  3634  000E9A  0100               	movlb	0	; () banked
  3635  000E9C  5D80               	subwf	pf_read@remain& (0+255),w,b
  3636  000E9E  0100               	movlb	0	; () banked
  3637  000EA0  516F               	movf	(??_pf_read+1)& (0+255),w,b
  3638  000EA2  0100               	movlb	0	; () banked
  3639  000EA4  5981               	subwfb	(pf_read@remain+1)& (0+255),w,b
  3640  000EA6  0100               	movlb	0	; () banked
  3641  000EA8  5170               	movf	(??_pf_read+2)& (0+255),w,b
  3642  000EAA  0100               	movlb	0	; () banked
  3643  000EAC  5982               	subwfb	(pf_read@remain+2)& (0+255),w,b
  3644  000EAE  0100               	movlb	0	; () banked
  3645  000EB0  5171               	movf	(??_pf_read+3)& (0+255),w,b
  3646  000EB2  0100               	movlb	0	; () banked
  3647  000EB4  5983               	subwfb	(pf_read@remain+3)& (0+255),w,b
  3648  000EB6  B0D8               	btfsc	status,0,c
  3649  000EB8  D1F6               	goto	l5220
  3650                           
  3651                           ; BSR set to: 0
  3652  000EBA  C080  F03D         	movff	pf_read@remain,pf_read@btr
  3653  000EBE  C081  F03E         	movff	pf_read@remain+1,pf_read@btr+1
  3654  000EC2  D1F1               	goto	l5220
  3655  000EC4                     l5172:
  3656                           
  3657                           ; BSR set to: 0
  3658                           ;pff.c: 599: if ((fs->fptr % 512) == 0) {
  3659  000EC4  0100               	movlb	0	; () banked
  3660  000EC6  EE20 F018          	lfsr	2,24
  3661  000ECA  0100               	movlb	0	; () banked
  3662  000ECC  518A               	movf	pf_read@fs& (0+255),w,b
  3663  000ECE  26D9               	addwf	fsr2l,f,c
  3664  000ED0  0100               	movlb	0	; () banked
  3665  000ED2  518B               	movf	(pf_read@fs+1)& (0+255),w,b
  3666  000ED4  22DA               	addwfc	fsr2h,f,c
  3667  000ED6  0EFF               	movlw	255
  3668  000ED8  14DE               	andwf	postinc2,w,c
  3669  000EDA  0100               	movlb	0	; () banked
  3670  000EDC  6F6E               	movwf	??_pf_read& (0+255),b
  3671  000EDE  0E01               	movlw	1
  3672  000EE0  14DE               	andwf	postinc2,w,c
  3673  000EE2  0100               	movlb	0	; () banked
  3674  000EE4  6F6F               	movwf	(??_pf_read+1)& (0+255),b
  3675  000EE6  0E00               	movlw	0
  3676  000EE8  14DE               	andwf	postinc2,w,c
  3677  000EEA  0100               	movlb	0	; () banked
  3678  000EEC  6F70               	movwf	(??_pf_read+2)& (0+255),b
  3679  000EEE  0E00               	movlw	0
  3680  000EF0  14DE               	andwf	postinc2,w,c
  3681  000EF2  0100               	movlb	0	; () banked
  3682  000EF4  6F71               	movwf	(??_pf_read+3)& (0+255),b
  3683  000EF6  0100               	movlb	0	; () banked
  3684  000EF8  5171               	movf	(??_pf_read+3)& (0+255),w,b
  3685  000EFA  116E               	iorwf	??_pf_read& (0+255),w,b
  3686  000EFC  116F               	iorwf	(??_pf_read+1)& (0+255),w,b
  3687  000EFE  1170               	iorwf	(??_pf_read+2)& (0+255),w,b
  3688  000F00  A4D8               	btfss	status,2,c
  3689  000F02  D127               	goto	l182
  3690                           
  3691                           ; BSR set to: 0
  3692                           ;pff.c: 600: if ((fs->fptr / 512 % fs->csize) == 0) {
  3693  000F04  0100               	movlb	0	; () banked
  3694  000F06  EE20 F018          	lfsr	2,24
  3695  000F0A  0100               	movlb	0	; () banked
  3696  000F0C  518A               	movf	pf_read@fs& (0+255),w,b
  3697  000F0E  26D9               	addwf	fsr2l,f,c
  3698  000F10  0100               	movlb	0	; () banked
  3699  000F12  518B               	movf	(pf_read@fs+1)& (0+255),w,b
  3700  000F14  22DA               	addwfc	fsr2h,f,c
  3701  000F16  CFDE F06E          	movff	postinc2,??_pf_read
  3702  000F1A  CFDE F06F          	movff	postinc2,??_pf_read+1
  3703  000F1E  CFDE F070          	movff	postinc2,??_pf_read+2
  3704  000F22  CFDE F071          	movff	postinc2,??_pf_read+3
  3705  000F26  0E0A               	movlw	10
  3706  000F28  D006               	goto	u5810
  3707  000F2A                     u5815:
  3708  000F2A  0100               	movlb	0	; () banked
  3709  000F2C  90D8               	bcf	status,0,c
  3710  000F2E  3371               	rrcf	(??_pf_read+3)& (0+255),f,b
  3711  000F30  3370               	rrcf	(??_pf_read+2)& (0+255),f,b
  3712  000F32  336F               	rrcf	(??_pf_read+1)& (0+255),f,b
  3713  000F34  336E               	rrcf	??_pf_read& (0+255),f,b
  3714  000F36                     u5810:
  3715  000F36  2EE8               	decfsz	wreg,f,c
  3716  000F38  D7F8               	goto	u5815
  3717  000F3A  C06E  F010         	movff	??_pf_read,___llmod@dividend
  3718  000F3E  C06F  F011         	movff	??_pf_read+1,___llmod@dividend+1
  3719  000F42  C070  F012         	movff	??_pf_read+2,___llmod@dividend+2
  3720  000F46  C071  F013         	movff	??_pf_read+3,___llmod@dividend+3
  3721  000F4A  0100               	movlb	0	; () banked
  3722  000F4C  EE20 F001          	lfsr	2,1
  3723  000F50  0100               	movlb	0	; () banked
  3724  000F52  518A               	movf	pf_read@fs& (0+255),w,b
  3725  000F54  26D9               	addwf	fsr2l,f,c
  3726  000F56  0100               	movlb	0	; () banked
  3727  000F58  518B               	movf	(pf_read@fs+1)& (0+255),w,b
  3728  000F5A  22DA               	addwfc	fsr2h,f,c
  3729  000F5C  50DF               	movf	indf2,w,c
  3730  000F5E  0100               	movlb	0	; () banked
  3731  000F60  6F72               	movwf	(??_pf_read+4)& (0+255),b
  3732  000F62  0100               	movlb	0	; () banked
  3733  000F64  5172               	movf	(??_pf_read+4)& (0+255),w,b
  3734  000F66  6E14               	movwf	___llmod@divisor,c
  3735  000F68  6A15               	clrf	___llmod@divisor+1,c
  3736  000F6A  6A16               	clrf	___llmod@divisor+2,c
  3737  000F6C  6A17               	clrf	___llmod@divisor+3,c
  3738  000F6E  EC20  F01D         	call	___llmod	;wreg free
  3739  000F72  C010  F073         	movff	?___llmod,??_pf_read+5
  3740  000F76  C011  F074         	movff	?___llmod+1,??_pf_read+6
  3741  000F7A  C012  F075         	movff	?___llmod+2,??_pf_read+7
  3742  000F7E  C013  F076         	movff	?___llmod+3,??_pf_read+8
  3743  000F82  0100               	movlb	0	; () banked
  3744  000F84  5176               	movf	(??_pf_read+8)& (0+255),w,b
  3745  000F86  1173               	iorwf	(??_pf_read+5)& (0+255),w,b
  3746  000F88  1174               	iorwf	(??_pf_read+6)& (0+255),w,b
  3747  000F8A  1175               	iorwf	(??_pf_read+7)& (0+255),w,b
  3748  000F8C  A4D8               	btfss	status,2,c
  3749  000F8E  D081               	goto	l5188
  3750                           
  3751                           ; BSR set to: 0
  3752                           ;pff.c: 601: clst = (fs->fptr == 0) ?
  3753                           ;pff.c: 602: fs->org_clust : get_fat(fs->curr_clust);
  3754  000F90  0100               	movlb	0	; () banked
  3755  000F92  EE20 F018          	lfsr	2,24
  3756  000F96  0100               	movlb	0	; () banked
  3757  000F98  518A               	movf	pf_read@fs& (0+255),w,b
  3758  000F9A  26D9               	addwf	fsr2l,f,c
  3759  000F9C  0100               	movlb	0	; () banked
  3760  000F9E  518B               	movf	(pf_read@fs+1)& (0+255),w,b
  3761  000FA0  22DA               	addwfc	fsr2h,f,c
  3762  000FA2  CFDE F06E          	movff	postinc2,??_pf_read
  3763  000FA6  CFDE F06F          	movff	postinc2,??_pf_read+1
  3764  000FAA  CFDE F070          	movff	postinc2,??_pf_read+2
  3765  000FAE  CFDE F071          	movff	postinc2,??_pf_read+3
  3766  000FB2  0100               	movlb	0	; () banked
  3767  000FB4  5171               	movf	(??_pf_read+3)& (0+255),w,b
  3768  000FB6  116E               	iorwf	??_pf_read& (0+255),w,b
  3769  000FB8  116F               	iorwf	(??_pf_read+1)& (0+255),w,b
  3770  000FBA  1170               	iorwf	(??_pf_read+2)& (0+255),w,b
  3771  000FBC  B4D8               	btfsc	status,2,c
  3772  000FBE  D01C               	goto	l5180
  3773                           
  3774                           ; BSR set to: 0
  3775  000FC0  0100               	movlb	0	; () banked
  3776  000FC2  EE20 F024          	lfsr	2,36
  3777  000FC6  0100               	movlb	0	; () banked
  3778  000FC8  518A               	movf	pf_read@fs& (0+255),w,b
  3779  000FCA  26D9               	addwf	fsr2l,f,c
  3780  000FCC  0100               	movlb	0	; () banked
  3781  000FCE  518B               	movf	(pf_read@fs+1)& (0+255),w,b
  3782  000FD0  22DA               	addwfc	fsr2h,f,c
  3783  000FD2  CFDE F02D          	movff	postinc2,get_fat@clst
  3784  000FD6  CFDE F02E          	movff	postinc2,get_fat@clst+1
  3785  000FDA  CFDE F02F          	movff	postinc2,get_fat@clst+2
  3786  000FDE  CFDE F030          	movff	postinc2,get_fat@clst+3
  3787  000FE2  ECC5  F00B         	call	_get_fat	;wreg free
  3788  000FE6  C02D  F084         	movff	?_get_fat,pf_read@clst
  3789  000FEA  C02E  F085         	movff	?_get_fat+1,pf_read@clst+1
  3790  000FEE  C02F  F086         	movff	?_get_fat+2,pf_read@clst+2
  3791  000FF2  C030  F087         	movff	?_get_fat+3,pf_read@clst+3
  3792  000FF6  D015               	goto	l5182
  3793  000FF8                     l5180:
  3794  000FF8  0100               	movlb	0	; () banked
  3795  000FFA  EE20 F020          	lfsr	2,32
  3796  000FFE  0100               	movlb	0	; () banked
  3797  001000  518A               	movf	pf_read@fs& (0+255),w,b
  3798  001002  26D9               	addwf	fsr2l,f,c
  3799  001004  0100               	movlb	0	; () banked
  3800  001006  518B               	movf	(pf_read@fs+1)& (0+255),w,b
  3801  001008  22DA               	addwfc	fsr2h,f,c
  3802  00100A  0100               	movlb	0	; () banked
  3803  00100C  CFDE F084          	movff	postinc2,pf_read@clst
  3804  001010  0100               	movlb	0	; () banked
  3805  001012  CFDE F085          	movff	postinc2,pf_read@clst+1
  3806  001016  0100               	movlb	0	; () banked
  3807  001018  CFDE F086          	movff	postinc2,pf_read@clst+2
  3808  00101C  0100               	movlb	0	; () banked
  3809  00101E  CFDE F087          	movff	postinc2,pf_read@clst+3
  3810  001022                     l5182:
  3811                           
  3812                           ;pff.c: 603: if (clst <= 1) goto fr_abort;
  3813  001022  0E02               	movlw	2
  3814  001024  0100               	movlb	0	; () banked
  3815  001026  6F6E               	movwf	??_pf_read& (0+255),b
  3816  001028  6B6F               	clrf	(??_pf_read+1)& (0+255),b
  3817  00102A  6B70               	clrf	(??_pf_read+2)& (0+255),b
  3818  00102C  6B71               	clrf	(??_pf_read+3)& (0+255),b
  3819  00102E  0100               	movlb	0	; () banked
  3820  001030  516E               	movf	??_pf_read& (0+255),w,b
  3821  001032  0100               	movlb	0	; () banked
  3822  001034  5D84               	subwf	pf_read@clst& (0+255),w,b
  3823  001036  0100               	movlb	0	; () banked
  3824  001038  516F               	movf	(??_pf_read+1)& (0+255),w,b
  3825  00103A  0100               	movlb	0	; () banked
  3826  00103C  5985               	subwfb	(pf_read@clst+1)& (0+255),w,b
  3827  00103E  0100               	movlb	0	; () banked
  3828  001040  5170               	movf	(??_pf_read+2)& (0+255),w,b
  3829  001042  0100               	movlb	0	; () banked
  3830  001044  5986               	subwfb	(pf_read@clst+2)& (0+255),w,b
  3831  001046  0100               	movlb	0	; () banked
  3832  001048  5171               	movf	(??_pf_read+3)& (0+255),w,b
  3833  00104A  0100               	movlb	0	; () banked
  3834  00104C  5987               	subwfb	(pf_read@clst+3)& (0+255),w,b
  3835  00104E  A0D8               	btfss	status,0,c
  3836  001050  D130               	goto	l5226
  3837                           
  3838                           ; BSR set to: 0
  3839                           ;pff.c: 604: fs->curr_clust = clst;
  3840                           
  3841                           ; BSR set to: 0
  3842                           
  3843                           ; BSR set to: 0
  3844  001052  0100               	movlb	0	; () banked
  3845  001054  EE20 F024          	lfsr	2,36
  3846  001058  0100               	movlb	0	; () banked
  3847  00105A  518A               	movf	pf_read@fs& (0+255),w,b
  3848  00105C  26D9               	addwf	fsr2l,f,c
  3849  00105E  0100               	movlb	0	; () banked
  3850  001060  518B               	movf	(pf_read@fs+1)& (0+255),w,b
  3851  001062  22DA               	addwfc	fsr2h,f,c
  3852  001064  0100               	movlb	0	; () banked
  3853  001066  C084  FFDE         	movff	pf_read@clst,postinc2
  3854  00106A  0100               	movlb	0	; () banked
  3855  00106C  C085  FFDE         	movff	pf_read@clst+1,postinc2
  3856  001070  0100               	movlb	0	; () banked
  3857  001072  C086  FFDE         	movff	pf_read@clst+2,postinc2
  3858  001076  0100               	movlb	0	; () banked
  3859  001078  C087  FFDE         	movff	pf_read@clst+3,postinc2
  3860                           
  3861                           ;pff.c: 605: fs->csect = 0;
  3862  00107C  0100               	movlb	0	; () banked
  3863  00107E  EE20 F003          	lfsr	2,3
  3864  001082  0100               	movlb	0	; () banked
  3865  001084  518A               	movf	pf_read@fs& (0+255),w,b
  3866  001086  26D9               	addwf	fsr2l,f,c
  3867  001088  0100               	movlb	0	; () banked
  3868  00108A  518B               	movf	(pf_read@fs+1)& (0+255),w,b
  3869  00108C  22DA               	addwfc	fsr2h,f,c
  3870  00108E  0E00               	movlw	0
  3871  001090  6EDF               	movwf	indf2,c
  3872  001092                     l5188:
  3873                           
  3874                           ; BSR set to: 0
  3875                           ;pff.c: 606: }
  3876                           ;pff.c: 607: sect = clust2sect(fs->curr_clust);
  3877  001092  0100               	movlb	0	; () banked
  3878  001094  EE20 F024          	lfsr	2,36
  3879  001098  0100               	movlb	0	; () banked
  3880  00109A  518A               	movf	pf_read@fs& (0+255),w,b
  3881  00109C  26D9               	addwf	fsr2l,f,c
  3882  00109E  0100               	movlb	0	; () banked
  3883  0010A0  518B               	movf	(pf_read@fs+1)& (0+255),w,b
  3884  0010A2  22DA               	addwfc	fsr2h,f,c
  3885  0010A4  CFDE F01C          	movff	postinc2,clust2sect@clst
  3886  0010A8  CFDE F01D          	movff	postinc2,clust2sect@clst+1
  3887  0010AC  CFDE F01E          	movff	postinc2,clust2sect@clst+2
  3888  0010B0  CFDE F01F          	movff	postinc2,clust2sect@clst+3
  3889  0010B4  ECDE  F01A         	call	_clust2sect	;wreg free
  3890  0010B8  C01C  F07C         	movff	?_clust2sect,pf_read@sect
  3891  0010BC  C01D  F07D         	movff	?_clust2sect+1,pf_read@sect+1
  3892  0010C0  C01E  F07E         	movff	?_clust2sect+2,pf_read@sect+2
  3893  0010C4  C01F  F07F         	movff	?_clust2sect+3,pf_read@sect+3
  3894                           
  3895                           ;pff.c: 608: if (!sect) goto fr_abort;
  3896  0010C8  0100               	movlb	0	; () banked
  3897  0010CA  517F               	movf	(pf_read@sect+3)& (0+255),w,b
  3898  0010CC  117C               	iorwf	pf_read@sect& (0+255),w,b
  3899  0010CE  117D               	iorwf	(pf_read@sect+1)& (0+255),w,b
  3900  0010D0  117E               	iorwf	(pf_read@sect+2)& (0+255),w,b
  3901  0010D2  B4D8               	btfsc	status,2,c
  3902  0010D4  D0EE               	goto	l5226
  3903                           
  3904                           ; BSR set to: 0
  3905                           ;pff.c: 609: fs->dsect = sect + fs->csect++;
  3906                           
  3907                           ; BSR set to: 0
  3908                           
  3909                           ; BSR set to: 0
  3910  0010D6  0100               	movlb	0	; () banked
  3911  0010D8  EE20 F003          	lfsr	2,3
  3912  0010DC  0100               	movlb	0	; () banked
  3913  0010DE  518A               	movf	pf_read@fs& (0+255),w,b
  3914  0010E0  26D9               	addwf	fsr2l,f,c
  3915  0010E2  0100               	movlb	0	; () banked
  3916  0010E4  518B               	movf	(pf_read@fs+1)& (0+255),w,b
  3917  0010E6  22DA               	addwfc	fsr2h,f,c
  3918  0010E8  50DF               	movf	indf2,w,c
  3919  0010EA  0100               	movlb	0	; () banked
  3920  0010EC  6F6E               	movwf	??_pf_read& (0+255),b
  3921  0010EE  0100               	movlb	0	; () banked
  3922  0010F0  516E               	movf	??_pf_read& (0+255),w,b
  3923  0010F2  0100               	movlb	0	; () banked
  3924  0010F4  257C               	addwf	pf_read@sect& (0+255),w,b
  3925  0010F6  0100               	movlb	0	; () banked
  3926  0010F8  6F6F               	movwf	(??_pf_read+1)& (0+255),b
  3927  0010FA  0E00               	movlw	0
  3928  0010FC  0100               	movlb	0	; () banked
  3929  0010FE  217D               	addwfc	(pf_read@sect+1)& (0+255),w,b
  3930  001100  0100               	movlb	0	; () banked
  3931  001102  6F70               	movwf	(??_pf_read+2)& (0+255),b
  3932  001104  0E00               	movlw	0
  3933  001106  0100               	movlb	0	; () banked
  3934  001108  217E               	addwfc	(pf_read@sect+2)& (0+255),w,b
  3935  00110A  0100               	movlb	0	; () banked
  3936  00110C  6F71               	movwf	(??_pf_read+3)& (0+255),b
  3937  00110E  0E00               	movlw	0
  3938  001110  0100               	movlb	0	; () banked
  3939  001112  217F               	addwfc	(pf_read@sect+3)& (0+255),w,b
  3940  001114  0100               	movlb	0	; () banked
  3941  001116  6F72               	movwf	(??_pf_read+4)& (0+255),b
  3942  001118  0100               	movlb	0	; () banked
  3943  00111A  EE20 F028          	lfsr	2,40
  3944  00111E  0100               	movlb	0	; () banked
  3945  001120  518A               	movf	pf_read@fs& (0+255),w,b
  3946  001122  26D9               	addwf	fsr2l,f,c
  3947  001124  0100               	movlb	0	; () banked
  3948  001126  518B               	movf	(pf_read@fs+1)& (0+255),w,b
  3949  001128  22DA               	addwfc	fsr2h,f,c
  3950  00112A  C06F  FFDE         	movff	??_pf_read+1,postinc2
  3951  00112E  C070  FFDE         	movff	??_pf_read+2,postinc2
  3952  001132  C071  FFDE         	movff	??_pf_read+3,postinc2
  3953  001136  C072  FFDD         	movff	??_pf_read+4,postdec2
  3954  00113A  06D9               	decf	fsr2l,f,c
  3955  00113C  06D9               	decf	fsr2l,f,c
  3956  00113E  0100               	movlb	0	; () banked
  3957  001140  EE20 F003          	lfsr	2,3
  3958  001144  0100               	movlb	0	; () banked
  3959  001146  518A               	movf	pf_read@fs& (0+255),w,b
  3960  001148  26D9               	addwf	fsr2l,f,c
  3961  00114A  0100               	movlb	0	; () banked
  3962  00114C  518B               	movf	(pf_read@fs+1)& (0+255),w,b
  3963  00114E  22DA               	addwfc	fsr2h,f,c
  3964  001150  2ADF               	incf	indf2,f,c
  3965  001152                     l182:
  3966                           
  3967                           ; BSR set to: 0
  3968                           ;pff.c: 610: }
  3969                           ;pff.c: 611: rcnt = 512 - ((WORD)fs->fptr % 512);
  3970  001152  0EFF               	movlw	255
  3971  001154  0100               	movlb	0	; () banked
  3972  001156  6F6E               	movwf	??_pf_read& (0+255),b
  3973  001158  0E01               	movlw	1
  3974  00115A  6F6F               	movwf	(??_pf_read+1)& (0+255),b
  3975  00115C  0100               	movlb	0	; () banked
  3976  00115E  EE20 F018          	lfsr	2,24
  3977  001162  0100               	movlb	0	; () banked
  3978  001164  518A               	movf	pf_read@fs& (0+255),w,b
  3979  001166  26D9               	addwf	fsr2l,f,c
  3980  001168  0100               	movlb	0	; () banked
  3981  00116A  518B               	movf	(pf_read@fs+1)& (0+255),w,b
  3982  00116C  22DA               	addwfc	fsr2h,f,c
  3983  00116E  CFDE F070          	movff	postinc2,??_pf_read+2
  3984  001172  CFDD F071          	movff	postdec2,??_pf_read+3
  3985  001176  0100               	movlb	0	; () banked
  3986  001178  516E               	movf	??_pf_read& (0+255),w,b
  3987  00117A  0100               	movlb	0	; () banked
  3988  00117C  1770               	andwf	(??_pf_read+2)& (0+255),f,b
  3989  00117E  0100               	movlb	0	; () banked
  3990  001180  516F               	movf	(??_pf_read+1)& (0+255),w,b
  3991  001182  0100               	movlb	0	; () banked
  3992  001184  1771               	andwf	(??_pf_read+3)& (0+255),f,b
  3993  001186  0100               	movlb	0	; () banked
  3994  001188  1F70               	comf	(??_pf_read+2)& (0+255),f,b
  3995  00118A  1F71               	comf	(??_pf_read+3)& (0+255),f,b
  3996  00118C  4B70               	infsnz	(??_pf_read+2)& (0+255),f,b
  3997  00118E  2B71               	incf	(??_pf_read+3)& (0+255),f,b
  3998  001190  0E00               	movlw	0
  3999  001192  0100               	movlb	0	; () banked
  4000  001194  2570               	addwf	(??_pf_read+2)& (0+255),w,b
  4001  001196  0100               	movlb	0	; () banked
  4002  001198  6F88               	movwf	pf_read@rcnt& (0+255),b
  4003  00119A  0E02               	movlw	2
  4004  00119C  0100               	movlb	0	; () banked
  4005  00119E  2171               	addwfc	(??_pf_read+3)& (0+255),w,b
  4006  0011A0  0100               	movlb	0	; () banked
  4007  0011A2  6F89               	movwf	(pf_read@rcnt+1)& (0+255),b
  4008                           
  4009                           ; BSR set to: 0
  4010                           ;pff.c: 612: if (rcnt > btr) rcnt = btr;
  4011  0011A4  0100               	movlb	0	; () banked
  4012  0011A6  5188               	movf	pf_read@rcnt& (0+255),w,b
  4013  0011A8  5C3D               	subwf	pf_read@btr,w,c
  4014  0011AA  0100               	movlb	0	; () banked
  4015  0011AC  5189               	movf	(pf_read@rcnt+1)& (0+255),w,b
  4016  0011AE  583E               	subwfb	pf_read@btr+1,w,c
  4017  0011B0  B0D8               	btfsc	status,0,c
  4018  0011B2  D004               	goto	l5200
  4019                           
  4020                           ; BSR set to: 0
  4021  0011B4  C03D  F088         	movff	pf_read@btr,pf_read@rcnt
  4022  0011B8  C03E  F089         	movff	pf_read@btr+1,pf_read@rcnt+1
  4023  0011BC                     l5200:
  4024                           
  4025                           ; BSR set to: 0
  4026                           ;pff.c: 613: dr = disk_readp(!buff ? 0 : rbuff, fs->dsect, (WORD)(fs->fptr % 512), rcnt)
      +                          ;
  4027  0011BC  503C               	movf	pf_read@buff+1,w,c
  4028  0011BE  103B               	iorwf	pf_read@buff,w,c
  4029  0011C0  B4D8               	btfsc	status,2,c
  4030  0011C2  D007               	goto	l5204
  4031                           
  4032                           ; BSR set to: 0
  4033  0011C4  0100               	movlb	0	; () banked
  4034  0011C6  C079  F07B         	movff	pf_read@rbuff+1,_pf_read$348+1
  4035  0011CA  0100               	movlb	0	; () banked
  4036  0011CC  C078  F07A         	movff	pf_read@rbuff,_pf_read$348
  4037  0011D0  D006               	goto	l5206
  4038  0011D2                     l5204:
  4039                           
  4040                           ; BSR set to: 0
  4041  0011D2  0E00               	movlw	0
  4042  0011D4  0100               	movlb	0	; () banked
  4043  0011D6  6F7B               	movwf	(_pf_read$348+1)& (0+255),b
  4044  0011D8  0E00               	movlw	0
  4045  0011DA  0100               	movlb	0	; () banked
  4046  0011DC  6F7A               	movwf	_pf_read$348& (0+255),b
  4047  0011DE                     l5206:
  4048                           
  4049                           ; BSR set to: 0
  4050  0011DE  0100               	movlb	0	; () banked
  4051  0011E0  C07B  F01E         	movff	_pf_read$348+1,disk_readp@buff+1
  4052  0011E4  0100               	movlb	0	; () banked
  4053  0011E6  C07A  F01D         	movff	_pf_read$348,disk_readp@buff
  4054  0011EA  0100               	movlb	0	; () banked
  4055  0011EC  EE20 F028          	lfsr	2,40
  4056  0011F0  0100               	movlb	0	; () banked
  4057  0011F2  518A               	movf	pf_read@fs& (0+255),w,b
  4058  0011F4  26D9               	addwf	fsr2l,f,c
  4059  0011F6  0100               	movlb	0	; () banked
  4060  0011F8  518B               	movf	(pf_read@fs+1)& (0+255),w,b
  4061  0011FA  22DA               	addwfc	fsr2h,f,c
  4062  0011FC  CFDE F01F          	movff	postinc2,disk_readp@lba
  4063  001200  CFDE F020          	movff	postinc2,disk_readp@lba+1
  4064  001204  CFDE F021          	movff	postinc2,disk_readp@lba+2
  4065  001208  CFDE F022          	movff	postinc2,disk_readp@lba+3
  4066  00120C  0100               	movlb	0	; () banked
  4067  00120E  EE20 F018          	lfsr	2,24
  4068  001212  0100               	movlb	0	; () banked
  4069  001214  518A               	movf	pf_read@fs& (0+255),w,b
  4070  001216  26D9               	addwf	fsr2l,f,c
  4071  001218  0100               	movlb	0	; () banked
  4072  00121A  518B               	movf	(pf_read@fs+1)& (0+255),w,b
  4073  00121C  22DA               	addwfc	fsr2h,f,c
  4074  00121E  CFDE F06E          	movff	postinc2,??_pf_read
  4075  001222  CFDD F06F          	movff	postdec2,??_pf_read+1
  4076  001226  0EFF               	movlw	255
  4077  001228  0100               	movlb	0	; () banked
  4078  00122A  156E               	andwf	??_pf_read& (0+255),w,b
  4079  00122C  6E23               	movwf	disk_readp@ofs,c
  4080  00122E  0E01               	movlw	1
  4081  001230  0100               	movlb	0	; () banked
  4082  001232  156F               	andwf	(??_pf_read+1)& (0+255),w,b
  4083  001234  6E24               	movwf	disk_readp@ofs+1,c
  4084  001236  C088  F025         	movff	pf_read@rcnt,disk_readp@cnt
  4085  00123A  C089  F026         	movff	pf_read@rcnt+1,disk_readp@cnt+1
  4086  00123E  EC71  F01A         	call	_disk_readp	;wreg free
  4087  001242  0100               	movlb	0	; () banked
  4088  001244  6F77               	movwf	pf_read@dr& (0+255),b
  4089                           
  4090                           ; BSR set to: 0
  4091                           ;pff.c: 614: if (dr) goto fr_abort;
  4092  001246  0100               	movlb	0	; () banked
  4093  001248  5177               	movf	pf_read@dr& (0+255),w,b
  4094  00124A  A4D8               	btfss	status,2,c
  4095  00124C  D032               	goto	l5226
  4096                           
  4097                           ; BSR set to: 0
  4098                           ;pff.c: 615: fs->fptr += rcnt; rbuff += rcnt;
  4099                           
  4100                           ; BSR set to: 0
  4101                           
  4102                           ; BSR set to: 0
  4103  00124E  0100               	movlb	0	; () banked
  4104  001250  EE20 F018          	lfsr	2,24
  4105  001254  0100               	movlb	0	; () banked
  4106  001256  518A               	movf	pf_read@fs& (0+255),w,b
  4107  001258  26D9               	addwf	fsr2l,f,c
  4108  00125A  0100               	movlb	0	; () banked
  4109  00125C  518B               	movf	(pf_read@fs+1)& (0+255),w,b
  4110  00125E  22DA               	addwfc	fsr2h,f,c
  4111  001260  0100               	movlb	0	; () banked
  4112  001262  5188               	movf	pf_read@rcnt& (0+255),w,b
  4113  001264  26DE               	addwf	postinc2,f,c
  4114  001266  0100               	movlb	0	; () banked
  4115  001268  5189               	movf	(pf_read@rcnt+1)& (0+255),w,b
  4116  00126A  22DE               	addwfc	postinc2,f,c
  4117  00126C  0E00               	movlw	0
  4118  00126E  22DE               	addwfc	postinc2,f,c
  4119  001270  22DD               	addwfc	postdec2,f,c
  4120  001272  52DD               	movf	postdec2,f,c
  4121  001274  52DD               	movf	postdec2,f,c
  4122                           
  4123                           ; BSR set to: 0
  4124  001276  0100               	movlb	0	; () banked
  4125  001278  5188               	movf	pf_read@rcnt& (0+255),w,b
  4126  00127A  0100               	movlb	0	; () banked
  4127  00127C  2778               	addwf	pf_read@rbuff& (0+255),f,b
  4128  00127E  0100               	movlb	0	; () banked
  4129  001280  5189               	movf	(pf_read@rcnt+1)& (0+255),w,b
  4130  001282  0100               	movlb	0	; () banked
  4131  001284  2379               	addwfc	(pf_read@rbuff+1)& (0+255),f,b
  4132                           
  4133                           ; BSR set to: 0
  4134                           ;pff.c: 616: btr -= rcnt; *br += rcnt;
  4135  001286  0100               	movlb	0	; () banked
  4136  001288  5188               	movf	pf_read@rcnt& (0+255),w,b
  4137  00128A  5E3D               	subwf	pf_read@btr,f,c
  4138  00128C  0100               	movlb	0	; () banked
  4139  00128E  5189               	movf	(pf_read@rcnt+1)& (0+255),w,b
  4140  001290  5A3E               	subwfb	pf_read@btr+1,f,c
  4141                           
  4142                           ; BSR set to: 0
  4143  001292  C03F  FFD9         	movff	pf_read@br,fsr2l
  4144  001296  C040  FFDA         	movff	pf_read@br+1,fsr2h
  4145  00129A  0100               	movlb	0	; () banked
  4146  00129C  5188               	movf	pf_read@rcnt& (0+255),w,b
  4147  00129E  26DE               	addwf	postinc2,f,c
  4148  0012A0  0100               	movlb	0	; () banked
  4149  0012A2  5189               	movf	(pf_read@rcnt+1)& (0+255),w,b
  4150  0012A4  22DD               	addwfc	postdec2,f,c
  4151  0012A6                     l5220:
  4152                           
  4153                           ; BSR set to: 0
  4154  0012A6  503E               	movf	pf_read@btr+1,w,c
  4155  0012A8  103D               	iorwf	pf_read@btr,w,c
  4156  0012AA  A4D8               	btfss	status,2,c
  4157  0012AC  D60B               	goto	l5172
  4158                           
  4159                           ; BSR set to: 0
  4160                           ;pff.c: 617: }
  4161                           ;pff.c: 619: return FR_OK;
  4162                           
  4163                           ; BSR set to: 0
  4164  0012AE  0E00               	movlw	0
  4165  0012B0  D00C               	goto	l177
  4166  0012B2                     l5226:
  4167                           
  4168                           ; BSR set to: 0
  4169                           ;pff.c: 622: fs->flag = 0;
  4170  0012B2  0100               	movlb	0	; () banked
  4171  0012B4  EE20 F002          	lfsr	2,2
  4172  0012B8  0100               	movlb	0	; () banked
  4173  0012BA  518A               	movf	pf_read@fs& (0+255),w,b
  4174  0012BC  26D9               	addwf	fsr2l,f,c
  4175  0012BE  0100               	movlb	0	; () banked
  4176  0012C0  518B               	movf	(pf_read@fs+1)& (0+255),w,b
  4177  0012C2  22DA               	addwfc	fsr2h,f,c
  4178  0012C4  0E00               	movlw	0
  4179  0012C6  6EDF               	movwf	indf2,c
  4180                           
  4181                           ; BSR set to: 0
  4182                           ;pff.c: 623: return FR_DISK_ERR;
  4183  0012C8  0E01               	movlw	1
  4184  0012CA                     l177:
  4185                           
  4186                           ; BSR set to: 0
  4187  0012CA  0012               	return	
  4188  0012CC                     __end_of_pf_read:
  4189                           	opt stack 0
  4190                           tblptru	equ	0xFF8
  4191                           tblptrh	equ	0xFF7
  4192                           tblptrl	equ	0xFF6
  4193                           tablat	equ	0xFF5
  4194                           intcon	equ	0xFF2
  4195                           postinc0	equ	0xFEE
  4196                           wreg	equ	0xFE8
  4197                           postdec1	equ	0xFE5
  4198                           fsr1h	equ	0xFE2
  4199                           fsr1l	equ	0xFE1
  4200                           indf2	equ	0xFDF
  4201                           postinc2	equ	0xFDE
  4202                           postdec2	equ	0xFDD
  4203                           fsr2h	equ	0xFDA
  4204                           fsr2l	equ	0xFD9
  4205                           status	equ	0xFD8
  4206                           
  4207 ;; *************** function ___llmod *****************
  4208 ;; Defined at:
  4209 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\llmod.c"
  4210 ;; Parameters:    Size  Location     Type
  4211 ;;  dividend        4   15[COMRAM] unsigned long 
  4212 ;;  divisor         4   19[COMRAM] unsigned long 
  4213 ;; Auto vars:     Size  Location     Type
  4214 ;;  counter         1   23[COMRAM] unsigned char 
  4215 ;; Return value:  Size  Location     Type
  4216 ;;                  4   15[COMRAM] unsigned long 
  4217 ;; Registers used:
  4218 ;;		wreg, status,2, status,0
  4219 ;; Tracked objects:
  4220 ;;		On entry : 0/0
  4221 ;;		On exit  : 0/0
  4222 ;;		Unchanged: 0/0
  4223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4224 ;;      Params:         8       0       0       0       0       0       0       0       0
  4225 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4226 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4227 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4228 ;;Total ram usage:        9 bytes
  4229 ;; Hardware stack levels used:    1
  4230 ;; Hardware stack levels required when called:    2
  4231 ;; This function calls:
  4232 ;;		Nothing
  4233 ;; This function is called by:
  4234 ;;		_pf_read
  4235 ;; This function uses a non-reentrant model
  4236 ;;
  4237                           
  4238                           	psect	text14
  4239  003A40                     __ptext14:
  4240                           	opt stack 0
  4241  003A40                     ___llmod:
  4242                           	opt stack 25
  4243                           
  4244                           ; BSR set to: 0
  4245                           ;incstack = 0
  4246  003A40  5017               	movf	___llmod@divisor+3,w,c
  4247  003A42  1014               	iorwf	___llmod@divisor,w,c
  4248  003A44  1015               	iorwf	___llmod@divisor+1,w,c
  4249  003A46  1016               	iorwf	___llmod@divisor+2,w,c
  4250  003A48  B4D8               	btfsc	status,2,c
  4251  003A4A  D024               	goto	l1008
  4252  003A4C  0E01               	movlw	1
  4253  003A4E  6E18               	movwf	___llmod@counter,c
  4254  003A50  D006               	goto	l3444
  4255  003A52                     l3442:
  4256  003A52  90D8               	bcf	status,0,c
  4257  003A54  3614               	rlcf	___llmod@divisor,f,c
  4258  003A56  3615               	rlcf	___llmod@divisor+1,f,c
  4259  003A58  3616               	rlcf	___llmod@divisor+2,f,c
  4260  003A5A  3617               	rlcf	___llmod@divisor+3,f,c
  4261  003A5C  2A18               	incf	___llmod@counter,f,c
  4262  003A5E                     l3444:
  4263  003A5E  AE17               	btfss	___llmod@divisor+3,7,c
  4264  003A60  D7F8               	goto	l3442
  4265  003A62                     l3446:
  4266  003A62  5014               	movf	___llmod@divisor,w,c
  4267  003A64  5C10               	subwf	___llmod@dividend,w,c
  4268  003A66  5015               	movf	___llmod@divisor+1,w,c
  4269  003A68  5811               	subwfb	___llmod@dividend+1,w,c
  4270  003A6A  5016               	movf	___llmod@divisor+2,w,c
  4271  003A6C  5812               	subwfb	___llmod@dividend+2,w,c
  4272  003A6E  5017               	movf	___llmod@divisor+3,w,c
  4273  003A70  5813               	subwfb	___llmod@dividend+3,w,c
  4274  003A72  A0D8               	btfss	status,0,c
  4275  003A74  D008               	goto	l3450
  4276  003A76  5014               	movf	___llmod@divisor,w,c
  4277  003A78  5E10               	subwf	___llmod@dividend,f,c
  4278  003A7A  5015               	movf	___llmod@divisor+1,w,c
  4279  003A7C  5A11               	subwfb	___llmod@dividend+1,f,c
  4280  003A7E  5016               	movf	___llmod@divisor+2,w,c
  4281  003A80  5A12               	subwfb	___llmod@dividend+2,f,c
  4282  003A82  5017               	movf	___llmod@divisor+3,w,c
  4283  003A84  5A13               	subwfb	___llmod@dividend+3,f,c
  4284  003A86                     l3450:
  4285  003A86  90D8               	bcf	status,0,c
  4286  003A88  3217               	rrcf	___llmod@divisor+3,f,c
  4287  003A8A  3216               	rrcf	___llmod@divisor+2,f,c
  4288  003A8C  3215               	rrcf	___llmod@divisor+1,f,c
  4289  003A8E  3214               	rrcf	___llmod@divisor,f,c
  4290  003A90  2E18               	decfsz	___llmod@counter,f,c
  4291  003A92  D7E7               	goto	l3446
  4292  003A94                     l1008:
  4293  003A94  C010  F010         	movff	___llmod@dividend,?___llmod
  4294  003A98  C011  F011         	movff	___llmod@dividend+1,?___llmod+1
  4295  003A9C  C012  F012         	movff	___llmod@dividend+2,?___llmod+2
  4296  003AA0  C013  F013         	movff	___llmod@dividend+3,?___llmod+3
  4297  003AA4  0012               	return	
  4298  003AA6                     __end_of___llmod:
  4299                           	opt stack 0
  4300                           tblptru	equ	0xFF8
  4301                           tblptrh	equ	0xFF7
  4302                           tblptrl	equ	0xFF6
  4303                           tablat	equ	0xFF5
  4304                           intcon	equ	0xFF2
  4305                           postinc0	equ	0xFEE
  4306                           wreg	equ	0xFE8
  4307                           postdec1	equ	0xFE5
  4308                           fsr1h	equ	0xFE2
  4309                           fsr1l	equ	0xFE1
  4310                           indf2	equ	0xFDF
  4311                           postinc2	equ	0xFDE
  4312                           postdec2	equ	0xFDD
  4313                           fsr2h	equ	0xFDA
  4314                           fsr2l	equ	0xFD9
  4315                           status	equ	0xFD8
  4316                           
  4317 ;; *************** function _pf_lseek *****************
  4318 ;; Defined at:
  4319 ;;		line 704 in file "../../../PIC18F/pff.c"
  4320 ;; Parameters:    Size  Location     Type
  4321 ;;  ofs             4   58[COMRAM] unsigned long 
  4322 ;; Auto vars:     Size  Location     Type
  4323 ;;  clst            4   38[BANK0 ] unsigned long 
  4324 ;;  bcs             4   34[BANK0 ] unsigned long 
  4325 ;;  ifptr           4   30[BANK0 ] unsigned long 
  4326 ;;  sect            4   26[BANK0 ] unsigned long 
  4327 ;;  fs              2   42[BANK0 ] PTR struct _FATFS_
  4328 ;;		 -> Fs(44), NULL(0), 
  4329 ;; Return value:  Size  Location     Type
  4330 ;;                  1    wreg      enum E48
  4331 ;; Registers used:
  4332 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4333 ;; Tracked objects:
  4334 ;;		On entry : 0/0
  4335 ;;		On exit  : 0/0
  4336 ;;		Unchanged: 0/0
  4337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4338 ;;      Params:         4       0       0       0       0       0       0       0       0
  4339 ;;      Locals:         0      18       0       0       0       0       0       0       0
  4340 ;;      Temps:          0      12       0       0       0       0       0       0       0
  4341 ;;      Totals:         4      30       0       0       0       0       0       0       0
  4342 ;;Total ram usage:       34 bytes
  4343 ;; Hardware stack levels used:    1
  4344 ;; Hardware stack levels required when called:    7
  4345 ;; This function calls:
  4346 ;;		___lldiv
  4347 ;;		_clust2sect
  4348 ;;		_get_fat
  4349 ;; This function is called by:
  4350 ;;		_load_header
  4351 ;; This function uses a non-reentrant model
  4352 ;;
  4353                           
  4354                           	psect	text15
  4355  000808                     __ptext15:
  4356                           	opt stack 0
  4357  000808                     _pf_lseek:
  4358                           	opt stack 20
  4359                           
  4360                           ;pff.c: 708: DWORD clst;
  4361                           ;pff.c: 709: DWORD bcs, sect, ifptr;
  4362                           ;pff.c: 710: FATFS *fs = FatFs;
  4363                           
  4364                           ;incstack = 0
  4365  000808  0100               	movlb	0	; () banked
  4366  00080A  C049  F08B         	movff	_FatFs+1,pf_lseek@fs+1
  4367  00080E  0100               	movlb	0	; () banked
  4368  000810  C048  F08A         	movff	_FatFs,pf_lseek@fs
  4369                           
  4370                           ;pff.c: 713: if (!fs) return FR_NOT_ENABLED;
  4371  000814  0100               	movlb	0	; () banked
  4372  000816  518B               	movf	(pf_lseek@fs+1)& (0+255),w,b
  4373  000818  118A               	iorwf	pf_lseek@fs& (0+255),w,b
  4374  00081A  B4D8               	btfsc	status,2,c
  4375  00081C  D2C1               	goto	l201
  4376                           
  4377                           ; BSR set to: 0
  4378                           ;pff.c: 714: if (!(fs->flag & 0x01))
  4379                           
  4380                           ; BSR set to: 0
  4381                           
  4382                           ; BSR set to: 0
  4383                           ;	Return value of _pf_lseek is never used
  4384  00081E  0100               	movlb	0	; () banked
  4385  000820  EE20 F002          	lfsr	2,2
  4386  000824  0100               	movlb	0	; () banked
  4387  000826  518A               	movf	pf_lseek@fs& (0+255),w,b
  4388  000828  26D9               	addwf	fsr2l,f,c
  4389  00082A  0100               	movlb	0	; () banked
  4390  00082C  518B               	movf	(pf_lseek@fs+1)& (0+255),w,b
  4391  00082E  22DA               	addwfc	fsr2h,f,c
  4392  000830  50DF               	movf	indf2,w,c
  4393  000832  0100               	movlb	0	; () banked
  4394  000834  6F6E               	movwf	??_pf_lseek& (0+255),b
  4395  000836  0100               	movlb	0	; () banked
  4396  000838  A16E               	btfss	??_pf_lseek& (0+255),0,b
  4397  00083A  D2B2               	goto	l201
  4398                           
  4399                           ; BSR set to: 0
  4400                           ;pff.c: 717: if (ofs > fs->fsize) ofs = fs->fsize;
  4401                           
  4402                           ; BSR set to: 0
  4403                           
  4404                           ; BSR set to: 0
  4405                           ;pff.c: 715: return FR_NOT_OPENED;
  4406                           ;	Return value of _pf_lseek is never used
  4407  00083C  0100               	movlb	0	; () banked
  4408  00083E  EE20 F01C          	lfsr	2,28
  4409  000842  0100               	movlb	0	; () banked
  4410  000844  518A               	movf	pf_lseek@fs& (0+255),w,b
  4411  000846  26D9               	addwf	fsr2l,f,c
  4412  000848  0100               	movlb	0	; () banked
  4413  00084A  518B               	movf	(pf_lseek@fs+1)& (0+255),w,b
  4414  00084C  22DA               	addwfc	fsr2h,f,c
  4415  00084E  CFDE F06E          	movff	postinc2,??_pf_lseek
  4416  000852  CFDE F06F          	movff	postinc2,??_pf_lseek+1
  4417  000856  CFDE F070          	movff	postinc2,??_pf_lseek+2
  4418  00085A  CFDE F071          	movff	postinc2,??_pf_lseek+3
  4419  00085E  503B               	movf	pf_lseek@ofs,w,c
  4420  000860  0100               	movlb	0	; () banked
  4421  000862  5D6E               	subwf	??_pf_lseek& (0+255),w,b
  4422  000864  503C               	movf	pf_lseek@ofs+1,w,c
  4423  000866  0100               	movlb	0	; () banked
  4424  000868  596F               	subwfb	(??_pf_lseek+1)& (0+255),w,b
  4425  00086A  503D               	movf	pf_lseek@ofs+2,w,c
  4426  00086C  0100               	movlb	0	; () banked
  4427  00086E  5970               	subwfb	(??_pf_lseek+2)& (0+255),w,b
  4428  000870  503E               	movf	pf_lseek@ofs+3,w,c
  4429  000872  0100               	movlb	0	; () banked
  4430  000874  5971               	subwfb	(??_pf_lseek+3)& (0+255),w,b
  4431  000876  B0D8               	btfsc	status,0,c
  4432  000878  D011               	goto	l203
  4433                           
  4434                           ; BSR set to: 0
  4435  00087A  0100               	movlb	0	; () banked
  4436  00087C  EE20 F01C          	lfsr	2,28
  4437  000880  0100               	movlb	0	; () banked
  4438  000882  518A               	movf	pf_lseek@fs& (0+255),w,b
  4439  000884  26D9               	addwf	fsr2l,f,c
  4440  000886  0100               	movlb	0	; () banked
  4441  000888  518B               	movf	(pf_lseek@fs+1)& (0+255),w,b
  4442  00088A  22DA               	addwfc	fsr2h,f,c
  4443  00088C  CFDE F03B          	movff	postinc2,pf_lseek@ofs
  4444  000890  CFDE F03C          	movff	postinc2,pf_lseek@ofs+1
  4445  000894  CFDE F03D          	movff	postinc2,pf_lseek@ofs+2
  4446  000898  CFDE F03E          	movff	postinc2,pf_lseek@ofs+3
  4447  00089C                     l203:
  4448                           
  4449                           ; BSR set to: 0
  4450                           ;pff.c: 718: ifptr = fs->fptr;
  4451  00089C  0100               	movlb	0	; () banked
  4452  00089E  EE20 F018          	lfsr	2,24
  4453  0008A2  0100               	movlb	0	; () banked
  4454  0008A4  518A               	movf	pf_lseek@fs& (0+255),w,b
  4455  0008A6  26D9               	addwf	fsr2l,f,c
  4456  0008A8  0100               	movlb	0	; () banked
  4457  0008AA  518B               	movf	(pf_lseek@fs+1)& (0+255),w,b
  4458  0008AC  22DA               	addwfc	fsr2h,f,c
  4459  0008AE  0100               	movlb	0	; () banked
  4460  0008B0  CFDE F07E          	movff	postinc2,pf_lseek@ifptr
  4461  0008B4  0100               	movlb	0	; () banked
  4462  0008B6  CFDE F07F          	movff	postinc2,pf_lseek@ifptr+1
  4463  0008BA  0100               	movlb	0	; () banked
  4464  0008BC  CFDE F080          	movff	postinc2,pf_lseek@ifptr+2
  4465  0008C0  0100               	movlb	0	; () banked
  4466  0008C2  CFDE F081          	movff	postinc2,pf_lseek@ifptr+3
  4467                           
  4468                           ;pff.c: 719: fs->fptr = 0;
  4469  0008C6  0100               	movlb	0	; () banked
  4470  0008C8  EE20 F018          	lfsr	2,24
  4471  0008CC  0100               	movlb	0	; () banked
  4472  0008CE  518A               	movf	pf_lseek@fs& (0+255),w,b
  4473  0008D0  26D9               	addwf	fsr2l,f,c
  4474  0008D2  0100               	movlb	0	; () banked
  4475  0008D4  518B               	movf	(pf_lseek@fs+1)& (0+255),w,b
  4476  0008D6  22DA               	addwfc	fsr2h,f,c
  4477  0008D8  6ADE               	clrf	postinc2,c
  4478  0008DA  6ADE               	clrf	postinc2,c
  4479  0008DC  6ADE               	clrf	postinc2,c
  4480  0008DE  6ADD               	clrf	postdec2,c
  4481                           
  4482                           ; BSR set to: 0
  4483                           ;pff.c: 720: if (ofs > 0) {
  4484  0008E0  503E               	movf	pf_lseek@ofs+3,w,c
  4485  0008E2  103B               	iorwf	pf_lseek@ofs,w,c
  4486  0008E4  103C               	iorwf	pf_lseek@ofs+1,w,c
  4487  0008E6  103D               	iorwf	pf_lseek@ofs+2,w,c
  4488  0008E8  B4D8               	btfsc	status,2,c
  4489  0008EA  D25A               	goto	l201
  4490                           
  4491                           ; BSR set to: 0
  4492                           ;pff.c: 721: bcs = (DWORD)fs->csize * 512;
  4493  0008EC  0100               	movlb	0	; () banked
  4494  0008EE  EE20 F001          	lfsr	2,1
  4495  0008F2  0100               	movlb	0	; () banked
  4496  0008F4  518A               	movf	pf_lseek@fs& (0+255),w,b
  4497  0008F6  26D9               	addwf	fsr2l,f,c
  4498  0008F8  0100               	movlb	0	; () banked
  4499  0008FA  518B               	movf	(pf_lseek@fs+1)& (0+255),w,b
  4500  0008FC  22DA               	addwfc	fsr2h,f,c
  4501  0008FE  50DF               	movf	indf2,w,c
  4502  000900  0100               	movlb	0	; () banked
  4503  000902  6F6E               	movwf	??_pf_lseek& (0+255),b
  4504  000904  C06E  F06F         	movff	??_pf_lseek,??_pf_lseek+1
  4505  000908  0100               	movlb	0	; () banked
  4506  00090A  6B70               	clrf	(??_pf_lseek+2)& (0+255),b
  4507  00090C  6B71               	clrf	(??_pf_lseek+3)& (0+255),b
  4508  00090E  6B72               	clrf	(??_pf_lseek+4)& (0+255),b
  4509  000910  0E09               	movlw	9
  4510  000912                     u5945:
  4511  000912  90D8               	bcf	status,0,c
  4512  000914  0100               	movlb	0	; () banked
  4513  000916  376F               	rlcf	(??_pf_lseek+1)& (0+255),f,b
  4514  000918  3770               	rlcf	(??_pf_lseek+2)& (0+255),f,b
  4515  00091A  3771               	rlcf	(??_pf_lseek+3)& (0+255),f,b
  4516  00091C  3772               	rlcf	(??_pf_lseek+4)& (0+255),f,b
  4517  00091E  2EE8               	decfsz	wreg,f,c
  4518  000920  D7F8               	goto	u5945
  4519  000922  C06F  F082         	movff	??_pf_lseek+1,pf_lseek@bcs
  4520  000926  C070  F083         	movff	??_pf_lseek+2,pf_lseek@bcs+1
  4521  00092A  C071  F084         	movff	??_pf_lseek+3,pf_lseek@bcs+2
  4522  00092E  C072  F085         	movff	??_pf_lseek+4,pf_lseek@bcs+3
  4523                           
  4524                           ; BSR set to: 0
  4525                           ;pff.c: 722: if (ifptr > 0 &&
  4526                           ;pff.c: 723: (ofs - 1) / bcs >= (ifptr - 1) / bcs) {
  4527  000932  0100               	movlb	0	; () banked
  4528  000934  5181               	movf	(pf_lseek@ifptr+3)& (0+255),w,b
  4529  000936  117E               	iorwf	pf_lseek@ifptr& (0+255),w,b
  4530  000938  117F               	iorwf	(pf_lseek@ifptr+1)& (0+255),w,b
  4531  00093A  1180               	iorwf	(pf_lseek@ifptr+2)& (0+255),w,b
  4532  00093C  B4D8               	btfsc	status,2,c
  4533  00093E  D0D1               	goto	l5254
  4534                           
  4535                           ; BSR set to: 0
  4536  000940  0EFF               	movlw	255
  4537  000942  0100               	movlb	0	; () banked
  4538  000944  257E               	addwf	pf_lseek@ifptr& (0+255),w,b
  4539  000946  6E10               	movwf	___lldiv@dividend,c
  4540  000948  0EFF               	movlw	255
  4541  00094A  0100               	movlb	0	; () banked
  4542  00094C  217F               	addwfc	(pf_lseek@ifptr+1)& (0+255),w,b
  4543  00094E  6E11               	movwf	___lldiv@dividend+1,c
  4544  000950  0EFF               	movlw	255
  4545  000952  0100               	movlb	0	; () banked
  4546  000954  2180               	addwfc	(pf_lseek@ifptr+2)& (0+255),w,b
  4547  000956  6E12               	movwf	___lldiv@dividend+2,c
  4548  000958  0EFF               	movlw	255
  4549  00095A  0100               	movlb	0	; () banked
  4550  00095C  2181               	addwfc	(pf_lseek@ifptr+3)& (0+255),w,b
  4551  00095E  6E13               	movwf	___lldiv@dividend+3,c
  4552  000960  C082  F014         	movff	pf_lseek@bcs,___lldiv@divisor
  4553  000964  C083  F015         	movff	pf_lseek@bcs+1,___lldiv@divisor+1
  4554  000968  C084  F016         	movff	pf_lseek@bcs+2,___lldiv@divisor+2
  4555  00096C  C085  F017         	movff	pf_lseek@bcs+3,___lldiv@divisor+3
  4556  000970  EC73  F01C         	call	___lldiv	;wreg free
  4557  000974  C010  F06E         	movff	?___lldiv,??_pf_lseek
  4558  000978  C011  F06F         	movff	?___lldiv+1,??_pf_lseek+1
  4559  00097C  C012  F070         	movff	?___lldiv+2,??_pf_lseek+2
  4560  000980  C013  F071         	movff	?___lldiv+3,??_pf_lseek+3
  4561  000984  0EFF               	movlw	255
  4562  000986  243B               	addwf	pf_lseek@ofs,w,c
  4563  000988  6E10               	movwf	___lldiv@dividend,c
  4564  00098A  0EFF               	movlw	255
  4565  00098C  203C               	addwfc	pf_lseek@ofs+1,w,c
  4566  00098E  6E11               	movwf	___lldiv@dividend+1,c
  4567  000990  0EFF               	movlw	255
  4568  000992  203D               	addwfc	pf_lseek@ofs+2,w,c
  4569  000994  6E12               	movwf	___lldiv@dividend+2,c
  4570  000996  0EFF               	movlw	255
  4571  000998  203E               	addwfc	pf_lseek@ofs+3,w,c
  4572  00099A  6E13               	movwf	___lldiv@dividend+3,c
  4573  00099C  C082  F014         	movff	pf_lseek@bcs,___lldiv@divisor
  4574  0009A0  C083  F015         	movff	pf_lseek@bcs+1,___lldiv@divisor+1
  4575  0009A4  C084  F016         	movff	pf_lseek@bcs+2,___lldiv@divisor+2
  4576  0009A8  C085  F017         	movff	pf_lseek@bcs+3,___lldiv@divisor+3
  4577  0009AC  EC73  F01C         	call	___lldiv	;wreg free
  4578  0009B0  C010  F072         	movff	?___lldiv,??_pf_lseek+4
  4579  0009B4  C011  F073         	movff	?___lldiv+1,??_pf_lseek+5
  4580  0009B8  C012  F074         	movff	?___lldiv+2,??_pf_lseek+6
  4581  0009BC  C013  F075         	movff	?___lldiv+3,??_pf_lseek+7
  4582  0009C0  0100               	movlb	0	; () banked
  4583  0009C2  516E               	movf	??_pf_lseek& (0+255),w,b
  4584  0009C4  0100               	movlb	0	; () banked
  4585  0009C6  5D72               	subwf	(??_pf_lseek+4)& (0+255),w,b
  4586  0009C8  0100               	movlb	0	; () banked
  4587  0009CA  516F               	movf	(??_pf_lseek+1)& (0+255),w,b
  4588  0009CC  0100               	movlb	0	; () banked
  4589  0009CE  5973               	subwfb	(??_pf_lseek+5)& (0+255),w,b
  4590  0009D0  0100               	movlb	0	; () banked
  4591  0009D2  5170               	movf	(??_pf_lseek+2)& (0+255),w,b
  4592  0009D4  0100               	movlb	0	; () banked
  4593  0009D6  5974               	subwfb	(??_pf_lseek+6)& (0+255),w,b
  4594  0009D8  0100               	movlb	0	; () banked
  4595  0009DA  5171               	movf	(??_pf_lseek+3)& (0+255),w,b
  4596  0009DC  0100               	movlb	0	; () banked
  4597  0009DE  5975               	subwfb	(??_pf_lseek+7)& (0+255),w,b
  4598  0009E0  A0D8               	btfss	status,0,c
  4599  0009E2  D07F               	goto	l5254
  4600                           
  4601                           ; BSR set to: 0
  4602                           ;pff.c: 724: fs->fptr = (ifptr - 1) & ~(bcs - 1);
  4603  0009E4  0EFF               	movlw	255
  4604  0009E6  0100               	movlb	0	; () banked
  4605  0009E8  2582               	addwf	pf_lseek@bcs& (0+255),w,b
  4606  0009EA  0100               	movlb	0	; () banked
  4607  0009EC  6F6E               	movwf	??_pf_lseek& (0+255),b
  4608  0009EE  0EFF               	movlw	255
  4609  0009F0  0100               	movlb	0	; () banked
  4610  0009F2  2183               	addwfc	(pf_lseek@bcs+1)& (0+255),w,b
  4611  0009F4  0100               	movlb	0	; () banked
  4612  0009F6  6F6F               	movwf	(??_pf_lseek+1)& (0+255),b
  4613  0009F8  0EFF               	movlw	255
  4614  0009FA  0100               	movlb	0	; () banked
  4615  0009FC  2184               	addwfc	(pf_lseek@bcs+2)& (0+255),w,b
  4616  0009FE  0100               	movlb	0	; () banked
  4617  000A00  6F70               	movwf	(??_pf_lseek+2)& (0+255),b
  4618  000A02  0EFF               	movlw	255
  4619  000A04  0100               	movlb	0	; () banked
  4620  000A06  2185               	addwfc	(pf_lseek@bcs+3)& (0+255),w,b
  4621  000A08  0100               	movlb	0	; () banked
  4622  000A0A  6F71               	movwf	(??_pf_lseek+3)& (0+255),b
  4623  000A0C  0100               	movlb	0	; () banked
  4624  000A0E  1F6E               	comf	??_pf_lseek& (0+255),f,b
  4625  000A10  1F6F               	comf	(??_pf_lseek+1)& (0+255),f,b
  4626  000A12  1F70               	comf	(??_pf_lseek+2)& (0+255),f,b
  4627  000A14  1F71               	comf	(??_pf_lseek+3)& (0+255),f,b
  4628  000A16  0EFF               	movlw	255
  4629  000A18  0100               	movlb	0	; () banked
  4630  000A1A  257E               	addwf	pf_lseek@ifptr& (0+255),w,b
  4631  000A1C  0100               	movlb	0	; () banked
  4632  000A1E  6F72               	movwf	(??_pf_lseek+4)& (0+255),b
  4633  000A20  0EFF               	movlw	255
  4634  000A22  0100               	movlb	0	; () banked
  4635  000A24  217F               	addwfc	(pf_lseek@ifptr+1)& (0+255),w,b
  4636  000A26  0100               	movlb	0	; () banked
  4637  000A28  6F73               	movwf	(??_pf_lseek+5)& (0+255),b
  4638  000A2A  0EFF               	movlw	255
  4639  000A2C  0100               	movlb	0	; () banked
  4640  000A2E  2180               	addwfc	(pf_lseek@ifptr+2)& (0+255),w,b
  4641  000A30  0100               	movlb	0	; () banked
  4642  000A32  6F74               	movwf	(??_pf_lseek+6)& (0+255),b
  4643  000A34  0EFF               	movlw	255
  4644  000A36  0100               	movlb	0	; () banked
  4645  000A38  2181               	addwfc	(pf_lseek@ifptr+3)& (0+255),w,b
  4646  000A3A  0100               	movlb	0	; () banked
  4647  000A3C  6F75               	movwf	(??_pf_lseek+7)& (0+255),b
  4648  000A3E  0100               	movlb	0	; () banked
  4649  000A40  516E               	movf	??_pf_lseek& (0+255),w,b
  4650  000A42  0100               	movlb	0	; () banked
  4651  000A44  1572               	andwf	(??_pf_lseek+4)& (0+255),w,b
  4652  000A46  0100               	movlb	0	; () banked
  4653  000A48  6F76               	movwf	(??_pf_lseek+8)& (0+255),b
  4654  000A4A  0100               	movlb	0	; () banked
  4655  000A4C  516F               	movf	(??_pf_lseek+1)& (0+255),w,b
  4656  000A4E  0100               	movlb	0	; () banked
  4657  000A50  1573               	andwf	(??_pf_lseek+5)& (0+255),w,b
  4658  000A52  0100               	movlb	0	; () banked
  4659  000A54  6F77               	movwf	(??_pf_lseek+9)& (0+255),b
  4660  000A56  0100               	movlb	0	; () banked
  4661  000A58  5170               	movf	(??_pf_lseek+2)& (0+255),w,b
  4662  000A5A  0100               	movlb	0	; () banked
  4663  000A5C  1574               	andwf	(??_pf_lseek+6)& (0+255),w,b
  4664  000A5E  0100               	movlb	0	; () banked
  4665  000A60  6F78               	movwf	(??_pf_lseek+10)& (0+255),b
  4666  000A62  0100               	movlb	0	; () banked
  4667  000A64  5171               	movf	(??_pf_lseek+3)& (0+255),w,b
  4668  000A66  0100               	movlb	0	; () banked
  4669  000A68  1575               	andwf	(??_pf_lseek+7)& (0+255),w,b
  4670  000A6A  0100               	movlb	0	; () banked
  4671  000A6C  6F79               	movwf	(??_pf_lseek+11)& (0+255),b
  4672  000A6E  0100               	movlb	0	; () banked
  4673  000A70  EE20 F018          	lfsr	2,24
  4674  000A74  0100               	movlb	0	; () banked
  4675  000A76  518A               	movf	pf_lseek@fs& (0+255),w,b
  4676  000A78  26D9               	addwf	fsr2l,f,c
  4677  000A7A  0100               	movlb	0	; () banked
  4678  000A7C  518B               	movf	(pf_lseek@fs+1)& (0+255),w,b
  4679  000A7E  22DA               	addwfc	fsr2h,f,c
  4680  000A80  C076  FFDE         	movff	??_pf_lseek+8,postinc2
  4681  000A84  C077  FFDE         	movff	??_pf_lseek+9,postinc2
  4682  000A88  C078  FFDE         	movff	??_pf_lseek+10,postinc2
  4683  000A8C  C079  FFDD         	movff	??_pf_lseek+11,postdec2
  4684  000A90  06D9               	decf	fsr2l,f,c
  4685  000A92  06D9               	decf	fsr2l,f,c
  4686                           
  4687                           ;pff.c: 725: ofs -= fs->fptr;
  4688  000A94  0100               	movlb	0	; () banked
  4689  000A96  EE20 F018          	lfsr	2,24
  4690  000A9A  0100               	movlb	0	; () banked
  4691  000A9C  518A               	movf	pf_lseek@fs& (0+255),w,b
  4692  000A9E  26D9               	addwf	fsr2l,f,c
  4693  000AA0  0100               	movlb	0	; () banked
  4694  000AA2  518B               	movf	(pf_lseek@fs+1)& (0+255),w,b
  4695  000AA4  22DA               	addwfc	fsr2h,f,c
  4696  000AA6  50DE               	movf	postinc2,w,c
  4697  000AA8  5E3B               	subwf	pf_lseek@ofs,f,c
  4698  000AAA  50DE               	movf	postinc2,w,c
  4699  000AAC  5A3C               	subwfb	pf_lseek@ofs+1,f,c
  4700  000AAE  50DE               	movf	postinc2,w,c
  4701  000AB0  5A3D               	subwfb	pf_lseek@ofs+2,f,c
  4702  000AB2  50DD               	movf	postdec2,w,c
  4703  000AB4  5A3E               	subwfb	pf_lseek@ofs+3,f,c
  4704                           
  4705                           ;pff.c: 726: clst = fs->curr_clust;
  4706  000AB6  0100               	movlb	0	; () banked
  4707  000AB8  EE20 F024          	lfsr	2,36
  4708  000ABC  0100               	movlb	0	; () banked
  4709  000ABE  518A               	movf	pf_lseek@fs& (0+255),w,b
  4710  000AC0  26D9               	addwf	fsr2l,f,c
  4711  000AC2  0100               	movlb	0	; () banked
  4712  000AC4  518B               	movf	(pf_lseek@fs+1)& (0+255),w,b
  4713  000AC6  22DA               	addwfc	fsr2h,f,c
  4714  000AC8  0100               	movlb	0	; () banked
  4715  000ACA  CFDE F086          	movff	postinc2,pf_lseek@clst
  4716  000ACE  0100               	movlb	0	; () banked
  4717  000AD0  CFDE F087          	movff	postinc2,pf_lseek@clst+1
  4718  000AD4  0100               	movlb	0	; () banked
  4719  000AD6  CFDE F088          	movff	postinc2,pf_lseek@clst+2
  4720  000ADA  0100               	movlb	0	; () banked
  4721  000ADC  CFDE F089          	movff	postinc2,pf_lseek@clst+3
  4722                           
  4723                           ;pff.c: 727: } else {
  4724  000AE0  D0A6               	goto	l5266
  4725  000AE2                     l5254:
  4726                           
  4727                           ; BSR set to: 0
  4728                           ;pff.c: 728: clst = fs->org_clust;
  4729  000AE2  0100               	movlb	0	; () banked
  4730  000AE4  EE20 F020          	lfsr	2,32
  4731  000AE8  0100               	movlb	0	; () banked
  4732  000AEA  518A               	movf	pf_lseek@fs& (0+255),w,b
  4733  000AEC  26D9               	addwf	fsr2l,f,c
  4734  000AEE  0100               	movlb	0	; () banked
  4735  000AF0  518B               	movf	(pf_lseek@fs+1)& (0+255),w,b
  4736  000AF2  22DA               	addwfc	fsr2h,f,c
  4737  000AF4  0100               	movlb	0	; () banked
  4738  000AF6  CFDE F086          	movff	postinc2,pf_lseek@clst
  4739  000AFA  0100               	movlb	0	; () banked
  4740  000AFC  CFDE F087          	movff	postinc2,pf_lseek@clst+1
  4741  000B00  0100               	movlb	0	; () banked
  4742  000B02  CFDE F088          	movff	postinc2,pf_lseek@clst+2
  4743  000B06  0100               	movlb	0	; () banked
  4744  000B08  CFDE F089          	movff	postinc2,pf_lseek@clst+3
  4745                           
  4746                           ;pff.c: 729: fs->curr_clust = clst;
  4747  000B0C  0100               	movlb	0	; () banked
  4748  000B0E  EE20 F024          	lfsr	2,36
  4749  000B12  0100               	movlb	0	; () banked
  4750  000B14  518A               	movf	pf_lseek@fs& (0+255),w,b
  4751  000B16  26D9               	addwf	fsr2l,f,c
  4752  000B18  0100               	movlb	0	; () banked
  4753  000B1A  518B               	movf	(pf_lseek@fs+1)& (0+255),w,b
  4754  000B1C  22DA               	addwfc	fsr2h,f,c
  4755  000B1E  0100               	movlb	0	; () banked
  4756  000B20  C086  FFDE         	movff	pf_lseek@clst,postinc2
  4757  000B24  0100               	movlb	0	; () banked
  4758  000B26  C087  FFDE         	movff	pf_lseek@clst+1,postinc2
  4759  000B2A  0100               	movlb	0	; () banked
  4760  000B2C  C088  FFDE         	movff	pf_lseek@clst+2,postinc2
  4761  000B30  0100               	movlb	0	; () banked
  4762  000B32  C089  FFDE         	movff	pf_lseek@clst+3,postinc2
  4763  000B36  D07B               	goto	l5266
  4764  000B38                     l5256:
  4765                           
  4766                           ; BSR set to: 0
  4767                           ;pff.c: 732: clst = get_fat(clst);
  4768  000B38  C086  F02D         	movff	pf_lseek@clst,get_fat@clst
  4769  000B3C  C087  F02E         	movff	pf_lseek@clst+1,get_fat@clst+1
  4770  000B40  C088  F02F         	movff	pf_lseek@clst+2,get_fat@clst+2
  4771  000B44  C089  F030         	movff	pf_lseek@clst+3,get_fat@clst+3
  4772  000B48  ECC5  F00B         	call	_get_fat	;wreg free
  4773  000B4C  C02D  F086         	movff	?_get_fat,pf_lseek@clst
  4774  000B50  C02E  F087         	movff	?_get_fat+1,pf_lseek@clst+1
  4775  000B54  C02F  F088         	movff	?_get_fat+2,pf_lseek@clst+2
  4776  000B58  C030  F089         	movff	?_get_fat+3,pf_lseek@clst+3
  4777                           
  4778                           ;pff.c: 733: if (clst <= 1 || clst >= fs->max_clust) goto fe_abort;
  4779  000B5C  0E02               	movlw	2
  4780  000B5E  0100               	movlb	0	; () banked
  4781  000B60  5D86               	subwf	pf_lseek@clst& (0+255),w,b
  4782  000B62  0E00               	movlw	0
  4783  000B64  0100               	movlb	0	; () banked
  4784  000B66  5987               	subwfb	(pf_lseek@clst+1)& (0+255),w,b
  4785  000B68  0E00               	movlw	0
  4786  000B6A  0100               	movlb	0	; () banked
  4787  000B6C  5988               	subwfb	(pf_lseek@clst+2)& (0+255),w,b
  4788  000B6E  0E00               	movlw	0
  4789  000B70  0100               	movlb	0	; () banked
  4790  000B72  5989               	subwfb	(pf_lseek@clst+3)& (0+255),w,b
  4791  000B74  A0D8               	btfss	status,0,c
  4792  000B76  D109               	goto	l5284
  4793                           
  4794                           ; BSR set to: 0
  4795  000B78  0100               	movlb	0	; () banked
  4796  000B7A  EE20 F008          	lfsr	2,8
  4797  000B7E  0100               	movlb	0	; () banked
  4798  000B80  518A               	movf	pf_lseek@fs& (0+255),w,b
  4799  000B82  26D9               	addwf	fsr2l,f,c
  4800  000B84  0100               	movlb	0	; () banked
  4801  000B86  518B               	movf	(pf_lseek@fs+1)& (0+255),w,b
  4802  000B88  22DA               	addwfc	fsr2h,f,c
  4803  000B8A  CFDE F06E          	movff	postinc2,??_pf_lseek
  4804  000B8E  CFDE F06F          	movff	postinc2,??_pf_lseek+1
  4805  000B92  CFDE F070          	movff	postinc2,??_pf_lseek+2
  4806  000B96  CFDE F071          	movff	postinc2,??_pf_lseek+3
  4807  000B9A  0100               	movlb	0	; () banked
  4808  000B9C  516E               	movf	??_pf_lseek& (0+255),w,b
  4809  000B9E  0100               	movlb	0	; () banked
  4810  000BA0  5D86               	subwf	pf_lseek@clst& (0+255),w,b
  4811  000BA2  0100               	movlb	0	; () banked
  4812  000BA4  516F               	movf	(??_pf_lseek+1)& (0+255),w,b
  4813  000BA6  0100               	movlb	0	; () banked
  4814  000BA8  5987               	subwfb	(pf_lseek@clst+1)& (0+255),w,b
  4815  000BAA  0100               	movlb	0	; () banked
  4816  000BAC  5170               	movf	(??_pf_lseek+2)& (0+255),w,b
  4817  000BAE  0100               	movlb	0	; () banked
  4818  000BB0  5988               	subwfb	(pf_lseek@clst+2)& (0+255),w,b
  4819  000BB2  0100               	movlb	0	; () banked
  4820  000BB4  5171               	movf	(??_pf_lseek+3)& (0+255),w,b
  4821  000BB6  0100               	movlb	0	; () banked
  4822  000BB8  5989               	subwfb	(pf_lseek@clst+3)& (0+255),w,b
  4823  000BBA  B0D8               	btfsc	status,0,c
  4824  000BBC  D0E6               	goto	l5284
  4825                           
  4826                           ; BSR set to: 0
  4827                           ;pff.c: 734: fs->curr_clust = clst;
  4828                           
  4829                           ; BSR set to: 0
  4830                           
  4831                           ; BSR set to: 0
  4832  000BBE  0100               	movlb	0	; () banked
  4833  000BC0  EE20 F024          	lfsr	2,36
  4834  000BC4  0100               	movlb	0	; () banked
  4835  000BC6  518A               	movf	pf_lseek@fs& (0+255),w,b
  4836  000BC8  26D9               	addwf	fsr2l,f,c
  4837  000BCA  0100               	movlb	0	; () banked
  4838  000BCC  518B               	movf	(pf_lseek@fs+1)& (0+255),w,b
  4839  000BCE  22DA               	addwfc	fsr2h,f,c
  4840  000BD0  0100               	movlb	0	; () banked
  4841  000BD2  C086  FFDE         	movff	pf_lseek@clst,postinc2
  4842  000BD6  0100               	movlb	0	; () banked
  4843  000BD8  C087  FFDE         	movff	pf_lseek@clst+1,postinc2
  4844  000BDC  0100               	movlb	0	; () banked
  4845  000BDE  C088  FFDE         	movff	pf_lseek@clst+2,postinc2
  4846  000BE2  0100               	movlb	0	; () banked
  4847  000BE4  C089  FFDE         	movff	pf_lseek@clst+3,postinc2
  4848                           
  4849                           ;pff.c: 735: fs->fptr += bcs;
  4850  000BE8  0100               	movlb	0	; () banked
  4851  000BEA  EE20 F018          	lfsr	2,24
  4852  000BEE  0100               	movlb	0	; () banked
  4853  000BF0  518A               	movf	pf_lseek@fs& (0+255),w,b
  4854  000BF2  26D9               	addwf	fsr2l,f,c
  4855  000BF4  0100               	movlb	0	; () banked
  4856  000BF6  518B               	movf	(pf_lseek@fs+1)& (0+255),w,b
  4857  000BF8  22DA               	addwfc	fsr2h,f,c
  4858  000BFA  0100               	movlb	0	; () banked
  4859  000BFC  5182               	movf	pf_lseek@bcs& (0+255),w,b
  4860  000BFE  26DE               	addwf	postinc2,f,c
  4861  000C00  0100               	movlb	0	; () banked
  4862  000C02  5183               	movf	(pf_lseek@bcs+1)& (0+255),w,b
  4863  000C04  22DE               	addwfc	postinc2,f,c
  4864  000C06  0100               	movlb	0	; () banked
  4865  000C08  5184               	movf	(pf_lseek@bcs+2)& (0+255),w,b
  4866  000C0A  22DE               	addwfc	postinc2,f,c
  4867  000C0C  0100               	movlb	0	; () banked
  4868  000C0E  5185               	movf	(pf_lseek@bcs+3)& (0+255),w,b
  4869  000C10  22DD               	addwfc	postdec2,f,c
  4870  000C12  52DD               	movf	postdec2,f,c
  4871  000C14  52DD               	movf	postdec2,f,c
  4872                           
  4873                           ; BSR set to: 0
  4874                           ;pff.c: 736: ofs -= bcs;
  4875  000C16  0100               	movlb	0	; () banked
  4876  000C18  5182               	movf	pf_lseek@bcs& (0+255),w,b
  4877  000C1A  5E3B               	subwf	pf_lseek@ofs,f,c
  4878  000C1C  0100               	movlb	0	; () banked
  4879  000C1E  5183               	movf	(pf_lseek@bcs+1)& (0+255),w,b
  4880  000C20  5A3C               	subwfb	pf_lseek@ofs+1,f,c
  4881  000C22  0100               	movlb	0	; () banked
  4882  000C24  5184               	movf	(pf_lseek@bcs+2)& (0+255),w,b
  4883  000C26  5A3D               	subwfb	pf_lseek@ofs+2,f,c
  4884  000C28  0100               	movlb	0	; () banked
  4885  000C2A  5185               	movf	(pf_lseek@bcs+3)& (0+255),w,b
  4886  000C2C  5A3E               	subwfb	pf_lseek@ofs+3,f,c
  4887  000C2E                     l5266:
  4888                           
  4889                           ; BSR set to: 0
  4890  000C2E  503B               	movf	pf_lseek@ofs,w,c
  4891  000C30  0100               	movlb	0	; () banked
  4892  000C32  5D82               	subwf	pf_lseek@bcs& (0+255),w,b
  4893  000C34  503C               	movf	pf_lseek@ofs+1,w,c
  4894  000C36  0100               	movlb	0	; () banked
  4895  000C38  5983               	subwfb	(pf_lseek@bcs+1)& (0+255),w,b
  4896  000C3A  503D               	movf	pf_lseek@ofs+2,w,c
  4897  000C3C  0100               	movlb	0	; () banked
  4898  000C3E  5984               	subwfb	(pf_lseek@bcs+2)& (0+255),w,b
  4899  000C40  503E               	movf	pf_lseek@ofs+3,w,c
  4900  000C42  0100               	movlb	0	; () banked
  4901  000C44  5985               	subwfb	(pf_lseek@bcs+3)& (0+255),w,b
  4902  000C46  A0D8               	btfss	status,0,c
  4903  000C48  D777               	goto	l5256
  4904                           
  4905                           ; BSR set to: 0
  4906                           ;pff.c: 737: }
  4907                           ;pff.c: 738: fs->fptr += ofs;
  4908                           
  4909                           ; BSR set to: 0
  4910  000C4A  0100               	movlb	0	; () banked
  4911  000C4C  EE20 F018          	lfsr	2,24
  4912  000C50  0100               	movlb	0	; () banked
  4913  000C52  518A               	movf	pf_lseek@fs& (0+255),w,b
  4914  000C54  26D9               	addwf	fsr2l,f,c
  4915  000C56  0100               	movlb	0	; () banked
  4916  000C58  518B               	movf	(pf_lseek@fs+1)& (0+255),w,b
  4917  000C5A  22DA               	addwfc	fsr2h,f,c
  4918  000C5C  503B               	movf	pf_lseek@ofs,w,c
  4919  000C5E  26DE               	addwf	postinc2,f,c
  4920  000C60  503C               	movf	pf_lseek@ofs+1,w,c
  4921  000C62  22DE               	addwfc	postinc2,f,c
  4922  000C64  503D               	movf	pf_lseek@ofs+2,w,c
  4923  000C66  22DE               	addwfc	postinc2,f,c
  4924  000C68  503E               	movf	pf_lseek@ofs+3,w,c
  4925  000C6A  22DD               	addwfc	postdec2,f,c
  4926  000C6C  52DD               	movf	postdec2,f,c
  4927  000C6E  52DD               	movf	postdec2,f,c
  4928                           
  4929                           ; BSR set to: 0
  4930                           ;pff.c: 739: sect = clust2sect(clst);
  4931  000C70  C086  F01C         	movff	pf_lseek@clst,clust2sect@clst
  4932  000C74  C087  F01D         	movff	pf_lseek@clst+1,clust2sect@clst+1
  4933  000C78  C088  F01E         	movff	pf_lseek@clst+2,clust2sect@clst+2
  4934  000C7C  C089  F01F         	movff	pf_lseek@clst+3,clust2sect@clst+3
  4935  000C80  ECDE  F01A         	call	_clust2sect	;wreg free
  4936  000C84  C01C  F07A         	movff	?_clust2sect,pf_lseek@sect
  4937  000C88  C01D  F07B         	movff	?_clust2sect+1,pf_lseek@sect+1
  4938  000C8C  C01E  F07C         	movff	?_clust2sect+2,pf_lseek@sect+2
  4939  000C90  C01F  F07D         	movff	?_clust2sect+3,pf_lseek@sect+3
  4940                           
  4941                           ;pff.c: 740: if (!sect) goto fe_abort;
  4942  000C94  0100               	movlb	0	; () banked
  4943  000C96  517D               	movf	(pf_lseek@sect+3)& (0+255),w,b
  4944  000C98  117A               	iorwf	pf_lseek@sect& (0+255),w,b
  4945  000C9A  117B               	iorwf	(pf_lseek@sect+1)& (0+255),w,b
  4946  000C9C  117C               	iorwf	(pf_lseek@sect+2)& (0+255),w,b
  4947  000C9E  B4D8               	btfsc	status,2,c
  4948  000CA0  D074               	goto	l5284
  4949                           
  4950                           ; BSR set to: 0
  4951                           ;pff.c: 741: fs->csect = (BYTE)(ofs / 512);
  4952                           
  4953                           ; BSR set to: 0
  4954                           
  4955                           ; BSR set to: 0
  4956  000CA2  0100               	movlb	0	; () banked
  4957  000CA4  EE20 F003          	lfsr	2,3
  4958  000CA8  0100               	movlb	0	; () banked
  4959  000CAA  518A               	movf	pf_lseek@fs& (0+255),w,b
  4960  000CAC  26D9               	addwf	fsr2l,f,c
  4961  000CAE  0100               	movlb	0	; () banked
  4962  000CB0  518B               	movf	(pf_lseek@fs+1)& (0+255),w,b
  4963  000CB2  22DA               	addwfc	fsr2h,f,c
  4964  000CB4  C03B  F06E         	movff	pf_lseek@ofs,??_pf_lseek
  4965  000CB8  C03C  F06F         	movff	pf_lseek@ofs+1,??_pf_lseek+1
  4966  000CBC  C03D  F070         	movff	pf_lseek@ofs+2,??_pf_lseek+2
  4967  000CC0  C03E  F071         	movff	pf_lseek@ofs+3,??_pf_lseek+3
  4968  000CC4  0E0A               	movlw	10
  4969  000CC6  D006               	goto	u6010
  4970  000CC8                     u6015:
  4971  000CC8  0100               	movlb	0	; () banked
  4972  000CCA  90D8               	bcf	status,0,c
  4973  000CCC  3371               	rrcf	(??_pf_lseek+3)& (0+255),f,b
  4974  000CCE  3370               	rrcf	(??_pf_lseek+2)& (0+255),f,b
  4975  000CD0  336F               	rrcf	(??_pf_lseek+1)& (0+255),f,b
  4976  000CD2  336E               	rrcf	??_pf_lseek& (0+255),f,b
  4977  000CD4                     u6010:
  4978  000CD4  2EE8               	decfsz	wreg,f,c
  4979  000CD6  D7F8               	goto	u6015
  4980  000CD8  0100               	movlb	0	; () banked
  4981  000CDA  516E               	movf	??_pf_lseek& (0+255),w,b
  4982  000CDC  6EDF               	movwf	indf2,c
  4983                           
  4984                           ; BSR set to: 0
  4985                           ;pff.c: 742: if (ofs % 512)
  4986  000CDE  0EFF               	movlw	255
  4987  000CE0  143B               	andwf	pf_lseek@ofs,w,c
  4988  000CE2  0100               	movlb	0	; () banked
  4989  000CE4  6F6E               	movwf	??_pf_lseek& (0+255),b
  4990  000CE6  0E01               	movlw	1
  4991  000CE8  143C               	andwf	pf_lseek@ofs+1,w,c
  4992  000CEA  0100               	movlb	0	; () banked
  4993  000CEC  6F6F               	movwf	(??_pf_lseek+1)& (0+255),b
  4994  000CEE  0E00               	movlw	0
  4995  000CF0  143D               	andwf	pf_lseek@ofs+2,w,c
  4996  000CF2  0100               	movlb	0	; () banked
  4997  000CF4  6F70               	movwf	(??_pf_lseek+2)& (0+255),b
  4998  000CF6  0E00               	movlw	0
  4999  000CF8  143E               	andwf	pf_lseek@ofs+3,w,c
  5000  000CFA  0100               	movlb	0	; () banked
  5001  000CFC  6F71               	movwf	(??_pf_lseek+3)& (0+255),b
  5002  000CFE  0100               	movlb	0	; () banked
  5003  000D00  5171               	movf	(??_pf_lseek+3)& (0+255),w,b
  5004  000D02  116E               	iorwf	??_pf_lseek& (0+255),w,b
  5005  000D04  116F               	iorwf	(??_pf_lseek+1)& (0+255),w,b
  5006  000D06  1170               	iorwf	(??_pf_lseek+2)& (0+255),w,b
  5007  000D08  B4D8               	btfsc	status,2,c
  5008  000D0A  D04A               	goto	l201
  5009                           
  5010                           ; BSR set to: 0
  5011                           ;pff.c: 743: fs->dsect = sect + fs->csect++;
  5012  000D0C  0100               	movlb	0	; () banked
  5013  000D0E  EE20 F003          	lfsr	2,3
  5014  000D12  0100               	movlb	0	; () banked
  5015  000D14  518A               	movf	pf_lseek@fs& (0+255),w,b
  5016  000D16  26D9               	addwf	fsr2l,f,c
  5017  000D18  0100               	movlb	0	; () banked
  5018  000D1A  518B               	movf	(pf_lseek@fs+1)& (0+255),w,b
  5019  000D1C  22DA               	addwfc	fsr2h,f,c
  5020  000D1E  50DF               	movf	indf2,w,c
  5021  000D20  0100               	movlb	0	; () banked
  5022  000D22  6F6E               	movwf	??_pf_lseek& (0+255),b
  5023  000D24  0100               	movlb	0	; () banked
  5024  000D26  516E               	movf	??_pf_lseek& (0+255),w,b
  5025  000D28  0100               	movlb	0	; () banked
  5026  000D2A  257A               	addwf	pf_lseek@sect& (0+255),w,b
  5027  000D2C  0100               	movlb	0	; () banked
  5028  000D2E  6F6F               	movwf	(??_pf_lseek+1)& (0+255),b
  5029  000D30  0E00               	movlw	0
  5030  000D32  0100               	movlb	0	; () banked
  5031  000D34  217B               	addwfc	(pf_lseek@sect+1)& (0+255),w,b
  5032  000D36  0100               	movlb	0	; () banked
  5033  000D38  6F70               	movwf	(??_pf_lseek+2)& (0+255),b
  5034  000D3A  0E00               	movlw	0
  5035  000D3C  0100               	movlb	0	; () banked
  5036  000D3E  217C               	addwfc	(pf_lseek@sect+2)& (0+255),w,b
  5037  000D40  0100               	movlb	0	; () banked
  5038  000D42  6F71               	movwf	(??_pf_lseek+3)& (0+255),b
  5039  000D44  0E00               	movlw	0
  5040  000D46  0100               	movlb	0	; () banked
  5041  000D48  217D               	addwfc	(pf_lseek@sect+3)& (0+255),w,b
  5042  000D4A  0100               	movlb	0	; () banked
  5043  000D4C  6F72               	movwf	(??_pf_lseek+4)& (0+255),b
  5044  000D4E  0100               	movlb	0	; () banked
  5045  000D50  EE20 F028          	lfsr	2,40
  5046  000D54  0100               	movlb	0	; () banked
  5047  000D56  518A               	movf	pf_lseek@fs& (0+255),w,b
  5048  000D58  26D9               	addwf	fsr2l,f,c
  5049  000D5A  0100               	movlb	0	; () banked
  5050  000D5C  518B               	movf	(pf_lseek@fs+1)& (0+255),w,b
  5051  000D5E  22DA               	addwfc	fsr2h,f,c
  5052  000D60  C06F  FFDE         	movff	??_pf_lseek+1,postinc2
  5053  000D64  C070  FFDE         	movff	??_pf_lseek+2,postinc2
  5054  000D68  C071  FFDE         	movff	??_pf_lseek+3,postinc2
  5055  000D6C  C072  FFDD         	movff	??_pf_lseek+4,postdec2
  5056  000D70  06D9               	decf	fsr2l,f,c
  5057  000D72  06D9               	decf	fsr2l,f,c
  5058  000D74  0100               	movlb	0	; () banked
  5059  000D76  EE20 F003          	lfsr	2,3
  5060  000D7A  0100               	movlb	0	; () banked
  5061  000D7C  518A               	movf	pf_lseek@fs& (0+255),w,b
  5062  000D7E  26D9               	addwf	fsr2l,f,c
  5063  000D80  0100               	movlb	0	; () banked
  5064  000D82  518B               	movf	(pf_lseek@fs+1)& (0+255),w,b
  5065  000D84  22DA               	addwfc	fsr2h,f,c
  5066  000D86  2ADF               	incf	indf2,f,c
  5067  000D88  D00B               	goto	l201
  5068  000D8A                     l5284:
  5069                           
  5070                           ; BSR set to: 0
  5071                           ;pff.c: 749: fs->flag = 0;
  5072  000D8A  0100               	movlb	0	; () banked
  5073  000D8C  EE20 F002          	lfsr	2,2
  5074  000D90  0100               	movlb	0	; () banked
  5075  000D92  518A               	movf	pf_lseek@fs& (0+255),w,b
  5076  000D94  26D9               	addwf	fsr2l,f,c
  5077  000D96  0100               	movlb	0	; () banked
  5078  000D98  518B               	movf	(pf_lseek@fs+1)& (0+255),w,b
  5079  000D9A  22DA               	addwfc	fsr2h,f,c
  5080  000D9C  0E00               	movlw	0
  5081  000D9E  6EDF               	movwf	indf2,c
  5082  000DA0                     l201:
  5083                           
  5084                           ; BSR set to: 0
  5085  000DA0  0012               	return	
  5086  000DA2                     __end_of_pf_lseek:
  5087                           	opt stack 0
  5088                           tblptru	equ	0xFF8
  5089                           tblptrh	equ	0xFF7
  5090                           tblptrl	equ	0xFF6
  5091                           tablat	equ	0xFF5
  5092                           intcon	equ	0xFF2
  5093                           postinc0	equ	0xFEE
  5094                           wreg	equ	0xFE8
  5095                           postdec1	equ	0xFE5
  5096                           fsr1h	equ	0xFE2
  5097                           fsr1l	equ	0xFE1
  5098                           indf2	equ	0xFDF
  5099                           postinc2	equ	0xFDE
  5100                           postdec2	equ	0xFDD
  5101                           fsr2h	equ	0xFDA
  5102                           fsr2l	equ	0xFD9
  5103                           status	equ	0xFD8
  5104                           
  5105 ;; *************** function _pf_readdir *****************
  5106 ;; Defined at:
  5107 ;;		line 805 in file "../../../PIC18F/pff.c"
  5108 ;; Parameters:    Size  Location     Type
  5109 ;;  dj              2   31[BANK0 ] PTR struct _Dir_
  5110 ;;		 -> Dir1(16), 
  5111 ;;  fno             2   33[BANK0 ] PTR struct _FILINFO_
  5112 ;;		 -> Fno(22), 
  5113 ;; Auto vars:     Size  Location     Type
  5114 ;;  dir            32   35[BANK0 ] unsigned char [32]
  5115 ;;  sp             12   67[BANK0 ] unsigned char [12]
  5116 ;;  fs              2   79[BANK0 ] PTR struct _FATFS_
  5117 ;;		 -> Fs(44), NULL(0), 
  5118 ;;  res             1   81[BANK0 ] enum E48
  5119 ;; Return value:  Size  Location     Type
  5120 ;;                  1    wreg      enum E48
  5121 ;; Registers used:
  5122 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5123 ;; Tracked objects:
  5124 ;;		On entry : 0/0
  5125 ;;		On exit  : 0/0
  5126 ;;		Unchanged: 0/0
  5127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5128 ;;      Params:         0       4       0       0       0       0       0       0       0
  5129 ;;      Locals:         0      47       0       0       0       0       0       0       0
  5130 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5131 ;;      Totals:         0      51       0       0       0       0       0       0       0
  5132 ;;Total ram usage:       51 bytes
  5133 ;; Hardware stack levels used:    1
  5134 ;; Hardware stack levels required when called:    9
  5135 ;; This function calls:
  5136 ;;		_dir_next
  5137 ;;		_dir_read
  5138 ;;		_dir_rewind
  5139 ;;		_get_fileinfo
  5140 ;; This function is called by:
  5141 ;;		_main
  5142 ;; This function uses a non-reentrant model
  5143 ;;
  5144                           
  5145                           	psect	text16
  5146  0031FE                     __ptext16:
  5147                           	opt stack 0
  5148  0031FE                     _pf_readdir:
  5149                           	opt stack 20
  5150                           
  5151                           ;pff.c: 810: FRESULT res;
  5152                           ;pff.c: 811: BYTE sp[12], dir[32];
  5153                           ;pff.c: 812: FATFS *fs = FatFs;
  5154                           
  5155                           ; BSR set to: 0
  5156                           ;incstack = 0
  5157  0031FE  0100               	movlb	0	; () banked
  5158  003200  C049  F0B0         	movff	_FatFs+1,pf_readdir@fs+1
  5159  003204  0100               	movlb	0	; () banked
  5160  003206  C048  F0AF         	movff	_FatFs,pf_readdir@fs
  5161                           
  5162                           ;pff.c: 815: if (!fs) {
  5163  00320A  0100               	movlb	0	; () banked
  5164  00320C  51B0               	movf	(pf_readdir@fs+1)& (0+255),w,b
  5165  00320E  11AF               	iorwf	pf_readdir@fs& (0+255),w,b
  5166  003210  A4D8               	btfss	status,2,c
  5167  003212  D002               	goto	l5760
  5168                           
  5169                           ; BSR set to: 0
  5170                           ;pff.c: 816: res = FR_NOT_ENABLED;
  5171  003214  0E06               	movlw	6
  5172  003216  D079               	goto	L8
  5173  003218                     l5760:
  5174                           
  5175                           ; BSR set to: 0
  5176                           ;pff.c: 818: fs->buf = dir;
  5177  003218  0100               	movlb	0	; () banked
  5178  00321A  EE20 F006          	lfsr	2,6
  5179  00321E  0100               	movlb	0	; () banked
  5180  003220  51AF               	movf	pf_readdir@fs& (0+255),w,b
  5181  003222  26D9               	addwf	fsr2l,f,c
  5182  003224  0100               	movlb	0	; () banked
  5183  003226  51B0               	movf	(pf_readdir@fs+1)& (0+255),w,b
  5184  003228  22DA               	addwfc	fsr2h,f,c
  5185  00322A  0100               	movlb	0	; () banked
  5186  00322C  0E83               	movlw	low pf_readdir@dir
  5187  00322E  6EDE               	movwf	postinc2,c
  5188  003230  0100               	movlb	0	; () banked
  5189  003232  0E00               	movlw	high pf_readdir@dir
  5190  003234  6EDD               	movwf	postdec2,c
  5191                           
  5192                           ;pff.c: 819: dj->fn = sp;
  5193  003236  0100               	movlb	0	; () banked
  5194  003238  EE20 F002          	lfsr	2,2
  5195  00323C  0100               	movlb	0	; () banked
  5196  00323E  517F               	movf	pf_readdir@dj& (0+255),w,b
  5197  003240  26D9               	addwf	fsr2l,f,c
  5198  003242  0100               	movlb	0	; () banked
  5199  003244  5180               	movf	(pf_readdir@dj+1)& (0+255),w,b
  5200  003246  22DA               	addwfc	fsr2h,f,c
  5201  003248  0100               	movlb	0	; () banked
  5202  00324A  0EA3               	movlw	low pf_readdir@sp
  5203  00324C  6EDE               	movwf	postinc2,c
  5204  00324E  0100               	movlb	0	; () banked
  5205  003250  0E00               	movlw	high pf_readdir@sp
  5206  003252  6EDD               	movwf	postdec2,c
  5207                           
  5208                           ; BSR set to: 0
  5209                           ;pff.c: 820: if (!fno) {
  5210  003254  0100               	movlb	0	; () banked
  5211  003256  5182               	movf	(pf_readdir@fno+1)& (0+255),w,b
  5212  003258  1181               	iorwf	pf_readdir@fno& (0+255),w,b
  5213  00325A  A4D8               	btfss	status,2,c
  5214  00325C  D009               	goto	l5766
  5215                           
  5216                           ; BSR set to: 0
  5217                           ;pff.c: 821: res = dir_rewind(dj);
  5218  00325E  0100               	movlb	0	; () banked
  5219  003260  C080  F02C         	movff	pf_readdir@dj+1,dir_rewind@dj+1
  5220  003264  0100               	movlb	0	; () banked
  5221  003266  C07F  F02B         	movff	pf_readdir@dj,dir_rewind@dj
  5222  00326A  ECCD  F017         	call	_dir_rewind	;wreg free
  5223  00326E  D04D               	goto	L8
  5224  003270                     l5766:
  5225                           
  5226                           ; BSR set to: 0
  5227                           ;pff.c: 823: res = dir_read(dj);
  5228  003270  0100               	movlb	0	; () banked
  5229  003272  C080  F045         	movff	pf_readdir@dj+1,dir_read@dj+1
  5230  003276  0100               	movlb	0	; () banked
  5231  003278  C07F  F044         	movff	pf_readdir@dj,dir_read@dj
  5232  00327C  EC88  F016         	call	_dir_read	;wreg free
  5233  003280  0100               	movlb	0	; () banked
  5234  003282  6FB1               	movwf	pf_readdir@res& (0+255),b
  5235                           
  5236                           ; BSR set to: 0
  5237                           ;pff.c: 824: if (res == FR_NO_FILE) {
  5238  003284  0100               	movlb	0	; () banked
  5239  003286  51B1               	movf	pf_readdir@res& (0+255),w,b
  5240  003288  0A03               	xorlw	3
  5241  00328A  A4D8               	btfss	status,2,c
  5242  00328C  D010               	goto	l5774
  5243                           
  5244                           ; BSR set to: 0
  5245                           ;pff.c: 825: dj->sect = 0;
  5246  00328E  0100               	movlb	0	; () banked
  5247  003290  EE20 F00C          	lfsr	2,12
  5248  003294  0100               	movlb	0	; () banked
  5249  003296  517F               	movf	pf_readdir@dj& (0+255),w,b
  5250  003298  26D9               	addwf	fsr2l,f,c
  5251  00329A  0100               	movlb	0	; () banked
  5252  00329C  5180               	movf	(pf_readdir@dj+1)& (0+255),w,b
  5253  00329E  22DA               	addwfc	fsr2h,f,c
  5254  0032A0  6ADE               	clrf	postinc2,c
  5255  0032A2  6ADE               	clrf	postinc2,c
  5256  0032A4  6ADE               	clrf	postinc2,c
  5257  0032A6  6ADD               	clrf	postdec2,c
  5258                           
  5259                           ; BSR set to: 0
  5260                           ;pff.c: 826: res = FR_OK;
  5261  0032A8  0E00               	movlw	0
  5262  0032AA  0100               	movlb	0	; () banked
  5263  0032AC  6FB1               	movwf	pf_readdir@res& (0+255),b
  5264  0032AE                     l5774:
  5265                           
  5266                           ; BSR set to: 0
  5267                           ;pff.c: 827: }
  5268                           ;pff.c: 828: if (res == FR_OK) {
  5269  0032AE  0100               	movlb	0	; () banked
  5270  0032B0  67B1               	tstfsz	pf_readdir@res& (0+255),b
  5271  0032B2  D02D               	goto	l5786
  5272                           
  5273                           ; BSR set to: 0
  5274                           ;pff.c: 829: get_fileinfo(dj, fno);
  5275  0032B4  0100               	movlb	0	; () banked
  5276  0032B6  C080  F011         	movff	pf_readdir@dj+1,get_fileinfo@dj+1
  5277  0032BA  0100               	movlb	0	; () banked
  5278  0032BC  C07F  F010         	movff	pf_readdir@dj,get_fileinfo@dj
  5279  0032C0  0100               	movlb	0	; () banked
  5280  0032C2  C082  F013         	movff	pf_readdir@fno+1,get_fileinfo@fno+1
  5281  0032C6  0100               	movlb	0	; () banked
  5282  0032C8  C081  F012         	movff	pf_readdir@fno,get_fileinfo@fno
  5283  0032CC  EC0D  F015         	call	_get_fileinfo	;wreg free
  5284                           
  5285                           ;pff.c: 830: res = dir_next(dj);
  5286  0032D0  0100               	movlb	0	; () banked
  5287  0032D2  C080  F03C         	movff	pf_readdir@dj+1,dir_next@dj+1
  5288  0032D6  0100               	movlb	0	; () banked
  5289  0032D8  C07F  F03B         	movff	pf_readdir@dj,dir_next@dj
  5290  0032DC  EC17  F012         	call	_dir_next	;wreg free
  5291  0032E0  0100               	movlb	0	; () banked
  5292  0032E2  6FB1               	movwf	pf_readdir@res& (0+255),b
  5293                           
  5294                           ; BSR set to: 0
  5295                           ;pff.c: 831: if (res == FR_NO_FILE) {
  5296  0032E4  0100               	movlb	0	; () banked
  5297  0032E6  51B1               	movf	pf_readdir@res& (0+255),w,b
  5298  0032E8  0A03               	xorlw	3
  5299  0032EA  A4D8               	btfss	status,2,c
  5300  0032EC  D010               	goto	l5786
  5301                           
  5302                           ; BSR set to: 0
  5303                           ;pff.c: 832: dj->sect = 0;
  5304  0032EE  0100               	movlb	0	; () banked
  5305  0032F0  EE20 F00C          	lfsr	2,12
  5306  0032F4  0100               	movlb	0	; () banked
  5307  0032F6  517F               	movf	pf_readdir@dj& (0+255),w,b
  5308  0032F8  26D9               	addwf	fsr2l,f,c
  5309  0032FA  0100               	movlb	0	; () banked
  5310  0032FC  5180               	movf	(pf_readdir@dj+1)& (0+255),w,b
  5311  0032FE  22DA               	addwfc	fsr2h,f,c
  5312  003300  6ADE               	clrf	postinc2,c
  5313  003302  6ADE               	clrf	postinc2,c
  5314  003304  6ADE               	clrf	postinc2,c
  5315  003306  6ADD               	clrf	postdec2,c
  5316                           
  5317                           ; BSR set to: 0
  5318                           ;pff.c: 833: res = FR_OK;
  5319  003308  0E00               	movlw	0
  5320  00330A                     L8:
  5321  00330A  0100               	movlb	0	; () banked
  5322  00330C  6FB1               	movwf	pf_readdir@res& (0+255),b
  5323  00330E                     l5786:
  5324                           
  5325                           ; BSR set to: 0
  5326                           ;pff.c: 834: }
  5327                           ;pff.c: 835: }
  5328                           ;pff.c: 836: }
  5329                           ;pff.c: 837: }
  5330                           ;pff.c: 839: return res;
  5331  00330E  0100               	movlb	0	; () banked
  5332  003310  51B1               	movf	pf_readdir@res& (0+255),w,b
  5333                           
  5334                           ; BSR set to: 0
  5335                           
  5336                           ; BSR set to: 0
  5337  003312  0012               	return	
  5338  003314                     __end_of_pf_readdir:
  5339                           	opt stack 0
  5340                           tblptru	equ	0xFF8
  5341                           tblptrh	equ	0xFF7
  5342                           tblptrl	equ	0xFF6
  5343                           tablat	equ	0xFF5
  5344                           intcon	equ	0xFF2
  5345                           postinc0	equ	0xFEE
  5346                           wreg	equ	0xFE8
  5347                           postdec1	equ	0xFE5
  5348                           fsr1h	equ	0xFE2
  5349                           fsr1l	equ	0xFE1
  5350                           indf2	equ	0xFDF
  5351                           postinc2	equ	0xFDE
  5352                           postdec2	equ	0xFDD
  5353                           fsr2h	equ	0xFDA
  5354                           fsr2l	equ	0xFD9
  5355                           status	equ	0xFD8
  5356                           
  5357 ;; *************** function _get_fileinfo *****************
  5358 ;; Defined at:
  5359 ;;		line 329 in file "../../../PIC18F/pff.c"
  5360 ;; Parameters:    Size  Location     Type
  5361 ;;  dj              2   15[COMRAM] PTR struct _Dir_
  5362 ;;		 -> Dir1(16), 
  5363 ;;  fno             2   17[COMRAM] PTR struct _FILINFO_
  5364 ;;		 -> Fno(22), 
  5365 ;; Auto vars:     Size  Location     Type
  5366 ;;  dir             2   26[COMRAM] PTR unsigned char 
  5367 ;;		 -> pf_readdir@dir(32), pf_opendir@dir(32), pf_open@dir(32), 
  5368 ;;  p               2   23[COMRAM] PTR unsigned char 
  5369 ;;		 -> Fno.fname(13), Fno(22), 
  5370 ;;  i               1   28[COMRAM] unsigned char 
  5371 ;;  c               1   25[COMRAM] unsigned char 
  5372 ;; Return value:  Size  Location     Type
  5373 ;;		None               void
  5374 ;; Registers used:
  5375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5376 ;; Tracked objects:
  5377 ;;		On entry : 0/0
  5378 ;;		On exit  : 0/0
  5379 ;;		Unchanged: 0/0
  5380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5381 ;;      Params:         4       0       0       0       0       0       0       0       0
  5382 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5383 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5384 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5385 ;;Total ram usage:       14 bytes
  5386 ;; Hardware stack levels used:    1
  5387 ;; Hardware stack levels required when called:    2
  5388 ;; This function calls:
  5389 ;;		Nothing
  5390 ;; This function is called by:
  5391 ;;		_pf_readdir
  5392 ;; This function uses a non-reentrant model
  5393 ;;
  5394                           
  5395                           	psect	text17
  5396  002A1A                     __ptext17:
  5397                           	opt stack 0
  5398  002A1A                     _get_fileinfo:
  5399                           	opt stack 26
  5400                           
  5401                           ;pff.c: 334: BYTE i, c, *dir;
  5402                           ;pff.c: 335: char *p;
  5403                           ;pff.c: 338: p = fno->fname;
  5404                           
  5405                           ; BSR set to: 0
  5406                           ;incstack = 0
  5407  002A1A  0E09               	movlw	9
  5408  002A1C  2412               	addwf	get_fileinfo@fno,w,c
  5409  002A1E  6E18               	movwf	get_fileinfo@p,c
  5410  002A20  0E00               	movlw	0
  5411  002A22  2013               	addwfc	get_fileinfo@fno+1,w,c
  5412  002A24  6E19               	movwf	get_fileinfo@p+1,c
  5413                           
  5414                           ;pff.c: 339: if (dj->sect) {
  5415  002A26  EE20 F00C          	lfsr	2,12
  5416  002A2A  5010               	movf	get_fileinfo@dj,w,c
  5417  002A2C  26D9               	addwf	fsr2l,f,c
  5418  002A2E  5011               	movf	get_fileinfo@dj+1,w,c
  5419  002A30  22DA               	addwfc	fsr2h,f,c
  5420  002A32  CFDE F014          	movff	postinc2,??_get_fileinfo
  5421  002A36  CFDE F015          	movff	postinc2,??_get_fileinfo+1
  5422  002A3A  CFDE F016          	movff	postinc2,??_get_fileinfo+2
  5423  002A3E  CFDE F017          	movff	postinc2,??_get_fileinfo+3
  5424  002A42  5017               	movf	??_get_fileinfo+3,w,c
  5425  002A44  1014               	iorwf	??_get_fileinfo,w,c
  5426  002A46  1015               	iorwf	??_get_fileinfo+1,w,c
  5427  002A48  1016               	iorwf	??_get_fileinfo+2,w,c
  5428  002A4A  B4D8               	btfsc	status,2,c
  5429  002A4C  D09E               	goto	l3762
  5430                           
  5431                           ;pff.c: 340: dir = FatFs->buf;
  5432  002A4E  EE20 F006          	lfsr	2,6
  5433  002A52  5048               	movf	_FatFs,w,c
  5434  002A54  26D9               	addwf	fsr2l,f,c
  5435  002A56  5049               	movf	_FatFs+1,w,c
  5436  002A58  22DA               	addwfc	fsr2h,f,c
  5437  002A5A  CFDE F01B          	movff	postinc2,get_fileinfo@dir
  5438  002A5E  CFDD F01C          	movff	postdec2,get_fileinfo@dir+1
  5439                           
  5440                           ;pff.c: 341: for (i = 0; i < 8; i++) {
  5441  002A62  0E00               	movlw	0
  5442  002A64  6E1D               	movwf	get_fileinfo@i,c
  5443  002A66  D01D               	goto	L10
  5444  002A68                     l3716:
  5445                           
  5446                           ;pff.c: 342: c = dir[i];
  5447  002A68  501D               	movf	get_fileinfo@i,w,c
  5448  002A6A  0D01               	mullw	1
  5449  002A6C  50F3               	movf	prodl,w,c
  5450  002A6E  241B               	addwf	get_fileinfo@dir,w,c
  5451  002A70  6ED9               	movwf	fsr2l,c
  5452  002A72  50F4               	movf	prodh,w,c
  5453  002A74  201C               	addwfc	get_fileinfo@dir+1,w,c
  5454  002A76  6EDA               	movwf	fsr2h,c
  5455  002A78  50DF               	movf	indf2,w,c
  5456  002A7A  6E1A               	movwf	get_fileinfo@c,c
  5457                           
  5458                           ;pff.c: 343: if (c == ' ') break;
  5459  002A7C  501A               	movf	get_fileinfo@c,w,c
  5460  002A7E  0A20               	xorlw	32
  5461  002A80  B4D8               	btfsc	status,2,c
  5462  002A82  D012               	goto	l3734
  5463                           
  5464                           ;pff.c: 344: if (c == 0x05) c = 0xE5;
  5465  002A84  501A               	movf	get_fileinfo@c,w,c
  5466  002A86  0A05               	xorlw	5
  5467  002A88  A4D8               	btfss	status,2,c
  5468  002A8A  D002               	goto	l3726
  5469  002A8C  0EE5               	movlw	229
  5470  002A8E  6E1A               	movwf	get_fileinfo@c,c
  5471  002A90                     l3726:
  5472                           
  5473                           ;pff.c: 345: *p++ = c;
  5474  002A90  C018  FFD9         	movff	get_fileinfo@p,fsr2l
  5475  002A94  C019  FFDA         	movff	get_fileinfo@p+1,fsr2h
  5476  002A98  C01A  FFDF         	movff	get_fileinfo@c,indf2
  5477  002A9C  4A18               	infsnz	get_fileinfo@p,f,c
  5478  002A9E  2A19               	incf	get_fileinfo@p+1,f,c
  5479  002AA0  2A1D               	incf	get_fileinfo@i,f,c
  5480  002AA2                     L10:
  5481  002AA2  0E07               	movlw	7
  5482  002AA4  641D               	cpfsgt	get_fileinfo@i,c
  5483  002AA6  D7E0               	goto	l3716
  5484  002AA8                     l3734:
  5485                           
  5486                           ;pff.c: 346: }
  5487                           ;pff.c: 347: if (dir[8] != ' ') {
  5488  002AA8  EE20 F008          	lfsr	2,8
  5489  002AAC  501B               	movf	get_fileinfo@dir,w,c
  5490  002AAE  26D9               	addwf	fsr2l,f,c
  5491  002AB0  501C               	movf	get_fileinfo@dir+1,w,c
  5492  002AB2  22DA               	addwfc	fsr2h,f,c
  5493  002AB4  50DF               	movf	indf2,w,c
  5494  002AB6  0A20               	xorlw	32
  5495  002AB8  B4D8               	btfsc	status,2,c
  5496  002ABA  D025               	goto	l3760
  5497                           
  5498                           ;pff.c: 348: *p++ = '.';
  5499  002ABC  C018  FFD9         	movff	get_fileinfo@p,fsr2l
  5500  002AC0  C019  FFDA         	movff	get_fileinfo@p+1,fsr2h
  5501  002AC4  0E2E               	movlw	46
  5502  002AC6  6EDF               	movwf	indf2,c
  5503  002AC8  4A18               	infsnz	get_fileinfo@p,f,c
  5504  002ACA  2A19               	incf	get_fileinfo@p+1,f,c
  5505                           
  5506                           ;pff.c: 349: for (i = 8; i < 11; i++) {
  5507  002ACC  0E08               	movlw	8
  5508  002ACE  6E1D               	movwf	get_fileinfo@i,c
  5509  002AD0  D017               	goto	L11
  5510  002AD2                     l3746:
  5511                           
  5512                           ;pff.c: 350: c = dir[i];
  5513  002AD2  501D               	movf	get_fileinfo@i,w,c
  5514  002AD4  0D01               	mullw	1
  5515  002AD6  50F3               	movf	prodl,w,c
  5516  002AD8  241B               	addwf	get_fileinfo@dir,w,c
  5517  002ADA  6ED9               	movwf	fsr2l,c
  5518  002ADC  50F4               	movf	prodh,w,c
  5519  002ADE  201C               	addwfc	get_fileinfo@dir+1,w,c
  5520  002AE0  6EDA               	movwf	fsr2h,c
  5521  002AE2  50DF               	movf	indf2,w,c
  5522  002AE4  6E1A               	movwf	get_fileinfo@c,c
  5523                           
  5524                           ;pff.c: 351: if (c == ' ') break;
  5525  002AE6  501A               	movf	get_fileinfo@c,w,c
  5526  002AE8  0A20               	xorlw	32
  5527  002AEA  B4D8               	btfsc	status,2,c
  5528  002AEC  D00C               	goto	l3760
  5529                           
  5530                           ;pff.c: 352: *p++ = c;
  5531  002AEE  C018  FFD9         	movff	get_fileinfo@p,fsr2l
  5532  002AF2  C019  FFDA         	movff	get_fileinfo@p+1,fsr2h
  5533  002AF6  C01A  FFDF         	movff	get_fileinfo@c,indf2
  5534  002AFA  4A18               	infsnz	get_fileinfo@p,f,c
  5535  002AFC  2A19               	incf	get_fileinfo@p+1,f,c
  5536  002AFE  2A1D               	incf	get_fileinfo@i,f,c
  5537  002B00                     L11:
  5538  002B00  0E0A               	movlw	10
  5539  002B02  641D               	cpfsgt	get_fileinfo@i,c
  5540  002B04  D7E6               	goto	l3746
  5541  002B06                     l3760:
  5542                           
  5543                           ;pff.c: 353: }
  5544                           ;pff.c: 354: }
  5545                           ;pff.c: 355: fno->fattrib = dir[11];
  5546  002B06  EE20 F00B          	lfsr	2,11
  5547  002B0A  501B               	movf	get_fileinfo@dir,w,c
  5548  002B0C  26D9               	addwf	fsr2l,f,c
  5549  002B0E  501C               	movf	get_fileinfo@dir+1,w,c
  5550  002B10  22DA               	addwfc	fsr2h,f,c
  5551  002B12  EE10 F008          	lfsr	1,8
  5552  002B16  5012               	movf	get_fileinfo@fno,w,c
  5553  002B18  26E1               	addwf	fsr1l,f,c
  5554  002B1A  5013               	movf	get_fileinfo@fno+1,w,c
  5555  002B1C  22E2               	addwfc	fsr1h,f,c
  5556  002B1E  CFDF FFE7          	movff	indf2,indf1
  5557                           
  5558                           ;pff.c: 356: fno->fsize = (DWORD)(*(DWORD*)(BYTE*)(dir+28));
  5559  002B22  EE20 F01C          	lfsr	2,28
  5560  002B26  501B               	movf	get_fileinfo@dir,w,c
  5561  002B28  26D9               	addwf	fsr2l,f,c
  5562  002B2A  501C               	movf	get_fileinfo@dir+1,w,c
  5563  002B2C  22DA               	addwfc	fsr2h,f,c
  5564  002B2E  C012  FFE1         	movff	get_fileinfo@fno,fsr1l
  5565  002B32  C013  FFE2         	movff	get_fileinfo@fno+1,fsr1h
  5566  002B36  CFDE FFE6          	movff	postinc2,postinc1
  5567  002B3A  CFDE FFE6          	movff	postinc2,postinc1
  5568  002B3E  CFDE FFE6          	movff	postinc2,postinc1
  5569  002B42  CFDD FFE5          	movff	postdec2,postdec1
  5570  002B46  52E5               	movf	postdec1,f,c
  5571  002B48  52E5               	movf	postdec1,f,c
  5572                           
  5573                           ;pff.c: 357: fno->fdate = (WORD)(*(WORD*)(BYTE*)(dir+24));
  5574  002B4A  EE20 F018          	lfsr	2,24
  5575  002B4E  501B               	movf	get_fileinfo@dir,w,c
  5576  002B50  26D9               	addwf	fsr2l,f,c
  5577  002B52  501C               	movf	get_fileinfo@dir+1,w,c
  5578  002B54  22DA               	addwfc	fsr2h,f,c
  5579  002B56  EE10 F004          	lfsr	1,4
  5580  002B5A  5012               	movf	get_fileinfo@fno,w,c
  5581  002B5C  26E1               	addwf	fsr1l,f,c
  5582  002B5E  5013               	movf	get_fileinfo@fno+1,w,c
  5583  002B60  22E2               	addwfc	fsr1h,f,c
  5584  002B62  CFDE FFE6          	movff	postinc2,postinc1
  5585  002B66  CFDD FFE5          	movff	postdec2,postdec1
  5586                           
  5587                           ;pff.c: 358: fno->ftime = (WORD)(*(WORD*)(BYTE*)(dir+22));
  5588  002B6A  EE20 F016          	lfsr	2,22
  5589  002B6E  501B               	movf	get_fileinfo@dir,w,c
  5590  002B70  26D9               	addwf	fsr2l,f,c
  5591  002B72  501C               	movf	get_fileinfo@dir+1,w,c
  5592  002B74  22DA               	addwfc	fsr2h,f,c
  5593  002B76  EE10 F006          	lfsr	1,6
  5594  002B7A  5012               	movf	get_fileinfo@fno,w,c
  5595  002B7C  26E1               	addwf	fsr1l,f,c
  5596  002B7E  5013               	movf	get_fileinfo@fno+1,w,c
  5597  002B80  22E2               	addwfc	fsr1h,f,c
  5598  002B82  CFDE FFE6          	movff	postinc2,postinc1
  5599  002B86  CFDD FFE5          	movff	postdec2,postdec1
  5600  002B8A                     l3762:
  5601                           
  5602                           ;pff.c: 359: }
  5603                           ;pff.c: 360: *p = 0;
  5604  002B8A  C018  FFD9         	movff	get_fileinfo@p,fsr2l
  5605  002B8E  C019  FFDA         	movff	get_fileinfo@p+1,fsr2h
  5606  002B92  0E00               	movlw	0
  5607  002B94  6EDF               	movwf	indf2,c
  5608  002B96  0012               	return	
  5609  002B98                     __end_of_get_fileinfo:
  5610                           	opt stack 0
  5611                           tblptru	equ	0xFF8
  5612                           tblptrh	equ	0xFF7
  5613                           tblptrl	equ	0xFF6
  5614                           tablat	equ	0xFF5
  5615                           prodh	equ	0xFF4
  5616                           prodl	equ	0xFF3
  5617                           intcon	equ	0xFF2
  5618                           postinc0	equ	0xFEE
  5619                           wreg	equ	0xFE8
  5620                           indf1	equ	0xFE7
  5621                           postinc1	equ	0xFE6
  5622                           postdec1	equ	0xFE5
  5623                           fsr1h	equ	0xFE2
  5624                           fsr1l	equ	0xFE1
  5625                           indf2	equ	0xFDF
  5626                           postinc2	equ	0xFDE
  5627                           postdec2	equ	0xFDD
  5628                           fsr2h	equ	0xFDA
  5629                           fsr2l	equ	0xFD9
  5630                           status	equ	0xFD8
  5631                           
  5632 ;; *************** function _dir_read *****************
  5633 ;; Defined at:
  5634 ;;		line 240 in file "../../../PIC18F/pff.c"
  5635 ;; Parameters:    Size  Location     Type
  5636 ;;  dj              2   67[COMRAM] PTR struct _Dir_
  5637 ;;		 -> Dir1(16), 
  5638 ;; Auto vars:     Size  Location     Type
  5639 ;;  dir             2   27[BANK0 ] PTR unsigned char 
  5640 ;;		 -> pf_readdir@dir(32), pf_opendir@dir(32), pf_open@dir(32), 
  5641 ;;  res             1   30[BANK0 ] enum E48
  5642 ;;  c               1   29[BANK0 ] unsigned char 
  5643 ;;  a               1   26[BANK0 ] unsigned char 
  5644 ;; Return value:  Size  Location     Type
  5645 ;;                  1    wreg      enum E48
  5646 ;; Registers used:
  5647 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5648 ;; Tracked objects:
  5649 ;;		On entry : 0/0
  5650 ;;		On exit  : 0/0
  5651 ;;		Unchanged: 0/0
  5652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5653 ;;      Params:         2       0       0       0       0       0       0       0       0
  5654 ;;      Locals:         0       5       0       0       0       0       0       0       0
  5655 ;;      Temps:          0       4       0       0       0       0       0       0       0
  5656 ;;      Totals:         2       9       0       0       0       0       0       0       0
  5657 ;;Total ram usage:       11 bytes
  5658 ;; Hardware stack levels used:    1
  5659 ;; Hardware stack levels required when called:    8
  5660 ;; This function calls:
  5661 ;;		_dir_next
  5662 ;;		_disk_readp
  5663 ;; This function is called by:
  5664 ;;		_pf_readdir
  5665 ;; This function uses a non-reentrant model
  5666 ;;
  5667                           
  5668                           	psect	text18
  5669  002D10                     __ptext18:
  5670                           	opt stack 0
  5671  002D10                     _dir_read:
  5672                           	opt stack 20
  5673                           
  5674                           ;pff.c: 244: FRESULT res;
  5675                           ;pff.c: 245: BYTE a, c, *dir;
  5676                           ;pff.c: 248: res = FR_NO_FILE;
  5677                           
  5678                           ;incstack = 0
  5679  002D10  0E03               	movlw	3
  5680  002D12  0100               	movlb	0	; () banked
  5681  002D14  6F7E               	movwf	dir_read@res& (0+255),b
  5682                           
  5683                           ; BSR set to: 0
  5684                           ;pff.c: 249: dir = FatFs->buf;
  5685  002D16  EE20 F006          	lfsr	2,6
  5686  002D1A  5048               	movf	_FatFs,w,c
  5687  002D1C  26D9               	addwf	fsr2l,f,c
  5688  002D1E  5049               	movf	_FatFs+1,w,c
  5689  002D20  22DA               	addwfc	fsr2h,f,c
  5690  002D22  0100               	movlb	0	; () banked
  5691  002D24  CFDE F07B          	movff	postinc2,dir_read@dir
  5692  002D28  0100               	movlb	0	; () banked
  5693  002D2A  CFDD F07C          	movff	postdec2,dir_read@dir+1
  5694                           
  5695                           ;pff.c: 250: while (dj->sect) {
  5696  002D2E  D072               	goto	l5320
  5697  002D30                     l5292:
  5698                           
  5699                           ; BSR set to: 0
  5700                           ;pff.c: 251: res = disk_readp(dir, dj->sect, (WORD)((dj->index % 16) * 32), 32)
  5701                           ;pff.c: 252: ? FR_DISK_ERR : FR_OK;
  5702  002D30  0100               	movlb	0	; () banked
  5703  002D32  C07C  F01E         	movff	dir_read@dir+1,disk_readp@buff+1
  5704  002D36  0100               	movlb	0	; () banked
  5705  002D38  C07B  F01D         	movff	dir_read@dir,disk_readp@buff
  5706  002D3C  EE20 F00C          	lfsr	2,12
  5707  002D40  5044               	movf	dir_read@dj,w,c
  5708  002D42  26D9               	addwf	fsr2l,f,c
  5709  002D44  5045               	movf	dir_read@dj+1,w,c
  5710  002D46  22DA               	addwfc	fsr2h,f,c
  5711  002D48  CFDE F01F          	movff	postinc2,disk_readp@lba
  5712  002D4C  CFDE F020          	movff	postinc2,disk_readp@lba+1
  5713  002D50  CFDE F021          	movff	postinc2,disk_readp@lba+2
  5714  002D54  CFDE F022          	movff	postinc2,disk_readp@lba+3
  5715  002D58  C044  FFD9         	movff	dir_read@dj,fsr2l
  5716  002D5C  C045  FFDA         	movff	dir_read@dj+1,fsr2h
  5717  002D60  CFDE F076          	movff	postinc2,??_dir_read
  5718  002D64  CFDD F077          	movff	postdec2,??_dir_read+1
  5719  002D68  0E0F               	movlw	15
  5720  002D6A  0100               	movlb	0	; () banked
  5721  002D6C  1776               	andwf	??_dir_read& (0+255),f,b
  5722  002D6E  0E00               	movlw	0
  5723  002D70  1777               	andwf	(??_dir_read+1)& (0+255),f,b
  5724  002D72  0E05               	movlw	5
  5725  002D74                     u6035:
  5726  002D74  90D8               	bcf	status,0,c
  5727  002D76  0100               	movlb	0	; () banked
  5728  002D78  3776               	rlcf	??_dir_read& (0+255),f,b
  5729  002D7A  3777               	rlcf	(??_dir_read+1)& (0+255),f,b
  5730  002D7C  2EE8               	decfsz	wreg,f,c
  5731  002D7E  D7FA               	goto	u6035
  5732  002D80  C076  F023         	movff	??_dir_read,disk_readp@ofs
  5733  002D84  C077  F024         	movff	??_dir_read+1,disk_readp@ofs+1
  5734  002D88  0E00               	movlw	0
  5735  002D8A  6E26               	movwf	disk_readp@cnt+1,c
  5736  002D8C  0E20               	movlw	32
  5737  002D8E  6E25               	movwf	disk_readp@cnt,c
  5738  002D90  EC71  F01A         	call	_disk_readp	;wreg free
  5739  002D94  0900               	iorlw	0
  5740  002D96  B4D8               	btfsc	status,2,c
  5741  002D98  D002               	goto	u6040
  5742  002D9A  0E01               	movlw	1
  5743  002D9C  D001               	goto	u6046
  5744  002D9E                     u6040:
  5745  002D9E  0E00               	movlw	0
  5746  002DA0                     u6046:
  5747  002DA0  0100               	movlb	0	; () banked
  5748  002DA2  6F7E               	movwf	dir_read@res& (0+255),b
  5749                           
  5750                           ; BSR set to: 0
  5751                           ;pff.c: 253: if (res != FR_OK) break;
  5752  002DA4  0100               	movlb	0	; () banked
  5753  002DA6  517E               	movf	dir_read@res& (0+255),w,b
  5754  002DA8  A4D8               	btfss	status,2,c
  5755  002DAA  D049               	goto	l5322
  5756                           
  5757                           ; BSR set to: 0
  5758                           ;pff.c: 254: c = dir[0];
  5759                           
  5760                           ; BSR set to: 0
  5761                           
  5762                           ; BSR set to: 0
  5763  002DAC  C07B  FFD9         	movff	dir_read@dir,fsr2l
  5764  002DB0  C07C  FFDA         	movff	dir_read@dir+1,fsr2h
  5765  002DB4  50DF               	movf	indf2,w,c
  5766  002DB6  0100               	movlb	0	; () banked
  5767  002DB8  6F7D               	movwf	dir_read@c& (0+255),b
  5768                           
  5769                           ; BSR set to: 0
  5770                           ;pff.c: 255: if (c == 0) { res = FR_NO_FILE; break; }
  5771  002DBA  0100               	movlb	0	; () banked
  5772  002DBC  677D               	tstfsz	dir_read@c& (0+255),b
  5773  002DBE  D004               	goto	l5304
  5774                           
  5775                           ; BSR set to: 0
  5776  002DC0  0E03               	movlw	3
  5777  002DC2  0100               	movlb	0	; () banked
  5778  002DC4  6F7E               	movwf	dir_read@res& (0+255),b
  5779  002DC6  D03B               	goto	l5322
  5780  002DC8                     l5304:
  5781                           
  5782                           ; BSR set to: 0
  5783                           ;pff.c: 256: a = dir[11] & 0x3F;
  5784  002DC8  0100               	movlb	0	; () banked
  5785  002DCA  EE20 F00B          	lfsr	2,11
  5786  002DCE  0100               	movlb	0	; () banked
  5787  002DD0  517B               	movf	dir_read@dir& (0+255),w,b
  5788  002DD2  26D9               	addwf	fsr2l,f,c
  5789  002DD4  0100               	movlb	0	; () banked
  5790  002DD6  517C               	movf	(dir_read@dir+1)& (0+255),w,b
  5791  002DD8  22DA               	addwfc	fsr2h,f,c
  5792  002DDA  50DF               	movf	indf2,w,c
  5793  002DDC  0B3F               	andlw	63
  5794  002DDE  0100               	movlb	0	; () banked
  5795  002DE0  6F7A               	movwf	dir_read@a& (0+255),b
  5796                           
  5797                           ; BSR set to: 0
  5798                           ;pff.c: 257: if (c != 0xE5 && c != '.' && !(a & 0x08))
  5799  002DE2  0100               	movlb	0	; () banked
  5800  002DE4  517D               	movf	dir_read@c& (0+255),w,b
  5801  002DE6  0AE5               	xorlw	229
  5802  002DE8  B4D8               	btfsc	status,2,c
  5803  002DEA  D008               	goto	l5314
  5804                           
  5805                           ; BSR set to: 0
  5806  002DEC  0100               	movlb	0	; () banked
  5807  002DEE  517D               	movf	dir_read@c& (0+255),w,b
  5808  002DF0  0A2E               	xorlw	46
  5809  002DF2  B4D8               	btfsc	status,2,c
  5810  002DF4  D003               	goto	l5314
  5811                           
  5812                           ; BSR set to: 0
  5813  002DF6  0100               	movlb	0	; () banked
  5814  002DF8  A77A               	btfss	dir_read@a& (0+255),3,b
  5815  002DFA  D021               	goto	l5322
  5816  002DFC                     l5314:
  5817                           
  5818                           ; BSR set to: 0
  5819                           ;pff.c: 259: res = dir_next(dj);
  5820  002DFC  C045  F03C         	movff	dir_read@dj+1,dir_next@dj+1
  5821  002E00  C044  F03B         	movff	dir_read@dj,dir_next@dj
  5822  002E04  EC17  F012         	call	_dir_next	;wreg free
  5823  002E08  0100               	movlb	0	; () banked
  5824  002E0A  6F7E               	movwf	dir_read@res& (0+255),b
  5825                           
  5826                           ; BSR set to: 0
  5827                           ;pff.c: 260: if (res != FR_OK) break;
  5828  002E0C  0100               	movlb	0	; () banked
  5829  002E0E  517E               	movf	dir_read@res& (0+255),w,b
  5830  002E10  A4D8               	btfss	status,2,c
  5831  002E12  D015               	goto	l5322
  5832  002E14                     l5320:
  5833                           
  5834                           ; BSR set to: 0
  5835  002E14  EE20 F00C          	lfsr	2,12
  5836  002E18  5044               	movf	dir_read@dj,w,c
  5837  002E1A  26D9               	addwf	fsr2l,f,c
  5838  002E1C  5045               	movf	dir_read@dj+1,w,c
  5839  002E1E  22DA               	addwfc	fsr2h,f,c
  5840  002E20  CFDE F076          	movff	postinc2,??_dir_read
  5841  002E24  CFDE F077          	movff	postinc2,??_dir_read+1
  5842  002E28  CFDE F078          	movff	postinc2,??_dir_read+2
  5843  002E2C  CFDE F079          	movff	postinc2,??_dir_read+3
  5844  002E30  0100               	movlb	0	; () banked
  5845  002E32  5179               	movf	(??_dir_read+3)& (0+255),w,b
  5846  002E34  1176               	iorwf	??_dir_read& (0+255),w,b
  5847  002E36  1177               	iorwf	(??_dir_read+1)& (0+255),w,b
  5848  002E38  1178               	iorwf	(??_dir_read+2)& (0+255),w,b
  5849  002E3A  A4D8               	btfss	status,2,c
  5850  002E3C  D779               	goto	l5292
  5851  002E3E                     l5322:
  5852                           
  5853                           ; BSR set to: 0
  5854                           ;pff.c: 261: }
  5855                           ;pff.c: 263: if (res != FR_OK) dj->sect = 0;
  5856  002E3E  0100               	movlb	0	; () banked
  5857  002E40  517E               	movf	dir_read@res& (0+255),w,b
  5858  002E42  B4D8               	btfsc	status,2,c
  5859  002E44  D00A               	goto	l5326
  5860                           
  5861                           ; BSR set to: 0
  5862  002E46  EE20 F00C          	lfsr	2,12
  5863  002E4A  5044               	movf	dir_read@dj,w,c
  5864  002E4C  26D9               	addwf	fsr2l,f,c
  5865  002E4E  5045               	movf	dir_read@dj+1,w,c
  5866  002E50  22DA               	addwfc	fsr2h,f,c
  5867  002E52  6ADE               	clrf	postinc2,c
  5868  002E54  6ADE               	clrf	postinc2,c
  5869  002E56  6ADE               	clrf	postinc2,c
  5870  002E58  6ADD               	clrf	postdec2,c
  5871  002E5A                     l5326:
  5872                           
  5873                           ; BSR set to: 0
  5874                           ;pff.c: 265: return res;
  5875  002E5A  0100               	movlb	0	; () banked
  5876  002E5C  517E               	movf	dir_read@res& (0+255),w,b
  5877                           
  5878                           ; BSR set to: 0
  5879                           
  5880                           ; BSR set to: 0
  5881  002E5E  0012               	return	
  5882  002E60                     __end_of_dir_read:
  5883                           	opt stack 0
  5884                           tblptru	equ	0xFF8
  5885                           tblptrh	equ	0xFF7
  5886                           tblptrl	equ	0xFF6
  5887                           tablat	equ	0xFF5
  5888                           prodh	equ	0xFF4
  5889                           prodl	equ	0xFF3
  5890                           intcon	equ	0xFF2
  5891                           postinc0	equ	0xFEE
  5892                           wreg	equ	0xFE8
  5893                           indf1	equ	0xFE7
  5894                           postinc1	equ	0xFE6
  5895                           postdec1	equ	0xFE5
  5896                           fsr1h	equ	0xFE2
  5897                           fsr1l	equ	0xFE1
  5898                           indf2	equ	0xFDF
  5899                           postinc2	equ	0xFDE
  5900                           postdec2	equ	0xFDD
  5901                           fsr2h	equ	0xFDA
  5902                           fsr2l	equ	0xFD9
  5903                           status	equ	0xFD8
  5904                           
  5905 ;; *************** function _pf_opendir *****************
  5906 ;; Defined at:
  5907 ;;		line 761 in file "../../../PIC18F/pff.c"
  5908 ;; Parameters:    Size  Location     Type
  5909 ;;  dj              2   45[BANK0 ] PTR struct _Dir_
  5910 ;;		 -> Dir1(16), 
  5911 ;;  path            2   47[BANK0 ] PTR const unsigned char 
  5912 ;;		 -> STR_1(1), 
  5913 ;; Auto vars:     Size  Location     Type
  5914 ;;  dir            32   57[BANK0 ] unsigned char [32]
  5915 ;;  sp             12   89[BANK0 ] unsigned char [12]
  5916 ;;  fs              2  101[BANK0 ] PTR struct _FATFS_
  5917 ;;		 -> Fs(44), NULL(0), 
  5918 ;;  res             1  103[BANK0 ] enum E48
  5919 ;; Return value:  Size  Location     Type
  5920 ;;                  1    wreg      enum E48
  5921 ;; Registers used:
  5922 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5923 ;; Tracked objects:
  5924 ;;		On entry : 0/0
  5925 ;;		On exit  : 0/0
  5926 ;;		Unchanged: 0/0
  5927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5928 ;;      Params:         0       4       0       0       0       0       0       0       0
  5929 ;;      Locals:         0      47       0       0       0       0       0       0       0
  5930 ;;      Temps:          0       8       0       0       0       0       0       0       0
  5931 ;;      Totals:         0      59       0       0       0       0       0       0       0
  5932 ;;Total ram usage:       59 bytes
  5933 ;; Hardware stack levels used:    1
  5934 ;; Hardware stack levels required when called:   10
  5935 ;; This function calls:
  5936 ;;		_dir_rewind
  5937 ;;		_follow_path
  5938 ;; This function is called by:
  5939 ;;		_main
  5940 ;; This function uses a non-reentrant model
  5941 ;;
  5942                           
  5943                           	psect	text19
  5944  002E60                     __ptext19:
  5945                           	opt stack 0
  5946  002E60                     _pf_opendir:
  5947                           	opt stack 19
  5948                           
  5949                           ;pff.c: 766: FRESULT res;
  5950                           ;pff.c: 767: BYTE sp[12], dir[32];
  5951                           ;pff.c: 768: FATFS *fs = FatFs;
  5952                           
  5953                           ; BSR set to: 0
  5954                           ;incstack = 0
  5955  002E60  0100               	movlb	0	; () banked
  5956  002E62  C049  F0C6         	movff	_FatFs+1,pf_opendir@fs+1
  5957  002E66  0100               	movlb	0	; () banked
  5958  002E68  C048  F0C5         	movff	_FatFs,pf_opendir@fs
  5959                           
  5960                           ;pff.c: 771: if (!fs) {
  5961  002E6C  0100               	movlb	0	; () banked
  5962  002E6E  51C6               	movf	(pf_opendir@fs+1)& (0+255),w,b
  5963  002E70  11C5               	iorwf	pf_opendir@fs& (0+255),w,b
  5964  002E72  A4D8               	btfss	status,2,c
  5965  002E74  D002               	goto	l5732
  5966                           
  5967                           ; BSR set to: 0
  5968                           ;pff.c: 772: res = FR_NOT_ENABLED;
  5969  002E76  0E06               	movlw	6
  5970  002E78  D08B               	goto	L12
  5971  002E7A                     l5732:
  5972                           
  5973                           ; BSR set to: 0
  5974                           ;pff.c: 774: fs->buf = dir;
  5975  002E7A  0100               	movlb	0	; () banked
  5976  002E7C  EE20 F006          	lfsr	2,6
  5977  002E80  0100               	movlb	0	; () banked
  5978  002E82  51C5               	movf	pf_opendir@fs& (0+255),w,b
  5979  002E84  26D9               	addwf	fsr2l,f,c
  5980  002E86  0100               	movlb	0	; () banked
  5981  002E88  51C6               	movf	(pf_opendir@fs+1)& (0+255),w,b
  5982  002E8A  22DA               	addwfc	fsr2h,f,c
  5983  002E8C  0100               	movlb	0	; () banked
  5984  002E8E  0E99               	movlw	low pf_opendir@dir
  5985  002E90  6EDE               	movwf	postinc2,c
  5986  002E92  0100               	movlb	0	; () banked
  5987  002E94  0E00               	movlw	high pf_opendir@dir
  5988  002E96  6EDD               	movwf	postdec2,c
  5989                           
  5990                           ;pff.c: 775: dj->fn = sp;
  5991  002E98  0100               	movlb	0	; () banked
  5992  002E9A  EE20 F002          	lfsr	2,2
  5993  002E9E  0100               	movlb	0	; () banked
  5994  002EA0  518D               	movf	pf_opendir@dj& (0+255),w,b
  5995  002EA2  26D9               	addwf	fsr2l,f,c
  5996  002EA4  0100               	movlb	0	; () banked
  5997  002EA6  518E               	movf	(pf_opendir@dj+1)& (0+255),w,b
  5998  002EA8  22DA               	addwfc	fsr2h,f,c
  5999  002EAA  0100               	movlb	0	; () banked
  6000  002EAC  0EB9               	movlw	low pf_opendir@sp
  6001  002EAE  6EDE               	movwf	postinc2,c
  6002  002EB0  0100               	movlb	0	; () banked
  6003  002EB2  0E00               	movlw	high pf_opendir@sp
  6004  002EB4  6EDD               	movwf	postdec2,c
  6005                           
  6006                           ; BSR set to: 0
  6007                           ;pff.c: 776: res = follow_path(dj, path);
  6008  002EB6  0100               	movlb	0	; () banked
  6009  002EB8  C08E  F07B         	movff	pf_opendir@dj+1,follow_path@dj+1
  6010  002EBC  0100               	movlb	0	; () banked
  6011  002EBE  C08D  F07A         	movff	pf_opendir@dj,follow_path@dj
  6012  002EC2  0100               	movlb	0	; () banked
  6013  002EC4  C090  F07D         	movff	pf_opendir@path+1,follow_path@path+1
  6014  002EC8  0100               	movlb	0	; () banked
  6015  002ECA  C08F  F07C         	movff	pf_opendir@path,follow_path@path
  6016  002ECE  ECE0  F010         	call	_follow_path	;wreg free
  6017  002ED2  0100               	movlb	0	; () banked
  6018  002ED4  6FC7               	movwf	pf_opendir@res& (0+255),b
  6019                           
  6020                           ; BSR set to: 0
  6021                           ;pff.c: 777: if (res == FR_OK) {
  6022  002ED6  0100               	movlb	0	; () banked
  6023  002ED8  67C7               	tstfsz	pf_opendir@res& (0+255),b
  6024  002EDA  D054               	goto	l5750
  6025                           
  6026                           ; BSR set to: 0
  6027                           ;pff.c: 778: if (dir[0]) {
  6028  002EDC  0100               	movlb	0	; () banked
  6029  002EDE  5199               	movf	pf_opendir@dir& (0+255),w,b
  6030  002EE0  B4D8               	btfsc	status,2,c
  6031  002EE2  D043               	goto	l5746
  6032                           
  6033                           ; BSR set to: 0
  6034                           ;pff.c: 779: if (dir[11] & 0x10) {
  6035  002EE4  0100               	movlb	0	; () banked
  6036  002EE6  A9A4               	btfss	(pf_opendir@dir+11)& (0+255),4,b
  6037  002EE8  D03D               	goto	l5744
  6038                           
  6039                           ; BSR set to: 0
  6040                           ;pff.c: 780: dj->sclust =
  6041                           ;pff.c: 782: ((DWORD)(WORD)(*(WORD*)(BYTE*)(dir+20)) << 16) |
  6042                           ;pff.c: 784: (WORD)(*(WORD*)(BYTE*)(dir+26));
  6043  002EEA  0100               	movlb	0	; () banked
  6044  002EEC  51AD               	movf	(pf_opendir@dir+20)& (0+255),w,b
  6045  002EEE  0100               	movlb	0	; () banked
  6046  002EF0  6F91               	movwf	??_pf_opendir& (0+255),b
  6047  002EF2  0100               	movlb	0	; () banked
  6048  002EF4  51AE               	movf	(pf_opendir@dir+21)& (0+255),w,b
  6049  002EF6  0100               	movlb	0	; () banked
  6050  002EF8  6F92               	movwf	(??_pf_opendir+1)& (0+255),b
  6051  002EFA  0100               	movlb	0	; () banked
  6052  002EFC  6B93               	clrf	(??_pf_opendir+2)& (0+255),b
  6053  002EFE  0100               	movlb	0	; () banked
  6054  002F00  6B94               	clrf	(??_pf_opendir+3)& (0+255),b
  6055  002F02  C092  F094         	movff	??_pf_opendir+1,??_pf_opendir+3
  6056  002F06  C091  F093         	movff	??_pf_opendir,??_pf_opendir+2
  6057  002F0A  0100               	movlb	0	; () banked
  6058  002F0C  6B92               	clrf	(??_pf_opendir+1)& (0+255),b
  6059  002F0E  6B91               	clrf	??_pf_opendir& (0+255),b
  6060  002F10  0100               	movlb	0	; () banked
  6061  002F12  51B3               	movf	(pf_opendir@dir+26)& (0+255),w,b
  6062  002F14  0100               	movlb	0	; () banked
  6063  002F16  1191               	iorwf	??_pf_opendir& (0+255),w,b
  6064  002F18  0100               	movlb	0	; () banked
  6065  002F1A  6F95               	movwf	(??_pf_opendir+4)& (0+255),b
  6066  002F1C  0100               	movlb	0	; () banked
  6067  002F1E  51B4               	movf	(pf_opendir@dir+27)& (0+255),w,b
  6068  002F20  0100               	movlb	0	; () banked
  6069  002F22  1192               	iorwf	(??_pf_opendir+1)& (0+255),w,b
  6070  002F24  0100               	movlb	0	; () banked
  6071  002F26  6F96               	movwf	(??_pf_opendir+5)& (0+255),b
  6072  002F28  0E00               	movlw	0
  6073  002F2A  0100               	movlb	0	; () banked
  6074  002F2C  1193               	iorwf	(??_pf_opendir+2)& (0+255),w,b
  6075  002F2E  0100               	movlb	0	; () banked
  6076  002F30  6F97               	movwf	(??_pf_opendir+6)& (0+255),b
  6077  002F32  0E00               	movlw	0
  6078  002F34  0100               	movlb	0	; () banked
  6079  002F36  1194               	iorwf	(??_pf_opendir+3)& (0+255),w,b
  6080  002F38  0100               	movlb	0	; () banked
  6081  002F3A  6F98               	movwf	(??_pf_opendir+7)& (0+255),b
  6082  002F3C  0100               	movlb	0	; () banked
  6083  002F3E  EE20 F004          	lfsr	2,4
  6084  002F42  0100               	movlb	0	; () banked
  6085  002F44  518D               	movf	pf_opendir@dj& (0+255),w,b
  6086  002F46  26D9               	addwf	fsr2l,f,c
  6087  002F48  0100               	movlb	0	; () banked
  6088  002F4A  518E               	movf	(pf_opendir@dj+1)& (0+255),w,b
  6089  002F4C  22DA               	addwfc	fsr2h,f,c
  6090  002F4E  C095  FFDE         	movff	??_pf_opendir+4,postinc2
  6091  002F52  C096  FFDE         	movff	??_pf_opendir+5,postinc2
  6092  002F56  C097  FFDE         	movff	??_pf_opendir+6,postinc2
  6093  002F5A  C098  FFDD         	movff	??_pf_opendir+7,postdec2
  6094  002F5E  06D9               	decf	fsr2l,f,c
  6095  002F60  06D9               	decf	fsr2l,f,c
  6096                           
  6097                           ;pff.c: 785: } else {
  6098  002F62  D003               	goto	l5746
  6099  002F64                     l5744:
  6100                           
  6101                           ; BSR set to: 0
  6102                           ;pff.c: 786: res = FR_NO_PATH;
  6103  002F64  0E04               	movlw	4
  6104  002F66  0100               	movlb	0	; () banked
  6105  002F68  6FC7               	movwf	pf_opendir@res& (0+255),b
  6106  002F6A                     l5746:
  6107                           
  6108                           ; BSR set to: 0
  6109                           ;pff.c: 787: }
  6110                           ;pff.c: 788: }
  6111                           ;pff.c: 789: if (res == FR_OK)
  6112  002F6A  0100               	movlb	0	; () banked
  6113  002F6C  67C7               	tstfsz	pf_opendir@res& (0+255),b
  6114  002F6E  D00A               	goto	l5750
  6115                           
  6116                           ; BSR set to: 0
  6117                           ;pff.c: 790: res = dir_rewind(dj);
  6118  002F70  0100               	movlb	0	; () banked
  6119  002F72  C08E  F02C         	movff	pf_opendir@dj+1,dir_rewind@dj+1
  6120  002F76  0100               	movlb	0	; () banked
  6121  002F78  C08D  F02B         	movff	pf_opendir@dj,dir_rewind@dj
  6122  002F7C  ECCD  F017         	call	_dir_rewind	;wreg free
  6123  002F80  0100               	movlb	0	; () banked
  6124  002F82  6FC7               	movwf	pf_opendir@res& (0+255),b
  6125  002F84                     l5750:
  6126                           
  6127                           ; BSR set to: 0
  6128                           ;pff.c: 791: }
  6129                           ;pff.c: 792: if (res == FR_NO_FILE) res = FR_NO_PATH;
  6130  002F84  0100               	movlb	0	; () banked
  6131  002F86  51C7               	movf	pf_opendir@res& (0+255),w,b
  6132  002F88  0A03               	xorlw	3
  6133  002F8A  A4D8               	btfss	status,2,c
  6134  002F8C  D003               	goto	l219
  6135                           
  6136                           ; BSR set to: 0
  6137  002F8E  0E04               	movlw	4
  6138  002F90                     L12:
  6139  002F90  0100               	movlb	0	; () banked
  6140  002F92  6FC7               	movwf	pf_opendir@res& (0+255),b
  6141  002F94                     l219:
  6142                           
  6143                           ; BSR set to: 0
  6144                           ;pff.c: 793: }
  6145                           ;pff.c: 795: return res;
  6146  002F94  0100               	movlb	0	; () banked
  6147  002F96  51C7               	movf	pf_opendir@res& (0+255),w,b
  6148                           
  6149                           ; BSR set to: 0
  6150                           
  6151                           ; BSR set to: 0
  6152  002F98  0012               	return	
  6153  002F9A                     __end_of_pf_opendir:
  6154                           	opt stack 0
  6155                           tblptru	equ	0xFF8
  6156                           tblptrh	equ	0xFF7
  6157                           tblptrl	equ	0xFF6
  6158                           tablat	equ	0xFF5
  6159                           prodh	equ	0xFF4
  6160                           prodl	equ	0xFF3
  6161                           intcon	equ	0xFF2
  6162                           postinc0	equ	0xFEE
  6163                           wreg	equ	0xFE8
  6164                           indf1	equ	0xFE7
  6165                           postinc1	equ	0xFE6
  6166                           postdec1	equ	0xFE5
  6167                           fsr1h	equ	0xFE2
  6168                           fsr1l	equ	0xFE1
  6169                           indf2	equ	0xFDF
  6170                           postinc2	equ	0xFDE
  6171                           postdec2	equ	0xFDD
  6172                           fsr2h	equ	0xFDA
  6173                           fsr2l	equ	0xFD9
  6174                           status	equ	0xFD8
  6175                           
  6176 ;; *************** function _follow_path *****************
  6177 ;; Defined at:
  6178 ;;		line 371 in file "../../../PIC18F/pff.c"
  6179 ;; Parameters:    Size  Location     Type
  6180 ;;  dj              2   26[BANK0 ] PTR struct _Dir_
  6181 ;;		 -> Dir1(16), pf_open@dj(16), 
  6182 ;;  path            2   28[BANK0 ] PTR const unsigned char 
  6183 ;;		 -> Fno.fname(13), Fno(22), STR_1(1), 
  6184 ;; Auto vars:     Size  Location     Type
  6185 ;;  dir             2   42[BANK0 ] PTR unsigned char 
  6186 ;;		 -> pf_readdir@dir(32), pf_opendir@dir(32), pf_open@dir(32), 
  6187 ;;  res             1   44[BANK0 ] enum E48
  6188 ;; Return value:  Size  Location     Type
  6189 ;;                  1    wreg      enum E48
  6190 ;; Registers used:
  6191 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6192 ;; Tracked objects:
  6193 ;;		On entry : 0/0
  6194 ;;		On exit  : 0/0
  6195 ;;		Unchanged: 0/0
  6196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6197 ;;      Params:         0       4       0       0       0       0       0       0       0
  6198 ;;      Locals:         0       3       0       0       0       0       0       0       0
  6199 ;;      Temps:          0      12       0       0       0       0       0       0       0
  6200 ;;      Totals:         0      19       0       0       0       0       0       0       0
  6201 ;;Total ram usage:       19 bytes
  6202 ;; Hardware stack levels used:    1
  6203 ;; Hardware stack levels required when called:    9
  6204 ;; This function calls:
  6205 ;;		_create_name
  6206 ;;		_dir_find
  6207 ;;		_dir_rewind
  6208 ;; This function is called by:
  6209 ;;		_pf_open
  6210 ;;		_pf_opendir
  6211 ;; This function uses a non-reentrant model
  6212 ;;
  6213                           
  6214                           	psect	text20
  6215  0021C0                     __ptext20:
  6216                           	opt stack 0
  6217  0021C0                     _follow_path:
  6218                           	opt stack 18
  6219                           
  6220                           ;pff.c: 376: FRESULT res;
  6221                           ;pff.c: 377: BYTE *dir;
  6222                           ;pff.c: 380: while (*path == ' ') path++;
  6223                           
  6224                           ; BSR set to: 0
  6225                           ;incstack = 0
  6226  0021C0  D003               	goto	l5106
  6227  0021C2                     l5104:
  6228  0021C2  0100               	movlb	0	; () banked
  6229  0021C4  4B7C               	infsnz	follow_path@path& (0+255),f,b
  6230  0021C6  2B7D               	incf	(follow_path@path+1)& (0+255),f,b
  6231  0021C8                     l5106:
  6232  0021C8  0100               	movlb	0	; () banked
  6233  0021CA  C07C  FFF6         	movff	follow_path@path,tblptrl
  6234  0021CE  0100               	movlb	0	; () banked
  6235  0021D0  C07D  FFF7         	movff	follow_path@path+1,tblptrh
  6236  0021D4  6AF8               	clrf	tblptru,c
  6237  0021D6  0E07               	movlw	(high __ramtop+-1)
  6238  0021D8  64F7               	cpfsgt	tblptrh,c
  6239  0021DA  D003               	bra	u5657
  6240  0021DC  0008               	tblrd		*
  6241  0021DE  50F5               	movf	tablat,w,c
  6242  0021E0  D005               	bra	u5650
  6243  0021E2                     u5657:
  6244  0021E2  CFF6 FFE1          	movff	tblptrl,fsr1l
  6245  0021E6  CFF7 FFE2          	movff	tblptrh,fsr1h
  6246  0021EA  50E7               	movf	indf1,w,c
  6247  0021EC                     u5650:
  6248  0021EC  0A20               	xorlw	32
  6249  0021EE  B4D8               	btfsc	status,2,c
  6250  0021F0  D7E8               	goto	l5104
  6251                           
  6252                           ;pff.c: 381: if (*path == '/') path++;
  6253  0021F2  0100               	movlb	0	; () banked
  6254  0021F4  C07C  FFF6         	movff	follow_path@path,tblptrl
  6255  0021F8  0100               	movlb	0	; () banked
  6256  0021FA  C07D  FFF7         	movff	follow_path@path+1,tblptrh
  6257  0021FE  6AF8               	clrf	tblptru,c
  6258  002200  0E07               	movlw	(high __ramtop+-1)
  6259  002202  64F7               	cpfsgt	tblptrh,c
  6260  002204  D003               	bra	u5677
  6261  002206  0008               	tblrd		*
  6262  002208  50F5               	movf	tablat,w,c
  6263  00220A  D005               	bra	u5670
  6264  00220C                     u5677:
  6265  00220C  CFF6 FFE1          	movff	tblptrl,fsr1l
  6266  002210  CFF7 FFE2          	movff	tblptrh,fsr1h
  6267  002214  50E7               	movf	indf1,w,c
  6268  002216                     u5670:
  6269  002216  0A2F               	xorlw	47
  6270  002218  A4D8               	btfss	status,2,c
  6271  00221A  D003               	goto	l5112
  6272  00221C  0100               	movlb	0	; () banked
  6273  00221E  4B7C               	infsnz	follow_path@path& (0+255),f,b
  6274  002220  2B7D               	incf	(follow_path@path+1)& (0+255),f,b
  6275  002222                     l5112:
  6276                           
  6277                           ;pff.c: 382: dj->sclust = 0;
  6278  002222  0100               	movlb	0	; () banked
  6279  002224  EE20 F004          	lfsr	2,4
  6280  002228  0100               	movlb	0	; () banked
  6281  00222A  517A               	movf	follow_path@dj& (0+255),w,b
  6282  00222C  26D9               	addwf	fsr2l,f,c
  6283  00222E  0100               	movlb	0	; () banked
  6284  002230  517B               	movf	(follow_path@dj+1)& (0+255),w,b
  6285  002232  22DA               	addwfc	fsr2h,f,c
  6286  002234  6ADE               	clrf	postinc2,c
  6287  002236  6ADE               	clrf	postinc2,c
  6288  002238  6ADE               	clrf	postinc2,c
  6289  00223A  6ADD               	clrf	postdec2,c
  6290                           
  6291                           ; BSR set to: 0
  6292                           ;pff.c: 384: if ((BYTE)*path <= ' ') {
  6293  00223C  0100               	movlb	0	; () banked
  6294  00223E  C07C  FFF6         	movff	follow_path@path,tblptrl
  6295  002242  0100               	movlb	0	; () banked
  6296  002244  C07D  FFF7         	movff	follow_path@path+1,tblptrh
  6297  002248  6AF8               	clrf	tblptru,c
  6298  00224A  0E07               	movlw	(high __ramtop+-1)
  6299  00224C  64F7               	cpfsgt	tblptrh,c
  6300  00224E  D003               	bra	u5697
  6301  002250  0008               	tblrd		*
  6302  002252  50F5               	movf	tablat,w,c
  6303  002254  D005               	bra	u5690
  6304  002256                     u5697:
  6305  002256  CFF6 FFE1          	movff	tblptrl,fsr1l
  6306  00225A  CFF7 FFE2          	movff	tblptrh,fsr1h
  6307  00225E  50E7               	movf	indf1,w,c
  6308  002260                     u5690:
  6309  002260  0100               	movlb	0	; () banked
  6310  002262  6F7E               	movwf	??_follow_path& (0+255),b
  6311  002264  0E21               	movlw	33
  6312  002266  0100               	movlb	0	; () banked
  6313  002268  5D7E               	subwf	??_follow_path& (0+255),w,b
  6314  00226A  B0D8               	btfsc	status,0,c
  6315  00226C  D01B               	goto	l5120
  6316                           
  6317                           ; BSR set to: 0
  6318                           ;pff.c: 385: res = dir_rewind(dj);
  6319  00226E  0100               	movlb	0	; () banked
  6320  002270  C07B  F02C         	movff	follow_path@dj+1,dir_rewind@dj+1
  6321  002274  0100               	movlb	0	; () banked
  6322  002276  C07A  F02B         	movff	follow_path@dj,dir_rewind@dj
  6323  00227A  ECCD  F017         	call	_dir_rewind	;wreg free
  6324  00227E  0100               	movlb	0	; () banked
  6325  002280  6F8C               	movwf	follow_path@res& (0+255),b
  6326                           
  6327                           ; BSR set to: 0
  6328                           ;pff.c: 386: FatFs->buf[0] = 0;
  6329  002282  EE20 F006          	lfsr	2,6
  6330  002286  5048               	movf	_FatFs,w,c
  6331  002288  26D9               	addwf	fsr2l,f,c
  6332  00228A  5049               	movf	_FatFs+1,w,c
  6333  00228C  22DA               	addwfc	fsr2h,f,c
  6334  00228E  CFDE F07E          	movff	postinc2,??_follow_path
  6335  002292  CFDD F07F          	movff	postdec2,??_follow_path+1
  6336  002296  C07E  FFD9         	movff	??_follow_path,fsr2l
  6337  00229A  C07F  FFDA         	movff	??_follow_path+1,fsr2h
  6338  00229E  0E00               	movlw	0
  6339  0022A0  6EDF               	movwf	indf2,c
  6340                           
  6341                           ;pff.c: 388: } else {
  6342  0022A2  D0C2               	goto	l5146
  6343  0022A4                     l5120:
  6344                           
  6345                           ; BSR set to: 0
  6346                           ;pff.c: 390: res = create_name(dj, &path);
  6347  0022A4  0100               	movlb	0	; () banked
  6348  0022A6  C07B  F019         	movff	follow_path@dj+1,create_name@dj+1
  6349  0022AA  0100               	movlb	0	; () banked
  6350  0022AC  C07A  F018         	movff	follow_path@dj,create_name@dj
  6351  0022B0  0100               	movlb	0	; () banked
  6352  0022B2  0E00               	movlw	high follow_path@path
  6353  0022B4  6E1B               	movwf	create_name@path+1,c
  6354  0022B6  0100               	movlb	0	; () banked
  6355  0022B8  0E7C               	movlw	low follow_path@path
  6356  0022BA  6E1A               	movwf	create_name@path,c
  6357  0022BC  EC3E  F013         	call	_create_name	;wreg free
  6358  0022C0  0100               	movlb	0	; () banked
  6359  0022C2  6F8C               	movwf	follow_path@res& (0+255),b
  6360                           
  6361                           ; BSR set to: 0
  6362                           ;pff.c: 391: if (res != FR_OK) break;
  6363  0022C4  0100               	movlb	0	; () banked
  6364  0022C6  518C               	movf	follow_path@res& (0+255),w,b
  6365  0022C8  A4D8               	btfss	status,2,c
  6366  0022CA  D0AE               	goto	l5146
  6367                           
  6368                           ; BSR set to: 0
  6369                           ;pff.c: 392: res = dir_find(dj);
  6370                           
  6371                           ; BSR set to: 0
  6372                           
  6373                           ; BSR set to: 0
  6374  0022CC  0100               	movlb	0	; () banked
  6375  0022CE  C07B  F045         	movff	follow_path@dj+1,dir_find@dj+1
  6376  0022D2  0100               	movlb	0	; () banked
  6377  0022D4  C07A  F044         	movff	follow_path@dj,dir_find@dj
  6378  0022D8  EC67  F018         	call	_dir_find	;wreg free
  6379  0022DC  0100               	movlb	0	; () banked
  6380  0022DE  6F8C               	movwf	follow_path@res& (0+255),b
  6381                           
  6382                           ; BSR set to: 0
  6383                           ;pff.c: 393: if (res != FR_OK) {
  6384  0022E0  0100               	movlb	0	; () banked
  6385  0022E2  518C               	movf	follow_path@res& (0+255),w,b
  6386  0022E4  B4D8               	btfsc	status,2,c
  6387  0022E6  D018               	goto	l5136
  6388                           
  6389                           ; BSR set to: 0
  6390                           ;pff.c: 394: if (res == FR_NO_FILE && !*(dj->fn+11))
  6391  0022E8  0100               	movlb	0	; () banked
  6392  0022EA  518C               	movf	follow_path@res& (0+255),w,b
  6393  0022EC  0A03               	xorlw	3
  6394  0022EE  A4D8               	btfss	status,2,c
  6395  0022F0  D09B               	goto	l5146
  6396                           
  6397                           ; BSR set to: 0
  6398  0022F2  0100               	movlb	0	; () banked
  6399  0022F4  EE20 F002          	lfsr	2,2
  6400  0022F8  0100               	movlb	0	; () banked
  6401  0022FA  517A               	movf	follow_path@dj& (0+255),w,b
  6402  0022FC  26D9               	addwf	fsr2l,f,c
  6403  0022FE  0100               	movlb	0	; () banked
  6404  002300  517B               	movf	(follow_path@dj+1)& (0+255),w,b
  6405  002302  22DA               	addwfc	fsr2h,f,c
  6406  002304  EE10 F00B          	lfsr	1,11
  6407  002308  50DE               	movf	postinc2,w,c
  6408  00230A  26E1               	addwf	fsr1l,f,c
  6409  00230C  50DD               	movf	postdec2,w,c
  6410  00230E  22E2               	addwfc	fsr1h,f,c
  6411  002310  50E7               	movf	indf1,w,c
  6412  002312  A4D8               	btfss	status,2,c
  6413  002314  D089               	goto	l5146
  6414  002316  D02D               	goto	u5760
  6415  002318                     l5136:
  6416                           
  6417                           ; BSR set to: 0
  6418                           ;pff.c: 397: }
  6419                           ;pff.c: 398: if (*(dj->fn+11)) break;
  6420  002318  0100               	movlb	0	; () banked
  6421  00231A  EE20 F002          	lfsr	2,2
  6422  00231E  0100               	movlb	0	; () banked
  6423  002320  517A               	movf	follow_path@dj& (0+255),w,b
  6424  002322  26D9               	addwf	fsr2l,f,c
  6425  002324  0100               	movlb	0	; () banked
  6426  002326  517B               	movf	(follow_path@dj+1)& (0+255),w,b
  6427  002328  22DA               	addwfc	fsr2h,f,c
  6428  00232A  EE10 F00B          	lfsr	1,11
  6429  00232E  50DE               	movf	postinc2,w,c
  6430  002330  26E1               	addwf	fsr1l,f,c
  6431  002332  50DD               	movf	postdec2,w,c
  6432  002334  22E2               	addwfc	fsr1h,f,c
  6433  002336  50E7               	movf	indf1,w,c
  6434  002338  A4D8               	btfss	status,2,c
  6435  00233A  D076               	goto	l5146
  6436                           
  6437                           ; BSR set to: 0
  6438                           ;pff.c: 399: dir = FatFs->buf;
  6439                           
  6440                           ; BSR set to: 0
  6441                           
  6442                           ; BSR set to: 0
  6443  00233C  EE20 F006          	lfsr	2,6
  6444  002340  5048               	movf	_FatFs,w,c
  6445  002342  26D9               	addwf	fsr2l,f,c
  6446  002344  5049               	movf	_FatFs+1,w,c
  6447  002346  22DA               	addwfc	fsr2h,f,c
  6448  002348  0100               	movlb	0	; () banked
  6449  00234A  CFDE F08A          	movff	postinc2,follow_path@dir
  6450  00234E  0100               	movlb	0	; () banked
  6451  002350  CFDD F08B          	movff	postdec2,follow_path@dir+1
  6452                           
  6453                           ;pff.c: 400: if (!(dir[11] & 0x10)) {
  6454  002354  0100               	movlb	0	; () banked
  6455  002356  EE20 F00B          	lfsr	2,11
  6456  00235A  0100               	movlb	0	; () banked
  6457  00235C  518A               	movf	follow_path@dir& (0+255),w,b
  6458  00235E  26D9               	addwf	fsr2l,f,c
  6459  002360  0100               	movlb	0	; () banked
  6460  002362  518B               	movf	(follow_path@dir+1)& (0+255),w,b
  6461  002364  22DA               	addwfc	fsr2h,f,c
  6462  002366  50DF               	movf	indf2,w,c
  6463  002368  0100               	movlb	0	; () banked
  6464  00236A  6F7E               	movwf	??_follow_path& (0+255),b
  6465  00236C  0100               	movlb	0	; () banked
  6466  00236E  B97E               	btfsc	??_follow_path& (0+255),4,b
  6467  002370  D004               	goto	l5144
  6468  002372                     u5760:
  6469                           
  6470                           ; BSR set to: 0
  6471                           ;pff.c: 401: res = FR_NO_PATH; break;
  6472  002372  0E04               	movlw	4
  6473  002374  0100               	movlb	0	; () banked
  6474  002376  6F8C               	movwf	follow_path@res& (0+255),b
  6475  002378  D057               	goto	l5146
  6476  00237A                     l5144:
  6477                           
  6478                           ; BSR set to: 0
  6479                           ;pff.c: 402: }
  6480                           ;pff.c: 403: dj->sclust =
  6481                           ;pff.c: 405: ((DWORD)(WORD)(*(WORD*)(BYTE*)(dir+20)) << 16) |
  6482                           ;pff.c: 407: (WORD)(*(WORD*)(BYTE*)(dir+26));
  6483  00237A  0100               	movlb	0	; () banked
  6484  00237C  EE20 F01A          	lfsr	2,26
  6485  002380  0100               	movlb	0	; () banked
  6486  002382  518A               	movf	follow_path@dir& (0+255),w,b
  6487  002384  26D9               	addwf	fsr2l,f,c
  6488  002386  0100               	movlb	0	; () banked
  6489  002388  518B               	movf	(follow_path@dir+1)& (0+255),w,b
  6490  00238A  22DA               	addwfc	fsr2h,f,c
  6491  00238C  CFDE F07E          	movff	postinc2,??_follow_path
  6492  002390  CFDD F07F          	movff	postdec2,??_follow_path+1
  6493  002394  0100               	movlb	0	; () banked
  6494  002396  EE20 F014          	lfsr	2,20
  6495  00239A  0100               	movlb	0	; () banked
  6496  00239C  518A               	movf	follow_path@dir& (0+255),w,b
  6497  00239E  26D9               	addwf	fsr2l,f,c
  6498  0023A0  0100               	movlb	0	; () banked
  6499  0023A2  518B               	movf	(follow_path@dir+1)& (0+255),w,b
  6500  0023A4  22DA               	addwfc	fsr2h,f,c
  6501  0023A6  CFDE F080          	movff	postinc2,??_follow_path+2
  6502  0023AA  CFDD F081          	movff	postdec2,??_follow_path+3
  6503  0023AE  0100               	movlb	0	; () banked
  6504  0023B0  5180               	movf	(??_follow_path+2)& (0+255),w,b
  6505  0023B2  0100               	movlb	0	; () banked
  6506  0023B4  6F82               	movwf	(??_follow_path+4)& (0+255),b
  6507  0023B6  0100               	movlb	0	; () banked
  6508  0023B8  5181               	movf	(??_follow_path+3)& (0+255),w,b
  6509  0023BA  0100               	movlb	0	; () banked
  6510  0023BC  6F83               	movwf	(??_follow_path+5)& (0+255),b
  6511  0023BE  0100               	movlb	0	; () banked
  6512  0023C0  6B84               	clrf	(??_follow_path+6)& (0+255),b
  6513  0023C2  0100               	movlb	0	; () banked
  6514  0023C4  6B85               	clrf	(??_follow_path+7)& (0+255),b
  6515  0023C6  C083  F085         	movff	??_follow_path+5,??_follow_path+7
  6516  0023CA  C082  F084         	movff	??_follow_path+4,??_follow_path+6
  6517  0023CE  0100               	movlb	0	; () banked
  6518  0023D0  6B83               	clrf	(??_follow_path+5)& (0+255),b
  6519  0023D2  6B82               	clrf	(??_follow_path+4)& (0+255),b
  6520  0023D4  0100               	movlb	0	; () banked
  6521  0023D6  517E               	movf	??_follow_path& (0+255),w,b
  6522  0023D8  0100               	movlb	0	; () banked
  6523  0023DA  1182               	iorwf	(??_follow_path+4)& (0+255),w,b
  6524  0023DC  0100               	movlb	0	; () banked
  6525  0023DE  6F86               	movwf	(??_follow_path+8)& (0+255),b
  6526  0023E0  0100               	movlb	0	; () banked
  6527  0023E2  517F               	movf	(??_follow_path+1)& (0+255),w,b
  6528  0023E4  0100               	movlb	0	; () banked
  6529  0023E6  1183               	iorwf	(??_follow_path+5)& (0+255),w,b
  6530  0023E8  0100               	movlb	0	; () banked
  6531  0023EA  6F87               	movwf	(??_follow_path+9)& (0+255),b
  6532  0023EC  0E00               	movlw	0
  6533  0023EE  0100               	movlb	0	; () banked
  6534  0023F0  1184               	iorwf	(??_follow_path+6)& (0+255),w,b
  6535  0023F2  0100               	movlb	0	; () banked
  6536  0023F4  6F88               	movwf	(??_follow_path+10)& (0+255),b
  6537  0023F6  0E00               	movlw	0
  6538  0023F8  0100               	movlb	0	; () banked
  6539  0023FA  1185               	iorwf	(??_follow_path+7)& (0+255),w,b
  6540  0023FC  0100               	movlb	0	; () banked
  6541  0023FE  6F89               	movwf	(??_follow_path+11)& (0+255),b
  6542  002400  0100               	movlb	0	; () banked
  6543  002402  EE20 F004          	lfsr	2,4
  6544  002406  0100               	movlb	0	; () banked
  6545  002408  517A               	movf	follow_path@dj& (0+255),w,b
  6546  00240A  26D9               	addwf	fsr2l,f,c
  6547  00240C  0100               	movlb	0	; () banked
  6548  00240E  517B               	movf	(follow_path@dj+1)& (0+255),w,b
  6549  002410  22DA               	addwfc	fsr2h,f,c
  6550  002412  C086  FFDE         	movff	??_follow_path+8,postinc2
  6551  002416  C087  FFDE         	movff	??_follow_path+9,postinc2
  6552  00241A  C088  FFDE         	movff	??_follow_path+10,postinc2
  6553  00241E  C089  FFDD         	movff	??_follow_path+11,postdec2
  6554  002422  06D9               	decf	fsr2l,f,c
  6555  002424  06D9               	decf	fsr2l,f,c
  6556                           
  6557                           ;pff.c: 408: }
  6558  002426  D73E               	goto	l5120
  6559  002428                     l5146:
  6560                           
  6561                           ; BSR set to: 0
  6562                           ;pff.c: 409: }
  6563                           ;pff.c: 411: return res;
  6564  002428  0100               	movlb	0	; () banked
  6565  00242A  518C               	movf	follow_path@res& (0+255),w,b
  6566                           
  6567                           ; BSR set to: 0
  6568                           
  6569                           ; BSR set to: 0
  6570  00242C  0012               	return	
  6571  00242E                     __end_of_follow_path:
  6572                           	opt stack 0
  6573                           tblptru	equ	0xFF8
  6574                           tblptrh	equ	0xFF7
  6575                           tblptrl	equ	0xFF6
  6576                           tablat	equ	0xFF5
  6577                           prodh	equ	0xFF4
  6578                           prodl	equ	0xFF3
  6579                           intcon	equ	0xFF2
  6580                           postinc0	equ	0xFEE
  6581                           wreg	equ	0xFE8
  6582                           indf1	equ	0xFE7
  6583                           postinc1	equ	0xFE6
  6584                           postdec1	equ	0xFE5
  6585                           fsr1h	equ	0xFE2
  6586                           fsr1l	equ	0xFE1
  6587                           indf2	equ	0xFDF
  6588                           postinc2	equ	0xFDE
  6589                           postdec2	equ	0xFDD
  6590                           fsr2h	equ	0xFDA
  6591                           fsr2l	equ	0xFD9
  6592                           status	equ	0xFD8
  6593                           
  6594 ;; *************** function _dir_find *****************
  6595 ;; Defined at:
  6596 ;;		line 206 in file "../../../PIC18F/pff.c"
  6597 ;; Parameters:    Size  Location     Type
  6598 ;;  dj              2   67[COMRAM] PTR struct _Dir_
  6599 ;;		 -> Dir1(16), pf_open@dj(16), 
  6600 ;; Auto vars:     Size  Location     Type
  6601 ;;  dir             2   23[BANK0 ] PTR unsigned char 
  6602 ;;		 -> pf_readdir@dir(32), pf_opendir@dir(32), pf_open@dir(32), 
  6603 ;;  res             1   25[BANK0 ] enum E48
  6604 ;;  c               1   22[BANK0 ] unsigned char 
  6605 ;; Return value:  Size  Location     Type
  6606 ;;                  1    wreg      enum E48
  6607 ;; Registers used:
  6608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6609 ;; Tracked objects:
  6610 ;;		On entry : 0/0
  6611 ;;		On exit  : 0/0
  6612 ;;		Unchanged: 0/0
  6613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6614 ;;      Params:         2       0       0       0       0       0       0       0       0
  6615 ;;      Locals:         0       4       0       0       0       0       0       0       0
  6616 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6617 ;;      Totals:         4       4       0       0       0       0       0       0       0
  6618 ;;Total ram usage:        8 bytes
  6619 ;; Hardware stack levels used:    1
  6620 ;; Hardware stack levels required when called:    8
  6621 ;; This function calls:
  6622 ;;		_dir_next
  6623 ;;		_dir_rewind
  6624 ;;		_disk_readp
  6625 ;;		_mem_cmp
  6626 ;; This function is called by:
  6627 ;;		_follow_path
  6628 ;; This function uses a non-reentrant model
  6629 ;;
  6630                           
  6631                           	psect	text21
  6632  0030CE                     __ptext21:
  6633                           	opt stack 0
  6634  0030CE                     _dir_find:
  6635                           	opt stack 18
  6636                           
  6637                           ;pff.c: 210: FRESULT res;
  6638                           ;pff.c: 211: BYTE c, *dir;
  6639                           ;pff.c: 214: res = dir_rewind(dj);
  6640                           
  6641                           ; BSR set to: 0
  6642                           ;incstack = 0
  6643  0030CE  C045  F02C         	movff	dir_find@dj+1,dir_rewind@dj+1
  6644  0030D2  C044  F02B         	movff	dir_find@dj,dir_rewind@dj
  6645  0030D6  ECCD  F017         	call	_dir_rewind	;wreg free
  6646  0030DA  0100               	movlb	0	; () banked
  6647  0030DC  6F79               	movwf	dir_find@res& (0+255),b
  6648                           
  6649                           ; BSR set to: 0
  6650                           ;pff.c: 215: if (res != FR_OK) return res;
  6651  0030DE  0100               	movlb	0	; () banked
  6652  0030E0  5179               	movf	dir_find@res& (0+255),w,b
  6653  0030E2  A4D8               	btfss	status,2,c
  6654  0030E4  D089               	goto	l5098
  6655                           
  6656                           ; BSR set to: 0
  6657                           ;pff.c: 217: dir = FatFs->buf;
  6658                           
  6659                           ; BSR set to: 0
  6660                           
  6661                           ; BSR set to: 0
  6662                           
  6663                           ; BSR set to: 0
  6664  0030E6  EE20 F006          	lfsr	2,6
  6665  0030EA  5048               	movf	_FatFs,w,c
  6666  0030EC  26D9               	addwf	fsr2l,f,c
  6667  0030EE  5049               	movf	_FatFs+1,w,c
  6668  0030F0  22DA               	addwfc	fsr2h,f,c
  6669  0030F2  0100               	movlb	0	; () banked
  6670  0030F4  CFDE F077          	movff	postinc2,dir_find@dir
  6671  0030F8  0100               	movlb	0	; () banked
  6672  0030FA  CFDD F078          	movff	postdec2,dir_find@dir+1
  6673  0030FE                     l5076:
  6674                           
  6675                           ; BSR set to: 0
  6676                           ;pff.c: 219: res = disk_readp(dir, dj->sect, (WORD)((dj->index % 16) * 32), 32)
  6677                           ;pff.c: 220: ? FR_DISK_ERR : FR_OK;
  6678  0030FE  0100               	movlb	0	; () banked
  6679  003100  C078  F01E         	movff	dir_find@dir+1,disk_readp@buff+1
  6680  003104  0100               	movlb	0	; () banked
  6681  003106  C077  F01D         	movff	dir_find@dir,disk_readp@buff
  6682  00310A  EE20 F00C          	lfsr	2,12
  6683  00310E  5044               	movf	dir_find@dj,w,c
  6684  003110  26D9               	addwf	fsr2l,f,c
  6685  003112  5045               	movf	dir_find@dj+1,w,c
  6686  003114  22DA               	addwfc	fsr2h,f,c
  6687  003116  CFDE F01F          	movff	postinc2,disk_readp@lba
  6688  00311A  CFDE F020          	movff	postinc2,disk_readp@lba+1
  6689  00311E  CFDE F021          	movff	postinc2,disk_readp@lba+2
  6690  003122  CFDE F022          	movff	postinc2,disk_readp@lba+3
  6691  003126  C044  FFD9         	movff	dir_find@dj,fsr2l
  6692  00312A  C045  FFDA         	movff	dir_find@dj+1,fsr2h
  6693  00312E  CFDE F046          	movff	postinc2,??_dir_find
  6694  003132  CFDD F047          	movff	postdec2,??_dir_find+1
  6695  003136  0E0F               	movlw	15
  6696  003138  1646               	andwf	??_dir_find,f,c
  6697  00313A  0E00               	movlw	0
  6698  00313C  1647               	andwf	??_dir_find+1,f,c
  6699  00313E  0E05               	movlw	5
  6700  003140                     u5585:
  6701  003140  90D8               	bcf	status,0,c
  6702  003142  3646               	rlcf	??_dir_find,f,c
  6703  003144  3647               	rlcf	??_dir_find+1,f,c
  6704  003146  2EE8               	decfsz	wreg,f,c
  6705  003148  D7FB               	goto	u5585
  6706  00314A  C046  F023         	movff	??_dir_find,disk_readp@ofs
  6707  00314E  C047  F024         	movff	??_dir_find+1,disk_readp@ofs+1
  6708  003152  0E00               	movlw	0
  6709  003154  6E26               	movwf	disk_readp@cnt+1,c
  6710  003156  0E20               	movlw	32
  6711  003158  6E25               	movwf	disk_readp@cnt,c
  6712  00315A  EC71  F01A         	call	_disk_readp	;wreg free
  6713  00315E  0900               	iorlw	0
  6714  003160  B4D8               	btfsc	status,2,c
  6715  003162  D002               	goto	u5590
  6716  003164  0E01               	movlw	1
  6717  003166  D001               	goto	u5596
  6718  003168                     u5590:
  6719  003168  0E00               	movlw	0
  6720  00316A                     u5596:
  6721  00316A  0100               	movlb	0	; () banked
  6722  00316C  6F79               	movwf	dir_find@res& (0+255),b
  6723                           
  6724                           ; BSR set to: 0
  6725                           ;pff.c: 221: if (res != FR_OK) break;
  6726  00316E  0100               	movlb	0	; () banked
  6727  003170  5179               	movf	dir_find@res& (0+255),w,b
  6728  003172  A4D8               	btfss	status,2,c
  6729  003174  D041               	goto	l5098
  6730                           
  6731                           ; BSR set to: 0
  6732                           ;pff.c: 222: c = dir[0];
  6733                           
  6734                           ; BSR set to: 0
  6735                           
  6736                           ; BSR set to: 0
  6737  003176  C077  FFD9         	movff	dir_find@dir,fsr2l
  6738  00317A  C078  FFDA         	movff	dir_find@dir+1,fsr2h
  6739  00317E  50DF               	movf	indf2,w,c
  6740  003180  0100               	movlb	0	; () banked
  6741  003182  6F76               	movwf	dir_find@c& (0+255),b
  6742                           
  6743                           ; BSR set to: 0
  6744                           ;pff.c: 223: if (c == 0) { res = FR_NO_FILE; break; }
  6745  003184  0100               	movlb	0	; () banked
  6746  003186  6776               	tstfsz	dir_find@c& (0+255),b
  6747  003188  D004               	goto	l5088
  6748                           
  6749                           ; BSR set to: 0
  6750  00318A  0E03               	movlw	3
  6751  00318C  0100               	movlb	0	; () banked
  6752  00318E  6F79               	movwf	dir_find@res& (0+255),b
  6753  003190  D033               	goto	l5098
  6754  003192                     l5088:
  6755                           
  6756                           ; BSR set to: 0
  6757                           ;pff.c: 224: if (!(dir[11] & 0x08) && !mem_cmp(dir, dj->fn, 11))
  6758  003192  0100               	movlb	0	; () banked
  6759  003194  EE20 F00B          	lfsr	2,11
  6760  003198  0100               	movlb	0	; () banked
  6761  00319A  5177               	movf	dir_find@dir& (0+255),w,b
  6762  00319C  26D9               	addwf	fsr2l,f,c
  6763  00319E  0100               	movlb	0	; () banked
  6764  0031A0  5178               	movf	(dir_find@dir+1)& (0+255),w,b
  6765  0031A2  22DA               	addwfc	fsr2h,f,c
  6766  0031A4  50DF               	movf	indf2,w,c
  6767  0031A6  6E46               	movwf	??_dir_find& (0+255),c
  6768  0031A8  B646               	btfsc	??_dir_find,3,c
  6769  0031AA  D01A               	goto	l5094
  6770                           
  6771                           ; BSR set to: 0
  6772  0031AC  0100               	movlb	0	; () banked
  6773  0031AE  C078  F011         	movff	dir_find@dir+1,mem_cmp@dst+1
  6774  0031B2  0100               	movlb	0	; () banked
  6775  0031B4  C077  F010         	movff	dir_find@dir,mem_cmp@dst
  6776  0031B8  EE20 F002          	lfsr	2,2
  6777  0031BC  5044               	movf	dir_find@dj,w,c
  6778  0031BE  26D9               	addwf	fsr2l,f,c
  6779  0031C0  5045               	movf	dir_find@dj+1,w,c
  6780  0031C2  22DA               	addwfc	fsr2h,f,c
  6781  0031C4  CFDE F012          	movff	postinc2,mem_cmp@src
  6782  0031C8  CFDD F013          	movff	postdec2,mem_cmp@src+1
  6783  0031CC  0E00               	movlw	0
  6784  0031CE  6E15               	movwf	mem_cmp@cnt+1,c
  6785  0031D0  0E0B               	movlw	11
  6786  0031D2  6E14               	movwf	mem_cmp@cnt,c
  6787  0031D4  ECB4  F01C         	call	_mem_cmp	;wreg free
  6788  0031D8  5011               	movf	?_mem_cmp+1,w,c
  6789  0031DA  1010               	iorwf	?_mem_cmp,w,c
  6790  0031DC  B4D8               	btfsc	status,2,c
  6791  0031DE  D00C               	goto	l5098
  6792  0031E0                     l5094:
  6793                           
  6794                           ;pff.c: 226: res = dir_next(dj);
  6795  0031E0  C045  F03C         	movff	dir_find@dj+1,dir_next@dj+1
  6796  0031E4  C044  F03B         	movff	dir_find@dj,dir_next@dj
  6797  0031E8  EC17  F012         	call	_dir_next	;wreg free
  6798  0031EC  0100               	movlb	0	; () banked
  6799  0031EE  6F79               	movwf	dir_find@res& (0+255),b
  6800                           
  6801                           ; BSR set to: 0
  6802                           ;pff.c: 227: } while (res == FR_OK);
  6803  0031F0  0100               	movlb	0	; () banked
  6804  0031F2  5179               	movf	dir_find@res& (0+255),w,b
  6805  0031F4  B4D8               	btfsc	status,2,c
  6806  0031F6  D783               	goto	l5076
  6807  0031F8                     l5098:
  6808                           
  6809                           ;pff.c: 229: return res;
  6810  0031F8  0100               	movlb	0	; () banked
  6811  0031FA  5179               	movf	dir_find@res& (0+255),w,b
  6812                           
  6813                           ; BSR set to: 0
  6814                           
  6815                           ; BSR set to: 0
  6816  0031FC  0012               	return	
  6817  0031FE                     __end_of_dir_find:
  6818                           	opt stack 0
  6819                           tblptru	equ	0xFF8
  6820                           tblptrh	equ	0xFF7
  6821                           tblptrl	equ	0xFF6
  6822                           tablat	equ	0xFF5
  6823                           prodh	equ	0xFF4
  6824                           prodl	equ	0xFF3
  6825                           intcon	equ	0xFF2
  6826                           postinc0	equ	0xFEE
  6827                           wreg	equ	0xFE8
  6828                           indf1	equ	0xFE7
  6829                           postinc1	equ	0xFE6
  6830                           postdec1	equ	0xFE5
  6831                           fsr1h	equ	0xFE2
  6832                           fsr1l	equ	0xFE1
  6833                           indf2	equ	0xFDF
  6834                           postinc2	equ	0xFDE
  6835                           postdec2	equ	0xFDD
  6836                           fsr2h	equ	0xFDA
  6837                           fsr2l	equ	0xFD9
  6838                           status	equ	0xFD8
  6839                           
  6840 ;; *************** function _mem_cmp *****************
  6841 ;; Defined at:
  6842 ;;		line 51 in file "../../../PIC18F/pff.c"
  6843 ;; Parameters:    Size  Location     Type
  6844 ;;  dst             2   15[COMRAM] PTR const void 
  6845 ;;		 -> pf_readdir@dir(32), pf_opendir@dir(32), pf_open@dir(32), 
  6846 ;;  src             2   17[COMRAM] PTR const void 
  6847 ;;		 -> pf_readdir@sp(12), pf_opendir@sp(12), pf_open@sp(12), 
  6848 ;;  cnt             2   19[COMRAM] int 
  6849 ;; Auto vars:     Size  Location     Type
  6850 ;;  r               2   28[COMRAM] int 
  6851 ;;  s               2   26[COMRAM] PTR const unsigned char 
  6852 ;;		 -> pf_readdir@sp(12), pf_opendir@sp(12), pf_open@sp(12), 
  6853 ;;  d               2   24[COMRAM] PTR const unsigned char 
  6854 ;;		 -> pf_readdir@dir(32), pf_opendir@dir(32), pf_open@dir(32), 
  6855 ;; Return value:  Size  Location     Type
  6856 ;;                  2   15[COMRAM] int 
  6857 ;; Registers used:
  6858 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6859 ;; Tracked objects:
  6860 ;;		On entry : 0/0
  6861 ;;		On exit  : 0/0
  6862 ;;		Unchanged: 0/0
  6863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6864 ;;      Params:         6       0       0       0       0       0       0       0       0
  6865 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6866 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6867 ;;      Totals:        15       0       0       0       0       0       0       0       0
  6868 ;;Total ram usage:       15 bytes
  6869 ;; Hardware stack levels used:    1
  6870 ;; Hardware stack levels required when called:    2
  6871 ;; This function calls:
  6872 ;;		Nothing
  6873 ;; This function is called by:
  6874 ;;		_dir_find
  6875 ;; This function uses a non-reentrant model
  6876 ;;
  6877                           
  6878                           	psect	text22
  6879  003968                     __ptext22:
  6880                           	opt stack 0
  6881  003968                     _mem_cmp:
  6882                           	opt stack 23
  6883                           
  6884                           ;pff.c: 52: const char *d = (const char *)dst, *s = (const char *)src;
  6885                           
  6886                           ; BSR set to: 0
  6887                           ;incstack = 0
  6888  003968  C011  F01A         	movff	mem_cmp@dst+1,mem_cmp@d+1
  6889  00396C  C010  F019         	movff	mem_cmp@dst,mem_cmp@d
  6890  003970  C013  F01C         	movff	mem_cmp@src+1,mem_cmp@s+1
  6891  003974  C012  F01B         	movff	mem_cmp@src,mem_cmp@s
  6892                           
  6893                           ;pff.c: 53: int r = 0;
  6894  003978  0E00               	movlw	0
  6895  00397A  6E1E               	movwf	mem_cmp@r+1,c
  6896  00397C  0E00               	movlw	0
  6897  00397E  6E1D               	movwf	mem_cmp@r,c
  6898  003980                     l3228:
  6899  003980  0614               	decf	mem_cmp@cnt,f,c
  6900  003982  A0D8               	btfss	status,0,c
  6901  003984  0615               	decf	mem_cmp@cnt+1,f,c
  6902  003986  2814               	incf	mem_cmp@cnt& (0+255),w,c
  6903  003988  B4D8               	btfsc	status,2,c
  6904  00398A  2815               	incf	(mem_cmp@cnt+1)& (0+255),w,c
  6905  00398C  B4D8               	btfsc	status,2,c
  6906  00398E  D01F               	goto	l19
  6907  003990  C01B  FFD9         	movff	mem_cmp@s,fsr2l
  6908  003994  C01C  FFDA         	movff	mem_cmp@s+1,fsr2h
  6909  003998  4A1B               	infsnz	mem_cmp@s,f,c
  6910  00399A  2A1C               	incf	mem_cmp@s+1,f,c
  6911  00399C  50DF               	movf	indf2,w,c
  6912  00399E  6E16               	movwf	??_mem_cmp& (0+255),c
  6913  0039A0  6A17               	clrf	(??_mem_cmp+1)& (0+255),c
  6914  0039A2  1E16               	comf	??_mem_cmp,f,c
  6915  0039A4  1E17               	comf	??_mem_cmp+1,f,c
  6916  0039A6  4A16               	infsnz	??_mem_cmp,f,c
  6917  0039A8  2A17               	incf	??_mem_cmp+1,f,c
  6918  0039AA  C019  FFD9         	movff	mem_cmp@d,fsr2l
  6919  0039AE  C01A  FFDA         	movff	mem_cmp@d+1,fsr2h
  6920  0039B2  4A19               	infsnz	mem_cmp@d,f,c
  6921  0039B4  2A1A               	incf	mem_cmp@d+1,f,c
  6922  0039B6  50DF               	movf	indf2,w,c
  6923  0039B8  6E18               	movwf	(??_mem_cmp+2)& (0+255),c
  6924  0039BA  5018               	movf	??_mem_cmp+2,w,c
  6925  0039BC  2416               	addwf	??_mem_cmp,w,c
  6926  0039BE  6E1D               	movwf	mem_cmp@r,c
  6927  0039C0  0E00               	movlw	0
  6928  0039C2  2017               	addwfc	??_mem_cmp+1,w,c
  6929  0039C4  6E1E               	movwf	mem_cmp@r+1,c
  6930  0039C6  501E               	movf	(mem_cmp@r+1)& (0+255),w,c
  6931  0039C8  101D               	iorwf	mem_cmp@r& (0+255),w,c
  6932  0039CA  B4D8               	btfsc	status,2,c
  6933  0039CC  D7D9               	goto	l3228
  6934  0039CE                     l19:
  6935                           
  6936                           ;pff.c: 55: return r;
  6937  0039CE  C01D  F010         	movff	mem_cmp@r,?_mem_cmp
  6938  0039D2  C01E  F011         	movff	mem_cmp@r+1,?_mem_cmp+1
  6939  0039D6  0012               	return	
  6940  0039D8                     __end_of_mem_cmp:
  6941                           	opt stack 0
  6942                           tblptru	equ	0xFF8
  6943                           tblptrh	equ	0xFF7
  6944                           tblptrl	equ	0xFF6
  6945                           tablat	equ	0xFF5
  6946                           prodh	equ	0xFF4
  6947                           prodl	equ	0xFF3
  6948                           intcon	equ	0xFF2
  6949                           postinc0	equ	0xFEE
  6950                           wreg	equ	0xFE8
  6951                           indf1	equ	0xFE7
  6952                           postinc1	equ	0xFE6
  6953                           postdec1	equ	0xFE5
  6954                           fsr1h	equ	0xFE2
  6955                           fsr1l	equ	0xFE1
  6956                           indf2	equ	0xFDF
  6957                           postinc2	equ	0xFDE
  6958                           postdec2	equ	0xFDD
  6959                           fsr2h	equ	0xFDA
  6960                           fsr2l	equ	0xFD9
  6961                           status	equ	0xFD8
  6962                           
  6963 ;; *************** function _dir_rewind *****************
  6964 ;; Defined at:
  6965 ;;		line 131 in file "../../../PIC18F/pff.c"
  6966 ;; Parameters:    Size  Location     Type
  6967 ;;  dj              2   42[COMRAM] PTR struct _Dir_
  6968 ;;		 -> Dir1(16), pf_open@dj(16), 
  6969 ;; Auto vars:     Size  Location     Type
  6970 ;;  clst            4   54[COMRAM] unsigned long 
  6971 ;;  fs              2   52[COMRAM] PTR struct _FATFS_
  6972 ;;		 -> Fs(44), NULL(0), 
  6973 ;; Return value:  Size  Location     Type
  6974 ;;                  1    wreg      enum E48
  6975 ;; Registers used:
  6976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6977 ;; Tracked objects:
  6978 ;;		On entry : 0/0
  6979 ;;		On exit  : 0/0
  6980 ;;		Unchanged: 0/0
  6981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6982 ;;      Params:         2       0       0       0       0       0       0       0       0
  6983 ;;      Locals:        10       0       0       0       0       0       0       0       0
  6984 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6985 ;;      Totals:        16       0       0       0       0       0       0       0       0
  6986 ;;Total ram usage:       16 bytes
  6987 ;; Hardware stack levels used:    1
  6988 ;; Hardware stack levels required when called:    4
  6989 ;; This function calls:
  6990 ;;		_clust2sect
  6991 ;; This function is called by:
  6992 ;;		_dir_find
  6993 ;;		_follow_path
  6994 ;;		_pf_opendir
  6995 ;;		_pf_readdir
  6996 ;; This function uses a non-reentrant model
  6997 ;;
  6998                           
  6999                           	psect	text23
  7000  002F9A                     __ptext23:
  7001                           	opt stack 0
  7002  002F9A                     _dir_rewind:
  7003                           	opt stack 22
  7004                           
  7005                           ;pff.c: 135: DWORD clst;
  7006                           ;pff.c: 136: FATFS *fs = FatFs;
  7007                           
  7008                           ;incstack = 0
  7009  002F9A  C049  F036         	movff	_FatFs+1,dir_rewind@fs+1
  7010  002F9E  C048  F035         	movff	_FatFs,dir_rewind@fs
  7011                           
  7012                           ;pff.c: 139: dj->index = 0;
  7013  002FA2  C02B  FFD9         	movff	dir_rewind@dj,fsr2l
  7014  002FA6  C02C  FFDA         	movff	dir_rewind@dj+1,fsr2h
  7015  002FAA  0E00               	movlw	0
  7016  002FAC  6EDE               	movwf	postinc2,c
  7017  002FAE  0E00               	movlw	0
  7018  002FB0  6EDD               	movwf	postdec2,c
  7019                           
  7020                           ;pff.c: 140: clst = dj->sclust;
  7021  002FB2  EE20 F004          	lfsr	2,4
  7022  002FB6  502B               	movf	dir_rewind@dj,w,c
  7023  002FB8  26D9               	addwf	fsr2l,f,c
  7024  002FBA  502C               	movf	dir_rewind@dj+1,w,c
  7025  002FBC  22DA               	addwfc	fsr2h,f,c
  7026  002FBE  CFDE F037          	movff	postinc2,dir_rewind@clst
  7027  002FC2  CFDE F038          	movff	postinc2,dir_rewind@clst+1
  7028  002FC6  CFDE F039          	movff	postinc2,dir_rewind@clst+2
  7029  002FCA  CFDE F03A          	movff	postinc2,dir_rewind@clst+3
  7030                           
  7031                           ;pff.c: 141: if (clst == 1 || clst >= fs->max_clust)
  7032  002FCE  0437               	decf	dir_rewind@clst,w,c
  7033  002FD0  1038               	iorwf	dir_rewind@clst+1,w,c
  7034  002FD2  1039               	iorwf	dir_rewind@clst+2,w,c
  7035  002FD4  103A               	iorwf	dir_rewind@clst+3,w,c
  7036  002FD6  B4D8               	btfsc	status,2,c
  7037  002FD8  D018               	goto	l3242
  7038  002FDA  EE20 F008          	lfsr	2,8
  7039  002FDE  5035               	movf	dir_rewind@fs,w,c
  7040  002FE0  26D9               	addwf	fsr2l,f,c
  7041  002FE2  5036               	movf	dir_rewind@fs+1,w,c
  7042  002FE4  22DA               	addwfc	fsr2h,f,c
  7043  002FE6  CFDE F02D          	movff	postinc2,??_dir_rewind
  7044  002FEA  CFDE F02E          	movff	postinc2,??_dir_rewind+1
  7045  002FEE  CFDE F02F          	movff	postinc2,??_dir_rewind+2
  7046  002FF2  CFDE F030          	movff	postinc2,??_dir_rewind+3
  7047  002FF6  502D               	movf	??_dir_rewind,w,c
  7048  002FF8  5C37               	subwf	dir_rewind@clst,w,c
  7049  002FFA  502E               	movf	??_dir_rewind+1,w,c
  7050  002FFC  5838               	subwfb	dir_rewind@clst+1,w,c
  7051  002FFE  502F               	movf	??_dir_rewind+2,w,c
  7052  003000  5839               	subwfb	dir_rewind@clst+2,w,c
  7053  003002  5030               	movf	??_dir_rewind+3,w,c
  7054  003004  583A               	subwfb	dir_rewind@clst+3,w,c
  7055  003006  A0D8               	btfss	status,0,c
  7056  003008  D002               	goto	l3246
  7057  00300A                     l3242:
  7058                           
  7059                           ;pff.c: 142: return FR_DISK_ERR;
  7060  00300A  0E01               	movlw	1
  7061  00300C  D05F               	goto	l52
  7062  00300E                     l3246:
  7063                           
  7064                           ;pff.c: 144: if (!clst && fs->fs_type == 3)
  7065  00300E  503A               	movf	dir_rewind@clst+3,w,c
  7066  003010  1037               	iorwf	dir_rewind@clst,w,c
  7067  003012  1038               	iorwf	dir_rewind@clst+1,w,c
  7068  003014  1039               	iorwf	dir_rewind@clst+2,w,c
  7069  003016  A4D8               	btfss	status,2,c
  7070  003018  D015               	goto	l53
  7071  00301A  0E03               	movlw	3
  7072  00301C  C035  FFD9         	movff	dir_rewind@fs,fsr2l
  7073  003020  C036  FFDA         	movff	dir_rewind@fs+1,fsr2h
  7074  003024  62DF               	cpfseq	indf2,c
  7075  003026  D00E               	goto	l53
  7076                           
  7077                           ;pff.c: 145: clst = fs->dirbase;
  7078  003028  EE20 F010          	lfsr	2,16
  7079  00302C  5035               	movf	dir_rewind@fs,w,c
  7080  00302E  26D9               	addwf	fsr2l,f,c
  7081  003030  5036               	movf	dir_rewind@fs+1,w,c
  7082  003032  22DA               	addwfc	fsr2h,f,c
  7083  003034  CFDE F037          	movff	postinc2,dir_rewind@clst
  7084  003038  CFDE F038          	movff	postinc2,dir_rewind@clst+1
  7085  00303C  CFDE F039          	movff	postinc2,dir_rewind@clst+2
  7086  003040  CFDE F03A          	movff	postinc2,dir_rewind@clst+3
  7087  003044                     l53:
  7088                           
  7089                           ;pff.c: 147: dj->clust = clst;
  7090  003044  EE20 F008          	lfsr	2,8
  7091  003048  502B               	movf	dir_rewind@dj,w,c
  7092  00304A  26D9               	addwf	fsr2l,f,c
  7093  00304C  502C               	movf	dir_rewind@dj+1,w,c
  7094  00304E  22DA               	addwfc	fsr2h,f,c
  7095  003050  C037  FFDE         	movff	dir_rewind@clst,postinc2
  7096  003054  C038  FFDE         	movff	dir_rewind@clst+1,postinc2
  7097  003058  C039  FFDE         	movff	dir_rewind@clst+2,postinc2
  7098  00305C  C03A  FFDE         	movff	dir_rewind@clst+3,postinc2
  7099                           
  7100                           ;pff.c: 148: dj->sect = clst ? clust2sect(clst) : fs->dirbase;
  7101  003060  503A               	movf	dir_rewind@clst+3,w,c
  7102  003062  1037               	iorwf	dir_rewind@clst,w,c
  7103  003064  1038               	iorwf	dir_rewind@clst+1,w,c
  7104  003066  1039               	iorwf	dir_rewind@clst+2,w,c
  7105  003068  A4D8               	btfss	status,2,c
  7106  00306A  D00F               	goto	l3256
  7107  00306C  EE20 F010          	lfsr	2,16
  7108  003070  5035               	movf	dir_rewind@fs,w,c
  7109  003072  26D9               	addwf	fsr2l,f,c
  7110  003074  5036               	movf	dir_rewind@fs+1,w,c
  7111  003076  22DA               	addwfc	fsr2h,f,c
  7112  003078  CFDE F031          	movff	postinc2,_dir_rewind$154
  7113  00307C  CFDE F032          	movff	postinc2,_dir_rewind$154+1
  7114  003080  CFDE F033          	movff	postinc2,_dir_rewind$154+2
  7115  003084  CFDE F034          	movff	postinc2,_dir_rewind$154+3
  7116  003088  D012               	goto	l3258
  7117  00308A                     l3256:
  7118  00308A  C037  F01C         	movff	dir_rewind@clst,clust2sect@clst
  7119  00308E  C038  F01D         	movff	dir_rewind@clst+1,clust2sect@clst+1
  7120  003092  C039  F01E         	movff	dir_rewind@clst+2,clust2sect@clst+2
  7121  003096  C03A  F01F         	movff	dir_rewind@clst+3,clust2sect@clst+3
  7122  00309A  ECDE  F01A         	call	_clust2sect	;wreg free
  7123  00309E  C01C  F031         	movff	?_clust2sect,_dir_rewind$154
  7124  0030A2  C01D  F032         	movff	?_clust2sect+1,_dir_rewind$154+1
  7125  0030A6  C01E  F033         	movff	?_clust2sect+2,_dir_rewind$154+2
  7126  0030AA  C01F  F034         	movff	?_clust2sect+3,_dir_rewind$154+3
  7127  0030AE                     l3258:
  7128  0030AE  EE20 F00C          	lfsr	2,12
  7129  0030B2  502B               	movf	dir_rewind@dj,w,c
  7130  0030B4  26D9               	addwf	fsr2l,f,c
  7131  0030B6  502C               	movf	dir_rewind@dj+1,w,c
  7132  0030B8  22DA               	addwfc	fsr2h,f,c
  7133  0030BA  C031  FFDE         	movff	_dir_rewind$154,postinc2
  7134  0030BE  C032  FFDE         	movff	_dir_rewind$154+1,postinc2
  7135  0030C2  C033  FFDE         	movff	_dir_rewind$154+2,postinc2
  7136  0030C6  C034  FFDE         	movff	_dir_rewind$154+3,postinc2
  7137                           
  7138                           ;pff.c: 150: return FR_OK;
  7139  0030CA  0E00               	movlw	0
  7140  0030CC                     l52:
  7141  0030CC  0012               	return	
  7142  0030CE                     __end_of_dir_rewind:
  7143                           	opt stack 0
  7144                           tblptru	equ	0xFF8
  7145                           tblptrh	equ	0xFF7
  7146                           tblptrl	equ	0xFF6
  7147                           tablat	equ	0xFF5
  7148                           prodh	equ	0xFF4
  7149                           prodl	equ	0xFF3
  7150                           intcon	equ	0xFF2
  7151                           postinc0	equ	0xFEE
  7152                           wreg	equ	0xFE8
  7153                           indf1	equ	0xFE7
  7154                           postinc1	equ	0xFE6
  7155                           postdec1	equ	0xFE5
  7156                           fsr1h	equ	0xFE2
  7157                           fsr1l	equ	0xFE1
  7158                           indf2	equ	0xFDF
  7159                           postinc2	equ	0xFDE
  7160                           postdec2	equ	0xFDD
  7161                           fsr2h	equ	0xFDA
  7162                           fsr2l	equ	0xFD9
  7163                           status	equ	0xFD8
  7164                           
  7165 ;; *************** function _dir_next *****************
  7166 ;; Defined at:
  7167 ;;		line 161 in file "../../../PIC18F/pff.c"
  7168 ;; Parameters:    Size  Location     Type
  7169 ;;  dj              2   58[COMRAM] PTR struct _Dir_
  7170 ;;		 -> Dir1(16), pf_open@dj(16), 
  7171 ;; Auto vars:     Size  Location     Type
  7172 ;;  clst            4   16[BANK0 ] unsigned long 
  7173 ;;  i               2   20[BANK0 ] unsigned short 
  7174 ;;  fs              2   14[BANK0 ] PTR struct _FATFS_
  7175 ;;		 -> Fs(44), NULL(0), 
  7176 ;; Return value:  Size  Location     Type
  7177 ;;                  1    wreg      enum E48
  7178 ;; Registers used:
  7179 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7180 ;; Tracked objects:
  7181 ;;		On entry : 0/0
  7182 ;;		On exit  : 0/0
  7183 ;;		Unchanged: 0/0
  7184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7185 ;;      Params:         2       0       0       0       0       0       0       0       0
  7186 ;;      Locals:         0       8       0       0       0       0       0       0       0
  7187 ;;      Temps:          7       0       0       0       0       0       0       0       0
  7188 ;;      Totals:         9       8       0       0       0       0       0       0       0
  7189 ;;Total ram usage:       17 bytes
  7190 ;; Hardware stack levels used:    1
  7191 ;; Hardware stack levels required when called:    7
  7192 ;; This function calls:
  7193 ;;		_clust2sect
  7194 ;;		_get_fat
  7195 ;; This function is called by:
  7196 ;;		_dir_find
  7197 ;;		_dir_read
  7198 ;;		_pf_readdir
  7199 ;; This function uses a non-reentrant model
  7200 ;;
  7201                           
  7202                           	psect	text24
  7203  00242E                     __ptext24:
  7204                           	opt stack 0
  7205  00242E                     _dir_next:
  7206                           	opt stack 18
  7207                           
  7208                           ;pff.c: 165: DWORD clst;
  7209                           ;pff.c: 166: WORD i;
  7210                           ;pff.c: 167: FATFS *fs = FatFs;
  7211                           
  7212                           ;incstack = 0
  7213  00242E  0100               	movlb	0	; () banked
  7214  002430  C049  F06F         	movff	_FatFs+1,dir_next@fs+1
  7215  002434  0100               	movlb	0	; () banked
  7216  002436  C048  F06E         	movff	_FatFs,dir_next@fs
  7217                           
  7218                           ; BSR set to: 0
  7219                           ;pff.c: 170: i = dj->index + 1;
  7220  00243A  C03B  FFD9         	movff	dir_next@dj,fsr2l
  7221  00243E  C03C  FFDA         	movff	dir_next@dj+1,fsr2h
  7222  002442  CFDE F03D          	movff	postinc2,??_dir_next
  7223  002446  CFDD F03E          	movff	postdec2,??_dir_next+1
  7224  00244A  0E01               	movlw	1
  7225  00244C  243D               	addwf	??_dir_next,w,c
  7226  00244E  0100               	movlb	0	; () banked
  7227  002450  6F74               	movwf	dir_next@i& (0+255),b
  7228  002452  0E00               	movlw	0
  7229  002454  203E               	addwfc	??_dir_next+1,w,c
  7230  002456  0100               	movlb	0	; () banked
  7231  002458  6F75               	movwf	(dir_next@i+1)& (0+255),b
  7232                           
  7233                           ; BSR set to: 0
  7234                           ;pff.c: 171: if (!i || !dj->sect)
  7235  00245A  0100               	movlb	0	; () banked
  7236  00245C  5175               	movf	(dir_next@i+1)& (0+255),w,b
  7237  00245E  1174               	iorwf	dir_next@i& (0+255),w,b
  7238  002460  B4D8               	btfsc	status,2,c
  7239  002462  D0CA               	goto	u5560
  7240                           
  7241                           ; BSR set to: 0
  7242  002464  EE20 F00C          	lfsr	2,12
  7243  002468  503B               	movf	dir_next@dj,w,c
  7244  00246A  26D9               	addwf	fsr2l,f,c
  7245  00246C  503C               	movf	dir_next@dj+1,w,c
  7246  00246E  22DA               	addwfc	fsr2h,f,c
  7247  002470  CFDE F03D          	movff	postinc2,??_dir_next
  7248  002474  CFDE F03E          	movff	postinc2,??_dir_next+1
  7249  002478  CFDE F03F          	movff	postinc2,??_dir_next+2
  7250  00247C  CFDE F040          	movff	postinc2,??_dir_next+3
  7251  002480  5040               	movf	??_dir_next+3,w,c
  7252  002482  103D               	iorwf	??_dir_next,w,c
  7253  002484  103E               	iorwf	??_dir_next+1,w,c
  7254  002486  103F               	iorwf	??_dir_next+2,w,c
  7255  002488  B4D8               	btfsc	status,2,c
  7256                           
  7257                           ; BSR set to: 0
  7258  00248A  D0B6               	goto	u5560
  7259                           
  7260                           ; BSR set to: 0
  7261                           ;pff.c: 174: if (!(i & (16-1))) {
  7262                           
  7263                           ; BSR set to: 0
  7264                           
  7265                           ; BSR set to: 0
  7266                           
  7267                           ; BSR set to: 0
  7268                           ;pff.c: 172: return FR_NO_FILE;
  7269  00248C  0E0F               	movlw	15
  7270  00248E  0100               	movlb	0	; () banked
  7271  002490  1574               	andwf	dir_next@i& (0+255),w,b
  7272  002492  6E3D               	movwf	??_dir_next& (0+255),c
  7273  002494  0E00               	movlw	0
  7274  002496  0100               	movlb	0	; () banked
  7275  002498  1575               	andwf	(dir_next@i+1)& (0+255),w,b
  7276  00249A  6E3E               	movwf	(??_dir_next+1)& (0+255),c
  7277  00249C  503E               	movf	??_dir_next+1,w,c
  7278  00249E  103D               	iorwf	??_dir_next,w,c
  7279  0024A0  A4D8               	btfss	status,2,c
  7280  0024A2  D0E0               	goto	l5060
  7281                           
  7282                           ; BSR set to: 0
  7283                           ;pff.c: 175: dj->sect++;
  7284  0024A4  EE20 F00C          	lfsr	2,12
  7285  0024A8  503B               	movf	dir_next@dj,w,c
  7286  0024AA  26D9               	addwf	fsr2l,f,c
  7287  0024AC  503C               	movf	dir_next@dj+1,w,c
  7288  0024AE  22DA               	addwfc	fsr2h,f,c
  7289  0024B0  2ADE               	incf	postinc2,f,c
  7290  0024B2  0E00               	movlw	0
  7291  0024B4  22DE               	addwfc	postinc2,f,c
  7292  0024B6  22DE               	addwfc	postinc2,f,c
  7293  0024B8  22DD               	addwfc	postdec2,f,c
  7294                           
  7295                           ;pff.c: 177: if (dj->clust == 0) {
  7296  0024BA  EE20 F008          	lfsr	2,8
  7297  0024BE  503B               	movf	dir_next@dj,w,c
  7298  0024C0  26D9               	addwf	fsr2l,f,c
  7299  0024C2  503C               	movf	dir_next@dj+1,w,c
  7300  0024C4  22DA               	addwfc	fsr2h,f,c
  7301  0024C6  CFDE F03D          	movff	postinc2,??_dir_next
  7302  0024CA  CFDE F03E          	movff	postinc2,??_dir_next+1
  7303  0024CE  CFDE F03F          	movff	postinc2,??_dir_next+2
  7304  0024D2  CFDE F040          	movff	postinc2,??_dir_next+3
  7305  0024D6  5040               	movf	??_dir_next+3,w,c
  7306  0024D8  103D               	iorwf	??_dir_next,w,c
  7307  0024DA  103E               	iorwf	??_dir_next+1,w,c
  7308  0024DC  103F               	iorwf	??_dir_next+2,w,c
  7309  0024DE  A4D8               	btfss	status,2,c
  7310  0024E0  D016               	goto	l5040
  7311                           
  7312                           ; BSR set to: 0
  7313                           ;pff.c: 178: if (i >= fs->n_rootdir)
  7314  0024E2  0100               	movlb	0	; () banked
  7315  0024E4  EE20 F004          	lfsr	2,4
  7316  0024E8  0100               	movlb	0	; () banked
  7317  0024EA  516E               	movf	dir_next@fs& (0+255),w,b
  7318  0024EC  26D9               	addwf	fsr2l,f,c
  7319  0024EE  0100               	movlb	0	; () banked
  7320  0024F0  516F               	movf	(dir_next@fs+1)& (0+255),w,b
  7321  0024F2  22DA               	addwfc	fsr2h,f,c
  7322  0024F4  CFDE F03D          	movff	postinc2,??_dir_next
  7323  0024F8  CFDD F03E          	movff	postdec2,??_dir_next+1
  7324  0024FC  503D               	movf	??_dir_next,w,c
  7325  0024FE  0100               	movlb	0	; () banked
  7326  002500  5D74               	subwf	dir_next@i& (0+255),w,b
  7327  002502  503E               	movf	??_dir_next+1,w,c
  7328  002504  0100               	movlb	0	; () banked
  7329  002506  5975               	subwfb	(dir_next@i+1)& (0+255),w,b
  7330  002508  A0D8               	btfss	status,0,c
  7331  00250A  D0AC               	goto	l5060
  7332  00250C  D075               	goto	u5560
  7333  00250E                     l5040:
  7334                           
  7335                           ; BSR set to: 0
  7336                           ;pff.c: 181: else {
  7337                           ;pff.c: 182: if (((i / 16) & (fs->csize-1)) == 0) {
  7338  00250E  0100               	movlb	0	; () banked
  7339  002510  C074  F03D         	movff	dir_next@i,??_dir_next
  7340  002514  0100               	movlb	0	; () banked
  7341  002516  C075  F03E         	movff	dir_next@i+1,??_dir_next+1
  7342  00251A  0E04               	movlw	4
  7343  00251C  6E3F               	movwf	(??_dir_next+2)& (0+255),c
  7344  00251E                     u5535:
  7345  00251E  90D8               	bcf	status,0,c
  7346  002520  323E               	rrcf	??_dir_next+1,f,c
  7347  002522  323D               	rrcf	??_dir_next,f,c
  7348  002524  2E3F               	decfsz	(??_dir_next+2)& (0+255),f,c
  7349  002526  D7FB               	goto	u5535
  7350  002528  0EFF               	movlw	255
  7351  00252A  6E40               	movwf	(??_dir_next+3)& (0+255),c
  7352  00252C  0EFF               	movlw	255
  7353  00252E  6E41               	movwf	(??_dir_next+4)& (0+255),c
  7354  002530  0100               	movlb	0	; () banked
  7355  002532  EE20 F001          	lfsr	2,1
  7356  002536  0100               	movlb	0	; () banked
  7357  002538  516E               	movf	dir_next@fs& (0+255),w,b
  7358  00253A  26D9               	addwf	fsr2l,f,c
  7359  00253C  0100               	movlb	0	; () banked
  7360  00253E  516F               	movf	(dir_next@fs+1)& (0+255),w,b
  7361  002540  22DA               	addwfc	fsr2h,f,c
  7362  002542  50DF               	movf	indf2,w,c
  7363  002544  6E42               	movwf	(??_dir_next+5)& (0+255),c
  7364  002546  6A43               	clrf	(??_dir_next+6)& (0+255),c
  7365  002548  5040               	movf	??_dir_next+3,w,c
  7366  00254A  2642               	addwf	??_dir_next+5,f,c
  7367  00254C  5041               	movf	??_dir_next+4,w,c
  7368  00254E  2243               	addwfc	??_dir_next+6,f,c
  7369  002550  503D               	movf	??_dir_next,w,c
  7370  002552  1642               	andwf	??_dir_next+5,f,c
  7371  002554  503E               	movf	??_dir_next+1,w,c
  7372  002556  1643               	andwf	??_dir_next+6,f,c
  7373  002558  5043               	movf	??_dir_next+6,w,c
  7374  00255A  1042               	iorwf	??_dir_next+5,w,c
  7375  00255C  A4D8               	btfss	status,2,c
  7376  00255E  D082               	goto	l5060
  7377                           
  7378                           ; BSR set to: 0
  7379                           ;pff.c: 183: clst = get_fat(dj->clust);
  7380  002560  EE20 F008          	lfsr	2,8
  7381  002564  503B               	movf	dir_next@dj,w,c
  7382  002566  26D9               	addwf	fsr2l,f,c
  7383  002568  503C               	movf	dir_next@dj+1,w,c
  7384  00256A  22DA               	addwfc	fsr2h,f,c
  7385  00256C  CFDE F02D          	movff	postinc2,get_fat@clst
  7386  002570  CFDE F02E          	movff	postinc2,get_fat@clst+1
  7387  002574  CFDE F02F          	movff	postinc2,get_fat@clst+2
  7388  002578  CFDE F030          	movff	postinc2,get_fat@clst+3
  7389  00257C  ECC5  F00B         	call	_get_fat	;wreg free
  7390  002580  C02D  F070         	movff	?_get_fat,dir_next@clst
  7391  002584  C02E  F071         	movff	?_get_fat+1,dir_next@clst+1
  7392  002588  C02F  F072         	movff	?_get_fat+2,dir_next@clst+2
  7393  00258C  C030  F073         	movff	?_get_fat+3,dir_next@clst+3
  7394                           
  7395                           ;pff.c: 184: if (clst <= 1) return FR_DISK_ERR;
  7396  002590  0E02               	movlw	2
  7397  002592  6E3D               	movwf	??_dir_next& (0+255),c
  7398  002594  6A3E               	clrf	(??_dir_next+1)& (0+255),c
  7399  002596  6A3F               	clrf	(??_dir_next+2)& (0+255),c
  7400  002598  6A40               	clrf	(??_dir_next+3)& (0+255),c
  7401  00259A  503D               	movf	??_dir_next,w,c
  7402  00259C  0100               	movlb	0	; () banked
  7403  00259E  5D70               	subwf	dir_next@clst& (0+255),w,b
  7404  0025A0  503E               	movf	??_dir_next+1,w,c
  7405  0025A2  0100               	movlb	0	; () banked
  7406  0025A4  5971               	subwfb	(dir_next@clst+1)& (0+255),w,b
  7407  0025A6  503F               	movf	??_dir_next+2,w,c
  7408  0025A8  0100               	movlb	0	; () banked
  7409  0025AA  5972               	subwfb	(dir_next@clst+2)& (0+255),w,b
  7410  0025AC  5040               	movf	??_dir_next+3,w,c
  7411  0025AE  0100               	movlb	0	; () banked
  7412  0025B0  5973               	subwfb	(dir_next@clst+3)& (0+255),w,b
  7413  0025B2  B0D8               	btfsc	status,0,c
  7414  0025B4  D002               	goto	l5050
  7415                           
  7416                           ; BSR set to: 0
  7417  0025B6  0E01               	movlw	1
  7418  0025B8  D060               	goto	l63
  7419  0025BA                     l5050:
  7420                           
  7421                           ; BSR set to: 0
  7422                           ;pff.c: 185: if (clst >= fs->max_clust)
  7423  0025BA  0100               	movlb	0	; () banked
  7424  0025BC  EE20 F008          	lfsr	2,8
  7425  0025C0  0100               	movlb	0	; () banked
  7426  0025C2  516E               	movf	dir_next@fs& (0+255),w,b
  7427  0025C4  26D9               	addwf	fsr2l,f,c
  7428  0025C6  0100               	movlb	0	; () banked
  7429  0025C8  516F               	movf	(dir_next@fs+1)& (0+255),w,b
  7430  0025CA  22DA               	addwfc	fsr2h,f,c
  7431  0025CC  CFDE F03D          	movff	postinc2,??_dir_next
  7432  0025D0  CFDE F03E          	movff	postinc2,??_dir_next+1
  7433  0025D4  CFDE F03F          	movff	postinc2,??_dir_next+2
  7434  0025D8  CFDE F040          	movff	postinc2,??_dir_next+3
  7435  0025DC  503D               	movf	??_dir_next,w,c
  7436  0025DE  0100               	movlb	0	; () banked
  7437  0025E0  5D70               	subwf	dir_next@clst& (0+255),w,b
  7438  0025E2  503E               	movf	??_dir_next+1,w,c
  7439  0025E4  0100               	movlb	0	; () banked
  7440  0025E6  5971               	subwfb	(dir_next@clst+1)& (0+255),w,b
  7441  0025E8  503F               	movf	??_dir_next+2,w,c
  7442  0025EA  0100               	movlb	0	; () banked
  7443  0025EC  5972               	subwfb	(dir_next@clst+2)& (0+255),w,b
  7444  0025EE  5040               	movf	??_dir_next+3,w,c
  7445  0025F0  0100               	movlb	0	; () banked
  7446  0025F2  5973               	subwfb	(dir_next@clst+3)& (0+255),w,b
  7447  0025F4  A0D8               	btfss	status,0,c
  7448  0025F6  D002               	goto	l5056
  7449  0025F8                     u5560:
  7450                           
  7451                           ; BSR set to: 0
  7452                           ;pff.c: 186: return FR_NO_FILE;
  7453  0025F8  0E03               	movlw	3
  7454  0025FA  D03F               	goto	l63
  7455  0025FC                     l5056:
  7456                           
  7457                           ; BSR set to: 0
  7458                           ;pff.c: 187: dj->clust = clst;
  7459  0025FC  EE20 F008          	lfsr	2,8
  7460  002600  503B               	movf	dir_next@dj,w,c
  7461  002602  26D9               	addwf	fsr2l,f,c
  7462  002604  503C               	movf	dir_next@dj+1,w,c
  7463  002606  22DA               	addwfc	fsr2h,f,c
  7464  002608  0100               	movlb	0	; () banked
  7465  00260A  C070  FFDE         	movff	dir_next@clst,postinc2
  7466  00260E  0100               	movlb	0	; () banked
  7467  002610  C071  FFDE         	movff	dir_next@clst+1,postinc2
  7468  002614  0100               	movlb	0	; () banked
  7469  002616  C072  FFDE         	movff	dir_next@clst+2,postinc2
  7470  00261A  0100               	movlb	0	; () banked
  7471  00261C  C073  FFDE         	movff	dir_next@clst+3,postinc2
  7472                           
  7473                           ; BSR set to: 0
  7474                           ;pff.c: 188: dj->sect = clust2sect(clst);
  7475  002620  C070  F01C         	movff	dir_next@clst,clust2sect@clst
  7476  002624  C071  F01D         	movff	dir_next@clst+1,clust2sect@clst+1
  7477  002628  C072  F01E         	movff	dir_next@clst+2,clust2sect@clst+2
  7478  00262C  C073  F01F         	movff	dir_next@clst+3,clust2sect@clst+3
  7479  002630  ECDE  F01A         	call	_clust2sect	;wreg free
  7480  002634  C01C  F03D         	movff	?_clust2sect,??_dir_next
  7481  002638  C01D  F03E         	movff	?_clust2sect+1,??_dir_next+1
  7482  00263C  C01E  F03F         	movff	?_clust2sect+2,??_dir_next+2
  7483  002640  C01F  F040         	movff	?_clust2sect+3,??_dir_next+3
  7484  002644  EE20 F00C          	lfsr	2,12
  7485  002648  503B               	movf	dir_next@dj,w,c
  7486  00264A  26D9               	addwf	fsr2l,f,c
  7487  00264C  503C               	movf	dir_next@dj+1,w,c
  7488  00264E  22DA               	addwfc	fsr2h,f,c
  7489  002650  C03D  FFDE         	movff	??_dir_next,postinc2
  7490  002654  C03E  FFDE         	movff	??_dir_next+1,postinc2
  7491  002658  C03F  FFDE         	movff	??_dir_next+2,postinc2
  7492  00265C  C040  FFDD         	movff	??_dir_next+3,postdec2
  7493  002660  06D9               	decf	fsr2l,f,c
  7494  002662  06D9               	decf	fsr2l,f,c
  7495  002664                     l5060:
  7496                           
  7497                           ;pff.c: 189: }
  7498                           ;pff.c: 190: }
  7499                           ;pff.c: 191: }
  7500                           ;pff.c: 193: dj->index = i;
  7501  002664  C03B  FFD9         	movff	dir_next@dj,fsr2l
  7502  002668  C03C  FFDA         	movff	dir_next@dj+1,fsr2h
  7503  00266C  0100               	movlb	0	; () banked
  7504  00266E  C074  FFDE         	movff	dir_next@i,postinc2
  7505  002672  0100               	movlb	0	; () banked
  7506  002674  C075  FFDD         	movff	dir_next@i+1,postdec2
  7507                           
  7508                           ; BSR set to: 0
  7509                           ;pff.c: 195: return FR_OK;
  7510  002678  0E00               	movlw	0
  7511  00267A                     l63:
  7512                           
  7513                           ; BSR set to: 0
  7514  00267A  0012               	return	
  7515  00267C                     __end_of_dir_next:
  7516                           	opt stack 0
  7517                           tblptru	equ	0xFF8
  7518                           tblptrh	equ	0xFF7
  7519                           tblptrl	equ	0xFF6
  7520                           tablat	equ	0xFF5
  7521                           prodh	equ	0xFF4
  7522                           prodl	equ	0xFF3
  7523                           intcon	equ	0xFF2
  7524                           postinc0	equ	0xFEE
  7525                           wreg	equ	0xFE8
  7526                           indf1	equ	0xFE7
  7527                           postinc1	equ	0xFE6
  7528                           postdec1	equ	0xFE5
  7529                           fsr1h	equ	0xFE2
  7530                           fsr1l	equ	0xFE1
  7531                           indf2	equ	0xFDF
  7532                           postinc2	equ	0xFDE
  7533                           postdec2	equ	0xFDD
  7534                           fsr2h	equ	0xFDA
  7535                           fsr2l	equ	0xFD9
  7536                           status	equ	0xFD8
  7537                           
  7538 ;; *************** function _get_fat *****************
  7539 ;; Defined at:
  7540 ;;		line 65 in file "../../../PIC18F/pff.c"
  7541 ;; Parameters:    Size  Location     Type
  7542 ;;  clst            4   44[COMRAM] unsigned long 
  7543 ;; Auto vars:     Size  Location     Type
  7544 ;;  buf             4    2[BANK0 ] unsigned char [4]
  7545 ;;  fs              2   12[BANK0 ] PTR struct _FATFS_
  7546 ;;		 -> Fs(44), NULL(0), 
  7547 ;;  bc              2   10[BANK0 ] unsigned short 
  7548 ;;  ofs             2    8[BANK0 ] unsigned short 
  7549 ;;  wc              2    6[BANK0 ] unsigned short 
  7550 ;; Return value:  Size  Location     Type
  7551 ;;                  4   44[COMRAM] unsigned long 
  7552 ;; Registers used:
  7553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7554 ;; Tracked objects:
  7555 ;;		On entry : 0/0
  7556 ;;		On exit  : 0/0
  7557 ;;		Unchanged: 0/0
  7558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7559 ;;      Params:         4       0       0       0       0       0       0       0       0
  7560 ;;      Locals:         0      14       0       0       0       0       0       0       0
  7561 ;;      Temps:         10       0       0       0       0       0       0       0       0
  7562 ;;      Totals:        14      14       0       0       0       0       0       0       0
  7563 ;;Total ram usage:       28 bytes
  7564 ;; Hardware stack levels used:    1
  7565 ;; Hardware stack levels required when called:    6
  7566 ;; This function calls:
  7567 ;;		_disk_readp
  7568 ;; This function is called by:
  7569 ;;		_dir_next
  7570 ;;		_pf_read
  7571 ;;		_pf_lseek
  7572 ;; This function uses a non-reentrant model
  7573 ;;
  7574                           
  7575                           	psect	text25
  7576  00178A                     __ptext25:
  7577                           	opt stack 0
  7578  00178A                     _get_fat:
  7579                           	opt stack 21
  7580                           
  7581                           ;pff.c: 69: WORD wc, bc, ofs;
  7582                           ;pff.c: 70: BYTE buf[4];
  7583                           ;pff.c: 71: FATFS *fs = FatFs;
  7584                           
  7585                           ; BSR set to: 0
  7586                           ;incstack = 0
  7587  00178A  0100               	movlb	0	; () banked
  7588  00178C  C049  F06D         	movff	_FatFs+1,get_fat@fs+1
  7589  001790  0100               	movlb	0	; () banked
  7590  001792  C048  F06C         	movff	_FatFs,get_fat@fs
  7591                           
  7592                           ;pff.c: 74: if (clst < 2 || clst >= fs->max_clust)
  7593  001796  0E02               	movlw	2
  7594  001798  5C2D               	subwf	get_fat@clst,w,c
  7595  00179A  0E00               	movlw	0
  7596  00179C  582E               	subwfb	get_fat@clst+1,w,c
  7597  00179E  0E00               	movlw	0
  7598  0017A0  582F               	subwfb	get_fat@clst+2,w,c
  7599  0017A2  0E00               	movlw	0
  7600  0017A4  5830               	subwfb	get_fat@clst+3,w,c
  7601  0017A6  A0D8               	btfss	status,0,c
  7602  0017A8  D1C7               	goto	l5014
  7603                           
  7604                           ; BSR set to: 0
  7605  0017AA  0100               	movlb	0	; () banked
  7606  0017AC  EE20 F008          	lfsr	2,8
  7607  0017B0  0100               	movlb	0	; () banked
  7608  0017B2  516C               	movf	get_fat@fs& (0+255),w,b
  7609  0017B4  26D9               	addwf	fsr2l,f,c
  7610  0017B6  0100               	movlb	0	; () banked
  7611  0017B8  516D               	movf	(get_fat@fs+1)& (0+255),w,b
  7612  0017BA  22DA               	addwfc	fsr2h,f,c
  7613  0017BC  CFDE F031          	movff	postinc2,??_get_fat
  7614  0017C0  CFDE F032          	movff	postinc2,??_get_fat+1
  7615  0017C4  CFDE F033          	movff	postinc2,??_get_fat+2
  7616  0017C8  CFDE F034          	movff	postinc2,??_get_fat+3
  7617  0017CC  5031               	movf	??_get_fat,w,c
  7618  0017CE  5C2D               	subwf	get_fat@clst,w,c
  7619  0017D0  5032               	movf	??_get_fat+1,w,c
  7620  0017D2  582E               	subwfb	get_fat@clst+1,w,c
  7621  0017D4  5033               	movf	??_get_fat+2,w,c
  7622  0017D6  582F               	subwfb	get_fat@clst+2,w,c
  7623  0017D8  5034               	movf	??_get_fat+3,w,c
  7624  0017DA  5830               	subwfb	get_fat@clst+3,w,c
  7625  0017DC  A0D8               	btfss	status,0,c
  7626  0017DE  D19E               	goto	l5012
  7627                           
  7628                           ; BSR set to: 0
  7629  0017E0  D1AB               	goto	l5014
  7630  0017E2                     l28:
  7631                           
  7632                           ; BSR set to: 0
  7633                           ;pff.c: 79: bc = (WORD)clst; bc += bc / 2;
  7634  0017E2  C02D  F06A         	movff	get_fat@clst,get_fat@bc
  7635  0017E6  C02E  F06B         	movff	get_fat@clst+1,get_fat@bc+1
  7636                           
  7637                           ; BSR set to: 0
  7638  0017EA  90D8               	bcf	status,0,c
  7639  0017EC  0100               	movlb	0	; () banked
  7640  0017EE  316B               	rrcf	(get_fat@bc+1)& (0+255),w,b
  7641  0017F0  6E32               	movwf	(??_get_fat+1)& (0+255),c
  7642  0017F2  0100               	movlb	0	; () banked
  7643  0017F4  316A               	rrcf	get_fat@bc& (0+255),w,b
  7644  0017F6  6E31               	movwf	??_get_fat& (0+255),c
  7645  0017F8  5031               	movf	??_get_fat,w,c
  7646  0017FA  0100               	movlb	0	; () banked
  7647  0017FC  276A               	addwf	get_fat@bc& (0+255),f,b
  7648  0017FE  5032               	movf	??_get_fat+1,w,c
  7649  001800  0100               	movlb	0	; () banked
  7650  001802  236B               	addwfc	(get_fat@bc+1)& (0+255),f,b
  7651                           
  7652                           ;pff.c: 80: ofs = bc % 512; bc /= 512;
  7653  001804  0EFF               	movlw	255
  7654  001806  0100               	movlb	0	; () banked
  7655  001808  156A               	andwf	get_fat@bc& (0+255),w,b
  7656  00180A  0100               	movlb	0	; () banked
  7657  00180C  6F68               	movwf	get_fat@ofs& (0+255),b
  7658  00180E  0E01               	movlw	1
  7659  001810  0100               	movlb	0	; () banked
  7660  001812  156B               	andwf	(get_fat@bc+1)& (0+255),w,b
  7661  001814  0100               	movlb	0	; () banked
  7662  001816  6F69               	movwf	(get_fat@ofs+1)& (0+255),b
  7663  001818  0E09               	movlw	9
  7664  00181A  6E31               	movwf	??_get_fat& (0+255),c
  7665  00181C                     u5385:
  7666  00181C  90D8               	bcf	status,0,c
  7667  00181E  0100               	movlb	0	; () banked
  7668  001820  336B               	rrcf	(get_fat@bc+1)& (0+255),f,b
  7669  001822  0100               	movlb	0	; () banked
  7670  001824  336A               	rrcf	get_fat@bc& (0+255),f,b
  7671  001826  2E31               	decfsz	??_get_fat& (0+255),f,c
  7672  001828  D7F9               	goto	u5385
  7673                           
  7674                           ;pff.c: 81: if (ofs != 511) {
  7675  00182A  0100               	movlb	0	; () banked
  7676  00182C  2968               	incf	get_fat@ofs& (0+255),w,b
  7677  00182E  B4D8               	btfsc	status,2,c
  7678  001830  0569               	decf	(get_fat@ofs+1)& (0+255),w,b
  7679  001832  B4D8               	btfsc	status,2,c
  7680  001834  D030               	goto	l4978
  7681                           
  7682                           ; BSR set to: 0
  7683                           ;pff.c: 82: if (disk_readp(buf, fs->fatbase + bc, ofs, 2)) break;
  7684  001836  0100               	movlb	0	; () banked
  7685  001838  0E00               	movlw	high get_fat@buf
  7686  00183A  6E1E               	movwf	disk_readp@buff+1,c
  7687  00183C  0100               	movlb	0	; () banked
  7688  00183E  0E62               	movlw	low get_fat@buf
  7689  001840  6E1D               	movwf	disk_readp@buff,c
  7690  001842  0100               	movlb	0	; () banked
  7691  001844  EE20 F00C          	lfsr	2,12
  7692  001848  0100               	movlb	0	; () banked
  7693  00184A  516C               	movf	get_fat@fs& (0+255),w,b
  7694  00184C  26D9               	addwf	fsr2l,f,c
  7695  00184E  0100               	movlb	0	; () banked
  7696  001850  516D               	movf	(get_fat@fs+1)& (0+255),w,b
  7697  001852  22DA               	addwfc	fsr2h,f,c
  7698  001854  CFDE F031          	movff	postinc2,??_get_fat
  7699  001858  CFDE F032          	movff	postinc2,??_get_fat+1
  7700  00185C  CFDE F033          	movff	postinc2,??_get_fat+2
  7701  001860  CFDE F034          	movff	postinc2,??_get_fat+3
  7702  001864  0100               	movlb	0	; () banked
  7703  001866  516A               	movf	get_fat@bc& (0+255),w,b
  7704  001868  2431               	addwf	??_get_fat,w,c
  7705  00186A  6E1F               	movwf	disk_readp@lba,c
  7706  00186C  0100               	movlb	0	; () banked
  7707  00186E  516B               	movf	(get_fat@bc+1)& (0+255),w,b
  7708  001870  2032               	addwfc	??_get_fat+1,w,c
  7709  001872  6E20               	movwf	disk_readp@lba+1,c
  7710  001874  0E00               	movlw	0
  7711  001876  2033               	addwfc	??_get_fat+2,w,c
  7712  001878  6E21               	movwf	disk_readp@lba+2,c
  7713  00187A  0E00               	movlw	0
  7714  00187C  2034               	addwfc	??_get_fat+3,w,c
  7715  00187E  6E22               	movwf	disk_readp@lba+3,c
  7716  001880  C068  F023         	movff	get_fat@ofs,disk_readp@ofs
  7717  001884  C069  F024         	movff	get_fat@ofs+1,disk_readp@ofs+1
  7718  001888  0E00               	movlw	0
  7719  00188A  6E26               	movwf	disk_readp@cnt+1,c
  7720  00188C  0E02               	movlw	2
  7721  00188E  6E25               	movwf	disk_readp@cnt,c
  7722  001890  EC71  F01A         	call	_disk_readp	;wreg free
  7723  001894  D06C               	goto	L16
  7724  001896                     l4978:
  7725                           
  7726                           ;pff.c: 84: if (disk_readp(buf, fs->fatbase + bc, 511, 1)) break;
  7727  001896  0100               	movlb	0	; () banked
  7728  001898  0E00               	movlw	high get_fat@buf
  7729  00189A  6E1E               	movwf	disk_readp@buff+1,c
  7730  00189C  0100               	movlb	0	; () banked
  7731  00189E  0E62               	movlw	low get_fat@buf
  7732  0018A0  6E1D               	movwf	disk_readp@buff,c
  7733  0018A2  0100               	movlb	0	; () banked
  7734  0018A4  EE20 F00C          	lfsr	2,12
  7735  0018A8  0100               	movlb	0	; () banked
  7736  0018AA  516C               	movf	get_fat@fs& (0+255),w,b
  7737  0018AC  26D9               	addwf	fsr2l,f,c
  7738  0018AE  0100               	movlb	0	; () banked
  7739  0018B0  516D               	movf	(get_fat@fs+1)& (0+255),w,b
  7740  0018B2  22DA               	addwfc	fsr2h,f,c
  7741  0018B4  CFDE F031          	movff	postinc2,??_get_fat
  7742  0018B8  CFDE F032          	movff	postinc2,??_get_fat+1
  7743  0018BC  CFDE F033          	movff	postinc2,??_get_fat+2
  7744  0018C0  CFDE F034          	movff	postinc2,??_get_fat+3
  7745  0018C4  0100               	movlb	0	; () banked
  7746  0018C6  516A               	movf	get_fat@bc& (0+255),w,b
  7747  0018C8  2431               	addwf	??_get_fat,w,c
  7748  0018CA  6E1F               	movwf	disk_readp@lba,c
  7749  0018CC  0100               	movlb	0	; () banked
  7750  0018CE  516B               	movf	(get_fat@bc+1)& (0+255),w,b
  7751  0018D0  2032               	addwfc	??_get_fat+1,w,c
  7752  0018D2  6E20               	movwf	disk_readp@lba+1,c
  7753  0018D4  0E00               	movlw	0
  7754  0018D6  2033               	addwfc	??_get_fat+2,w,c
  7755  0018D8  6E21               	movwf	disk_readp@lba+2,c
  7756  0018DA  0E00               	movlw	0
  7757  0018DC  2034               	addwfc	??_get_fat+3,w,c
  7758  0018DE  6E22               	movwf	disk_readp@lba+3,c
  7759  0018E0  0E01               	movlw	1
  7760  0018E2  6E24               	movwf	disk_readp@ofs+1,c
  7761  0018E4  6823               	setf	disk_readp@ofs,c
  7762  0018E6  0E00               	movlw	0
  7763  0018E8  6E26               	movwf	disk_readp@cnt+1,c
  7764  0018EA  0E01               	movlw	1
  7765  0018EC  6E25               	movwf	disk_readp@cnt,c
  7766  0018EE  EC71  F01A         	call	_disk_readp	;wreg free
  7767  0018F2  0900               	iorlw	0
  7768  0018F4  A4D8               	btfss	status,2,c
  7769  0018F6  D120               	goto	l5014
  7770                           
  7771                           ;pff.c: 85: if (disk_readp(buf+1, fs->fatbase + bc + 1, 0, 1)) break;
  7772  0018F8  0100               	movlb	0	; () banked
  7773  0018FA  0E00               	movlw	high (get_fat@buf+1)
  7774  0018FC  6E1E               	movwf	disk_readp@buff+1,c
  7775  0018FE  0100               	movlb	0	; () banked
  7776  001900  0E63               	movlw	low (get_fat@buf+1)
  7777  001902  6E1D               	movwf	disk_readp@buff,c
  7778  001904  0100               	movlb	0	; () banked
  7779  001906  EE20 F00C          	lfsr	2,12
  7780  00190A  0100               	movlb	0	; () banked
  7781  00190C  516C               	movf	get_fat@fs& (0+255),w,b
  7782  00190E  26D9               	addwf	fsr2l,f,c
  7783  001910  0100               	movlb	0	; () banked
  7784  001912  516D               	movf	(get_fat@fs+1)& (0+255),w,b
  7785  001914  22DA               	addwfc	fsr2h,f,c
  7786  001916  CFDE F031          	movff	postinc2,??_get_fat
  7787  00191A  CFDE F032          	movff	postinc2,??_get_fat+1
  7788  00191E  CFDE F033          	movff	postinc2,??_get_fat+2
  7789  001922  CFDE F034          	movff	postinc2,??_get_fat+3
  7790  001926  0100               	movlb	0	; () banked
  7791  001928  516A               	movf	get_fat@bc& (0+255),w,b
  7792  00192A  2431               	addwf	??_get_fat,w,c
  7793  00192C  6E35               	movwf	(??_get_fat+4)& (0+255),c
  7794  00192E  0100               	movlb	0	; () banked
  7795  001930  516B               	movf	(get_fat@bc+1)& (0+255),w,b
  7796  001932  2032               	addwfc	??_get_fat+1,w,c
  7797  001934  6E36               	movwf	(??_get_fat+5)& (0+255),c
  7798  001936  0E00               	movlw	0
  7799  001938  2033               	addwfc	??_get_fat+2,w,c
  7800  00193A  6E37               	movwf	(??_get_fat+6)& (0+255),c
  7801  00193C  0E00               	movlw	0
  7802  00193E  2034               	addwfc	??_get_fat+3,w,c
  7803  001940  6E38               	movwf	(??_get_fat+7)& (0+255),c
  7804  001942  0E01               	movlw	1
  7805  001944  2435               	addwf	??_get_fat+4,w,c
  7806  001946  6E1F               	movwf	disk_readp@lba,c
  7807  001948  0E00               	movlw	0
  7808  00194A  2036               	addwfc	??_get_fat+5,w,c
  7809  00194C  6E20               	movwf	disk_readp@lba+1,c
  7810  00194E  0E00               	movlw	0
  7811  001950  2037               	addwfc	??_get_fat+6,w,c
  7812  001952  6E21               	movwf	disk_readp@lba+2,c
  7813  001954  0E00               	movlw	0
  7814  001956  2038               	addwfc	??_get_fat+7,w,c
  7815  001958  6E22               	movwf	disk_readp@lba+3,c
  7816  00195A  0E00               	movlw	0
  7817  00195C  6E24               	movwf	disk_readp@ofs+1,c
  7818  00195E  0E00               	movlw	0
  7819  001960  6E23               	movwf	disk_readp@ofs,c
  7820  001962  0E00               	movlw	0
  7821  001964  6E26               	movwf	disk_readp@cnt+1,c
  7822  001966  0E01               	movlw	1
  7823  001968  6E25               	movwf	disk_readp@cnt,c
  7824  00196A  EC71  F01A         	call	_disk_readp	;wreg free
  7825  00196E                     L16:
  7826  00196E  0900               	iorlw	0
  7827  001970  A4D8               	btfss	status,2,c
  7828  001972  D0E2               	goto	l5014
  7829                           
  7830                           ;pff.c: 86: }
  7831                           ;pff.c: 87: wc = (WORD)(*(WORD*)(BYTE*)(buf));
  7832  001974  C062  F066         	movff	get_fat@buf,get_fat@wc
  7833  001978  C063  F067         	movff	get_fat@buf+1,get_fat@wc+1
  7834                           
  7835                           ;pff.c: 88: return (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
  7836  00197C  B02D               	btfsc	get_fat@clst,0,c
  7837  00197E  D00B               	goto	l4988
  7838  001980  0EFF               	movlw	255
  7839  001982  0100               	movlb	0	; () banked
  7840  001984  1566               	andwf	get_fat@wc& (0+255),w,b
  7841  001986  0100               	movlb	0	; () banked
  7842  001988  6F60               	movwf	_get_fat$110& (0+255),b
  7843  00198A  0E0F               	movlw	15
  7844  00198C  0100               	movlb	0	; () banked
  7845  00198E  1567               	andwf	(get_fat@wc+1)& (0+255),w,b
  7846  001990  0100               	movlb	0	; () banked
  7847  001992  6F61               	movwf	(_get_fat$110+1)& (0+255),b
  7848  001994  D011               	goto	l4990
  7849  001996                     l4988:
  7850  001996  0100               	movlb	0	; () banked
  7851  001998  C066  F031         	movff	get_fat@wc,??_get_fat
  7852  00199C  0100               	movlb	0	; () banked
  7853  00199E  C067  F032         	movff	get_fat@wc+1,??_get_fat+1
  7854  0019A2  0E04               	movlw	4
  7855  0019A4  6E33               	movwf	(??_get_fat+2)& (0+255),c
  7856  0019A6                     u5445:
  7857  0019A6  90D8               	bcf	status,0,c
  7858  0019A8  3232               	rrcf	??_get_fat+1,f,c
  7859  0019AA  3231               	rrcf	??_get_fat,f,c
  7860  0019AC  2E33               	decfsz	(??_get_fat+2)& (0+255),f,c
  7861  0019AE  D7FB               	goto	u5445
  7862  0019B0  C031  F060         	movff	??_get_fat,_get_fat$110
  7863  0019B4  C032  F061         	movff	??_get_fat+1,_get_fat$110+1
  7864  0019B8                     l4990:
  7865                           
  7866                           ; BSR set to: 0
  7867  0019B8  0100               	movlb	0	; () banked
  7868  0019BA  C060  F02D         	movff	_get_fat$110,?_get_fat
  7869  0019BE  0100               	movlb	0	; () banked
  7870  0019C0  C061  F02E         	movff	_get_fat$110+1,?_get_fat+1
  7871  0019C4  D04C               	goto	L14
  7872  0019C6                     l4994:
  7873                           
  7874                           ; BSR set to: 0
  7875                           ;pff.c: 91: if (disk_readp(buf, fs->fatbase + clst / 256, (WORD)(((WORD)clst % 256) * 2)
      +                          , 2)) break;
  7876  0019C6  0100               	movlb	0	; () banked
  7877  0019C8  0E00               	movlw	high get_fat@buf
  7878  0019CA  6E1E               	movwf	disk_readp@buff+1,c
  7879  0019CC  0100               	movlb	0	; () banked
  7880  0019CE  0E62               	movlw	low get_fat@buf
  7881  0019D0  6E1D               	movwf	disk_readp@buff,c
  7882  0019D2  0100               	movlb	0	; () banked
  7883  0019D4  EE20 F00C          	lfsr	2,12
  7884  0019D8  0100               	movlb	0	; () banked
  7885  0019DA  516C               	movf	get_fat@fs& (0+255),w,b
  7886  0019DC  26D9               	addwf	fsr2l,f,c
  7887  0019DE  0100               	movlb	0	; () banked
  7888  0019E0  516D               	movf	(get_fat@fs+1)& (0+255),w,b
  7889  0019E2  22DA               	addwfc	fsr2h,f,c
  7890  0019E4  CFDE F031          	movff	postinc2,??_get_fat
  7891  0019E8  CFDE F032          	movff	postinc2,??_get_fat+1
  7892  0019EC  CFDE F033          	movff	postinc2,??_get_fat+2
  7893  0019F0  CFDE F034          	movff	postinc2,??_get_fat+3
  7894  0019F4  C02D  F035         	movff	get_fat@clst,??_get_fat+4
  7895  0019F8  C02E  F036         	movff	get_fat@clst+1,??_get_fat+5
  7896  0019FC  C02F  F037         	movff	get_fat@clst+2,??_get_fat+6
  7897  001A00  C030  F038         	movff	get_fat@clst+3,??_get_fat+7
  7898  001A04  C036  F035         	movff	??_get_fat+5,??_get_fat+4
  7899  001A08  C037  F036         	movff	??_get_fat+6,??_get_fat+5
  7900  001A0C  C038  F037         	movff	??_get_fat+7,??_get_fat+6
  7901  001A10  6A38               	clrf	??_get_fat+7,c
  7902  001A12  5031               	movf	??_get_fat,w,c
  7903  001A14  2435               	addwf	??_get_fat+4,w,c
  7904  001A16  6E1F               	movwf	disk_readp@lba,c
  7905  001A18  5032               	movf	??_get_fat+1,w,c
  7906  001A1A  2036               	addwfc	??_get_fat+5,w,c
  7907  001A1C  6E20               	movwf	disk_readp@lba+1,c
  7908  001A1E  5033               	movf	??_get_fat+2,w,c
  7909  001A20  2037               	addwfc	??_get_fat+6,w,c
  7910  001A22  6E21               	movwf	disk_readp@lba+2,c
  7911  001A24  5034               	movf	??_get_fat+3,w,c
  7912  001A26  2038               	addwfc	??_get_fat+7,w,c
  7913  001A28  6E22               	movwf	disk_readp@lba+3,c
  7914  001A2A  0EFF               	movlw	255
  7915  001A2C  142D               	andwf	get_fat@clst,w,c
  7916  001A2E  6E39               	movwf	(??_get_fat+8)& (0+255),c
  7917  001A30  0E00               	movlw	0
  7918  001A32  142E               	andwf	get_fat@clst+1,w,c
  7919  001A34  6E3A               	movwf	(??_get_fat+9)& (0+255),c
  7920  001A36  90D8               	bcf	status,0,c
  7921  001A38  3439               	rlcf	??_get_fat+8,w,c
  7922  001A3A  6E23               	movwf	disk_readp@ofs,c
  7923  001A3C  343A               	rlcf	??_get_fat+9,w,c
  7924  001A3E  6E24               	movwf	disk_readp@ofs+1,c
  7925  001A40  0E00               	movlw	0
  7926  001A42  6E26               	movwf	disk_readp@cnt+1,c
  7927  001A44  0E02               	movlw	2
  7928  001A46  6E25               	movwf	disk_readp@cnt,c
  7929  001A48  EC71  F01A         	call	_disk_readp	;wreg free
  7930  001A4C  0900               	iorlw	0
  7931  001A4E  A4D8               	btfss	status,2,c
  7932  001A50  D073               	goto	l5014
  7933                           
  7934                           ;pff.c: 92: return (WORD)(*(WORD*)(BYTE*)(buf));
  7935  001A52  0100               	movlb	0	; () banked
  7936  001A54  C062  F02D         	movff	get_fat@buf,?_get_fat
  7937  001A58  0100               	movlb	0	; () banked
  7938  001A5A  C063  F02E         	movff	get_fat@buf+1,?_get_fat+1
  7939  001A5E                     L14:
  7940  001A5E  6A2F               	clrf	?_get_fat+2,c
  7941  001A60  6A30               	clrf	?_get_fat+3,c
  7942  001A62  D072               	goto	l26
  7943  001A64                     l5002:
  7944                           
  7945                           ; BSR set to: 0
  7946                           ;pff.c: 95: if (disk_readp(buf, fs->fatbase + clst / 128, (WORD)(((WORD)clst % 128) * 4)
      +                          , 4)) break;
  7947  001A64  0100               	movlb	0	; () banked
  7948  001A66  0E00               	movlw	high get_fat@buf
  7949  001A68  6E1E               	movwf	disk_readp@buff+1,c
  7950  001A6A  0100               	movlb	0	; () banked
  7951  001A6C  0E62               	movlw	low get_fat@buf
  7952  001A6E  6E1D               	movwf	disk_readp@buff,c
  7953  001A70  0100               	movlb	0	; () banked
  7954  001A72  EE20 F00C          	lfsr	2,12
  7955  001A76  0100               	movlb	0	; () banked
  7956  001A78  516C               	movf	get_fat@fs& (0+255),w,b
  7957  001A7A  26D9               	addwf	fsr2l,f,c
  7958  001A7C  0100               	movlb	0	; () banked
  7959  001A7E  516D               	movf	(get_fat@fs+1)& (0+255),w,b
  7960  001A80  22DA               	addwfc	fsr2h,f,c
  7961  001A82  CFDE F031          	movff	postinc2,??_get_fat
  7962  001A86  CFDE F032          	movff	postinc2,??_get_fat+1
  7963  001A8A  CFDE F033          	movff	postinc2,??_get_fat+2
  7964  001A8E  CFDE F034          	movff	postinc2,??_get_fat+3
  7965  001A92  C02D  F035         	movff	get_fat@clst,??_get_fat+4
  7966  001A96  C02E  F036         	movff	get_fat@clst+1,??_get_fat+5
  7967  001A9A  C02F  F037         	movff	get_fat@clst+2,??_get_fat+6
  7968  001A9E  C030  F038         	movff	get_fat@clst+3,??_get_fat+7
  7969  001AA2  0E08               	movlw	8
  7970  001AA4  D005               	goto	u5460
  7971  001AA6                     u5465:
  7972  001AA6  90D8               	bcf	status,0,c
  7973  001AA8  3238               	rrcf	??_get_fat+7,f,c
  7974  001AAA  3237               	rrcf	??_get_fat+6,f,c
  7975  001AAC  3236               	rrcf	??_get_fat+5,f,c
  7976  001AAE  3235               	rrcf	??_get_fat+4,f,c
  7977  001AB0                     u5460:
  7978  001AB0  2EE8               	decfsz	wreg,f,c
  7979  001AB2  D7F9               	goto	u5465
  7980  001AB4  5031               	movf	??_get_fat,w,c
  7981  001AB6  2435               	addwf	??_get_fat+4,w,c
  7982  001AB8  6E1F               	movwf	disk_readp@lba,c
  7983  001ABA  5032               	movf	??_get_fat+1,w,c
  7984  001ABC  2036               	addwfc	??_get_fat+5,w,c
  7985  001ABE  6E20               	movwf	disk_readp@lba+1,c
  7986  001AC0  5033               	movf	??_get_fat+2,w,c
  7987  001AC2  2037               	addwfc	??_get_fat+6,w,c
  7988  001AC4  6E21               	movwf	disk_readp@lba+2,c
  7989  001AC6  5034               	movf	??_get_fat+3,w,c
  7990  001AC8  2038               	addwfc	??_get_fat+7,w,c
  7991  001ACA  6E22               	movwf	disk_readp@lba+3,c
  7992  001ACC  0E7F               	movlw	127
  7993  001ACE  142D               	andwf	get_fat@clst,w,c
  7994  001AD0  6E39               	movwf	(??_get_fat+8)& (0+255),c
  7995  001AD2  0E00               	movlw	0
  7996  001AD4  142E               	andwf	get_fat@clst+1,w,c
  7997  001AD6  6E3A               	movwf	(??_get_fat+9)& (0+255),c
  7998  001AD8  90D8               	bcf	status,0,c
  7999  001ADA  3639               	rlcf	??_get_fat+8,f,c
  8000  001ADC  363A               	rlcf	??_get_fat+9,f,c
  8001  001ADE  90D8               	bcf	status,0,c
  8002  001AE0  3639               	rlcf	??_get_fat+8,f,c
  8003  001AE2  363A               	rlcf	??_get_fat+9,f,c
  8004  001AE4  C039  F023         	movff	??_get_fat+8,disk_readp@ofs
  8005  001AE8  C03A  F024         	movff	??_get_fat+9,disk_readp@ofs+1
  8006  001AEC  0E00               	movlw	0
  8007  001AEE  6E26               	movwf	disk_readp@cnt+1,c
  8008  001AF0  0E04               	movlw	4
  8009  001AF2  6E25               	movwf	disk_readp@cnt,c
  8010  001AF4  EC71  F01A         	call	_disk_readp	;wreg free
  8011  001AF8  0900               	iorlw	0
  8012  001AFA  A4D8               	btfss	status,2,c
  8013  001AFC  D01D               	goto	l5014
  8014                           
  8015                           ;pff.c: 96: return (DWORD)(*(DWORD*)(BYTE*)(buf)) & 0x0FFFFFFF;
  8016  001AFE  0100               	movlb	0	; () banked
  8017  001B00  EE20  F062         	lfsr	2,get_fat@buf
  8018  001B04  0EFF               	movlw	255
  8019  001B06  14DE               	andwf	postinc2,w,c
  8020  001B08  6E2D               	movwf	?_get_fat,c
  8021  001B0A  0EFF               	movlw	255
  8022  001B0C  14DE               	andwf	postinc2,w,c
  8023  001B0E  6E2E               	movwf	?_get_fat+1,c
  8024  001B10  0EFF               	movlw	255
  8025  001B12  14DE               	andwf	postinc2,w,c
  8026  001B14  6E2F               	movwf	?_get_fat+2,c
  8027  001B16  0E0F               	movlw	15
  8028  001B18  14DE               	andwf	postinc2,w,c
  8029  001B1A  D015               	goto	L15
  8030  001B1C                     l5012:
  8031                           
  8032                           ; BSR set to: 0
  8033  001B1C  C06C  FFD9         	movff	get_fat@fs,fsr2l
  8034  001B20  C06D  FFDA         	movff	get_fat@fs+1,fsr2h
  8035  001B24  50DF               	movf	indf2,w,c
  8036                           
  8037                           ; Switch size 1, requested type "space"
  8038                           ; Number of cases is 3, Range of values is 1 to 3
  8039                           ; switch strategies available:
  8040                           ; Name         Instructions Cycles
  8041                           ; simple_byte           10     6 (average)
  8042                           ;	Chosen strategy is simple_byte
  8043  001B26  0A01               	xorlw	1	; case 1
  8044  001B28  B4D8               	btfsc	status,2,c
  8045  001B2A  D65B               	goto	l28
  8046  001B2C  0A03               	xorlw	3	; case 2
  8047  001B2E  B4D8               	btfsc	status,2,c
  8048  001B30  D74A               	goto	l4994
  8049  001B32  0A01               	xorlw	1	; case 3
  8050  001B34  B4D8               	btfsc	status,2,c
  8051  001B36  D796               	goto	l5002
  8052  001B38                     l5014:
  8053                           
  8054                           ;pff.c: 100: return 1;
  8055  001B38  0E01               	movlw	1
  8056  001B3A  6E2D               	movwf	?_get_fat,c
  8057  001B3C  0E00               	movlw	0
  8058  001B3E  6E2E               	movwf	?_get_fat+1,c
  8059  001B40  0E00               	movlw	0
  8060  001B42  6E2F               	movwf	?_get_fat+2,c
  8061  001B44  0E00               	movlw	0
  8062  001B46                     L15:
  8063  001B46  6E30               	movwf	?_get_fat+3,c
  8064  001B48                     l26:
  8065  001B48  0012               	return	
  8066  001B4A                     __end_of_get_fat:
  8067                           	opt stack 0
  8068                           tblptru	equ	0xFF8
  8069                           tblptrh	equ	0xFF7
  8070                           tblptrl	equ	0xFF6
  8071                           tablat	equ	0xFF5
  8072                           prodh	equ	0xFF4
  8073                           prodl	equ	0xFF3
  8074                           intcon	equ	0xFF2
  8075                           postinc0	equ	0xFEE
  8076                           wreg	equ	0xFE8
  8077                           indf1	equ	0xFE7
  8078                           postinc1	equ	0xFE6
  8079                           postdec1	equ	0xFE5
  8080                           fsr1h	equ	0xFE2
  8081                           fsr1l	equ	0xFE1
  8082                           indf2	equ	0xFDF
  8083                           postinc2	equ	0xFDE
  8084                           postdec2	equ	0xFDD
  8085                           fsr2h	equ	0xFDA
  8086                           fsr2l	equ	0xFD9
  8087                           status	equ	0xFD8
  8088                           
  8089 ;; *************** function _clust2sect *****************
  8090 ;; Defined at:
  8091 ;;		line 111 in file "../../../PIC18F/pff.c"
  8092 ;; Parameters:    Size  Location     Type
  8093 ;;  clst            4   27[COMRAM] unsigned long 
  8094 ;; Auto vars:     Size  Location     Type
  8095 ;;  fs              2   40[COMRAM] PTR struct _FATFS_
  8096 ;;		 -> Fs(44), NULL(0), 
  8097 ;; Return value:  Size  Location     Type
  8098 ;;                  4   27[COMRAM] unsigned long 
  8099 ;; Registers used:
  8100 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8101 ;; Tracked objects:
  8102 ;;		On entry : 0/0
  8103 ;;		On exit  : 0/0
  8104 ;;		Unchanged: 0/0
  8105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8106 ;;      Params:         4       0       0       0       0       0       0       0       0
  8107 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8108 ;;      Temps:          9       0       0       0       0       0       0       0       0
  8109 ;;      Totals:        15       0       0       0       0       0       0       0       0
  8110 ;;Total ram usage:       15 bytes
  8111 ;; Hardware stack levels used:    1
  8112 ;; Hardware stack levels required when called:    3
  8113 ;; This function calls:
  8114 ;;		___lmul
  8115 ;; This function is called by:
  8116 ;;		_dir_rewind
  8117 ;;		_dir_next
  8118 ;;		_pf_read
  8119 ;;		_pf_lseek
  8120 ;; This function uses a non-reentrant model
  8121 ;;
  8122                           
  8123                           	psect	text26
  8124  0035BC                     __ptext26:
  8125                           	opt stack 0
  8126  0035BC                     _clust2sect:
  8127                           	opt stack 24
  8128                           
  8129                           ;pff.c: 115: FATFS *fs = FatFs;
  8130                           
  8131                           ;incstack = 0
  8132  0035BC  C049  F02A         	movff	_FatFs+1,clust2sect@fs+1
  8133  0035C0  C048  F029         	movff	_FatFs,clust2sect@fs
  8134                           
  8135                           ;pff.c: 118: clst -= 2;
  8136  0035C4  0E02               	movlw	2
  8137  0035C6  5E1C               	subwf	clust2sect@clst,f,c
  8138  0035C8  0E00               	movlw	0
  8139  0035CA  5A1D               	subwfb	clust2sect@clst+1,f,c
  8140  0035CC  5A1E               	subwfb	clust2sect@clst+2,f,c
  8141  0035CE  5A1F               	subwfb	clust2sect@clst+3,f,c
  8142                           
  8143                           ;pff.c: 119: if (clst >= (fs->max_clust - 2)) return 0;
  8144  0035D0  EE20 F008          	lfsr	2,8
  8145  0035D4  5029               	movf	clust2sect@fs,w,c
  8146  0035D6  26D9               	addwf	fsr2l,f,c
  8147  0035D8  502A               	movf	clust2sect@fs+1,w,c
  8148  0035DA  22DA               	addwfc	fsr2h,f,c
  8149  0035DC  0EFE               	movlw	254
  8150  0035DE  24DE               	addwf	postinc2,w,c
  8151  0035E0  6E20               	movwf	??_clust2sect& (0+255),c
  8152  0035E2  0EFF               	movlw	255
  8153  0035E4  20DE               	addwfc	postinc2,w,c
  8154  0035E6  6E21               	movwf	(??_clust2sect+1)& (0+255),c
  8155  0035E8  0EFF               	movlw	255
  8156  0035EA  20DE               	addwfc	postinc2,w,c
  8157  0035EC  6E22               	movwf	(??_clust2sect+2)& (0+255),c
  8158  0035EE  0EFF               	movlw	255
  8159  0035F0  20DE               	addwfc	postinc2,w,c
  8160  0035F2  6E23               	movwf	(??_clust2sect+3)& (0+255),c
  8161  0035F4  5020               	movf	??_clust2sect,w,c
  8162  0035F6  5C1C               	subwf	clust2sect@clst,w,c
  8163  0035F8  5021               	movf	??_clust2sect+1,w,c
  8164  0035FA  581D               	subwfb	clust2sect@clst+1,w,c
  8165  0035FC  5022               	movf	??_clust2sect+2,w,c
  8166  0035FE  581E               	subwfb	clust2sect@clst+2,w,c
  8167  003600  5023               	movf	??_clust2sect+3,w,c
  8168  003602  581F               	subwfb	clust2sect@clst+3,w,c
  8169  003604  A0D8               	btfss	status,0,c
  8170  003606  D008               	goto	l3212
  8171  003608  0E00               	movlw	0
  8172  00360A  6E1C               	movwf	?_clust2sect,c
  8173  00360C  0E00               	movlw	0
  8174  00360E  6E1D               	movwf	?_clust2sect+1,c
  8175  003610  0E00               	movlw	0
  8176  003612  6E1E               	movwf	?_clust2sect+2,c
  8177  003614  0E00               	movlw	0
  8178  003616  D038               	goto	L17
  8179  003618                     l3212:
  8180                           
  8181                           ;pff.c: 120: return (DWORD)clst * fs->csize + fs->database;
  8182  003618  EE20 F014          	lfsr	2,20
  8183  00361C  5029               	movf	clust2sect@fs,w,c
  8184  00361E  26D9               	addwf	fsr2l,f,c
  8185  003620  502A               	movf	clust2sect@fs+1,w,c
  8186  003622  22DA               	addwfc	fsr2h,f,c
  8187  003624  CFDE F020          	movff	postinc2,??_clust2sect
  8188  003628  CFDE F021          	movff	postinc2,??_clust2sect+1
  8189  00362C  CFDE F022          	movff	postinc2,??_clust2sect+2
  8190  003630  CFDE F023          	movff	postinc2,??_clust2sect+3
  8191  003634  EE20 F001          	lfsr	2,1
  8192  003638  5029               	movf	clust2sect@fs,w,c
  8193  00363A  26D9               	addwf	fsr2l,f,c
  8194  00363C  502A               	movf	clust2sect@fs+1,w,c
  8195  00363E  22DA               	addwfc	fsr2h,f,c
  8196  003640  50DF               	movf	indf2,w,c
  8197  003642  6E24               	movwf	(??_clust2sect+4)& (0+255),c
  8198  003644  5024               	movf	??_clust2sect+4,w,c
  8199  003646  6E10               	movwf	___lmul@multiplier,c
  8200  003648  6A11               	clrf	___lmul@multiplier+1,c
  8201  00364A  6A12               	clrf	___lmul@multiplier+2,c
  8202  00364C  6A13               	clrf	___lmul@multiplier+3,c
  8203  00364E  C01C  F014         	movff	clust2sect@clst,___lmul@multiplicand
  8204  003652  C01D  F015         	movff	clust2sect@clst+1,___lmul@multiplicand+1
  8205  003656  C01E  F016         	movff	clust2sect@clst+2,___lmul@multiplicand+2
  8206  00365A  C01F  F017         	movff	clust2sect@clst+3,___lmul@multiplicand+3
  8207  00365E  EC7E  F01D         	call	___lmul	;wreg free
  8208  003662  C010  F025         	movff	?___lmul,??_clust2sect+5
  8209  003666  C011  F026         	movff	?___lmul+1,??_clust2sect+6
  8210  00366A  C012  F027         	movff	?___lmul+2,??_clust2sect+7
  8211  00366E  C013  F028         	movff	?___lmul+3,??_clust2sect+8
  8212  003672  5020               	movf	??_clust2sect,w,c
  8213  003674  2425               	addwf	??_clust2sect+5,w,c
  8214  003676  6E1C               	movwf	?_clust2sect,c
  8215  003678  5021               	movf	??_clust2sect+1,w,c
  8216  00367A  2026               	addwfc	??_clust2sect+6,w,c
  8217  00367C  6E1D               	movwf	?_clust2sect+1,c
  8218  00367E  5022               	movf	??_clust2sect+2,w,c
  8219  003680  2027               	addwfc	??_clust2sect+7,w,c
  8220  003682  6E1E               	movwf	?_clust2sect+2,c
  8221  003684  5023               	movf	??_clust2sect+3,w,c
  8222  003686  2028               	addwfc	??_clust2sect+8,w,c
  8223  003688                     L17:
  8224  003688  6E1F               	movwf	?_clust2sect+3,c
  8225  00368A  0012               	return	
  8226  00368C                     __end_of_clust2sect:
  8227                           	opt stack 0
  8228                           tblptru	equ	0xFF8
  8229                           tblptrh	equ	0xFF7
  8230                           tblptrl	equ	0xFF6
  8231                           tablat	equ	0xFF5
  8232                           prodh	equ	0xFF4
  8233                           prodl	equ	0xFF3
  8234                           intcon	equ	0xFF2
  8235                           postinc0	equ	0xFEE
  8236                           wreg	equ	0xFE8
  8237                           indf1	equ	0xFE7
  8238                           postinc1	equ	0xFE6
  8239                           postdec1	equ	0xFE5
  8240                           fsr1h	equ	0xFE2
  8241                           fsr1l	equ	0xFE1
  8242                           indf2	equ	0xFDF
  8243                           postinc2	equ	0xFDE
  8244                           postdec2	equ	0xFDD
  8245                           fsr2h	equ	0xFDA
  8246                           fsr2l	equ	0xFD9
  8247                           status	equ	0xFD8
  8248                           
  8249 ;; *************** function _create_name *****************
  8250 ;; Defined at:
  8251 ;;		line 280 in file "../../../PIC18F/pff.c"
  8252 ;; Parameters:    Size  Location     Type
  8253 ;;  dj              2   23[COMRAM] PTR struct _Dir_
  8254 ;;		 -> Dir1(16), pf_open@dj(16), 
  8255 ;;  path            2   25[COMRAM] PTR PTR const unsigned c
  8256 ;;		 -> follow_path@path(2), 
  8257 ;; Auto vars:     Size  Location     Type
  8258 ;;  sfn             2   39[COMRAM] PTR unsigned char 
  8259 ;;		 -> pf_readdir@sp(12), pf_opendir@sp(12), pf_open@sp(12), 
  8260 ;;  p               2   35[COMRAM] PTR const unsigned char 
  8261 ;;		 -> Fno(22), STR_1(1), 
  8262 ;;  c               1   42[COMRAM] unsigned char 
  8263 ;;  i               1   41[COMRAM] unsigned char 
  8264 ;;  si              1   38[COMRAM] unsigned char 
  8265 ;;  ni              1   37[COMRAM] unsigned char 
  8266 ;;  d               1   34[COMRAM] unsigned char 
  8267 ;; Return value:  Size  Location     Type
  8268 ;;                  1    wreg      enum E48
  8269 ;; Registers used:
  8270 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8271 ;; Tracked objects:
  8272 ;;		On entry : 0/0
  8273 ;;		On exit  : 0/0
  8274 ;;		Unchanged: 0/0
  8275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8276 ;;      Params:         4       0       0       0       0       0       0       0       0
  8277 ;;      Locals:         9       0       0       0       0       0       0       0       0
  8278 ;;      Temps:          7       0       0       0       0       0       0       0       0
  8279 ;;      Totals:        20       0       0       0       0       0       0       0       0
  8280 ;;Total ram usage:       20 bytes
  8281 ;; Hardware stack levels used:    1
  8282 ;; Hardware stack levels required when called:    3
  8283 ;; This function calls:
  8284 ;;		_mem_set
  8285 ;; This function is called by:
  8286 ;;		_follow_path
  8287 ;; This function uses a non-reentrant model
  8288 ;;
  8289                           
  8290                           	psect	text27
  8291  00267C                     __ptext27:
  8292                           	opt stack 0
  8293  00267C                     _create_name:
  8294                           	opt stack 23
  8295                           
  8296                           ;pff.c: 285: BYTE c, d, ni, si, i, *sfn;
  8297                           ;pff.c: 286: const char *p;
  8298                           ;pff.c: 289: sfn = dj->fn;
  8299                           
  8300                           ;incstack = 0
  8301  00267C  EE20 F002          	lfsr	2,2
  8302  002680  5018               	movf	create_name@dj,w,c
  8303  002682  26D9               	addwf	fsr2l,f,c
  8304  002684  5019               	movf	create_name@dj+1,w,c
  8305  002686  22DA               	addwfc	fsr2h,f,c
  8306  002688  CFDE F028          	movff	postinc2,create_name@sfn
  8307  00268C  CFDD F029          	movff	postdec2,create_name@sfn+1
  8308                           
  8309                           ;pff.c: 290: mem_set(sfn, ' ', 11);
  8310  002690  C029  F011         	movff	create_name@sfn+1,mem_set@dst+1
  8311  002694  C028  F010         	movff	create_name@sfn,mem_set@dst
  8312  002698  0E00               	movlw	0
  8313  00269A  6E13               	movwf	mem_set@val+1,c
  8314  00269C  0E20               	movlw	32
  8315  00269E  6E12               	movwf	mem_set@val,c
  8316  0026A0  0E00               	movlw	0
  8317  0026A2  6E15               	movwf	mem_set@cnt+1,c
  8318  0026A4  0E0B               	movlw	11
  8319  0026A6  6E14               	movwf	mem_set@cnt,c
  8320  0026A8  EC3B  F01E         	call	_mem_set	;wreg free
  8321                           
  8322                           ;pff.c: 291: si = i = 0; ni = 8;
  8323  0026AC  0E00               	movlw	0
  8324  0026AE  6E2A               	movwf	create_name@i,c
  8325  0026B0  C02A  F027         	movff	create_name@i,create_name@si
  8326  0026B4  0E08               	movlw	8
  8327  0026B6  6E26               	movwf	create_name@ni,c
  8328                           
  8329                           ;pff.c: 292: p = *path;
  8330  0026B8  C01A  FFD9         	movff	create_name@path,fsr2l
  8331  0026BC  C01B  FFDA         	movff	create_name@path+1,fsr2h
  8332  0026C0  CFDE F024          	movff	postinc2,create_name@p
  8333  0026C4  CFDD F025          	movff	postdec2,create_name@p+1
  8334  0026C8                     l3358:
  8335                           
  8336                           ;pff.c: 294: c = p[si++];
  8337  0026C8  5027               	movf	create_name@si,w,c
  8338  0026CA  0D01               	mullw	1
  8339  0026CC  C024  F01C         	movff	create_name@p,??_create_name
  8340  0026D0  C025  F01D         	movff	create_name@p+1,??_create_name+1
  8341  0026D4  50F3               	movf	prodl,w,c
  8342  0026D6  261C               	addwf	??_create_name,f,c
  8343  0026D8  50F4               	movf	prodh,w,c
  8344  0026DA  221D               	addwfc	??_create_name+1,f,c
  8345  0026DC  C01C  FFF6         	movff	??_create_name,tblptrl
  8346  0026E0  C01D  FFF7         	movff	??_create_name+1,tblptrh
  8347  0026E4  6AF8               	clrf	tblptru,c
  8348  0026E6  0E07               	movlw	(high __ramtop+-1)
  8349  0026E8  64F7               	cpfsgt	tblptrh,c
  8350  0026EA  D003               	bra	u3217
  8351  0026EC  0008               	tblrd		*
  8352  0026EE  50F5               	movf	tablat,w,c
  8353  0026F0  D005               	bra	u3210
  8354  0026F2                     u3217:
  8355  0026F2  CFF6 FFE1          	movff	tblptrl,fsr1l
  8356  0026F6  CFF7 FFE2          	movff	tblptrh,fsr1h
  8357  0026FA  50E7               	movf	indf1,w,c
  8358  0026FC                     u3210:
  8359  0026FC  6E2B               	movwf	create_name@c,c
  8360  0026FE  2A27               	incf	create_name@si,f,c
  8361                           
  8362                           ;pff.c: 295: if (c <= ' ' || c == '/') break;
  8363  002700  0E20               	movlw	32
  8364  002702  642B               	cpfsgt	create_name@c,c
  8365  002704  D085               	goto	l3408
  8366  002706  502B               	movf	create_name@c,w,c
  8367  002708  0A2F               	xorlw	47
  8368  00270A  B4D8               	btfsc	status,2,c
  8369  00270C  D081               	goto	l3408
  8370                           
  8371                           ;pff.c: 296: if (c == '.' || i >= ni) {
  8372  00270E  502B               	movf	create_name@c,w,c
  8373  002710  0A2E               	xorlw	46
  8374  002712  B4D8               	btfsc	status,2,c
  8375  002714  D004               	goto	l3370
  8376  002716  5026               	movf	create_name@ni,w,c
  8377  002718  5C2A               	subwf	create_name@i,w,c
  8378  00271A  A0D8               	btfss	status,0,c
  8379  00271C  D00D               	goto	l3376
  8380  00271E                     l3370:
  8381                           
  8382                           ;pff.c: 297: if (ni != 8 || c != '.') break;
  8383  00271E  5026               	movf	create_name@ni,w,c
  8384  002720  0A08               	xorlw	8
  8385  002722  A4D8               	btfss	status,2,c
  8386  002724  D075               	goto	l3408
  8387  002726  502B               	movf	create_name@c,w,c
  8388  002728  0A2E               	xorlw	46
  8389  00272A  A4D8               	btfss	status,2,c
  8390  00272C  D071               	goto	l3408
  8391                           
  8392                           ;pff.c: 298: i = 8; ni = 11;
  8393  00272E  0E08               	movlw	8
  8394  002730  6E2A               	movwf	create_name@i,c
  8395  002732  0E0B               	movlw	11
  8396  002734  6E26               	movwf	create_name@ni,c
  8397                           
  8398                           ;pff.c: 299: continue;
  8399  002736  D7C8               	goto	l3358
  8400  002738                     l3376:
  8401                           
  8402                           ;pff.c: 300: }
  8403                           ;pff.c: 305: if ((((BYTE)(c) >= 0x81 && (BYTE)(c) <= 0x9F) || ((BYTE)(c) >= 0xE0 && (BYT
      +                          E)(c) <= 0xFC)) && i >= ni - 1) {
  8404  002738  0E80               	movlw	128
  8405  00273A  642B               	cpfsgt	create_name@c,c
  8406  00273C  D003               	goto	l3380
  8407  00273E  0E9F               	movlw	159
  8408  002740  642B               	cpfsgt	create_name@c,c
  8409  002742  D007               	goto	l3384
  8410  002744                     l3380:
  8411  002744  0EDF               	movlw	223
  8412  002746  642B               	cpfsgt	create_name@c,c
  8413  002748  D04E               	goto	l3398
  8414  00274A  0EFD               	movlw	253
  8415  00274C  5C2B               	subwf	create_name@c,w,c
  8416  00274E  B0D8               	btfsc	status,0,c
  8417  002750  D04A               	goto	l3398
  8418  002752                     l3384:
  8419  002752  0EFF               	movlw	255
  8420  002754  6E1C               	movwf	??_create_name& (0+255),c
  8421  002756  0EFF               	movlw	255
  8422  002758  6E1D               	movwf	(??_create_name+1)& (0+255),c
  8423  00275A  5026               	movf	create_name@ni,w,c
  8424  00275C  6E1E               	movwf	(??_create_name+2)& (0+255),c
  8425  00275E  6A1F               	clrf	(??_create_name+3)& (0+255),c
  8426  002760  501C               	movf	??_create_name,w,c
  8427  002762  261E               	addwf	??_create_name+2,f,c
  8428  002764  501D               	movf	??_create_name+1,w,c
  8429  002766  221F               	addwfc	??_create_name+3,f,c
  8430  002768  502A               	movf	create_name@i,w,c
  8431  00276A  6E20               	movwf	(??_create_name+4)& (0+255),c
  8432  00276C  6A21               	clrf	(??_create_name+5)& (0+255),c
  8433  00276E  5021               	movf	??_create_name+5,w,c
  8434  002770  0A80               	xorlw	128
  8435  002772  6E22               	movwf	(??_create_name+6)& (0+255),c
  8436  002774  501E               	movf	??_create_name+2,w,c
  8437  002776  5C20               	subwf	??_create_name+4,w,c
  8438  002778  501F               	movf	??_create_name+3,w,c
  8439  00277A  0A80               	xorlw	128
  8440  00277C  5822               	subwfb	(??_create_name+6)& (0+255),w,c
  8441  00277E  A0D8               	btfss	status,0,c
  8442  002780  D032               	goto	l3398
  8443                           
  8444                           ;pff.c: 306: d = p[si++];
  8445  002782  5027               	movf	create_name@si,w,c
  8446  002784  0D01               	mullw	1
  8447  002786  C024  F01C         	movff	create_name@p,??_create_name
  8448  00278A  C025  F01D         	movff	create_name@p+1,??_create_name+1
  8449  00278E  50F3               	movf	prodl,w,c
  8450  002790  261C               	addwf	??_create_name,f,c
  8451  002792  50F4               	movf	prodh,w,c
  8452  002794  221D               	addwfc	??_create_name+1,f,c
  8453  002796  C01C  FFF6         	movff	??_create_name,tblptrl
  8454  00279A  C01D  FFF7         	movff	??_create_name+1,tblptrh
  8455  00279E  6AF8               	clrf	tblptru,c
  8456  0027A0  0E07               	movlw	(high __ramtop+-1)
  8457  0027A2  64F7               	cpfsgt	tblptrh,c
  8458  0027A4  D003               	bra	u3337
  8459  0027A6  0008               	tblrd		*
  8460  0027A8  50F5               	movf	tablat,w,c
  8461  0027AA  D005               	bra	u3330
  8462  0027AC                     u3337:
  8463  0027AC  CFF6 FFE1          	movff	tblptrl,fsr1l
  8464  0027B0  CFF7 FFE2          	movff	tblptrh,fsr1h
  8465  0027B4  50E7               	movf	indf1,w,c
  8466  0027B6                     u3330:
  8467  0027B6  6E23               	movwf	create_name@d,c
  8468  0027B8  2A27               	incf	create_name@si,f,c
  8469                           
  8470                           ;pff.c: 307: sfn[i++] = c;
  8471  0027BA  502A               	movf	create_name@i,w,c
  8472  0027BC  0D01               	mullw	1
  8473  0027BE  50F3               	movf	prodl,w,c
  8474  0027C0  2428               	addwf	create_name@sfn,w,c
  8475  0027C2  6ED9               	movwf	fsr2l,c
  8476  0027C4  50F4               	movf	prodh,w,c
  8477  0027C6  2029               	addwfc	create_name@sfn+1,w,c
  8478  0027C8  6EDA               	movwf	fsr2h,c
  8479  0027CA  C02B  FFDF         	movff	create_name@c,indf2
  8480  0027CE  2A2A               	incf	create_name@i,f,c
  8481                           
  8482                           ;pff.c: 308: sfn[i++] = d;
  8483  0027D0  502A               	movf	create_name@i,w,c
  8484  0027D2  0D01               	mullw	1
  8485  0027D4  50F3               	movf	prodl,w,c
  8486  0027D6  2428               	addwf	create_name@sfn,w,c
  8487  0027D8  6ED9               	movwf	fsr2l,c
  8488  0027DA  50F4               	movf	prodh,w,c
  8489  0027DC  2029               	addwfc	create_name@sfn+1,w,c
  8490  0027DE  6EDA               	movwf	fsr2h,c
  8491  0027E0  C023  FFDF         	movff	create_name@d,indf2
  8492  0027E4  D013               	goto	L18
  8493  0027E6                     l3398:
  8494                           
  8495                           ;pff.c: 310: if ((((c)>='a')&&((c)<='z'))) c -= 0x20;
  8496  0027E6  0E60               	movlw	96
  8497  0027E8  642B               	cpfsgt	create_name@c,c
  8498  0027EA  D006               	goto	l3404
  8499  0027EC  0E7B               	movlw	123
  8500  0027EE  5C2B               	subwf	create_name@c,w,c
  8501  0027F0  B0D8               	btfsc	status,0,c
  8502  0027F2  D002               	goto	l3404
  8503  0027F4  0E20               	movlw	32
  8504  0027F6  5E2B               	subwf	create_name@c,f,c
  8505  0027F8                     l3404:
  8506                           
  8507                           ;pff.c: 311: sfn[i++] = c;
  8508  0027F8  502A               	movf	create_name@i,w,c
  8509  0027FA  0D01               	mullw	1
  8510  0027FC  50F3               	movf	prodl,w,c
  8511  0027FE  2428               	addwf	create_name@sfn,w,c
  8512  002800  6ED9               	movwf	fsr2l,c
  8513  002802  50F4               	movf	prodh,w,c
  8514  002804  2029               	addwfc	create_name@sfn+1,w,c
  8515  002806  6EDA               	movwf	fsr2h,c
  8516  002808  C02B  FFDF         	movff	create_name@c,indf2
  8517  00280C                     L18:
  8518  00280C  2A2A               	incf	create_name@i,f,c
  8519  00280E  D75C               	goto	l3358
  8520  002810                     l3408:
  8521                           
  8522                           ;pff.c: 314: *path = &p[si];
  8523  002810  5027               	movf	create_name@si,w,c
  8524  002812  0D01               	mullw	1
  8525  002814  C024  F01C         	movff	create_name@p,??_create_name
  8526  002818  C025  F01D         	movff	create_name@p+1,??_create_name+1
  8527  00281C  50F3               	movf	prodl,w,c
  8528  00281E  261C               	addwf	??_create_name,f,c
  8529  002820  50F4               	movf	prodh,w,c
  8530  002822  221D               	addwfc	??_create_name+1,f,c
  8531  002824  C01A  FFD9         	movff	create_name@path,fsr2l
  8532  002828  C01B  FFDA         	movff	create_name@path+1,fsr2h
  8533  00282C  C01C  FFDE         	movff	??_create_name,postinc2
  8534  002830  C01D  FFDD         	movff	??_create_name+1,postdec2
  8535                           
  8536                           ;pff.c: 316: sfn[11] = (c <= ' ') ? 1 : 0;
  8537  002834  EE20 F00B          	lfsr	2,11
  8538  002838  5028               	movf	create_name@sfn,w,c
  8539  00283A  26D9               	addwf	fsr2l,f,c
  8540  00283C  5029               	movf	create_name@sfn+1,w,c
  8541  00283E  22DA               	addwfc	fsr2h,f,c
  8542  002840  0E20               	movlw	32
  8543  002842  6AF3               	clrf	prodl,c
  8544  002844  642B               	cpfsgt	create_name@c,c
  8545  002846  2AF3               	incf	prodl,f,c
  8546  002848  CFF3 F01C          	movff	prodl,??_create_name
  8547  00284C  501C               	movf	??_create_name,w,c
  8548  00284E  6EDF               	movwf	indf2,c
  8549                           
  8550                           ;pff.c: 318: return FR_OK;
  8551  002850  0E00               	movlw	0
  8552  002852  0012               	return	
  8553  002854                     __end_of_create_name:
  8554                           	opt stack 0
  8555                           tblptru	equ	0xFF8
  8556                           tblptrh	equ	0xFF7
  8557                           tblptrl	equ	0xFF6
  8558                           tablat	equ	0xFF5
  8559                           prodh	equ	0xFF4
  8560                           prodl	equ	0xFF3
  8561                           intcon	equ	0xFF2
  8562                           postinc0	equ	0xFEE
  8563                           wreg	equ	0xFE8
  8564                           indf1	equ	0xFE7
  8565                           postinc1	equ	0xFE6
  8566                           postdec1	equ	0xFE5
  8567                           fsr1h	equ	0xFE2
  8568                           fsr1l	equ	0xFE1
  8569                           indf2	equ	0xFDF
  8570                           postinc2	equ	0xFDE
  8571                           postdec2	equ	0xFDD
  8572                           fsr2h	equ	0xFDA
  8573                           fsr2l	equ	0xFD9
  8574                           status	equ	0xFD8
  8575                           
  8576 ;; *************** function _mem_set *****************
  8577 ;; Defined at:
  8578 ;;		line 44 in file "../../../PIC18F/pff.c"
  8579 ;; Parameters:    Size  Location     Type
  8580 ;;  dst             2   15[COMRAM] PTR void 
  8581 ;;		 -> pf_readdir@sp(12), pf_opendir@sp(12), pf_open@sp(12), 
  8582 ;;  val             2   17[COMRAM] int 
  8583 ;;  cnt             2   19[COMRAM] int 
  8584 ;; Auto vars:     Size  Location     Type
  8585 ;;  d               2   21[COMRAM] PTR unsigned char 
  8586 ;;		 -> pf_readdir@sp(12), pf_opendir@sp(12), pf_open@sp(12), 
  8587 ;; Return value:  Size  Location     Type
  8588 ;;		None               void
  8589 ;; Registers used:
  8590 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8591 ;; Tracked objects:
  8592 ;;		On entry : 0/0
  8593 ;;		On exit  : 0/0
  8594 ;;		Unchanged: 0/0
  8595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8596 ;;      Params:         6       0       0       0       0       0       0       0       0
  8597 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8598 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8599 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8600 ;;Total ram usage:        8 bytes
  8601 ;; Hardware stack levels used:    1
  8602 ;; Hardware stack levels required when called:    2
  8603 ;; This function calls:
  8604 ;;		Nothing
  8605 ;; This function is called by:
  8606 ;;		_create_name
  8607 ;; This function uses a non-reentrant model
  8608 ;;
  8609                           
  8610                           	psect	text28
  8611  003C76                     __ptext28:
  8612                           	opt stack 0
  8613  003C76                     _mem_set:
  8614                           	opt stack 23
  8615                           
  8616                           ;pff.c: 45: char *d = (char*)dst;
  8617                           
  8618                           ;incstack = 0
  8619  003C76  C011  F017         	movff	mem_set@dst+1,mem_set@d+1
  8620  003C7A  C010  F016         	movff	mem_set@dst,mem_set@d
  8621                           
  8622                           ;pff.c: 46: while (cnt--) *d++ = (char)val;
  8623  003C7E  D008               	goto	l3222
  8624  003C80                     l3218:
  8625  003C80  C016  FFD9         	movff	mem_set@d,fsr2l
  8626  003C84  C017  FFDA         	movff	mem_set@d+1,fsr2h
  8627  003C88  C012  FFDF         	movff	mem_set@val,indf2
  8628  003C8C  4A16               	infsnz	mem_set@d,f,c
  8629  003C8E  2A17               	incf	mem_set@d+1,f,c
  8630  003C90                     l3222:
  8631  003C90  0614               	decf	mem_set@cnt,f,c
  8632  003C92  A0D8               	btfss	status,0,c
  8633  003C94  0615               	decf	mem_set@cnt+1,f,c
  8634  003C96  2814               	incf	mem_set@cnt& (0+255),w,c
  8635  003C98  B4D8               	btfsc	status,2,c
  8636  003C9A  2815               	incf	(mem_set@cnt+1)& (0+255),w,c
  8637  003C9C  B4D8               	btfsc	status,2,c
  8638  003C9E  0012               	return	
  8639  003CA0  D7EF               	goto	l3218
  8640  003CA2                     __end_of_mem_set:
  8641                           	opt stack 0
  8642                           tblptru	equ	0xFF8
  8643                           tblptrh	equ	0xFF7
  8644                           tblptrl	equ	0xFF6
  8645                           tablat	equ	0xFF5
  8646                           prodh	equ	0xFF4
  8647                           prodl	equ	0xFF3
  8648                           intcon	equ	0xFF2
  8649                           postinc0	equ	0xFEE
  8650                           wreg	equ	0xFE8
  8651                           indf1	equ	0xFE7
  8652                           postinc1	equ	0xFE6
  8653                           postdec1	equ	0xFE5
  8654                           fsr1h	equ	0xFE2
  8655                           fsr1l	equ	0xFE1
  8656                           indf2	equ	0xFDF
  8657                           postinc2	equ	0xFDE
  8658                           postdec2	equ	0xFDD
  8659                           fsr2h	equ	0xFDA
  8660                           fsr2l	equ	0xFD9
  8661                           status	equ	0xFD8
  8662                           
  8663 ;; *************** function _pf_mount *****************
  8664 ;; Defined at:
  8665 ;;		line 456 in file "../../../PIC18F/pff.c"
  8666 ;; Parameters:    Size  Location     Type
  8667 ;;  fs              2   50[COMRAM] PTR struct _FATFS_
  8668 ;;		 -> Fs(44), 
  8669 ;; Auto vars:     Size  Location     Type
  8670 ;;  buf            36    0[BANK0 ] unsigned char [36]
  8671 ;;  fsize           4   48[BANK0 ] unsigned long 
  8672 ;;  bsect           4   44[BANK0 ] unsigned long 
  8673 ;;  mclst           4   40[BANK0 ] unsigned long 
  8674 ;;  tsect           4   36[BANK0 ] unsigned long 
  8675 ;;  fmt             1   52[BANK0 ] unsigned char 
  8676 ;; Return value:  Size  Location     Type
  8677 ;;                  1    wreg      enum E48
  8678 ;; Registers used:
  8679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8680 ;; Tracked objects:
  8681 ;;		On entry : 0/0
  8682 ;;		On exit  : 0/0
  8683 ;;		Unchanged: 0/0
  8684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8685 ;;      Params:         2       0       0       0       0       0       0       0       0
  8686 ;;      Locals:         0      53       0       0       0       0       0       0       0
  8687 ;;      Temps:         16       0       0       0       0       0       0       0       0
  8688 ;;      Totals:        18      53       0       0       0       0       0       0       0
  8689 ;;Total ram usage:       71 bytes
  8690 ;; Hardware stack levels used:    1
  8691 ;; Hardware stack levels required when called:    7
  8692 ;; This function calls:
  8693 ;;		___lldiv
  8694 ;;		___lmul
  8695 ;;		_check_fs
  8696 ;;		_disk_initialize
  8697 ;;		_disk_readp
  8698 ;; This function is called by:
  8699 ;;		_main
  8700 ;; This function uses a non-reentrant model
  8701 ;;
  8702                           
  8703                           	psect	text29
  8704  0012CC                     __ptext29:
  8705                           	opt stack 0
  8706  0012CC                     _pf_mount:
  8707                           	opt stack 22
  8708                           
  8709                           ;pff.c: 460: BYTE fmt, buf[36];
  8710                           ;pff.c: 461: DWORD bsect, fsize, tsect, mclst;
  8711                           ;pff.c: 464: FatFs = 0;
  8712                           
  8713                           ;incstack = 0
  8714  0012CC  0E00               	movlw	0
  8715  0012CE  6E49               	movwf	_FatFs+1,c
  8716  0012D0  0E00               	movlw	0
  8717  0012D2  6E48               	movwf	_FatFs,c
  8718                           
  8719                           ;pff.c: 465: if (!fs) return FR_OK;
  8720  0012D4  5034               	movf	pf_mount@fs+1,w,c
  8721  0012D6  1033               	iorwf	pf_mount@fs,w,c
  8722  0012D8  B4D8               	btfsc	status,2,c
  8723  0012DA  D255               	goto	L19
  8724                           
  8725                           ;pff.c: 467: if (disk_initialize() & 0x01)
  8726  0012DC  EC2A  F014         	call	_disk_initialize	;wreg free
  8727  0012E0  6E35               	movwf	??_pf_mount& (0+255),c
  8728  0012E2  A035               	btfss	??_pf_mount,0,c
  8729  0012E4  D002               	goto	l5646
  8730                           
  8731                           ;pff.c: 468: return FR_NOT_READY;
  8732  0012E6  0E02               	movlw	2
  8733  0012E8  D24F               	goto	l151
  8734  0012EA                     l5646:
  8735                           
  8736                           ;pff.c: 471: bsect = 0;
  8737  0012EA  0E00               	movlw	0
  8738  0012EC  0100               	movlb	0	; () banked
  8739  0012EE  6F8C               	movwf	pf_mount@bsect& (0+255),b
  8740  0012F0  0E00               	movlw	0
  8741  0012F2  0100               	movlb	0	; () banked
  8742  0012F4  6F8D               	movwf	(pf_mount@bsect+1)& (0+255),b
  8743  0012F6  0E00               	movlw	0
  8744  0012F8  0100               	movlb	0	; () banked
  8745  0012FA  6F8E               	movwf	(pf_mount@bsect+2)& (0+255),b
  8746  0012FC  0E00               	movlw	0
  8747  0012FE  0100               	movlb	0	; () banked
  8748  001300  6F8F               	movwf	(pf_mount@bsect+3)& (0+255),b
  8749                           
  8750                           ; BSR set to: 0
  8751                           ;pff.c: 472: fmt = check_fs(buf, bsect);
  8752  001302  0100               	movlb	0	; () banked
  8753  001304  0E00               	movlw	high pf_mount@buf
  8754  001306  6E2E               	movwf	check_fs@buf+1,c
  8755  001308  0100               	movlb	0	; () banked
  8756  00130A  0E60               	movlw	low pf_mount@buf
  8757  00130C  6E2D               	movwf	check_fs@buf,c
  8758  00130E  C08C  F02F         	movff	pf_mount@bsect,check_fs@sect
  8759  001312  C08D  F030         	movff	pf_mount@bsect+1,check_fs@sect+1
  8760  001316  C08E  F031         	movff	pf_mount@bsect+2,check_fs@sect+2
  8761  00131A  C08F  F032         	movff	pf_mount@bsect+3,check_fs@sect+3
  8762  00131E  EC8A  F019         	call	_check_fs	;wreg free
  8763  001322  0100               	movlb	0	; () banked
  8764  001324  6F94               	movwf	pf_mount@fmt& (0+255),b
  8765                           
  8766                           ; BSR set to: 0
  8767                           ;pff.c: 473: if (fmt == 1) {
  8768  001326  0100               	movlb	0	; () banked
  8769  001328  0594               	decf	pf_mount@fmt& (0+255),w,b
  8770  00132A  A4D8               	btfss	status,2,c
  8771  00132C  D03B               	goto	l5662
  8772                           
  8773                           ; BSR set to: 0
  8774                           ;pff.c: 475: if (disk_readp(buf, bsect, 446, 16)) {
  8775  00132E  0100               	movlb	0	; () banked
  8776  001330  0E00               	movlw	high pf_mount@buf
  8777  001332  6E1E               	movwf	disk_readp@buff+1,c
  8778  001334  0100               	movlb	0	; () banked
  8779  001336  0E60               	movlw	low pf_mount@buf
  8780  001338  6E1D               	movwf	disk_readp@buff,c
  8781  00133A  C08C  F01F         	movff	pf_mount@bsect,disk_readp@lba
  8782  00133E  C08D  F020         	movff	pf_mount@bsect+1,disk_readp@lba+1
  8783  001342  C08E  F021         	movff	pf_mount@bsect+2,disk_readp@lba+2
  8784  001346  C08F  F022         	movff	pf_mount@bsect+3,disk_readp@lba+3
  8785  00134A  0E01               	movlw	1
  8786  00134C  6E24               	movwf	disk_readp@ofs+1,c
  8787  00134E  0EBE               	movlw	190
  8788  001350  6E23               	movwf	disk_readp@ofs,c
  8789  001352  0E00               	movlw	0
  8790  001354  6E26               	movwf	disk_readp@cnt+1,c
  8791  001356  0E10               	movlw	16
  8792  001358  6E25               	movwf	disk_readp@cnt,c
  8793  00135A  EC71  F01A         	call	_disk_readp	;wreg free
  8794  00135E  0900               	iorlw	0
  8795  001360  B4D8               	btfsc	status,2,c
  8796  001362  D002               	goto	l5656
  8797                           
  8798                           ;pff.c: 476: fmt = 3;
  8799  001364  0E03               	movlw	3
  8800  001366  D01C               	goto	L20
  8801  001368                     l5656:
  8802                           
  8803                           ;pff.c: 478: if (buf[4]) {
  8804  001368  0100               	movlb	0	; () banked
  8805  00136A  5164               	movf	(pf_mount@buf+4)& (0+255),w,b
  8806  00136C  B4D8               	btfsc	status,2,c
  8807  00136E  D01A               	goto	l5662
  8808                           
  8809                           ; BSR set to: 0
  8810                           ;pff.c: 479: bsect = (DWORD)(*(DWORD*)(BYTE*)(&buf[8]));
  8811  001370  C068  F08C         	movff	pf_mount@buf+8,pf_mount@bsect
  8812  001374  C069  F08D         	movff	pf_mount@buf+9,pf_mount@bsect+1
  8813  001378  C06A  F08E         	movff	pf_mount@buf+10,pf_mount@bsect+2
  8814  00137C  C06B  F08F         	movff	pf_mount@buf+11,pf_mount@bsect+3
  8815                           
  8816                           ; BSR set to: 0
  8817                           ;pff.c: 480: fmt = check_fs(buf, bsect);
  8818  001380  0100               	movlb	0	; () banked
  8819  001382  0E00               	movlw	high pf_mount@buf
  8820  001384  6E2E               	movwf	check_fs@buf+1,c
  8821  001386  0100               	movlb	0	; () banked
  8822  001388  0E60               	movlw	low pf_mount@buf
  8823  00138A  6E2D               	movwf	check_fs@buf,c
  8824  00138C  C08C  F02F         	movff	pf_mount@bsect,check_fs@sect
  8825  001390  C08D  F030         	movff	pf_mount@bsect+1,check_fs@sect+1
  8826  001394  C08E  F031         	movff	pf_mount@bsect+2,check_fs@sect+2
  8827  001398  C08F  F032         	movff	pf_mount@bsect+3,check_fs@sect+3
  8828  00139C  EC8A  F019         	call	_check_fs	;wreg free
  8829  0013A0                     L20:
  8830  0013A0  0100               	movlb	0	; () banked
  8831  0013A2  6F94               	movwf	pf_mount@fmt& (0+255),b
  8832  0013A4                     l5662:
  8833                           
  8834                           ; BSR set to: 0
  8835                           ;pff.c: 481: }
  8836                           ;pff.c: 482: }
  8837                           ;pff.c: 483: }
  8838                           ;pff.c: 484: if (fmt == 3) return FR_DISK_ERR;
  8839  0013A4  0100               	movlb	0	; () banked
  8840  0013A6  5194               	movf	pf_mount@fmt& (0+255),w,b
  8841  0013A8  0A03               	xorlw	3
  8842  0013AA  B4D8               	btfsc	status,2,c
  8843  0013AC  D021               	goto	u6630
  8844                           
  8845                           ; BSR set to: 0
  8846                           ;pff.c: 485: if (fmt) return FR_NO_FILESYSTEM;
  8847                           
  8848                           ; BSR set to: 0
  8849                           
  8850                           ; BSR set to: 0
  8851                           
  8852                           ; BSR set to: 0
  8853  0013AE  0100               	movlb	0	; () banked
  8854  0013B0  5194               	movf	pf_mount@fmt& (0+255),w,b
  8855  0013B2  B4D8               	btfsc	status,2,c
  8856  0013B4  D002               	goto	l5674
  8857                           
  8858                           ; BSR set to: 0
  8859  0013B6  0E07               	movlw	7
  8860  0013B8  D1E7               	goto	l151
  8861  0013BA                     l5674:
  8862                           
  8863                           ; BSR set to: 0
  8864                           ;pff.c: 488: if (disk_readp(buf, bsect, 13, sizeof(buf))) return FR_DISK_ERR;
  8865  0013BA  0100               	movlb	0	; () banked
  8866  0013BC  0E00               	movlw	high pf_mount@buf
  8867  0013BE  6E1E               	movwf	disk_readp@buff+1,c
  8868  0013C0  0100               	movlb	0	; () banked
  8869  0013C2  0E60               	movlw	low pf_mount@buf
  8870  0013C4  6E1D               	movwf	disk_readp@buff,c
  8871  0013C6  C08C  F01F         	movff	pf_mount@bsect,disk_readp@lba
  8872  0013CA  C08D  F020         	movff	pf_mount@bsect+1,disk_readp@lba+1
  8873  0013CE  C08E  F021         	movff	pf_mount@bsect+2,disk_readp@lba+2
  8874  0013D2  C08F  F022         	movff	pf_mount@bsect+3,disk_readp@lba+3
  8875  0013D6  0E00               	movlw	0
  8876  0013D8  6E24               	movwf	disk_readp@ofs+1,c
  8877  0013DA  0E0D               	movlw	13
  8878  0013DC  6E23               	movwf	disk_readp@ofs,c
  8879  0013DE  0E00               	movlw	0
  8880  0013E0  6E26               	movwf	disk_readp@cnt+1,c
  8881  0013E2  0E24               	movlw	36
  8882  0013E4  6E25               	movwf	disk_readp@cnt,c
  8883  0013E6  EC71  F01A         	call	_disk_readp	;wreg free
  8884  0013EA  0900               	iorlw	0
  8885  0013EC  B4D8               	btfsc	status,2,c
  8886  0013EE  D002               	goto	l5680
  8887  0013F0                     u6630:
  8888  0013F0  0E01               	movlw	1
  8889  0013F2  D1CA               	goto	l151
  8890  0013F4                     l5680:
  8891                           
  8892                           ;pff.c: 490: fsize = (WORD)(*(WORD*)(BYTE*)(buf+22-13));
  8893  0013F4  0100               	movlb	0	; () banked
  8894  0013F6  C069  F090         	movff	pf_mount@buf+9,pf_mount@fsize
  8895  0013FA  0100               	movlb	0	; () banked
  8896  0013FC  C06A  F091         	movff	pf_mount@buf+10,pf_mount@fsize+1
  8897  001400  0100               	movlb	0	; () banked
  8898  001402  6B92               	clrf	(pf_mount@fsize+2)& (0+255),b
  8899  001404  0100               	movlb	0	; () banked
  8900  001406  6B93               	clrf	(pf_mount@fsize+3)& (0+255),b
  8901                           
  8902                           ; BSR set to: 0
  8903                           ;pff.c: 491: if (!fsize) fsize = (DWORD)(*(DWORD*)(BYTE*)(buf+36-13));
  8904  001408  0100               	movlb	0	; () banked
  8905  00140A  5193               	movf	(pf_mount@fsize+3)& (0+255),w,b
  8906  00140C  1190               	iorwf	pf_mount@fsize& (0+255),w,b
  8907  00140E  1191               	iorwf	(pf_mount@fsize+1)& (0+255),w,b
  8908  001410  1192               	iorwf	(pf_mount@fsize+2)& (0+255),w,b
  8909  001412  A4D8               	btfss	status,2,c
  8910  001414  D008               	goto	l5686
  8911                           
  8912                           ; BSR set to: 0
  8913  001416  C077  F090         	movff	pf_mount@buf+23,pf_mount@fsize
  8914  00141A  C078  F091         	movff	pf_mount@buf+24,pf_mount@fsize+1
  8915  00141E  C079  F092         	movff	pf_mount@buf+25,pf_mount@fsize+2
  8916  001422  C07A  F093         	movff	pf_mount@buf+26,pf_mount@fsize+3
  8917  001426                     l5686:
  8918                           
  8919                           ; BSR set to: 0
  8920                           ;pff.c: 493: fsize *= buf[16-13];
  8921  001426  C090  F010         	movff	pf_mount@fsize,___lmul@multiplier
  8922  00142A  C091  F011         	movff	pf_mount@fsize+1,___lmul@multiplier+1
  8923  00142E  C092  F012         	movff	pf_mount@fsize+2,___lmul@multiplier+2
  8924  001432  C093  F013         	movff	pf_mount@fsize+3,___lmul@multiplier+3
  8925  001436  0100               	movlb	0	; () banked
  8926  001438  5163               	movf	(pf_mount@buf+3)& (0+255),w,b
  8927  00143A  6E14               	movwf	___lmul@multiplicand,c
  8928  00143C  6A15               	clrf	___lmul@multiplicand+1,c
  8929  00143E  6A16               	clrf	___lmul@multiplicand+2,c
  8930  001440  6A17               	clrf	___lmul@multiplicand+3,c
  8931  001442  EC7E  F01D         	call	___lmul	;wreg free
  8932  001446  C010  F090         	movff	?___lmul,pf_mount@fsize
  8933  00144A  C011  F091         	movff	?___lmul+1,pf_mount@fsize+1
  8934  00144E  C012  F092         	movff	?___lmul+2,pf_mount@fsize+2
  8935  001452  C013  F093         	movff	?___lmul+3,pf_mount@fsize+3
  8936                           
  8937                           ;pff.c: 494: fs->fatbase = bsect + (WORD)(*(WORD*)(BYTE*)(buf+14-13));
  8938  001456  0100               	movlb	0	; () banked
  8939  001458  5161               	movf	(pf_mount@buf+1)& (0+255),w,b
  8940  00145A  0100               	movlb	0	; () banked
  8941  00145C  258C               	addwf	pf_mount@bsect& (0+255),w,b
  8942  00145E  6E35               	movwf	??_pf_mount& (0+255),c
  8943  001460  0100               	movlb	0	; () banked
  8944  001462  5162               	movf	(pf_mount@buf+2)& (0+255),w,b
  8945  001464  0100               	movlb	0	; () banked
  8946  001466  218D               	addwfc	(pf_mount@bsect+1)& (0+255),w,b
  8947  001468  6E36               	movwf	(??_pf_mount+1)& (0+255),c
  8948  00146A  0E00               	movlw	0
  8949  00146C  0100               	movlb	0	; () banked
  8950  00146E  218E               	addwfc	(pf_mount@bsect+2)& (0+255),w,b
  8951  001470  6E37               	movwf	(??_pf_mount+2)& (0+255),c
  8952  001472  0E00               	movlw	0
  8953  001474  0100               	movlb	0	; () banked
  8954  001476  218F               	addwfc	(pf_mount@bsect+3)& (0+255),w,b
  8955  001478  6E38               	movwf	(??_pf_mount+3)& (0+255),c
  8956  00147A  EE20 F00C          	lfsr	2,12
  8957  00147E  5033               	movf	pf_mount@fs,w,c
  8958  001480  26D9               	addwf	fsr2l,f,c
  8959  001482  5034               	movf	pf_mount@fs+1,w,c
  8960  001484  22DA               	addwfc	fsr2h,f,c
  8961  001486  C035  FFDE         	movff	??_pf_mount,postinc2
  8962  00148A  C036  FFDE         	movff	??_pf_mount+1,postinc2
  8963  00148E  C037  FFDE         	movff	??_pf_mount+2,postinc2
  8964  001492  C038  FFDD         	movff	??_pf_mount+3,postdec2
  8965  001496  06D9               	decf	fsr2l,f,c
  8966  001498  06D9               	decf	fsr2l,f,c
  8967                           
  8968                           ; BSR set to: 0
  8969                           ;pff.c: 495: fs->csize = buf[13-13];
  8970  00149A  EE20 F001          	lfsr	2,1
  8971  00149E  5033               	movf	pf_mount@fs,w,c
  8972  0014A0  26D9               	addwf	fsr2l,f,c
  8973  0014A2  5034               	movf	pf_mount@fs+1,w,c
  8974  0014A4  22DA               	addwfc	fsr2h,f,c
  8975  0014A6  0100               	movlb	0	; () banked
  8976  0014A8  C060  FFDF         	movff	pf_mount@buf,indf2
  8977                           
  8978                           ; BSR set to: 0
  8979                           ;pff.c: 496: fs->n_rootdir = (WORD)(*(WORD*)(BYTE*)(buf+17-13));
  8980  0014AC  EE20 F004          	lfsr	2,4
  8981  0014B0  5033               	movf	pf_mount@fs,w,c
  8982  0014B2  26D9               	addwf	fsr2l,f,c
  8983  0014B4  5034               	movf	pf_mount@fs+1,w,c
  8984  0014B6  22DA               	addwfc	fsr2h,f,c
  8985  0014B8  0100               	movlb	0	; () banked
  8986  0014BA  C064  FFDE         	movff	pf_mount@buf+4,postinc2
  8987  0014BE  0100               	movlb	0	; () banked
  8988  0014C0  C065  FFDD         	movff	pf_mount@buf+5,postdec2
  8989                           
  8990                           ; BSR set to: 0
  8991                           ;pff.c: 497: tsect = (WORD)(*(WORD*)(BYTE*)(buf+19-13));
  8992  0014C4  0100               	movlb	0	; () banked
  8993  0014C6  C066  F084         	movff	pf_mount@buf+6,pf_mount@tsect
  8994  0014CA  0100               	movlb	0	; () banked
  8995  0014CC  C067  F085         	movff	pf_mount@buf+7,pf_mount@tsect+1
  8996  0014D0  0100               	movlb	0	; () banked
  8997  0014D2  6B86               	clrf	(pf_mount@tsect+2)& (0+255),b
  8998  0014D4  0100               	movlb	0	; () banked
  8999  0014D6  6B87               	clrf	(pf_mount@tsect+3)& (0+255),b
  9000                           
  9001                           ; BSR set to: 0
  9002                           ;pff.c: 498: if (!tsect) tsect = (DWORD)(*(DWORD*)(BYTE*)(buf+32-13));
  9003  0014D8  0100               	movlb	0	; () banked
  9004  0014DA  5187               	movf	(pf_mount@tsect+3)& (0+255),w,b
  9005  0014DC  1184               	iorwf	pf_mount@tsect& (0+255),w,b
  9006  0014DE  1185               	iorwf	(pf_mount@tsect+1)& (0+255),w,b
  9007  0014E0  1186               	iorwf	(pf_mount@tsect+2)& (0+255),w,b
  9008  0014E2  A4D8               	btfss	status,2,c
  9009  0014E4  D008               	goto	l5700
  9010                           
  9011                           ; BSR set to: 0
  9012  0014E6  C073  F084         	movff	pf_mount@buf+19,pf_mount@tsect
  9013  0014EA  C074  F085         	movff	pf_mount@buf+20,pf_mount@tsect+1
  9014  0014EE  C075  F086         	movff	pf_mount@buf+21,pf_mount@tsect+2
  9015  0014F2  C076  F087         	movff	pf_mount@buf+22,pf_mount@tsect+3
  9016  0014F6                     l5700:
  9017                           
  9018                           ; BSR set to: 0
  9019                           ;pff.c: 499: mclst = (tsect
  9020                           ;pff.c: 500: - (WORD)(*(WORD*)(BYTE*)(buf+14-13)) - fsize - fs->n_rootdir / 16
  9021                           ;pff.c: 501: ) / fs->csize + 2;
  9022  0014F6  EE20 F004          	lfsr	2,4
  9023  0014FA  5033               	movf	pf_mount@fs,w,c
  9024  0014FC  26D9               	addwf	fsr2l,f,c
  9025  0014FE  5034               	movf	pf_mount@fs+1,w,c
  9026  001500  22DA               	addwfc	fsr2h,f,c
  9027  001502  CFDE F035          	movff	postinc2,??_pf_mount
  9028  001506  CFDD F036          	movff	postdec2,??_pf_mount+1
  9029  00150A  0E04               	movlw	4
  9030  00150C  6E37               	movwf	(??_pf_mount+2)& (0+255),c
  9031  00150E                     u6665:
  9032  00150E  90D8               	bcf	status,0,c
  9033  001510  3236               	rrcf	??_pf_mount+1,f,c
  9034  001512  3235               	rrcf	??_pf_mount,f,c
  9035  001514  2E37               	decfsz	(??_pf_mount+2)& (0+255),f,c
  9036  001516  D7FB               	goto	u6665
  9037  001518  0100               	movlb	0	; () banked
  9038  00151A  5161               	movf	(pf_mount@buf+1)& (0+255),w,b
  9039  00151C  2435               	addwf	??_pf_mount,w,c
  9040  00151E  6E38               	movwf	(??_pf_mount+3)& (0+255),c
  9041  001520  0100               	movlb	0	; () banked
  9042  001522  5162               	movf	(pf_mount@buf+2)& (0+255),w,b
  9043  001524  2036               	addwfc	??_pf_mount+1,w,c
  9044  001526  6E39               	movwf	(??_pf_mount+4)& (0+255),c
  9045  001528  6A3A               	clrf	(??_pf_mount+5)& (0+255),c
  9046  00152A  B0D8               	btfsc	status,0,c
  9047  00152C  2A3A               	incf	(??_pf_mount+5)& (0+255),f,c
  9048  00152E  6A3B               	clrf	(??_pf_mount+6)& (0+255),c
  9049  001530  0100               	movlb	0	; () banked
  9050  001532  5190               	movf	pf_mount@fsize& (0+255),w,b
  9051  001534  2438               	addwf	??_pf_mount+3,w,c
  9052  001536  6E3C               	movwf	(??_pf_mount+7)& (0+255),c
  9053  001538  0100               	movlb	0	; () banked
  9054  00153A  5191               	movf	(pf_mount@fsize+1)& (0+255),w,b
  9055  00153C  2039               	addwfc	??_pf_mount+4,w,c
  9056  00153E  6E3D               	movwf	(??_pf_mount+8)& (0+255),c
  9057  001540  0100               	movlb	0	; () banked
  9058  001542  5192               	movf	(pf_mount@fsize+2)& (0+255),w,b
  9059  001544  203A               	addwfc	??_pf_mount+5,w,c
  9060  001546  6E3E               	movwf	(??_pf_mount+9)& (0+255),c
  9061  001548  0100               	movlb	0	; () banked
  9062  00154A  5193               	movf	(pf_mount@fsize+3)& (0+255),w,b
  9063  00154C  203B               	addwfc	??_pf_mount+6,w,c
  9064  00154E  6E3F               	movwf	(??_pf_mount+10)& (0+255),c
  9065  001550  1E3C               	comf	??_pf_mount+7,f,c
  9066  001552  1E3D               	comf	??_pf_mount+8,f,c
  9067  001554  1E3E               	comf	??_pf_mount+9,f,c
  9068  001556  1E3F               	comf	??_pf_mount+10,f,c
  9069  001558  2A3C               	incf	??_pf_mount+7,f,c
  9070  00155A  0E00               	movlw	0
  9071  00155C  223D               	addwfc	??_pf_mount+8,f,c
  9072  00155E  223E               	addwfc	??_pf_mount+9,f,c
  9073  001560  223F               	addwfc	??_pf_mount+10,f,c
  9074  001562  0100               	movlb	0	; () banked
  9075  001564  5184               	movf	pf_mount@tsect& (0+255),w,b
  9076  001566  243C               	addwf	??_pf_mount+7,w,c
  9077  001568  6E10               	movwf	___lldiv@dividend,c
  9078  00156A  0100               	movlb	0	; () banked
  9079  00156C  5185               	movf	(pf_mount@tsect+1)& (0+255),w,b
  9080  00156E  203D               	addwfc	??_pf_mount+8,w,c
  9081  001570  6E11               	movwf	___lldiv@dividend+1,c
  9082  001572  0100               	movlb	0	; () banked
  9083  001574  5186               	movf	(pf_mount@tsect+2)& (0+255),w,b
  9084  001576  203E               	addwfc	??_pf_mount+9,w,c
  9085  001578  6E12               	movwf	___lldiv@dividend+2,c
  9086  00157A  0100               	movlb	0	; () banked
  9087  00157C  5187               	movf	(pf_mount@tsect+3)& (0+255),w,b
  9088  00157E  203F               	addwfc	??_pf_mount+10,w,c
  9089  001580  6E13               	movwf	___lldiv@dividend+3,c
  9090  001582  EE20 F001          	lfsr	2,1
  9091  001586  5033               	movf	pf_mount@fs,w,c
  9092  001588  26D9               	addwf	fsr2l,f,c
  9093  00158A  5034               	movf	pf_mount@fs+1,w,c
  9094  00158C  22DA               	addwfc	fsr2h,f,c
  9095  00158E  50DF               	movf	indf2,w,c
  9096  001590  6E40               	movwf	(??_pf_mount+11)& (0+255),c
  9097  001592  5040               	movf	??_pf_mount+11,w,c
  9098  001594  6E14               	movwf	___lldiv@divisor,c
  9099  001596  6A15               	clrf	___lldiv@divisor+1,c
  9100  001598  6A16               	clrf	___lldiv@divisor+2,c
  9101  00159A  6A17               	clrf	___lldiv@divisor+3,c
  9102  00159C  EC73  F01C         	call	___lldiv	;wreg free
  9103  0015A0  C010  F041         	movff	?___lldiv,??_pf_mount+12
  9104  0015A4  C011  F042         	movff	?___lldiv+1,??_pf_mount+13
  9105  0015A8  C012  F043         	movff	?___lldiv+2,??_pf_mount+14
  9106  0015AC  C013  F044         	movff	?___lldiv+3,??_pf_mount+15
  9107  0015B0  0E02               	movlw	2
  9108  0015B2  2441               	addwf	??_pf_mount+12,w,c
  9109  0015B4  0100               	movlb	0	; () banked
  9110  0015B6  6F88               	movwf	pf_mount@mclst& (0+255),b
  9111  0015B8  0E00               	movlw	0
  9112  0015BA  2042               	addwfc	??_pf_mount+13,w,c
  9113  0015BC  0100               	movlb	0	; () banked
  9114  0015BE  6F89               	movwf	(pf_mount@mclst+1)& (0+255),b
  9115  0015C0  0E00               	movlw	0
  9116  0015C2  2043               	addwfc	??_pf_mount+14,w,c
  9117  0015C4  0100               	movlb	0	; () banked
  9118  0015C6  6F8A               	movwf	(pf_mount@mclst+2)& (0+255),b
  9119  0015C8  0E00               	movlw	0
  9120  0015CA  2044               	addwfc	??_pf_mount+15,w,c
  9121  0015CC  0100               	movlb	0	; () banked
  9122  0015CE  6F8B               	movwf	(pf_mount@mclst+3)& (0+255),b
  9123                           
  9124                           ; BSR set to: 0
  9125                           ;pff.c: 502: fs->max_clust = (DWORD)mclst;
  9126  0015D0  EE20 F008          	lfsr	2,8
  9127  0015D4  5033               	movf	pf_mount@fs,w,c
  9128  0015D6  26D9               	addwf	fsr2l,f,c
  9129  0015D8  5034               	movf	pf_mount@fs+1,w,c
  9130  0015DA  22DA               	addwfc	fsr2h,f,c
  9131  0015DC  0100               	movlb	0	; () banked
  9132  0015DE  C088  FFDE         	movff	pf_mount@mclst,postinc2
  9133  0015E2  0100               	movlb	0	; () banked
  9134  0015E4  C089  FFDE         	movff	pf_mount@mclst+1,postinc2
  9135  0015E8  0100               	movlb	0	; () banked
  9136  0015EA  C08A  FFDE         	movff	pf_mount@mclst+2,postinc2
  9137  0015EE  0100               	movlb	0	; () banked
  9138  0015F0  C08B  FFDE         	movff	pf_mount@mclst+3,postinc2
  9139                           
  9140                           ; BSR set to: 0
  9141                           ;pff.c: 504: fmt = 1;
  9142  0015F4  0E01               	movlw	1
  9143  0015F6  0100               	movlb	0	; () banked
  9144  0015F8  6F94               	movwf	pf_mount@fmt& (0+255),b
  9145                           
  9146                           ; BSR set to: 0
  9147                           ;pff.c: 505: if (mclst >= 0xFF7) fmt = 2;
  9148  0015FA  0EF7               	movlw	247
  9149  0015FC  0100               	movlb	0	; () banked
  9150  0015FE  5D88               	subwf	pf_mount@mclst& (0+255),w,b
  9151  001600  0E0F               	movlw	15
  9152  001602  0100               	movlb	0	; () banked
  9153  001604  5989               	subwfb	(pf_mount@mclst+1)& (0+255),w,b
  9154  001606  0E00               	movlw	0
  9155  001608  0100               	movlb	0	; () banked
  9156  00160A  598A               	subwfb	(pf_mount@mclst+2)& (0+255),w,b
  9157  00160C  0E00               	movlw	0
  9158  00160E  0100               	movlb	0	; () banked
  9159  001610  598B               	subwfb	(pf_mount@mclst+3)& (0+255),w,b
  9160  001612  A0D8               	btfss	status,0,c
  9161  001614  D003               	goto	l5710
  9162                           
  9163                           ; BSR set to: 0
  9164  001616  0E02               	movlw	2
  9165  001618  0100               	movlb	0	; () banked
  9166  00161A  6F94               	movwf	pf_mount@fmt& (0+255),b
  9167  00161C                     l5710:
  9168                           
  9169                           ; BSR set to: 0
  9170                           ;pff.c: 506: if (mclst >= 0xFFF7)
  9171  00161C  0EF7               	movlw	247
  9172  00161E  0100               	movlb	0	; () banked
  9173  001620  5D88               	subwf	pf_mount@mclst& (0+255),w,b
  9174  001622  0EFF               	movlw	255
  9175  001624  0100               	movlb	0	; () banked
  9176  001626  5989               	subwfb	(pf_mount@mclst+1)& (0+255),w,b
  9177  001628  0E00               	movlw	0
  9178  00162A  0100               	movlb	0	; () banked
  9179  00162C  598A               	subwfb	(pf_mount@mclst+2)& (0+255),w,b
  9180  00162E  0E00               	movlw	0
  9181  001630  0100               	movlb	0	; () banked
  9182  001632  598B               	subwfb	(pf_mount@mclst+3)& (0+255),w,b
  9183  001634  A0D8               	btfss	status,0,c
  9184  001636  D003               	goto	l5714
  9185                           
  9186                           ; BSR set to: 0
  9187                           ;pff.c: 508: fmt = 3;
  9188  001638  0E03               	movlw	3
  9189  00163A  0100               	movlb	0	; () banked
  9190  00163C  6F94               	movwf	pf_mount@fmt& (0+255),b
  9191  00163E                     l5714:
  9192                           
  9193                           ; BSR set to: 0
  9194                           ;pff.c: 513: fs->fs_type = fmt;
  9195  00163E  C033  FFD9         	movff	pf_mount@fs,fsr2l
  9196  001642  C034  FFDA         	movff	pf_mount@fs+1,fsr2h
  9197  001646  0100               	movlb	0	; () banked
  9198  001648  C094  FFDF         	movff	pf_mount@fmt,indf2
  9199                           
  9200                           ; BSR set to: 0
  9201                           ;pff.c: 515: if (fmt == 3)
  9202  00164C  0100               	movlb	0	; () banked
  9203  00164E  5194               	movf	pf_mount@fmt& (0+255),w,b
  9204  001650  0A03               	xorlw	3
  9205  001652  A4D8               	btfss	status,2,c
  9206  001654  D013               	goto	l5720
  9207                           
  9208                           ; BSR set to: 0
  9209                           ;pff.c: 516: fs->dirbase = (DWORD)(*(DWORD*)(BYTE*)(buf+(44-13)));
  9210  001656  EE20 F010          	lfsr	2,16
  9211  00165A  5033               	movf	pf_mount@fs,w,c
  9212  00165C  26D9               	addwf	fsr2l,f,c
  9213  00165E  5034               	movf	pf_mount@fs+1,w,c
  9214  001660  22DA               	addwfc	fsr2h,f,c
  9215  001662  0100               	movlb	0	; () banked
  9216  001664  C07F  FFDE         	movff	pf_mount@buf+31,postinc2
  9217  001668  0100               	movlb	0	; () banked
  9218  00166A  C080  FFDE         	movff	pf_mount@buf+32,postinc2
  9219  00166E  0100               	movlb	0	; () banked
  9220  001670  C081  FFDE         	movff	pf_mount@buf+33,postinc2
  9221  001674  0100               	movlb	0	; () banked
  9222  001676  C082  FFDE         	movff	pf_mount@buf+34,postinc2
  9223  00167A  D02E               	goto	l165
  9224  00167C                     l5720:
  9225                           
  9226                           ; BSR set to: 0
  9227                           ;pff.c: 517: else
  9228                           ;pff.c: 519: fs->dirbase = fs->fatbase + fsize;
  9229  00167C  EE20 F00C          	lfsr	2,12
  9230  001680  5033               	movf	pf_mount@fs,w,c
  9231  001682  26D9               	addwf	fsr2l,f,c
  9232  001684  5034               	movf	pf_mount@fs+1,w,c
  9233  001686  22DA               	addwfc	fsr2h,f,c
  9234  001688  CFDE F035          	movff	postinc2,??_pf_mount
  9235  00168C  CFDE F036          	movff	postinc2,??_pf_mount+1
  9236  001690  CFDE F037          	movff	postinc2,??_pf_mount+2
  9237  001694  CFDE F038          	movff	postinc2,??_pf_mount+3
  9238  001698  0100               	movlb	0	; () banked
  9239  00169A  5190               	movf	pf_mount@fsize& (0+255),w,b
  9240  00169C  2435               	addwf	??_pf_mount,w,c
  9241  00169E  6E39               	movwf	(??_pf_mount+4)& (0+255),c
  9242  0016A0  0100               	movlb	0	; () banked
  9243  0016A2  5191               	movf	(pf_mount@fsize+1)& (0+255),w,b
  9244  0016A4  2036               	addwfc	??_pf_mount+1,w,c
  9245  0016A6  6E3A               	movwf	(??_pf_mount+5)& (0+255),c
  9246  0016A8  0100               	movlb	0	; () banked
  9247  0016AA  5192               	movf	(pf_mount@fsize+2)& (0+255),w,b
  9248  0016AC  2037               	addwfc	??_pf_mount+2,w,c
  9249  0016AE  6E3B               	movwf	(??_pf_mount+6)& (0+255),c
  9250  0016B0  0100               	movlb	0	; () banked
  9251  0016B2  5193               	movf	(pf_mount@fsize+3)& (0+255),w,b
  9252  0016B4  2038               	addwfc	??_pf_mount+3,w,c
  9253  0016B6  6E3C               	movwf	(??_pf_mount+7)& (0+255),c
  9254  0016B8  EE20 F010          	lfsr	2,16
  9255  0016BC  5033               	movf	pf_mount@fs,w,c
  9256  0016BE  26D9               	addwf	fsr2l,f,c
  9257  0016C0  5034               	movf	pf_mount@fs+1,w,c
  9258  0016C2  22DA               	addwfc	fsr2h,f,c
  9259  0016C4  C039  FFDE         	movff	??_pf_mount+4,postinc2
  9260  0016C8  C03A  FFDE         	movff	??_pf_mount+5,postinc2
  9261  0016CC  C03B  FFDE         	movff	??_pf_mount+6,postinc2
  9262  0016D0  C03C  FFDD         	movff	??_pf_mount+7,postdec2
  9263  0016D4  06D9               	decf	fsr2l,f,c
  9264  0016D6  06D9               	decf	fsr2l,f,c
  9265  0016D8                     l165:
  9266                           
  9267                           ; BSR set to: 0
  9268                           ;pff.c: 520: fs->database = fs->fatbase + fsize + fs->n_rootdir / 16;
  9269  0016D8  EE20 F00C          	lfsr	2,12
  9270  0016DC  5033               	movf	pf_mount@fs,w,c
  9271  0016DE  26D9               	addwf	fsr2l,f,c
  9272  0016E0  5034               	movf	pf_mount@fs+1,w,c
  9273  0016E2  22DA               	addwfc	fsr2h,f,c
  9274  0016E4  CFDE F035          	movff	postinc2,??_pf_mount
  9275  0016E8  CFDE F036          	movff	postinc2,??_pf_mount+1
  9276  0016EC  CFDE F037          	movff	postinc2,??_pf_mount+2
  9277  0016F0  CFDE F038          	movff	postinc2,??_pf_mount+3
  9278  0016F4  EE20 F004          	lfsr	2,4
  9279  0016F8  5033               	movf	pf_mount@fs,w,c
  9280  0016FA  26D9               	addwf	fsr2l,f,c
  9281  0016FC  5034               	movf	pf_mount@fs+1,w,c
  9282  0016FE  22DA               	addwfc	fsr2h,f,c
  9283  001700  CFDE F039          	movff	postinc2,??_pf_mount+4
  9284  001704  CFDD F03A          	movff	postdec2,??_pf_mount+5
  9285  001708  0E04               	movlw	4
  9286  00170A  6E3B               	movwf	(??_pf_mount+6)& (0+255),c
  9287  00170C                     u6705:
  9288  00170C  90D8               	bcf	status,0,c
  9289  00170E  323A               	rrcf	??_pf_mount+5,f,c
  9290  001710  3239               	rrcf	??_pf_mount+4,f,c
  9291  001712  2E3B               	decfsz	(??_pf_mount+6)& (0+255),f,c
  9292  001714  D7FB               	goto	u6705
  9293  001716  5039               	movf	??_pf_mount+4,w,c
  9294  001718  2435               	addwf	??_pf_mount,w,c
  9295  00171A  6E3C               	movwf	(??_pf_mount+7)& (0+255),c
  9296  00171C  503A               	movf	??_pf_mount+5,w,c
  9297  00171E  2036               	addwfc	??_pf_mount+1,w,c
  9298  001720  6E3D               	movwf	(??_pf_mount+8)& (0+255),c
  9299  001722  0E00               	movlw	0
  9300  001724  2037               	addwfc	??_pf_mount+2,w,c
  9301  001726  6E3E               	movwf	(??_pf_mount+9)& (0+255),c
  9302  001728  0E00               	movlw	0
  9303  00172A  2038               	addwfc	??_pf_mount+3,w,c
  9304  00172C  6E3F               	movwf	(??_pf_mount+10)& (0+255),c
  9305  00172E  0100               	movlb	0	; () banked
  9306  001730  5190               	movf	pf_mount@fsize& (0+255),w,b
  9307  001732  243C               	addwf	??_pf_mount+7,w,c
  9308  001734  6E40               	movwf	(??_pf_mount+11)& (0+255),c
  9309  001736  0100               	movlb	0	; () banked
  9310  001738  5191               	movf	(pf_mount@fsize+1)& (0+255),w,b
  9311  00173A  203D               	addwfc	??_pf_mount+8,w,c
  9312  00173C  6E41               	movwf	(??_pf_mount+12)& (0+255),c
  9313  00173E  0100               	movlb	0	; () banked
  9314  001740  5192               	movf	(pf_mount@fsize+2)& (0+255),w,b
  9315  001742  203E               	addwfc	??_pf_mount+9,w,c
  9316  001744  6E42               	movwf	(??_pf_mount+13)& (0+255),c
  9317  001746  0100               	movlb	0	; () banked
  9318  001748  5193               	movf	(pf_mount@fsize+3)& (0+255),w,b
  9319  00174A  203F               	addwfc	??_pf_mount+10,w,c
  9320  00174C  6E43               	movwf	(??_pf_mount+14)& (0+255),c
  9321  00174E  EE20 F014          	lfsr	2,20
  9322  001752  5033               	movf	pf_mount@fs,w,c
  9323  001754  26D9               	addwf	fsr2l,f,c
  9324  001756  5034               	movf	pf_mount@fs+1,w,c
  9325  001758  22DA               	addwfc	fsr2h,f,c
  9326  00175A  C040  FFDE         	movff	??_pf_mount+11,postinc2
  9327  00175E  C041  FFDE         	movff	??_pf_mount+12,postinc2
  9328  001762  C042  FFDE         	movff	??_pf_mount+13,postinc2
  9329  001766  C043  FFDD         	movff	??_pf_mount+14,postdec2
  9330  00176A  06D9               	decf	fsr2l,f,c
  9331  00176C  06D9               	decf	fsr2l,f,c
  9332                           
  9333                           ;pff.c: 522: fs->flag = 0;
  9334  00176E  EE20 F002          	lfsr	2,2
  9335  001772  5033               	movf	pf_mount@fs,w,c
  9336  001774  26D9               	addwf	fsr2l,f,c
  9337  001776  5034               	movf	pf_mount@fs+1,w,c
  9338  001778  22DA               	addwfc	fsr2h,f,c
  9339  00177A  0E00               	movlw	0
  9340  00177C  6EDF               	movwf	indf2,c
  9341                           
  9342                           ; BSR set to: 0
  9343                           ;pff.c: 523: FatFs = fs;
  9344  00177E  C034  F049         	movff	pf_mount@fs+1,_FatFs+1
  9345  001782  C033  F048         	movff	pf_mount@fs,_FatFs
  9346  001786                     L19:
  9347                           
  9348                           ; BSR set to: 0
  9349                           ;pff.c: 525: return FR_OK;
  9350  001786  0E00               	movlw	0
  9351  001788                     l151:
  9352  001788  0012               	return	
  9353  00178A                     __end_of_pf_mount:
  9354                           	opt stack 0
  9355                           tblptru	equ	0xFF8
  9356                           tblptrh	equ	0xFF7
  9357                           tblptrl	equ	0xFF6
  9358                           tablat	equ	0xFF5
  9359                           prodh	equ	0xFF4
  9360                           prodl	equ	0xFF3
  9361                           intcon	equ	0xFF2
  9362                           postinc0	equ	0xFEE
  9363                           wreg	equ	0xFE8
  9364                           indf1	equ	0xFE7
  9365                           postinc1	equ	0xFE6
  9366                           postdec1	equ	0xFE5
  9367                           fsr1h	equ	0xFE2
  9368                           fsr1l	equ	0xFE1
  9369                           indf2	equ	0xFDF
  9370                           postinc2	equ	0xFDE
  9371                           postdec2	equ	0xFDD
  9372                           fsr2h	equ	0xFDA
  9373                           fsr2l	equ	0xFD9
  9374                           status	equ	0xFD8
  9375                           
  9376 ;; *************** function _disk_initialize *****************
  9377 ;; Defined at:
  9378 ;;		line 144 in file "../../../PIC18F/sd_mmc.c"
  9379 ;; Parameters:    Size  Location     Type
  9380 ;;		None
  9381 ;; Auto vars:     Size  Location     Type
  9382 ;;  ocr             4   29[COMRAM] unsigned char [4]
  9383 ;;  tmr             2   37[COMRAM] unsigned short 
  9384 ;;  n               1   39[COMRAM] unsigned char 
  9385 ;;  ty              1   36[COMRAM] unsigned char 
  9386 ;;  cmd             1   35[COMRAM] unsigned char 
  9387 ;; Return value:  Size  Location     Type
  9388 ;;                  1    wreg      unsigned char 
  9389 ;; Registers used:
  9390 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9391 ;; Tracked objects:
  9392 ;;		On entry : 0/0
  9393 ;;		On exit  : 0/0
  9394 ;;		Unchanged: 0/0
  9395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9396 ;;      Params:         0       0       0       0       0       0       0       0       0
  9397 ;;      Locals:        11       0       0       0       0       0       0       0       0
  9398 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9399 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9400 ;;Total ram usage:       12 bytes
  9401 ;; Hardware stack levels used:    1
  9402 ;; Hardware stack levels required when called:    5
  9403 ;; This function calls:
  9404 ;;		_init_spi
  9405 ;;		_rcv_spi
  9406 ;;		_release_spi
  9407 ;;		_send_cmd
  9408 ;; This function is called by:
  9409 ;;		_pf_mount
  9410 ;; This function uses a non-reentrant model
  9411 ;;
  9412                           
  9413                           	psect	text30
  9414  002854                     __ptext30:
  9415                           	opt stack 0
  9416  002854                     _disk_initialize:
  9417                           	opt stack 23
  9418                           
  9419                           ;sd_mmc.c: 146: BYTE n, cmd, ty, ocr[4];
  9420                           ;sd_mmc.c: 147: WORD tmr;
  9421                           ;sd_mmc.c: 149: init_spi();
  9422                           
  9423                           ;incstack = 0
  9424  002854  EC51  F01E         	call	_init_spi	;wreg free
  9425                           
  9426                           ;sd_mmc.c: 154: for (n = 100; n; n--) rcv_spi();
  9427  002858  0E64               	movlw	100
  9428  00285A  6E28               	movwf	disk_initialize@n,c
  9429  00285C  D003               	goto	l5370
  9430  00285E                     l5366:
  9431  00285E  EC9A  F01E         	call	_rcv_spi	;wreg free
  9432  002862  0628               	decf	disk_initialize@n,f,c
  9433  002864                     l5370:
  9434  002864  6628               	tstfsz	disk_initialize@n,c
  9435  002866  D7FB               	goto	l5366
  9436                           
  9437                           ;sd_mmc.c: 156: ty = 0;
  9438  002868  0E00               	movlw	0
  9439  00286A  6E25               	movwf	disk_initialize@ty,c
  9440                           
  9441                           ;sd_mmc.c: 157: if (send_cmd((0x40+0), 0) == 1) {
  9442  00286C  0E00               	movlw	0
  9443  00286E  6E15               	movwf	send_cmd@arg,c
  9444  002870  0E00               	movlw	0
  9445  002872  6E16               	movwf	send_cmd@arg+1,c
  9446  002874  0E00               	movlw	0
  9447  002876  6E17               	movwf	send_cmd@arg+2,c
  9448  002878  0E00               	movlw	0
  9449  00287A  6E18               	movwf	send_cmd@arg+3,c
  9450  00287C  0E40               	movlw	64
  9451  00287E  EC01  F01A         	call	_send_cmd
  9452  002882  6E1D               	movwf	??_disk_initialize& (0+255),c
  9453  002884  041D               	decf	??_disk_initialize,w,c
  9454  002886  A4D8               	btfss	status,2,c
  9455  002888  D0B8               	goto	l5442
  9456                           
  9457                           ;sd_mmc.c: 159: if (send_cmd((0x40+8), 0x1AA) == 0) {
  9458  00288A  0EAA               	movlw	170
  9459  00288C  6E15               	movwf	send_cmd@arg,c
  9460  00288E  0E01               	movlw	1
  9461  002890  6E16               	movwf	send_cmd@arg+1,c
  9462  002892  0E00               	movlw	0
  9463  002894  6E17               	movwf	send_cmd@arg+2,c
  9464  002896  0E00               	movlw	0
  9465  002898  6E18               	movwf	send_cmd@arg+3,c
  9466  00289A  0E48               	movlw	72
  9467  00289C  EC01  F01A         	call	_send_cmd
  9468  0028A0  0900               	iorlw	0
  9469  0028A2  A4D8               	btfss	status,2,c
  9470  0028A4  D064               	goto	l5424
  9471                           
  9472                           ;sd_mmc.c: 160: for (n = 0; n < 4; n++) ocr[n] = rcv_spi();
  9473  0028A6  0E00               	movlw	0
  9474  0028A8  6E28               	movwf	disk_initialize@n,c
  9475  0028AA  D00C               	goto	L24
  9476  0028AC                     l5384:
  9477  0028AC  5028               	movf	disk_initialize@n,w,c
  9478  0028AE  0D01               	mullw	1
  9479  0028B0  0E1E               	movlw	low disk_initialize@ocr
  9480  0028B2  24F3               	addwf	prodl,w,c
  9481  0028B4  6ED9               	movwf	fsr2l,c
  9482  0028B6  0E00               	movlw	high disk_initialize@ocr
  9483  0028B8  20F4               	addwfc	prodh,w,c
  9484  0028BA  6EDA               	movwf	fsr2h,c
  9485  0028BC  EC9A  F01E         	call	_rcv_spi	;wreg free
  9486  0028C0  6EDF               	movwf	indf2,c
  9487  0028C2  2A28               	incf	disk_initialize@n,f,c
  9488  0028C4                     L24:
  9489  0028C4  0E03               	movlw	3
  9490  0028C6  6428               	cpfsgt	disk_initialize@n,c
  9491  0028C8  D7F1               	goto	l5384
  9492                           
  9493                           ;sd_mmc.c: 161: if (ocr[2] == 0x01 && ocr[3] == 0xAA) {
  9494  0028CA  0420               	decf	disk_initialize@ocr+2,w,c
  9495  0028CC  A4D8               	btfss	status,2,c
  9496  0028CE  D095               	goto	l5442
  9497  0028D0  5021               	movf	disk_initialize@ocr+3,w,c
  9498  0028D2  0AAA               	xorlw	170
  9499  0028D4  A4D8               	btfss	status,2,c
  9500  0028D6  D091               	goto	l5442
  9501                           
  9502                           ;sd_mmc.c: 162: for (tmr = 12000; tmr && send_cmd((0xC0+41), 1UL << 30); tmr--) ;
  9503  0028D8  0E2E               	movlw	46
  9504  0028DA  6E27               	movwf	disk_initialize@tmr+1,c
  9505  0028DC  0EE0               	movlw	224
  9506  0028DE  6E26               	movwf	disk_initialize@tmr,c
  9507  0028E0  D003               	goto	l5398
  9508  0028E2                     l5396:
  9509  0028E2  0626               	decf	disk_initialize@tmr,f,c
  9510  0028E4  A0D8               	btfss	status,0,c
  9511  0028E6  0627               	decf	disk_initialize@tmr+1,f,c
  9512  0028E8                     l5398:
  9513  0028E8  5027               	movf	disk_initialize@tmr+1,w,c
  9514  0028EA  1026               	iorwf	disk_initialize@tmr,w,c
  9515  0028EC  B4D8               	btfsc	status,2,c
  9516  0028EE  D00E               	goto	l5402
  9517  0028F0  0E00               	movlw	0
  9518  0028F2  6E15               	movwf	send_cmd@arg,c
  9519  0028F4  0E00               	movlw	0
  9520  0028F6  6E16               	movwf	send_cmd@arg+1,c
  9521  0028F8  0E00               	movlw	0
  9522  0028FA  6E17               	movwf	send_cmd@arg+2,c
  9523  0028FC  0E40               	movlw	64
  9524  0028FE  6E18               	movwf	send_cmd@arg+3,c
  9525  002900  0EE9               	movlw	233
  9526  002902  EC01  F01A         	call	_send_cmd
  9527  002906  0900               	iorlw	0
  9528  002908  A4D8               	btfss	status,2,c
  9529  00290A  D7EB               	goto	l5396
  9530  00290C                     l5402:
  9531                           
  9532                           ;sd_mmc.c: 163: if (tmr && send_cmd((0x40+58), 0) == 0) {
  9533  00290C  5027               	movf	disk_initialize@tmr+1,w,c
  9534  00290E  1026               	iorwf	disk_initialize@tmr,w,c
  9535  002910  B4D8               	btfsc	status,2,c
  9536  002912  D073               	goto	l5442
  9537  002914  0E00               	movlw	0
  9538  002916  6E15               	movwf	send_cmd@arg,c
  9539  002918  0E00               	movlw	0
  9540  00291A  6E16               	movwf	send_cmd@arg+1,c
  9541  00291C  0E00               	movlw	0
  9542  00291E  6E17               	movwf	send_cmd@arg+2,c
  9543  002920  0E00               	movlw	0
  9544  002922  6E18               	movwf	send_cmd@arg+3,c
  9545  002924  0E7A               	movlw	122
  9546  002926  EC01  F01A         	call	_send_cmd
  9547  00292A  0900               	iorlw	0
  9548  00292C  A4D8               	btfss	status,2,c
  9549  00292E  D065               	goto	l5442
  9550                           
  9551                           ;sd_mmc.c: 164: for (n = 0; n < 4; n++) ocr[n] = rcv_spi();
  9552  002930  0E00               	movlw	0
  9553  002932  6E28               	movwf	disk_initialize@n,c
  9554  002934  D00C               	goto	L23
  9555  002936                     l5412:
  9556  002936  5028               	movf	disk_initialize@n,w,c
  9557  002938  0D01               	mullw	1
  9558  00293A  0E1E               	movlw	low disk_initialize@ocr
  9559  00293C  24F3               	addwf	prodl,w,c
  9560  00293E  6ED9               	movwf	fsr2l,c
  9561  002940  0E00               	movlw	high disk_initialize@ocr
  9562  002942  20F4               	addwfc	prodh,w,c
  9563  002944  6EDA               	movwf	fsr2h,c
  9564  002946  EC9A  F01E         	call	_rcv_spi	;wreg free
  9565  00294A  6EDF               	movwf	indf2,c
  9566  00294C  2A28               	incf	disk_initialize@n,f,c
  9567  00294E                     L23:
  9568  00294E  0E03               	movlw	3
  9569  002950  6428               	cpfsgt	disk_initialize@n,c
  9570  002952  D7F1               	goto	l5412
  9571                           
  9572                           ;sd_mmc.c: 165: ty = (ocr[0] & 0x40) ? 0x04 | 0x08 : 0x04;
  9573  002954  BC1E               	btfsc	disk_initialize@ocr,6,c
  9574  002956  D004               	goto	l5420
  9575  002958  0E00               	movlw	0
  9576  00295A  6E23               	movwf	_disk_initialize$807+1,c
  9577  00295C  0E04               	movlw	4
  9578  00295E  D003               	goto	L21
  9579  002960                     l5420:
  9580  002960  0E00               	movlw	0
  9581  002962  6E23               	movwf	_disk_initialize$807+1,c
  9582  002964  0E0C               	movlw	12
  9583  002966                     L21:
  9584  002966  6E22               	movwf	_disk_initialize$807,c
  9585  002968  C022  F025         	movff	_disk_initialize$807,disk_initialize@ty
  9586  00296C  D046               	goto	l5442
  9587  00296E                     l5424:
  9588                           
  9589                           ;sd_mmc.c: 169: else {
  9590                           ;sd_mmc.c: 170: if (send_cmd((0xC0+41), 0) <= 1) {
  9591  00296E  0E00               	movlw	0
  9592  002970  6E15               	movwf	send_cmd@arg,c
  9593  002972  0E00               	movlw	0
  9594  002974  6E16               	movwf	send_cmd@arg+1,c
  9595  002976  0E00               	movlw	0
  9596  002978  6E17               	movwf	send_cmd@arg+2,c
  9597  00297A  0E00               	movlw	0
  9598  00297C  6E18               	movwf	send_cmd@arg+3,c
  9599  00297E  0EE9               	movlw	233
  9600  002980  EC01  F01A         	call	_send_cmd
  9601  002984  6E1D               	movwf	??_disk_initialize& (0+255),c
  9602  002986  0E02               	movlw	2
  9603  002988  5C1D               	subwf	??_disk_initialize,w,c
  9604  00298A  B0D8               	btfsc	status,0,c
  9605  00298C  D004               	goto	l5428
  9606                           
  9607                           ;sd_mmc.c: 171: ty = 0x02; cmd = (0xC0+41);
  9608  00298E  0E02               	movlw	2
  9609  002990  6E25               	movwf	disk_initialize@ty,c
  9610  002992  0EE9               	movlw	233
  9611  002994  D003               	goto	L22
  9612  002996                     l5428:
  9613                           
  9614                           ;sd_mmc.c: 173: ty = 0x01; cmd = (0x40+1);
  9615  002996  0E01               	movlw	1
  9616  002998  6E25               	movwf	disk_initialize@ty,c
  9617  00299A  0E41               	movlw	65
  9618  00299C                     L22:
  9619  00299C  6E24               	movwf	disk_initialize@cmd,c
  9620                           
  9621                           ;sd_mmc.c: 174: }
  9622                           ;sd_mmc.c: 175: for (tmr = 25000; tmr && send_cmd(cmd, 0); tmr--) ;
  9623  00299E  0E61               	movlw	97
  9624  0029A0  6E27               	movwf	disk_initialize@tmr+1,c
  9625  0029A2  0EA8               	movlw	168
  9626  0029A4  6E26               	movwf	disk_initialize@tmr,c
  9627  0029A6  D003               	goto	l5432
  9628  0029A8                     l5430:
  9629  0029A8  0626               	decf	disk_initialize@tmr,f,c
  9630  0029AA  A0D8               	btfss	status,0,c
  9631  0029AC  0627               	decf	disk_initialize@tmr+1,f,c
  9632  0029AE                     l5432:
  9633  0029AE  5027               	movf	disk_initialize@tmr+1,w,c
  9634  0029B0  1026               	iorwf	disk_initialize@tmr,w,c
  9635  0029B2  B4D8               	btfsc	status,2,c
  9636  0029B4  D00E               	goto	l5436
  9637  0029B6  0E00               	movlw	0
  9638  0029B8  6E15               	movwf	send_cmd@arg,c
  9639  0029BA  0E00               	movlw	0
  9640  0029BC  6E16               	movwf	send_cmd@arg+1,c
  9641  0029BE  0E00               	movlw	0
  9642  0029C0  6E17               	movwf	send_cmd@arg+2,c
  9643  0029C2  0E00               	movlw	0
  9644  0029C4  6E18               	movwf	send_cmd@arg+3,c
  9645  0029C6  5024               	movf	disk_initialize@cmd,w,c
  9646  0029C8  EC01  F01A         	call	_send_cmd
  9647  0029CC  0900               	iorlw	0
  9648  0029CE  A4D8               	btfss	status,2,c
  9649  0029D0  D7EB               	goto	l5430
  9650  0029D2                     l5436:
  9651                           
  9652                           ;sd_mmc.c: 176: if (!tmr || send_cmd((0x40+16), 512) != 0)
  9653  0029D2  5027               	movf	disk_initialize@tmr+1,w,c
  9654  0029D4  1026               	iorwf	disk_initialize@tmr,w,c
  9655  0029D6  B4D8               	btfsc	status,2,c
  9656  0029D8  D00E               	goto	l5440
  9657  0029DA  0E00               	movlw	0
  9658  0029DC  6E15               	movwf	send_cmd@arg,c
  9659  0029DE  0E02               	movlw	2
  9660  0029E0  6E16               	movwf	send_cmd@arg+1,c
  9661  0029E2  0E00               	movlw	0
  9662  0029E4  6E17               	movwf	send_cmd@arg+2,c
  9663  0029E6  0E00               	movlw	0
  9664  0029E8  6E18               	movwf	send_cmd@arg+3,c
  9665  0029EA  0E50               	movlw	80
  9666  0029EC  EC01  F01A         	call	_send_cmd
  9667  0029F0  0900               	iorlw	0
  9668  0029F2  B4D8               	btfsc	status,2,c
  9669  0029F4  D002               	goto	l5442
  9670  0029F6                     l5440:
  9671                           
  9672                           ;sd_mmc.c: 177: ty = 0;
  9673  0029F6  0E00               	movlw	0
  9674  0029F8  6E25               	movwf	disk_initialize@ty,c
  9675  0029FA                     l5442:
  9676                           
  9677                           ;sd_mmc.c: 178: }
  9678                           ;sd_mmc.c: 179: }
  9679                           ;sd_mmc.c: 180: CardType = ty;
  9680  0029FA  C025  F04E         	movff	disk_initialize@ty,_CardType
  9681                           
  9682                           ;sd_mmc.c: 181: release_spi();
  9683  0029FE  EC9F  F01E         	call	_release_spi	;wreg free
  9684                           
  9685                           ;sd_mmc.c: 183: if(ty) SSPCON1 &= 0b11110000;
  9686  002A02  5025               	movf	disk_initialize@ty,w,c
  9687  002A04  B4D8               	btfsc	status,2,c
  9688  002A06  D002               	goto	l5450
  9689  002A08  0EF0               	movlw	240
  9690  002A0A  16C6               	andwf	4038,f,c	;volatile
  9691  002A0C                     l5450:
  9692                           
  9693                           ;sd_mmc.c: 185: return ty ? 0 : 0x01;
  9694  002A0C  5025               	movf	disk_initialize@ty,w,c
  9695  002A0E  A4D8               	btfss	status,2,c
  9696  002A10  D002               	goto	u6390
  9697  002A12  0E01               	movlw	1
  9698  002A14  D001               	goto	l376
  9699  002A16                     u6390:
  9700  002A16  0E00               	movlw	0
  9701  002A18                     l376:
  9702  002A18  0012               	return	
  9703  002A1A                     __end_of_disk_initialize:
  9704                           	opt stack 0
  9705                           tblptru	equ	0xFF8
  9706                           tblptrh	equ	0xFF7
  9707                           tblptrl	equ	0xFF6
  9708                           tablat	equ	0xFF5
  9709                           prodh	equ	0xFF4
  9710                           prodl	equ	0xFF3
  9711                           intcon	equ	0xFF2
  9712                           postinc0	equ	0xFEE
  9713                           wreg	equ	0xFE8
  9714                           indf1	equ	0xFE7
  9715                           postinc1	equ	0xFE6
  9716                           postdec1	equ	0xFE5
  9717                           fsr1h	equ	0xFE2
  9718                           fsr1l	equ	0xFE1
  9719                           indf2	equ	0xFDF
  9720                           postinc2	equ	0xFDE
  9721                           postdec2	equ	0xFDD
  9722                           fsr2h	equ	0xFDA
  9723                           fsr2l	equ	0xFD9
  9724                           status	equ	0xFD8
  9725                           
  9726 ;; *************** function _init_spi *****************
  9727 ;; Defined at:
  9728 ;;		line 9 in file "../../../PIC18F/spi_pic18.c"
  9729 ;; Parameters:    Size  Location     Type
  9730 ;;		None
  9731 ;; Auto vars:     Size  Location     Type
  9732 ;;		None
  9733 ;; Return value:  Size  Location     Type
  9734 ;;		None               void
  9735 ;; Registers used:
  9736 ;;		wreg, status,2, status,0
  9737 ;; Tracked objects:
  9738 ;;		On entry : 0/0
  9739 ;;		On exit  : 0/0
  9740 ;;		Unchanged: 0/0
  9741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9742 ;;      Params:         0       0       0       0       0       0       0       0       0
  9743 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9744 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9745 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9746 ;;Total ram usage:        0 bytes
  9747 ;; Hardware stack levels used:    1
  9748 ;; Hardware stack levels required when called:    2
  9749 ;; This function calls:
  9750 ;;		Nothing
  9751 ;; This function is called by:
  9752 ;;		_disk_initialize
  9753 ;; This function uses a non-reentrant model
  9754 ;;
  9755                           
  9756                           	psect	text31
  9757  003CA2                     __ptext31:
  9758                           	opt stack 0
  9759  003CA2                     _init_spi:
  9760                           	opt stack 25
  9761                           
  9762                           ;spi_pic18.c: 11: TRISCbits.TRISC6 = 0;
  9763                           
  9764                           ;incstack = 0
  9765  003CA2  9C94               	bcf	3988,6,c	;volatile
  9766                           
  9767                           ;spi_pic18.c: 12: TRISCbits.TRISC7 = 0;
  9768  003CA4  9E94               	bcf	3988,7,c	;volatile
  9769                           
  9770                           ;spi_pic18.c: 13: TRISBbits.TRISB0 = 1;
  9771  003CA6  8093               	bsf	3987,0,c	;volatile
  9772                           
  9773                           ;spi_pic18.c: 14: TRISBbits.TRISB1 = 0;
  9774  003CA8  9293               	bcf	3987,1,c	;volatile
  9775                           
  9776                           ;spi_pic18.c: 16: ADCON1 = 0xFF;
  9777  003CAA  68C1               	setf	4033,c	;volatile
  9778                           
  9779                           ;spi_pic18.c: 18: SSPSTAT &= 0x3F;
  9780  003CAC  0E3F               	movlw	63
  9781  003CAE  16C7               	andwf	4039,f,c	;volatile
  9782                           
  9783                           ;spi_pic18.c: 19: SSPCON1 = 0x00;
  9784  003CB0  0E00               	movlw	0
  9785  003CB2  6EC6               	movwf	4038,c	;volatile
  9786                           
  9787                           ;spi_pic18.c: 21: SSPSTATbits.CKE = 1;
  9788  003CB4  8CC7               	bsf	4039,6,c	;volatile
  9789                           
  9790                           ;spi_pic18.c: 22: SSPSTATbits.SMP = 0;
  9791  003CB6  9EC7               	bcf	4039,7,c	;volatile
  9792                           
  9793                           ;spi_pic18.c: 24: SSPCON1 |= 0b00000010;
  9794  003CB8  82C6               	bsf	4038,1,c	;volatile
  9795                           
  9796                           ;spi_pic18.c: 25: SSPCON1 |= 0b00100000;
  9797  003CBA  8AC6               	bsf	4038,5,c	;volatile
  9798                           
  9799                           ;spi_pic18.c: 27: SSPCON1bits.WCOL = 0;
  9800  003CBC  9EC6               	bcf	4038,7,c	;volatile
  9801  003CBE  0012               	return	
  9802  003CC0                     __end_of_init_spi:
  9803                           	opt stack 0
  9804                           tblptru	equ	0xFF8
  9805                           tblptrh	equ	0xFF7
  9806                           tblptrl	equ	0xFF6
  9807                           tablat	equ	0xFF5
  9808                           prodh	equ	0xFF4
  9809                           prodl	equ	0xFF3
  9810                           intcon	equ	0xFF2
  9811                           postinc0	equ	0xFEE
  9812                           wreg	equ	0xFE8
  9813                           indf1	equ	0xFE7
  9814                           postinc1	equ	0xFE6
  9815                           postdec1	equ	0xFE5
  9816                           fsr1h	equ	0xFE2
  9817                           fsr1l	equ	0xFE1
  9818                           indf2	equ	0xFDF
  9819                           postinc2	equ	0xFDE
  9820                           postdec2	equ	0xFDD
  9821                           fsr2h	equ	0xFDA
  9822                           fsr2l	equ	0xFD9
  9823                           status	equ	0xFD8
  9824                           
  9825 ;; *************** function _check_fs *****************
  9826 ;; Defined at:
  9827 ;;		line 422 in file "../../../PIC18F/pff.c"
  9828 ;; Parameters:    Size  Location     Type
  9829 ;;  buf             2   44[COMRAM] PTR unsigned char 
  9830 ;;		 -> pf_mount@buf(36), 
  9831 ;;  sect            4   46[COMRAM] unsigned long 
  9832 ;; Auto vars:     Size  Location     Type
  9833 ;;		None
  9834 ;; Return value:  Size  Location     Type
  9835 ;;                  1    wreg      unsigned char 
  9836 ;; Registers used:
  9837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9838 ;; Tracked objects:
  9839 ;;		On entry : 0/0
  9840 ;;		On exit  : 0/0
  9841 ;;		Unchanged: 0/0
  9842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9843 ;;      Params:         6       0       0       0       0       0       0       0       0
  9844 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9845 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9846 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9847 ;;Total ram usage:        6 bytes
  9848 ;; Hardware stack levels used:    1
  9849 ;; Hardware stack levels required when called:    6
  9850 ;; This function calls:
  9851 ;;		_disk_readp
  9852 ;; This function is called by:
  9853 ;;		_pf_mount
  9854 ;; This function uses a non-reentrant model
  9855 ;;
  9856                           
  9857                           	psect	text32
  9858  003314                     __ptext32:
  9859                           	opt stack 0
  9860  003314                     _check_fs:
  9861                           	opt stack 22
  9862                           
  9863                           ;pff.c: 427: if (disk_readp(buf, sect, 510, 2))
  9864                           
  9865                           ;incstack = 0
  9866  003314  C02E  F01E         	movff	check_fs@buf+1,disk_readp@buff+1
  9867  003318  C02D  F01D         	movff	check_fs@buf,disk_readp@buff
  9868  00331C  C02F  F01F         	movff	check_fs@sect,disk_readp@lba
  9869  003320  C030  F020         	movff	check_fs@sect+1,disk_readp@lba+1
  9870  003324  C031  F021         	movff	check_fs@sect+2,disk_readp@lba+2
  9871  003328  C032  F022         	movff	check_fs@sect+3,disk_readp@lba+3
  9872  00332C  0E01               	movlw	1
  9873  00332E  6E24               	movwf	disk_readp@ofs+1,c
  9874  003330  0EFE               	movlw	254
  9875  003332  6E23               	movwf	disk_readp@ofs,c
  9876  003334  0E00               	movlw	0
  9877  003336  6E26               	movwf	disk_readp@cnt+1,c
  9878  003338  0E02               	movlw	2
  9879  00333A  6E25               	movwf	disk_readp@cnt,c
  9880  00333C  EC71  F01A         	call	_disk_readp	;wreg free
  9881  003340  0900               	iorlw	0
  9882  003342  B4D8               	btfsc	status,2,c
  9883  003344  D002               	goto	l5336
  9884                           
  9885                           ;pff.c: 428: return 3;
  9886  003346  0E03               	movlw	3
  9887  003348  D05B               	goto	l144
  9888  00334A                     l5336:
  9889                           
  9890                           ;pff.c: 429: if ((WORD)(*(WORD*)(BYTE*)(buf)) != 0xAA55)
  9891  00334A  C02D  FFD9         	movff	check_fs@buf,fsr2l
  9892  00334E  C02E  FFDA         	movff	check_fs@buf+1,fsr2h
  9893  003352  2AD9               	incf	fsr2l,f,c
  9894  003354  50DD               	movf	postdec2,w,c
  9895  003356  0AAA               	xorlw	170
  9896  003358  0E55               	movlw	85
  9897  00335A  B4D8               	btfsc	status,2,c
  9898  00335C  18DF               	xorwf	indf2,w,c
  9899  00335E  B4D8               	btfsc	status,2,c
  9900  003360  D002               	goto	l5342
  9901                           
  9902                           ;pff.c: 430: return 2;
  9903  003362  0E02               	movlw	2
  9904  003364  D04D               	goto	l144
  9905  003366                     l5342:
  9906                           
  9907                           ;pff.c: 432: if (!disk_readp(buf, sect, 54, 2) && (WORD)(*(WORD*)(BYTE*)(buf)) == 0x4146
      +                          )
  9908  003366  C02E  F01E         	movff	check_fs@buf+1,disk_readp@buff+1
  9909  00336A  C02D  F01D         	movff	check_fs@buf,disk_readp@buff
  9910  00336E  C02F  F01F         	movff	check_fs@sect,disk_readp@lba
  9911  003372  C030  F020         	movff	check_fs@sect+1,disk_readp@lba+1
  9912  003376  C031  F021         	movff	check_fs@sect+2,disk_readp@lba+2
  9913  00337A  C032  F022         	movff	check_fs@sect+3,disk_readp@lba+3
  9914  00337E  0E00               	movlw	0
  9915  003380  6E24               	movwf	disk_readp@ofs+1,c
  9916  003382  0E36               	movlw	54
  9917  003384  6E23               	movwf	disk_readp@ofs,c
  9918  003386  0E00               	movlw	0
  9919  003388  6E26               	movwf	disk_readp@cnt+1,c
  9920  00338A  0E02               	movlw	2
  9921  00338C  6E25               	movwf	disk_readp@cnt,c
  9922  00338E  EC71  F01A         	call	_disk_readp	;wreg free
  9923  003392  0900               	iorlw	0
  9924  003394  A4D8               	btfss	status,2,c
  9925  003396  D00C               	goto	l5350
  9926  003398  C02D  FFD9         	movff	check_fs@buf,fsr2l
  9927  00339C  C02E  FFDA         	movff	check_fs@buf+1,fsr2h
  9928  0033A0  2AD9               	incf	fsr2l,f,c
  9929  0033A2  50DD               	movf	postdec2,w,c
  9930  0033A4  0A41               	xorlw	65
  9931  0033A6  0E46               	movlw	70
  9932  0033A8  B4D8               	btfsc	status,2,c
  9933  0033AA  18DF               	xorwf	indf2,w,c
  9934  0033AC  B4D8               	btfsc	status,2,c
  9935  0033AE  D025               	goto	u6180
  9936  0033B0                     l5350:
  9937                           
  9938                           ;pff.c: 435: if (!disk_readp(buf, sect, 82, 2) && (WORD)(*(WORD*)(BYTE*)(buf)) == 0x4146
      +                          )
  9939  0033B0  C02E  F01E         	movff	check_fs@buf+1,disk_readp@buff+1
  9940  0033B4  C02D  F01D         	movff	check_fs@buf,disk_readp@buff
  9941  0033B8  C02F  F01F         	movff	check_fs@sect,disk_readp@lba
  9942  0033BC  C030  F020         	movff	check_fs@sect+1,disk_readp@lba+1
  9943  0033C0  C031  F021         	movff	check_fs@sect+2,disk_readp@lba+2
  9944  0033C4  C032  F022         	movff	check_fs@sect+3,disk_readp@lba+3
  9945  0033C8  0E00               	movlw	0
  9946  0033CA  6E24               	movwf	disk_readp@ofs+1,c
  9947  0033CC  0E52               	movlw	82
  9948  0033CE  6E23               	movwf	disk_readp@ofs,c
  9949  0033D0  0E00               	movlw	0
  9950  0033D2  6E26               	movwf	disk_readp@cnt+1,c
  9951  0033D4  0E02               	movlw	2
  9952  0033D6  6E25               	movwf	disk_readp@cnt,c
  9953  0033D8  EC71  F01A         	call	_disk_readp	;wreg free
  9954  0033DC  0900               	iorlw	0
  9955  0033DE  A4D8               	btfss	status,2,c
  9956  0033E0  D00E               	goto	l5358
  9957  0033E2  C02D  FFD9         	movff	check_fs@buf,fsr2l
  9958  0033E6  C02E  FFDA         	movff	check_fs@buf+1,fsr2h
  9959  0033EA  2AD9               	incf	fsr2l,f,c
  9960  0033EC  50DD               	movf	postdec2,w,c
  9961  0033EE  0A41               	xorlw	65
  9962  0033F0  0E46               	movlw	70
  9963  0033F2  B4D8               	btfsc	status,2,c
  9964  0033F4  18DF               	xorwf	indf2,w,c
  9965  0033F6  A4D8               	btfss	status,2,c
  9966  0033F8  D002               	goto	l5358
  9967  0033FA                     u6180:
  9968                           
  9969                           ;pff.c: 436: return 0;
  9970  0033FA  0E00               	movlw	0
  9971  0033FC  D001               	goto	l144
  9972  0033FE                     l5358:
  9973                           
  9974                           ;pff.c: 438: return 1;
  9975  0033FE  0E01               	movlw	1
  9976  003400                     l144:
  9977  003400  0012               	return	
  9978  003402                     __end_of_check_fs:
  9979                           	opt stack 0
  9980                           tblptru	equ	0xFF8
  9981                           tblptrh	equ	0xFF7
  9982                           tblptrl	equ	0xFF6
  9983                           tablat	equ	0xFF5
  9984                           prodh	equ	0xFF4
  9985                           prodl	equ	0xFF3
  9986                           intcon	equ	0xFF2
  9987                           postinc0	equ	0xFEE
  9988                           wreg	equ	0xFE8
  9989                           indf1	equ	0xFE7
  9990                           postinc1	equ	0xFE6
  9991                           postdec1	equ	0xFE5
  9992                           fsr1h	equ	0xFE2
  9993                           fsr1l	equ	0xFE1
  9994                           indf2	equ	0xFDF
  9995                           postinc2	equ	0xFDE
  9996                           postdec2	equ	0xFDD
  9997                           fsr2h	equ	0xFDA
  9998                           fsr2l	equ	0xFD9
  9999                           status	equ	0xFD8
 10000                           
 10001 ;; *************** function _disk_readp *****************
 10002 ;; Defined at:
 10003 ;;		line 194 in file "../../../PIC18F/sd_mmc.c"
 10004 ;; Parameters:    Size  Location     Type
 10005 ;;  buff            2   28[COMRAM] PTR unsigned char 
 10006 ;;		 -> Buff(256), pf_readdir@dir(32), pf_opendir@dir(32), pf_open@dir(32), 
 10007 ;;		 -> pf_mount@buf(36), NULL(0), get_fat@buf(4), 
 10008 ;;  lba             4   30[COMRAM] unsigned long 
 10009 ;;  ofs             2   34[COMRAM] unsigned short 
 10010 ;;  cnt             2   36[COMRAM] unsigned short 
 10011 ;; Auto vars:     Size  Location     Type
 10012 ;;  bc              2   42[COMRAM] unsigned short 
 10013 ;;  rc              1   41[COMRAM] unsigned char 
 10014 ;;  res             1   40[COMRAM] enum E4788
 10015 ;; Return value:  Size  Location     Type
 10016 ;;                  1    wreg      enum E79
 10017 ;; Registers used:
 10018 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10019 ;; Tracked objects:
 10020 ;;		On entry : 0/0
 10021 ;;		On exit  : 0/0
 10022 ;;		Unchanged: 0/0
 10023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10024 ;;      Params:        10       0       0       0       0       0       0       0       0
 10025 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10026 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10027 ;;      Totals:        16       0       0       0       0       0       0       0       0
 10028 ;;Total ram usage:       16 bytes
 10029 ;; Hardware stack levels used:    1
 10030 ;; Hardware stack levels required when called:    5
 10031 ;; This function calls:
 10032 ;;		_rcv_spi
 10033 ;;		_release_spi
 10034 ;;		_send_cmd
 10035 ;; This function is called by:
 10036 ;;		_get_fat
 10037 ;;		_dir_find
 10038 ;;		_dir_read
 10039 ;;		_check_fs
 10040 ;;		_pf_mount
 10041 ;;		_pf_read
 10042 ;; This function uses a non-reentrant model
 10043 ;;
 10044                           
 10045                           	psect	text33
 10046  0034E2                     __ptext33:
 10047                           	opt stack 0
 10048  0034E2                     _disk_readp:
 10049                           	opt stack 21
 10050                           
 10051                           ;sd_mmc.c: 201: DRESULT res;
 10052                           ;sd_mmc.c: 202: BYTE rc;
 10053                           ;sd_mmc.c: 203: WORD bc;
 10054                           ;sd_mmc.c: 206: if (!(CardType & 0x08)) lba *= 512;
 10055                           
 10056                           ;incstack = 0
 10057  0034E2  B64E               	btfsc	_CardType,3,c
 10058  0034E4  D008               	goto	l4926
 10059  0034E6  0E09               	movlw	9
 10060  0034E8                     u5275:
 10061  0034E8  90D8               	bcf	status,0,c
 10062  0034EA  361F               	rlcf	disk_readp@lba,f,c
 10063  0034EC  3620               	rlcf	disk_readp@lba+1,f,c
 10064  0034EE  3621               	rlcf	disk_readp@lba+2,f,c
 10065  0034F0  3622               	rlcf	disk_readp@lba+3,f,c
 10066  0034F2  2EE8               	decfsz	wreg,f,c
 10067  0034F4  D7F9               	goto	u5275
 10068  0034F6                     l4926:
 10069                           
 10070                           ;sd_mmc.c: 208: res = RES_ERROR;
 10071  0034F6  0E01               	movlw	1
 10072  0034F8  6E29               	movwf	disk_readp@res,c
 10073                           
 10074                           ;sd_mmc.c: 209: if (send_cmd((0x40+17), lba) == 0) {
 10075  0034FA  C01F  F015         	movff	disk_readp@lba,send_cmd@arg
 10076  0034FE  C020  F016         	movff	disk_readp@lba+1,send_cmd@arg+1
 10077  003502  C021  F017         	movff	disk_readp@lba+2,send_cmd@arg+2
 10078  003506  C022  F018         	movff	disk_readp@lba+3,send_cmd@arg+3
 10079  00350A  0E51               	movlw	81
 10080  00350C  EC01  F01A         	call	_send_cmd
 10081  003510  0900               	iorlw	0
 10082  003512  A4D8               	btfss	status,2,c
 10083  003514  D04F               	goto	l4958
 10084                           
 10085                           ;sd_mmc.c: 211: bc = 30000;
 10086  003516  0E75               	movlw	117
 10087  003518  6E2C               	movwf	disk_readp@bc+1,c
 10088  00351A  0E30               	movlw	48
 10089  00351C  6E2B               	movwf	disk_readp@bc,c
 10090  00351E                     l4932:
 10091                           
 10092                           ;sd_mmc.c: 213: rc = rcv_spi();
 10093  00351E  EC9A  F01E         	call	_rcv_spi	;wreg free
 10094  003522  6E2A               	movwf	disk_readp@rc,c
 10095                           
 10096                           ;sd_mmc.c: 214: } while (rc == 0xFF && --bc);
 10097  003524  282A               	incf	disk_readp@rc,w,c
 10098  003526  A4D8               	btfss	status,2,c
 10099  003528  D007               	goto	l4938
 10100  00352A  062B               	decf	disk_readp@bc,f,c
 10101  00352C  A0D8               	btfss	status,0,c
 10102  00352E  062C               	decf	disk_readp@bc+1,f,c
 10103  003530  502C               	movf	(disk_readp@bc+1)& (0+255),w,c
 10104  003532  102B               	iorwf	disk_readp@bc& (0+255),w,c
 10105  003534  A4D8               	btfss	status,2,c
 10106  003536  D7F3               	goto	l4932
 10107  003538                     l4938:
 10108                           
 10109                           ;sd_mmc.c: 216: if (rc == 0xFE) {
 10110  003538  502A               	movf	disk_readp@rc,w,c
 10111  00353A  0AFE               	xorlw	254
 10112  00353C  A4D8               	btfss	status,2,c
 10113  00353E  D03A               	goto	l4958
 10114                           
 10115                           ;sd_mmc.c: 217: bc = 514 - ofs - cnt;
 10116  003540  C023  F027         	movff	disk_readp@ofs,??_disk_readp
 10117  003544  C024  F028         	movff	disk_readp@ofs+1,??_disk_readp+1
 10118  003548  5025               	movf	disk_readp@cnt,w,c
 10119  00354A  2627               	addwf	??_disk_readp,f,c
 10120  00354C  5026               	movf	disk_readp@cnt+1,w,c
 10121  00354E  2228               	addwfc	??_disk_readp+1,f,c
 10122  003550  1E27               	comf	??_disk_readp,f,c
 10123  003552  1E28               	comf	??_disk_readp+1,f,c
 10124  003554  4A27               	infsnz	??_disk_readp,f,c
 10125  003556  2A28               	incf	??_disk_readp+1,f,c
 10126  003558  0E02               	movlw	2
 10127  00355A  2427               	addwf	??_disk_readp,w,c
 10128  00355C  6E2B               	movwf	disk_readp@bc,c
 10129  00355E  0E02               	movlw	2
 10130  003560  2028               	addwfc	??_disk_readp+1,w,c
 10131  003562  6E2C               	movwf	disk_readp@bc+1,c
 10132                           
 10133                           ;sd_mmc.c: 220: if (ofs) {
 10134  003564  5024               	movf	disk_readp@ofs+1,w,c
 10135  003566  1023               	iorwf	disk_readp@ofs,w,c
 10136  003568  B4D8               	btfsc	status,2,c
 10137  00356A  D009               	goto	l4946
 10138  00356C                     l4942:
 10139  00356C  EC9A  F01E         	call	_rcv_spi	;wreg free
 10140  003570  0623               	decf	disk_readp@ofs,f,c
 10141  003572  A0D8               	btfss	status,0,c
 10142  003574  0624               	decf	disk_readp@ofs+1,f,c
 10143  003576  5024               	movf	(disk_readp@ofs+1)& (0+255),w,c
 10144  003578  1023               	iorwf	disk_readp@ofs& (0+255),w,c
 10145  00357A  A4D8               	btfss	status,2,c
 10146  00357C  D7F7               	goto	l4942
 10147  00357E                     l4946:
 10148                           
 10149                           ;sd_mmc.c: 226: *buff++ = rcv_spi();
 10150  00357E  EC9A  F01E         	call	_rcv_spi	;wreg free
 10151  003582  C01D  FFD9         	movff	disk_readp@buff,fsr2l
 10152  003586  C01E  FFDA         	movff	disk_readp@buff+1,fsr2h
 10153  00358A  6EDF               	movwf	indf2,c
 10154  00358C  4A1D               	infsnz	disk_readp@buff,f,c
 10155  00358E  2A1E               	incf	disk_readp@buff+1,f,c
 10156                           
 10157                           ;sd_mmc.c: 227: while (--cnt);
 10158  003590  0625               	decf	disk_readp@cnt,f,c
 10159  003592  A0D8               	btfss	status,0,c
 10160  003594  0626               	decf	disk_readp@cnt+1,f,c
 10161  003596  5026               	movf	(disk_readp@cnt+1)& (0+255),w,c
 10162  003598  1025               	iorwf	disk_readp@cnt& (0+255),w,c
 10163  00359A  A4D8               	btfss	status,2,c
 10164  00359C  D7F0               	goto	l4946
 10165  00359E                     l4952:
 10166  00359E  EC9A  F01E         	call	_rcv_spi	;wreg free
 10167  0035A2  062B               	decf	disk_readp@bc,f,c
 10168  0035A4  A0D8               	btfss	status,0,c
 10169  0035A6  062C               	decf	disk_readp@bc+1,f,c
 10170  0035A8  502C               	movf	(disk_readp@bc+1)& (0+255),w,c
 10171  0035AA  102B               	iorwf	disk_readp@bc& (0+255),w,c
 10172  0035AC  A4D8               	btfss	status,2,c
 10173  0035AE  D7F7               	goto	l4952
 10174                           
 10175                           ;sd_mmc.c: 232: res = RES_OK;
 10176  0035B0  0E00               	movlw	0
 10177  0035B2  6E29               	movwf	disk_readp@res,c
 10178  0035B4                     l4958:
 10179                           
 10180                           ;sd_mmc.c: 233: }
 10181                           ;sd_mmc.c: 234: }
 10182                           ;sd_mmc.c: 236: release_spi();
 10183  0035B4  EC9F  F01E         	call	_release_spi	;wreg free
 10184                           
 10185                           ;sd_mmc.c: 238: return res;
 10186  0035B8  5029               	movf	disk_readp@res,w,c
 10187  0035BA  0012               	return	
 10188  0035BC                     __end_of_disk_readp:
 10189                           	opt stack 0
 10190                           tblptru	equ	0xFF8
 10191                           tblptrh	equ	0xFF7
 10192                           tblptrl	equ	0xFF6
 10193                           tablat	equ	0xFF5
 10194                           prodh	equ	0xFF4
 10195                           prodl	equ	0xFF3
 10196                           intcon	equ	0xFF2
 10197                           postinc0	equ	0xFEE
 10198                           wreg	equ	0xFE8
 10199                           indf1	equ	0xFE7
 10200                           postinc1	equ	0xFE6
 10201                           postdec1	equ	0xFE5
 10202                           fsr1h	equ	0xFE2
 10203                           fsr1l	equ	0xFE1
 10204                           indf2	equ	0xFDF
 10205                           postinc2	equ	0xFDE
 10206                           postdec2	equ	0xFDD
 10207                           fsr2h	equ	0xFDA
 10208                           fsr2l	equ	0xFD9
 10209                           status	equ	0xFD8
 10210                           
 10211 ;; *************** function _send_cmd *****************
 10212 ;; Defined at:
 10213 ;;		line 66 in file "../../../PIC18F/sd_mmc.c"
 10214 ;; Parameters:    Size  Location     Type
 10215 ;;  cmd             1    wreg     unsigned char 
 10216 ;;  arg             4   20[COMRAM] unsigned long 
 10217 ;; Auto vars:     Size  Location     Type
 10218 ;;  cmd             1   27[COMRAM] unsigned char 
 10219 ;;  n               1   26[COMRAM] unsigned char 
 10220 ;;  res             1   25[COMRAM] unsigned char 
 10221 ;; Return value:  Size  Location     Type
 10222 ;;                  1    wreg      unsigned char 
 10223 ;; Registers used:
 10224 ;;		wreg, status,2, status,0, cstack
 10225 ;; Tracked objects:
 10226 ;;		On entry : 0/0
 10227 ;;		On exit  : 0/0
 10228 ;;		Unchanged: 0/0
 10229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10230 ;;      Params:         4       0       0       0       0       0       0       0       0
 10231 ;;      Locals:         3       0       0       0       0       0       0       0       0
 10232 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10233 ;;      Totals:         8       0       0       0       0       0       0       0       0
 10234 ;;Total ram usage:        8 bytes
 10235 ;; Hardware stack levels used:    1
 10236 ;; Hardware stack levels required when called:    4
 10237 ;; This function calls:
 10238 ;;		_rcv_spi
 10239 ;;		_wait_ready
 10240 ;;		_xmit_spi
 10241 ;; This function is called by:
 10242 ;;		_disk_initialize
 10243 ;;		_disk_readp
 10244 ;; This function uses a non-reentrant model
 10245 ;;
 10246                           
 10247                           	psect	text34
 10248  003402                     __ptext34:
 10249                           	opt stack 0
 10250  003402                     _send_cmd:
 10251                           	opt stack 21
 10252                           
 10253                           ;incstack = 0
 10254                           ;send_cmd@cmd stored from wreg
 10255  003402  6E1C               	movwf	send_cmd@cmd,c
 10256                           
 10257                           ;sd_mmc.c: 71: BYTE n, res;
 10258                           ;sd_mmc.c: 74: LATCbits.LATC6 = 1;
 10259  003404  8C8B               	bsf	3979,6,c	;volatile
 10260                           
 10261                           ;sd_mmc.c: 75: LATCbits.LATC6 = 0;
 10262  003406  9C8B               	bcf	3979,6,c	;volatile
 10263                           
 10264                           ;sd_mmc.c: 77: if (wait_ready() != 0xFF) {
 10265  003408  ECEF  F01D         	call	_wait_ready	;wreg free
 10266  00340C  6E19               	movwf	??_send_cmd& (0+255),c
 10267  00340E  2819               	incf	??_send_cmd,w,c
 10268  003410  B4D8               	btfsc	status,2,c
 10269  003412  D002               	goto	l324
 10270                           
 10271                           ;sd_mmc.c: 78: return 0xFF;
 10272  003414  0EFF               	movlw	255
 10273  003416  D064               	goto	l325
 10274  003418                     l324:
 10275                           
 10276                           ;sd_mmc.c: 79: }
 10277                           ;sd_mmc.c: 81: if (cmd & 0x80) {
 10278  003418  AE1C               	btfss	send_cmd@cmd,7,c
 10279  00341A  D033               	goto	l4892
 10280                           
 10281                           ;sd_mmc.c: 82: cmd &= 0x7F;
 10282  00341C  9E1C               	bcf	send_cmd@cmd,7,c
 10283                           
 10284                           ;sd_mmc.c: 87: xmit_spi(cmd);
 10285  00341E  501C               	movf	send_cmd@cmd,w,c
 10286  003420  EC91  F01E         	call	_xmit_spi
 10287                           
 10288                           ;sd_mmc.c: 88: xmit_spi((BYTE)(arg >> 24));
 10289  003424  5018               	movf	send_cmd@arg+3,w,c
 10290  003426  EC91  F01E         	call	_xmit_spi
 10291                           
 10292                           ;sd_mmc.c: 89: xmit_spi((BYTE)(arg >> 16));
 10293  00342A  5017               	movf	send_cmd@arg+2,w,c
 10294  00342C  EC91  F01E         	call	_xmit_spi
 10295                           
 10296                           ;sd_mmc.c: 90: xmit_spi((BYTE)(arg >> 8));
 10297  003430  5016               	movf	send_cmd@arg+1,w,c
 10298  003432  EC91  F01E         	call	_xmit_spi
 10299                           
 10300                           ;sd_mmc.c: 91: xmit_spi((BYTE)arg);
 10301  003436  5015               	movf	send_cmd@arg,w,c
 10302  003438  EC91  F01E         	call	_xmit_spi
 10303                           
 10304                           ;sd_mmc.c: 92: n = 0x01;
 10305  00343C  0E01               	movlw	1
 10306  00343E  6E1B               	movwf	send_cmd@n,c
 10307                           
 10308                           ;sd_mmc.c: 93: if (cmd == (0x40+0)) n = 0x95;
 10309  003440  501C               	movf	send_cmd@cmd,w,c
 10310  003442  0A40               	xorlw	64
 10311  003444  A4D8               	btfss	status,2,c
 10312  003446  D002               	goto	l4868
 10313  003448  0E95               	movlw	149
 10314  00344A  6E1B               	movwf	send_cmd@n,c
 10315  00344C                     l4868:
 10316                           
 10317                           ;sd_mmc.c: 94: if (cmd == (0x40+8)) n = 0x87;
 10318  00344C  501C               	movf	send_cmd@cmd,w,c
 10319  00344E  0A48               	xorlw	72
 10320  003450  A4D8               	btfss	status,2,c
 10321  003452  D002               	goto	l4872
 10322  003454  0E87               	movlw	135
 10323  003456  6E1B               	movwf	send_cmd@n,c
 10324  003458                     l4872:
 10325                           
 10326                           ;sd_mmc.c: 95: xmit_spi(n);
 10327  003458  501B               	movf	send_cmd@n,w,c
 10328  00345A  EC91  F01E         	call	_xmit_spi
 10329                           
 10330                           ;sd_mmc.c: 98: if (cmd == (0x40+12)) rcv_spi();
 10331  00345E  501C               	movf	send_cmd@cmd,w,c
 10332  003460  0A4C               	xorlw	76
 10333  003462  B4D8               	btfsc	status,2,c
 10334  003464  EC9A  F01E         	call	_rcv_spi	;wreg free
 10335                           
 10336                           ;sd_mmc.c: 100: n = 10;
 10337  003468  0E0A               	movlw	10
 10338  00346A  6E1B               	movwf	send_cmd@n,c
 10339  00346C                     l4880:
 10340                           
 10341                           ;sd_mmc.c: 102: res = rcv_spi();
 10342  00346C  EC9A  F01E         	call	_rcv_spi	;wreg free
 10343  003470  6E1A               	movwf	send_cmd@res,c
 10344                           
 10345                           ;sd_mmc.c: 103: while ((res & 0x80) && --n);
 10346  003472  AE1A               	btfss	send_cmd@res,7,c
 10347  003474  D002               	goto	l4886
 10348  003476  2E1B               	decfsz	send_cmd@n,f,c
 10349  003478  D7F9               	goto	l4880
 10350  00347A                     l4886:
 10351                           
 10352                           ;sd_mmc.c: 105: if (res > 1) return res;
 10353  00347A  0E01               	movlw	1
 10354  00347C  641A               	cpfsgt	send_cmd@res,c
 10355  00347E  D001               	goto	l4892
 10356  003480  D02E               	goto	l4918
 10357  003482                     l4892:
 10358                           
 10359                           ;sd_mmc.c: 106: }
 10360                           ;sd_mmc.c: 110: xmit_spi(cmd);
 10361  003482  501C               	movf	send_cmd@cmd,w,c
 10362  003484  EC91  F01E         	call	_xmit_spi
 10363                           
 10364                           ;sd_mmc.c: 111: xmit_spi((BYTE)(arg >> 24));
 10365  003488  5018               	movf	send_cmd@arg+3,w,c
 10366  00348A  EC91  F01E         	call	_xmit_spi
 10367                           
 10368                           ;sd_mmc.c: 112: xmit_spi((BYTE)(arg >> 16));
 10369  00348E  5017               	movf	send_cmd@arg+2,w,c
 10370  003490  EC91  F01E         	call	_xmit_spi
 10371                           
 10372                           ;sd_mmc.c: 113: xmit_spi((BYTE)(arg >> 8));
 10373  003494  5016               	movf	send_cmd@arg+1,w,c
 10374  003496  EC91  F01E         	call	_xmit_spi
 10375                           
 10376                           ;sd_mmc.c: 114: xmit_spi((BYTE)arg);
 10377  00349A  5015               	movf	send_cmd@arg,w,c
 10378  00349C  EC91  F01E         	call	_xmit_spi
 10379                           
 10380                           ;sd_mmc.c: 115: n = 0x01;
 10381  0034A0  0E01               	movlw	1
 10382  0034A2  6E1B               	movwf	send_cmd@n,c
 10383                           
 10384                           ;sd_mmc.c: 116: if (cmd == (0x40+0)) n = 0x95;
 10385  0034A4  501C               	movf	send_cmd@cmd,w,c
 10386  0034A6  0A40               	xorlw	64
 10387  0034A8  A4D8               	btfss	status,2,c
 10388  0034AA  D002               	goto	l4900
 10389  0034AC  0E95               	movlw	149
 10390  0034AE  6E1B               	movwf	send_cmd@n,c
 10391  0034B0                     l4900:
 10392                           
 10393                           ;sd_mmc.c: 117: if (cmd == (0x40+8)) n = 0x87;
 10394  0034B0  501C               	movf	send_cmd@cmd,w,c
 10395  0034B2  0A48               	xorlw	72
 10396  0034B4  A4D8               	btfss	status,2,c
 10397  0034B6  D002               	goto	l4904
 10398  0034B8  0E87               	movlw	135
 10399  0034BA  6E1B               	movwf	send_cmd@n,c
 10400  0034BC                     l4904:
 10401                           
 10402                           ;sd_mmc.c: 118: xmit_spi(n);
 10403  0034BC  501B               	movf	send_cmd@n,w,c
 10404  0034BE  EC91  F01E         	call	_xmit_spi
 10405                           
 10406                           ;sd_mmc.c: 121: if (cmd == (0x40+12)) rcv_spi();
 10407  0034C2  501C               	movf	send_cmd@cmd,w,c
 10408  0034C4  0A4C               	xorlw	76
 10409  0034C6  B4D8               	btfsc	status,2,c
 10410  0034C8  EC9A  F01E         	call	_rcv_spi	;wreg free
 10411                           
 10412                           ;sd_mmc.c: 123: n = 10;
 10413  0034CC  0E0A               	movlw	10
 10414  0034CE  6E1B               	movwf	send_cmd@n,c
 10415  0034D0                     l4912:
 10416                           
 10417                           ;sd_mmc.c: 125: res = rcv_spi();
 10418  0034D0  EC9A  F01E         	call	_rcv_spi	;wreg free
 10419  0034D4  6E1A               	movwf	send_cmd@res,c
 10420                           
 10421                           ;sd_mmc.c: 126: while ((res & 0x80) && --n);
 10422  0034D6  AE1A               	btfss	send_cmd@res,7,c
 10423  0034D8  D002               	goto	l4918
 10424  0034DA  2E1B               	decfsz	send_cmd@n,f,c
 10425  0034DC  D7F9               	goto	l4912
 10426  0034DE                     l4918:
 10427                           
 10428                           ;sd_mmc.c: 128: return res;
 10429  0034DE  501A               	movf	send_cmd@res,w,c
 10430  0034E0                     l325:
 10431  0034E0  0012               	return	
 10432  0034E2                     __end_of_send_cmd:
 10433                           	opt stack 0
 10434                           tblptru	equ	0xFF8
 10435                           tblptrh	equ	0xFF7
 10436                           tblptrl	equ	0xFF6
 10437                           tablat	equ	0xFF5
 10438                           prodh	equ	0xFF4
 10439                           prodl	equ	0xFF3
 10440                           intcon	equ	0xFF2
 10441                           postinc0	equ	0xFEE
 10442                           wreg	equ	0xFE8
 10443                           indf1	equ	0xFE7
 10444                           postinc1	equ	0xFE6
 10445                           postdec1	equ	0xFE5
 10446                           fsr1h	equ	0xFE2
 10447                           fsr1l	equ	0xFE1
 10448                           indf2	equ	0xFDF
 10449                           postinc2	equ	0xFDE
 10450                           postdec2	equ	0xFDD
 10451                           fsr2h	equ	0xFDA
 10452                           fsr2l	equ	0xFD9
 10453                           status	equ	0xFD8
 10454                           
 10455 ;; *************** function _xmit_spi *****************
 10456 ;; Defined at:
 10457 ;;		line 30 in file "../../../PIC18F/spi_pic18.c"
 10458 ;; Parameters:    Size  Location     Type
 10459 ;;  c               1    wreg     unsigned char 
 10460 ;; Auto vars:     Size  Location     Type
 10461 ;;  c               1   16[COMRAM] unsigned char 
 10462 ;;  temp            1   15[COMRAM] unsigned char 
 10463 ;; Return value:  Size  Location     Type
 10464 ;;		None               void
 10465 ;; Registers used:
 10466 ;;		wreg
 10467 ;; Tracked objects:
 10468 ;;		On entry : 0/0
 10469 ;;		On exit  : 0/0
 10470 ;;		Unchanged: 0/0
 10471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10472 ;;      Params:         0       0       0       0       0       0       0       0       0
 10473 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10474 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10475 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10476 ;;Total ram usage:        2 bytes
 10477 ;; Hardware stack levels used:    1
 10478 ;; Hardware stack levels required when called:    2
 10479 ;; This function calls:
 10480 ;;		Nothing
 10481 ;; This function is called by:
 10482 ;;		_send_cmd
 10483 ;; This function uses a non-reentrant model
 10484 ;;
 10485                           
 10486                           	psect	text35
 10487  003D22                     __ptext35:
 10488                           	opt stack 0
 10489  003D22                     _xmit_spi:
 10490                           	opt stack 22
 10491                           
 10492                           ;incstack = 0
 10493                           ;xmit_spi@c stored from wreg
 10494  003D22  6E11               	movwf	xmit_spi@c,c
 10495                           
 10496                           ;spi_pic18.c: 32: unsigned char temp;
 10497                           ;spi_pic18.c: 33: temp = SSPBUF;
 10498  003D24  CFC9 F010          	movff	4041,xmit_spi@temp	;volatile
 10499                           
 10500                           ;spi_pic18.c: 34: PIR1bits.SSPIF = 0;
 10501  003D28  969E               	bcf	3998,3,c	;volatile
 10502                           
 10503                           ;spi_pic18.c: 36: SSPBUF = c;
 10504  003D2A  C011  FFC9         	movff	xmit_spi@c,4041	;volatile
 10505  003D2E                     l417:
 10506  003D2E  B69E               	btfsc	3998,3,c	;volatile
 10507  003D30  0012               	return	
 10508  003D32  D7FD               	goto	l417
 10509  003D34                     __end_of_xmit_spi:
 10510                           	opt stack 0
 10511                           tblptru	equ	0xFF8
 10512                           tblptrh	equ	0xFF7
 10513                           tblptrl	equ	0xFF6
 10514                           tablat	equ	0xFF5
 10515                           prodh	equ	0xFF4
 10516                           prodl	equ	0xFF3
 10517                           intcon	equ	0xFF2
 10518                           postinc0	equ	0xFEE
 10519                           wreg	equ	0xFE8
 10520                           indf1	equ	0xFE7
 10521                           postinc1	equ	0xFE6
 10522                           postdec1	equ	0xFE5
 10523                           fsr1h	equ	0xFE2
 10524                           fsr1l	equ	0xFE1
 10525                           indf2	equ	0xFDF
 10526                           postinc2	equ	0xFDE
 10527                           postdec2	equ	0xFDD
 10528                           fsr2h	equ	0xFDA
 10529                           fsr2l	equ	0xFD9
 10530                           status	equ	0xFD8
 10531                           
 10532 ;; *************** function _wait_ready *****************
 10533 ;; Defined at:
 10534 ;;		line 48 in file "../../../PIC18F/sd_mmc.c"
 10535 ;; Parameters:    Size  Location     Type
 10536 ;;		None
 10537 ;; Auto vars:     Size  Location     Type
 10538 ;;  msg            10    0        unsigned char [10]
 10539 ;;  timeout         4   15[COMRAM] unsigned long 
 10540 ;;  res             1   19[COMRAM] unsigned char 
 10541 ;; Return value:  Size  Location     Type
 10542 ;;                  1    wreg      unsigned char 
 10543 ;; Registers used:
 10544 ;;		wreg, status,2, status,0, cstack
 10545 ;; Tracked objects:
 10546 ;;		On entry : 0/0
 10547 ;;		On exit  : 0/0
 10548 ;;		Unchanged: 0/0
 10549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10550 ;;      Params:         0       0       0       0       0       0       0       0       0
 10551 ;;      Locals:         5       0       0       0       0       0       0       0       0
 10552 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10553 ;;      Totals:         5       0       0       0       0       0       0       0       0
 10554 ;;Total ram usage:        5 bytes
 10555 ;; Hardware stack levels used:    1
 10556 ;; Hardware stack levels required when called:    3
 10557 ;; This function calls:
 10558 ;;		_rcv_spi
 10559 ;; This function is called by:
 10560 ;;		_send_cmd
 10561 ;; This function uses a non-reentrant model
 10562 ;;
 10563                           
 10564                           	psect	text36
 10565  003BDE                     __ptext36:
 10566                           	opt stack 0
 10567  003BDE                     _wait_ready:
 10568                           	opt stack 21
 10569                           
 10570                           ;sd_mmc.c: 50: BYTE res;
 10571                           ;sd_mmc.c: 51: DWORD timeout = 0x7FFF;
 10572                           
 10573                           ;incstack = 0
 10574  003BDE  0EFF               	movlw	255
 10575  003BE0  6E10               	movwf	wait_ready@timeout,c
 10576  003BE2  0E7F               	movlw	127
 10577  003BE4  6E11               	movwf	wait_ready@timeout+1,c
 10578  003BE6  0E00               	movlw	0
 10579  003BE8  6E12               	movwf	wait_ready@timeout+2,c
 10580  003BEA  0E00               	movlw	0
 10581  003BEC  6E13               	movwf	wait_ready@timeout+3,c
 10582  003BEE                     l4824:
 10583                           
 10584                           ;sd_mmc.c: 55: res = rcv_spi();
 10585  003BEE  EC9A  F01E         	call	_rcv_spi	;wreg free
 10586  003BF2  6E14               	movwf	wait_ready@res,c
 10587                           
 10588                           ;sd_mmc.c: 56: while ((res != 0xFF) && (--timeout));
 10589  003BF4  2814               	incf	wait_ready@res,w,c
 10590  003BF6  B4D8               	btfsc	status,2,c
 10591  003BF8  D00B               	goto	l4830
 10592  003BFA  0610               	decf	wait_ready@timeout,f,c
 10593  003BFC  0E00               	movlw	0
 10594  003BFE  5A11               	subwfb	wait_ready@timeout+1,f,c
 10595  003C00  5A12               	subwfb	wait_ready@timeout+2,f,c
 10596  003C02  5A13               	subwfb	wait_ready@timeout+3,f,c
 10597  003C04  5013               	movf	(wait_ready@timeout+3)& (0+255),w,c
 10598  003C06  1010               	iorwf	wait_ready@timeout& (0+255),w,c
 10599  003C08  1011               	iorwf	(wait_ready@timeout+1)& (0+255),w,c
 10600  003C0A  1012               	iorwf	(wait_ready@timeout+2)& (0+255),w,c
 10601  003C0C  A4D8               	btfss	status,2,c
 10602  003C0E  D7EF               	goto	l4824
 10603  003C10                     l4830:
 10604                           
 10605                           ;sd_mmc.c: 58: return res;
 10606  003C10  5014               	movf	wait_ready@res,w,c
 10607  003C12  0012               	return	
 10608  003C14                     __end_of_wait_ready:
 10609                           	opt stack 0
 10610                           tblptru	equ	0xFF8
 10611                           tblptrh	equ	0xFF7
 10612                           tblptrl	equ	0xFF6
 10613                           tablat	equ	0xFF5
 10614                           prodh	equ	0xFF4
 10615                           prodl	equ	0xFF3
 10616                           intcon	equ	0xFF2
 10617                           postinc0	equ	0xFEE
 10618                           wreg	equ	0xFE8
 10619                           indf1	equ	0xFE7
 10620                           postinc1	equ	0xFE6
 10621                           postdec1	equ	0xFE5
 10622                           fsr1h	equ	0xFE2
 10623                           fsr1l	equ	0xFE1
 10624                           indf2	equ	0xFDF
 10625                           postinc2	equ	0xFDE
 10626                           postdec2	equ	0xFDD
 10627                           fsr2h	equ	0xFDA
 10628                           fsr2l	equ	0xFD9
 10629                           status	equ	0xFD8
 10630                           
 10631 ;; *************** function _release_spi *****************
 10632 ;; Defined at:
 10633 ;;		line 37 in file "../../../PIC18F/sd_mmc.c"
 10634 ;; Parameters:    Size  Location     Type
 10635 ;;		None
 10636 ;; Auto vars:     Size  Location     Type
 10637 ;;		None
 10638 ;; Return value:  Size  Location     Type
 10639 ;;		None               void
 10640 ;; Registers used:
 10641 ;;		wreg, status,2, cstack
 10642 ;; Tracked objects:
 10643 ;;		On entry : 0/0
 10644 ;;		On exit  : 0/0
 10645 ;;		Unchanged: 0/0
 10646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10647 ;;      Params:         0       0       0       0       0       0       0       0       0
 10648 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10649 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10650 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10651 ;;Total ram usage:        0 bytes
 10652 ;; Hardware stack levels used:    1
 10653 ;; Hardware stack levels required when called:    3
 10654 ;; This function calls:
 10655 ;;		_rcv_spi
 10656 ;; This function is called by:
 10657 ;;		_disk_initialize
 10658 ;;		_disk_readp
 10659 ;; This function uses a non-reentrant model
 10660 ;;
 10661                           
 10662                           	psect	text37
 10663  003D3E                     __ptext37:
 10664                           	opt stack 0
 10665  003D3E                     _release_spi:
 10666                           	opt stack 22
 10667                           
 10668                           ;sd_mmc.c: 39: LATCbits.LATC6 = 1;
 10669                           
 10670                           ;incstack = 0
 10671  003D3E  8C8B               	bsf	3979,6,c	;volatile
 10672                           
 10673                           ;sd_mmc.c: 40: rcv_spi();
 10674  003D40  EC9A  F01E         	call	_rcv_spi	;wreg free
 10675  003D44  0012               	return	
 10676  003D46                     __end_of_release_spi:
 10677                           	opt stack 0
 10678                           tblptru	equ	0xFF8
 10679                           tblptrh	equ	0xFF7
 10680                           tblptrl	equ	0xFF6
 10681                           tablat	equ	0xFF5
 10682                           prodh	equ	0xFF4
 10683                           prodl	equ	0xFF3
 10684                           intcon	equ	0xFF2
 10685                           postinc0	equ	0xFEE
 10686                           wreg	equ	0xFE8
 10687                           indf1	equ	0xFE7
 10688                           postinc1	equ	0xFE6
 10689                           postdec1	equ	0xFE5
 10690                           fsr1h	equ	0xFE2
 10691                           fsr1l	equ	0xFE1
 10692                           indf2	equ	0xFDF
 10693                           postinc2	equ	0xFDE
 10694                           postdec2	equ	0xFDD
 10695                           fsr2h	equ	0xFDA
 10696                           fsr2l	equ	0xFD9
 10697                           status	equ	0xFD8
 10698                           
 10699 ;; *************** function _rcv_spi *****************
 10700 ;; Defined at:
 10701 ;;		line 41 in file "../../../PIC18F/spi_pic18.c"
 10702 ;; Parameters:    Size  Location     Type
 10703 ;;		None
 10704 ;; Auto vars:     Size  Location     Type
 10705 ;;		None
 10706 ;; Return value:  Size  Location     Type
 10707 ;;                  1    wreg      unsigned char 
 10708 ;; Registers used:
 10709 ;;		wreg, status,2
 10710 ;; Tracked objects:
 10711 ;;		On entry : 0/0
 10712 ;;		On exit  : 0/0
 10713 ;;		Unchanged: 0/0
 10714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10715 ;;      Params:         0       0       0       0       0       0       0       0       0
 10716 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10717 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10718 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10719 ;;Total ram usage:        0 bytes
 10720 ;; Hardware stack levels used:    1
 10721 ;; Hardware stack levels required when called:    2
 10722 ;; This function calls:
 10723 ;;		Nothing
 10724 ;; This function is called by:
 10725 ;;		_release_spi
 10726 ;;		_wait_ready
 10727 ;;		_send_cmd
 10728 ;;		_disk_initialize
 10729 ;;		_disk_readp
 10730 ;; This function uses a non-reentrant model
 10731 ;;
 10732                           
 10733                           	psect	text38
 10734  003D34                     __ptext38:
 10735                           	opt stack 0
 10736  003D34                     _rcv_spi:
 10737                           	opt stack 21
 10738                           
 10739                           ;spi_pic18.c: 46: SSPBUF = 0xFF;
 10740                           
 10741                           ;incstack = 0
 10742  003D34  68C9               	setf	4041,c	;volatile
 10743  003D36                     l423:
 10744  003D36  A0C7               	btfss	4039,0,c	;volatile
 10745  003D38  D7FE               	goto	l423
 10746                           
 10747                           ;spi_pic18.c: 49: return ( SSPBUF );
 10748  003D3A  50C9               	movf	4041,w,c	;volatile
 10749  003D3C  0012               	return	
 10750  003D3E                     __end_of_rcv_spi:
 10751                           	opt stack 0
 10752                           tblptru	equ	0xFF8
 10753                           tblptrh	equ	0xFF7
 10754                           tblptrl	equ	0xFF6
 10755                           tablat	equ	0xFF5
 10756                           prodh	equ	0xFF4
 10757                           prodl	equ	0xFF3
 10758                           intcon	equ	0xFF2
 10759                           postinc0	equ	0xFEE
 10760                           wreg	equ	0xFE8
 10761                           indf1	equ	0xFE7
 10762                           postinc1	equ	0xFE6
 10763                           postdec1	equ	0xFE5
 10764                           fsr1h	equ	0xFE2
 10765                           fsr1l	equ	0xFE1
 10766                           indf2	equ	0xFDF
 10767                           postinc2	equ	0xFDE
 10768                           postdec2	equ	0xFDD
 10769                           fsr2h	equ	0xFDA
 10770                           fsr2l	equ	0xFD9
 10771                           status	equ	0xFD8
 10772                           
 10773 ;; *************** function ___lmul *****************
 10774 ;; Defined at:
 10775 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul32.c"
 10776 ;; Parameters:    Size  Location     Type
 10777 ;;  multiplier      4   15[COMRAM] unsigned long 
 10778 ;;  multiplicand    4   19[COMRAM] unsigned long 
 10779 ;; Auto vars:     Size  Location     Type
 10780 ;;  product         4   23[COMRAM] unsigned long 
 10781 ;; Return value:  Size  Location     Type
 10782 ;;                  4   15[COMRAM] unsigned long 
 10783 ;; Registers used:
 10784 ;;		wreg, status,2, status,0
 10785 ;; Tracked objects:
 10786 ;;		On entry : 0/0
 10787 ;;		On exit  : 0/0
 10788 ;;		Unchanged: 0/0
 10789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10790 ;;      Params:         8       0       0       0       0       0       0       0       0
 10791 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10792 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10793 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10794 ;;Total ram usage:       12 bytes
 10795 ;; Hardware stack levels used:    1
 10796 ;; Hardware stack levels required when called:    2
 10797 ;; This function calls:
 10798 ;;		Nothing
 10799 ;; This function is called by:
 10800 ;;		_clust2sect
 10801 ;;		_pf_mount
 10802 ;; This function uses a non-reentrant model
 10803 ;;
 10804                           
 10805                           	psect	text39
 10806  003AFC                     __ptext39:
 10807                           	opt stack 0
 10808  003AFC                     ___lmul:
 10809                           	opt stack 24
 10810                           
 10811                           ;incstack = 0
 10812  003AFC  0E00               	movlw	0
 10813  003AFE  6E18               	movwf	___lmul@product,c
 10814  003B00  0E00               	movlw	0
 10815  003B02  6E19               	movwf	___lmul@product+1,c
 10816  003B04  0E00               	movlw	0
 10817  003B06  6E1A               	movwf	___lmul@product+2,c
 10818  003B08  0E00               	movlw	0
 10819  003B0A  6E1B               	movwf	___lmul@product+3,c
 10820  003B0C                     l3142:
 10821  003B0C  A010               	btfss	___lmul@multiplier,0,c
 10822  003B0E  D008               	goto	l3146
 10823  003B10  5014               	movf	___lmul@multiplicand,w,c
 10824  003B12  2618               	addwf	___lmul@product,f,c
 10825  003B14  5015               	movf	___lmul@multiplicand+1,w,c
 10826  003B16  2219               	addwfc	___lmul@product+1,f,c
 10827  003B18  5016               	movf	___lmul@multiplicand+2,w,c
 10828  003B1A  221A               	addwfc	___lmul@product+2,f,c
 10829  003B1C  5017               	movf	___lmul@multiplicand+3,w,c
 10830  003B1E  221B               	addwfc	___lmul@product+3,f,c
 10831  003B20                     l3146:
 10832  003B20  90D8               	bcf	status,0,c
 10833  003B22  3614               	rlcf	___lmul@multiplicand,f,c
 10834  003B24  3615               	rlcf	___lmul@multiplicand+1,f,c
 10835  003B26  3616               	rlcf	___lmul@multiplicand+2,f,c
 10836  003B28  3617               	rlcf	___lmul@multiplicand+3,f,c
 10837  003B2A  90D8               	bcf	status,0,c
 10838  003B2C  3213               	rrcf	___lmul@multiplier+3,f,c
 10839  003B2E  3212               	rrcf	___lmul@multiplier+2,f,c
 10840  003B30  3211               	rrcf	___lmul@multiplier+1,f,c
 10841  003B32  3210               	rrcf	___lmul@multiplier,f,c
 10842  003B34  5013               	movf	___lmul@multiplier+3,w,c
 10843  003B36  1010               	iorwf	___lmul@multiplier,w,c
 10844  003B38  1011               	iorwf	___lmul@multiplier+1,w,c
 10845  003B3A  1012               	iorwf	___lmul@multiplier+2,w,c
 10846  003B3C  A4D8               	btfss	status,2,c
 10847  003B3E  D7E6               	goto	l3142
 10848  003B40  C018  F010         	movff	___lmul@product,?___lmul
 10849  003B44  C019  F011         	movff	___lmul@product+1,?___lmul+1
 10850  003B48  C01A  F012         	movff	___lmul@product+2,?___lmul+2
 10851  003B4C  C01B  F013         	movff	___lmul@product+3,?___lmul+3
 10852  003B50  0012               	return	
 10853  003B52                     __end_of___lmul:
 10854                           	opt stack 0
 10855                           tblptru	equ	0xFF8
 10856                           tblptrh	equ	0xFF7
 10857                           tblptrl	equ	0xFF6
 10858                           tablat	equ	0xFF5
 10859                           prodh	equ	0xFF4
 10860                           prodl	equ	0xFF3
 10861                           intcon	equ	0xFF2
 10862                           postinc0	equ	0xFEE
 10863                           wreg	equ	0xFE8
 10864                           indf1	equ	0xFE7
 10865                           postinc1	equ	0xFE6
 10866                           postdec1	equ	0xFE5
 10867                           fsr1h	equ	0xFE2
 10868                           fsr1l	equ	0xFE1
 10869                           indf2	equ	0xFDF
 10870                           postinc2	equ	0xFDE
 10871                           postdec2	equ	0xFDD
 10872                           fsr2h	equ	0xFDA
 10873                           fsr2l	equ	0xFD9
 10874                           status	equ	0xFD8
 10875                           
 10876 ;; *************** function ___lldiv *****************
 10877 ;; Defined at:
 10878 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lldiv.c"
 10879 ;; Parameters:    Size  Location     Type
 10880 ;;  dividend        4   15[COMRAM] unsigned long 
 10881 ;;  divisor         4   19[COMRAM] unsigned long 
 10882 ;; Auto vars:     Size  Location     Type
 10883 ;;  quotient        4   23[COMRAM] unsigned long 
 10884 ;;  counter         1   27[COMRAM] unsigned char 
 10885 ;; Return value:  Size  Location     Type
 10886 ;;                  4   15[COMRAM] unsigned long 
 10887 ;; Registers used:
 10888 ;;		wreg, status,2, status,0
 10889 ;; Tracked objects:
 10890 ;;		On entry : 0/0
 10891 ;;		On exit  : 0/0
 10892 ;;		Unchanged: 0/0
 10893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10894 ;;      Params:         8       0       0       0       0       0       0       0       0
 10895 ;;      Locals:         5       0       0       0       0       0       0       0       0
 10896 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10897 ;;      Totals:        13       0       0       0       0       0       0       0       0
 10898 ;;Total ram usage:       13 bytes
 10899 ;; Hardware stack levels used:    1
 10900 ;; Hardware stack levels required when called:    2
 10901 ;; This function calls:
 10902 ;;		Nothing
 10903 ;; This function is called by:
 10904 ;;		_pf_mount
 10905 ;;		_pf_lseek
 10906 ;;		_set_sampling_rate
 10907 ;; This function uses a non-reentrant model
 10908 ;;
 10909                           
 10910                           	psect	text40
 10911  0038E6                     __ptext40:
 10912                           	opt stack 0
 10913  0038E6                     ___lldiv:
 10914                           	opt stack 24
 10915                           
 10916                           ;incstack = 0
 10917  0038E6  0E00               	movlw	0
 10918  0038E8  6E18               	movwf	___lldiv@quotient,c
 10919  0038EA  0E00               	movlw	0
 10920  0038EC  6E19               	movwf	___lldiv@quotient+1,c
 10921  0038EE  0E00               	movlw	0
 10922  0038F0  6E1A               	movwf	___lldiv@quotient+2,c
 10923  0038F2  0E00               	movlw	0
 10924  0038F4  6E1B               	movwf	___lldiv@quotient+3,c
 10925  0038F6  5017               	movf	___lldiv@divisor+3,w,c
 10926  0038F8  1014               	iorwf	___lldiv@divisor,w,c
 10927  0038FA  1015               	iorwf	___lldiv@divisor+1,w,c
 10928  0038FC  1016               	iorwf	___lldiv@divisor+2,w,c
 10929  0038FE  B4D8               	btfsc	status,2,c
 10930  003900  D02A               	goto	l998
 10931  003902  0E01               	movlw	1
 10932  003904  6E1C               	movwf	___lldiv@counter,c
 10933  003906  D006               	goto	l3424
 10934  003908                     l3422:
 10935  003908  90D8               	bcf	status,0,c
 10936  00390A  3614               	rlcf	___lldiv@divisor,f,c
 10937  00390C  3615               	rlcf	___lldiv@divisor+1,f,c
 10938  00390E  3616               	rlcf	___lldiv@divisor+2,f,c
 10939  003910  3617               	rlcf	___lldiv@divisor+3,f,c
 10940  003912  2A1C               	incf	___lldiv@counter,f,c
 10941  003914                     l3424:
 10942  003914  AE17               	btfss	___lldiv@divisor+3,7,c
 10943  003916  D7F8               	goto	l3422
 10944  003918                     l3426:
 10945  003918  90D8               	bcf	status,0,c
 10946  00391A  3618               	rlcf	___lldiv@quotient,f,c
 10947  00391C  3619               	rlcf	___lldiv@quotient+1,f,c
 10948  00391E  361A               	rlcf	___lldiv@quotient+2,f,c
 10949  003920  361B               	rlcf	___lldiv@quotient+3,f,c
 10950  003922  5014               	movf	___lldiv@divisor,w,c
 10951  003924  5C10               	subwf	___lldiv@dividend,w,c
 10952  003926  5015               	movf	___lldiv@divisor+1,w,c
 10953  003928  5811               	subwfb	___lldiv@dividend+1,w,c
 10954  00392A  5016               	movf	___lldiv@divisor+2,w,c
 10955  00392C  5812               	subwfb	___lldiv@dividend+2,w,c
 10956  00392E  5017               	movf	___lldiv@divisor+3,w,c
 10957  003930  5813               	subwfb	___lldiv@dividend+3,w,c
 10958  003932  A0D8               	btfss	status,0,c
 10959  003934  D009               	goto	l3434
 10960  003936  5014               	movf	___lldiv@divisor,w,c
 10961  003938  5E10               	subwf	___lldiv@dividend,f,c
 10962  00393A  5015               	movf	___lldiv@divisor+1,w,c
 10963  00393C  5A11               	subwfb	___lldiv@dividend+1,f,c
 10964  00393E  5016               	movf	___lldiv@divisor+2,w,c
 10965  003940  5A12               	subwfb	___lldiv@dividend+2,f,c
 10966  003942  5017               	movf	___lldiv@divisor+3,w,c
 10967  003944  5A13               	subwfb	___lldiv@dividend+3,f,c
 10968  003946  8018               	bsf	___lldiv@quotient,0,c
 10969  003948                     l3434:
 10970  003948  90D8               	bcf	status,0,c
 10971  00394A  3217               	rrcf	___lldiv@divisor+3,f,c
 10972  00394C  3216               	rrcf	___lldiv@divisor+2,f,c
 10973  00394E  3215               	rrcf	___lldiv@divisor+1,f,c
 10974  003950  3214               	rrcf	___lldiv@divisor,f,c
 10975  003952  2E1C               	decfsz	___lldiv@counter,f,c
 10976  003954  D7E1               	goto	l3426
 10977  003956                     l998:
 10978  003956  C018  F010         	movff	___lldiv@quotient,?___lldiv
 10979  00395A  C019  F011         	movff	___lldiv@quotient+1,?___lldiv+1
 10980  00395E  C01A  F012         	movff	___lldiv@quotient+2,?___lldiv+2
 10981  003962  C01B  F013         	movff	___lldiv@quotient+3,?___lldiv+3
 10982  003966  0012               	return	
 10983  003968                     __end_of___lldiv:
 10984                           	opt stack 0
 10985                           tblptru	equ	0xFF8
 10986                           tblptrh	equ	0xFF7
 10987                           tblptrl	equ	0xFF6
 10988                           tablat	equ	0xFF5
 10989                           prodh	equ	0xFF4
 10990                           prodl	equ	0xFF3
 10991                           intcon	equ	0xFF2
 10992                           postinc0	equ	0xFEE
 10993                           wreg	equ	0xFE8
 10994                           indf1	equ	0xFE7
 10995                           postinc1	equ	0xFE6
 10996                           postdec1	equ	0xFE5
 10997                           fsr1h	equ	0xFE2
 10998                           fsr1l	equ	0xFE1
 10999                           indf2	equ	0xFDF
 11000                           postinc2	equ	0xFDE
 11001                           postdec2	equ	0xFDD
 11002                           fsr2h	equ	0xFDA
 11003                           fsr2l	equ	0xFD9
 11004                           status	equ	0xFD8
 11005                           
 11006 ;; *************** function _delay *****************
 11007 ;; Defined at:
 11008 ;;		line 130 in file "../../../PIC18F/main.c"
 11009 ;; Parameters:    Size  Location     Type
 11010 ;;		None
 11011 ;; Auto vars:     Size  Location     Type
 11012 ;;  i               4   15[COMRAM] long 
 11013 ;; Return value:  Size  Location     Type
 11014 ;;		None               void
 11015 ;; Registers used:
 11016 ;;		wreg, status,2, status,0
 11017 ;; Tracked objects:
 11018 ;;		On entry : 0/0
 11019 ;;		On exit  : 0/0
 11020 ;;		Unchanged: 0/0
 11021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11022 ;;      Params:         0       0       0       0       0       0       0       0       0
 11023 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11024 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11025 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11026 ;;Total ram usage:        4 bytes
 11027 ;; Hardware stack levels used:    1
 11028 ;; Hardware stack levels required when called:    2
 11029 ;; This function calls:
 11030 ;;		Nothing
 11031 ;; This function is called by:
 11032 ;;		_main
 11033 ;; This function uses a non-reentrant model
 11034 ;;
 11035                           
 11036                           	psect	text41
 11037  003C48                     __ptext41:
 11038                           	opt stack 0
 11039  003C48                     _delay:
 11040                           	opt stack 27
 11041                           
 11042                           ;main.c: 132: long i=0x7FFFF;
 11043                           
 11044                           ;incstack = 0
 11045  003C48  0EFF               	movlw	255
 11046  003C4A  6E10               	movwf	delay@i,c
 11047  003C4C  0EFF               	movlw	255
 11048  003C4E  6E11               	movwf	delay@i+1,c
 11049  003C50  0E07               	movlw	7
 11050  003C52  6E12               	movwf	delay@i+2,c
 11051  003C54  0E00               	movlw	0
 11052  003C56  6E13               	movwf	delay@i+3,c
 11053  003C58                     l4418:
 11054  003C58  0EFF               	movlw	255
 11055  003C5A  2610               	addwf	delay@i,f,c
 11056  003C5C  0EFF               	movlw	255
 11057  003C5E  2211               	addwfc	delay@i+1,f,c
 11058  003C60  0EFF               	movlw	255
 11059  003C62  2212               	addwfc	delay@i+2,f,c
 11060  003C64  0EFF               	movlw	255
 11061  003C66  2213               	addwfc	delay@i+3,f,c
 11062  003C68  5013               	movf	(delay@i+3)& (0+255),w,c
 11063  003C6A  1010               	iorwf	delay@i& (0+255),w,c
 11064  003C6C  1011               	iorwf	(delay@i+1)& (0+255),w,c
 11065  003C6E  1012               	iorwf	(delay@i+2)& (0+255),w,c
 11066  003C70  B4D8               	btfsc	status,2,c
 11067  003C72  0012               	return	
 11068  003C74  D7F1               	goto	l4418
 11069  003C76                     __end_of_delay:
 11070                           	opt stack 0
 11071                           tblptru	equ	0xFF8
 11072                           tblptrh	equ	0xFF7
 11073                           tblptrl	equ	0xFF6
 11074                           tablat	equ	0xFF5
 11075                           prodh	equ	0xFF4
 11076                           prodl	equ	0xFF3
 11077                           intcon	equ	0xFF2
 11078                           postinc0	equ	0xFEE
 11079                           wreg	equ	0xFE8
 11080                           indf1	equ	0xFE7
 11081                           postinc1	equ	0xFE6
 11082                           postdec1	equ	0xFE5
 11083                           fsr1h	equ	0xFE2
 11084                           fsr1l	equ	0xFE1
 11085                           indf2	equ	0xFDF
 11086                           postinc2	equ	0xFDE
 11087                           postdec2	equ	0xFDD
 11088                           fsr2h	equ	0xFDA
 11089                           fsr2l	equ	0xFD9
 11090                           status	equ	0xFD8
 11091                           
 11092 ;; *************** function _isr *****************
 11093 ;; Defined at:
 11094 ;;		line 76 in file "../../../PIC18F/pwm_audio.c"
 11095 ;; Parameters:    Size  Location     Type
 11096 ;;		None
 11097 ;; Auto vars:     Size  Location     Type
 11098 ;;		None
 11099 ;; Return value:  Size  Location     Type
 11100 ;;		None               void
 11101 ;; Registers used:
 11102 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11103 ;; Tracked objects:
 11104 ;;		On entry : 0/0
 11105 ;;		On exit  : 0/0
 11106 ;;		Unchanged: 0/0
 11107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11108 ;;      Params:         0       0       0       0       0       0       0       0       0
 11109 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11110 ;;      Temps:         14       0       0       0       0       0       0       0       0
 11111 ;;      Totals:        14       0       0       0       0       0       0       0       0
 11112 ;;Total ram usage:       14 bytes
 11113 ;; Hardware stack levels used:    1
 11114 ;; Hardware stack levels required when called:    1
 11115 ;; This function calls:
 11116 ;;		_set_pwm1_duty
 11117 ;; This function is called by:
 11118 ;;		Interrupt level 2
 11119 ;; This function uses a non-reentrant model
 11120 ;;
 11121                           
 11122                           	psect	intcode
 11123  000008                     __pintcode:
 11124                           	opt stack 0
 11125  000008                     _isr:
 11126                           	opt stack 18
 11127                           
 11128                           ;incstack = 0
 11129  000008  CFFA F002          	movff	pclath,??_isr
 11130  00000C  CFFB F003          	movff	pclatu,??_isr+1
 11131  000010  CFE9 F004          	movff	fsr0l,??_isr+2
 11132  000014  ED9C  F01B         	call	int_func,f	;refresh shadow registers
 11133                           pclatu	equ	0xFFB
 11134                           pclath	equ	0xFFA
 11135                           tblptru	equ	0xFF8
 11136                           tblptrh	equ	0xFF7
 11137                           tblptrl	equ	0xFF6
 11138                           tablat	equ	0xFF5
 11139                           prodh	equ	0xFF4
 11140                           prodl	equ	0xFF3
 11141                           intcon	equ	0xFF2
 11142                           postinc0	equ	0xFEE
 11143                           fsr0l	equ	0xFE9
 11144                           wreg	equ	0xFE8
 11145                           indf1	equ	0xFE7
 11146                           postinc1	equ	0xFE6
 11147                           postdec1	equ	0xFE5
 11148                           fsr1h	equ	0xFE2
 11149                           fsr1l	equ	0xFE1
 11150                           indf2	equ	0xFDF
 11151                           postinc2	equ	0xFDE
 11152                           postdec2	equ	0xFDD
 11153                           fsr2h	equ	0xFDA
 11154                           fsr2l	equ	0xFD9
 11155                           status	equ	0xFD8
 11156                           
 11157                           	psect	intcode_body
 11158  003738                     __pintcode_body:
 11159                           	opt stack 18
 11160  003738                     int_func:
 11161                           	opt stack 18
 11162  003738  0006               	pop		; remove dummy address from shadow register refresh
 11163  00373A  CFEA F005          	movff	fsr0h,??_isr+3
 11164  00373E  CFE1 F006          	movff	fsr1l,??_isr+4
 11165  003742  CFE2 F007          	movff	fsr1h,??_isr+5
 11166  003746  CFD9 F008          	movff	fsr2l,??_isr+6
 11167  00374A  CFDA F009          	movff	fsr2h,??_isr+7
 11168  00374E  CFF3 F00A          	movff	prodl,??_isr+8
 11169  003752  CFF4 F00B          	movff	prodh,??_isr+9
 11170  003756  CFF6 F00C          	movff	tblptrl,??_isr+10
 11171  00375A  CFF7 F00D          	movff	tblptrh,??_isr+11
 11172  00375E  CFF8 F00E          	movff	tblptru,??_isr+12
 11173  003762  CFF5 F00F          	movff	tablat,??_isr+13
 11174                           
 11175                           ;pwm_audio.c: 79: if((PIE1bits.TMR1IE)&&(PIR1bits.TMR1IF))
 11176  003766  B09D               	btfsc	3997,0,c	;volatile
 11177  003768  A09E               	btfss	3998,0,c	;volatile
 11178  00376A  D01D               	goto	i2l287
 11179                           
 11180                           ;pwm_audio.c: 80: {
 11181                           ;pwm_audio.c: 81: TMR1H = TMR1H_preload;
 11182  00376C  C04F  FFCF         	movff	_TMR1H_preload,4047	;volatile
 11183                           
 11184                           ;pwm_audio.c: 82: TMR1L = TMR1L_preload;
 11185  003770  C050  FFCE         	movff	_TMR1L_preload,4046	;volatile
 11186                           
 11187                           ;pwm_audio.c: 84: set_pwm1_duty ( WAV_L_BUFF[pWAVOUT] );
 11188  003774  0104               	movlb	4	; () banked
 11189  003776  0E00               	movlw	low _WAV_L_BUFF
 11190  003778  244C               	addwf	_pWAVOUT,w,c	;volatile
 11191  00377A  6ED9               	movwf	fsr2l,c
 11192  00377C  0104               	movlb	4	; () banked
 11193  00377E  0E04               	movlw	high _WAV_L_BUFF
 11194  003780  204D               	addwfc	_pWAVOUT+1,w,c	;volatile
 11195  003782  6EDA               	movwf	fsr2h,c
 11196  003784  50DF               	movf	indf2,w,c
 11197  003786  EC7A  F01E         	call	_set_pwm1_duty
 11198                           
 11199                           ;pwm_audio.c: 86: ++pWAVOUT;
 11200  00378A  4A4C               	infsnz	_pWAVOUT,f,c	;volatile
 11201  00378C  2A4D               	incf	_pWAVOUT+1,f,c	;volatile
 11202                           
 11203                           ;pwm_audio.c: 87: pWAVOUT &= (256-1);
 11204  00378E  0EFF               	movlw	255
 11205  003790  164C               	andwf	_pWAVOUT,f,c	;volatile
 11206  003792  0E00               	movlw	0
 11207  003794  164D               	andwf	_pWAVOUT+1,f,c	;volatile
 11208                           
 11209                           ;pwm_audio.c: 89: if(pWAVOUT == pWAVIN)
 11210  003796  504B               	movf	_pWAVIN+1,w,c	;volatile
 11211  003798  184D               	xorwf	_pWAVOUT+1,w,c	;volatile
 11212  00379A  E102               	bnz	i2u505_45
 11213  00379C  504A               	movf	_pWAVIN,w,c	;volatile
 11214  00379E  184C               	xorwf	_pWAVOUT,w,c	;volatile
 11215  0037A0                     i2u505_45:
 11216  0037A0  B4D8               	btfsc	status,2,c
 11217                           
 11218                           ;pwm_audio.c: 90: {
 11219                           ;pwm_audio.c: 92: PIE1bits.TMR1IE = 1;
 11220  0037A2  809D               	bsf	3997,0,c	;volatile
 11221                           
 11222                           ;pwm_audio.c: 93: }
 11223                           ;pwm_audio.c: 95: PIR1bits.TMR1IF=0;
 11224  0037A4  909E               	bcf	3998,0,c	;volatile
 11225  0037A6                     i2l287:
 11226  0037A6  C00F  FFF5         	movff	??_isr+13,tablat
 11227  0037AA  C00E  FFF8         	movff	??_isr+12,tblptru
 11228  0037AE  C00D  FFF7         	movff	??_isr+11,tblptrh
 11229  0037B2  C00C  FFF6         	movff	??_isr+10,tblptrl
 11230  0037B6  C00B  FFF4         	movff	??_isr+9,prodh
 11231  0037BA  C00A  FFF3         	movff	??_isr+8,prodl
 11232  0037BE  C009  FFDA         	movff	??_isr+7,fsr2h
 11233  0037C2  C008  FFD9         	movff	??_isr+6,fsr2l
 11234  0037C6  C007  FFE2         	movff	??_isr+5,fsr1h
 11235  0037CA  C006  FFE1         	movff	??_isr+4,fsr1l
 11236  0037CE  C005  FFEA         	movff	??_isr+3,fsr0h
 11237  0037D2  C004  FFE9         	movff	??_isr+2,fsr0l
 11238  0037D6  C003  FFFB         	movff	??_isr+1,pclatu
 11239  0037DA  C002  FFFA         	movff	??_isr,pclath
 11240  0037DE  0011               	retfie		f
 11241  0037E0                     __end_of_isr:
 11242                           	opt stack 0
 11243                           pclatu	equ	0xFFB
 11244                           pclath	equ	0xFFA
 11245                           tblptru	equ	0xFF8
 11246                           tblptrh	equ	0xFF7
 11247                           tblptrl	equ	0xFF6
 11248                           tablat	equ	0xFF5
 11249                           prodh	equ	0xFF4
 11250                           prodl	equ	0xFF3
 11251                           intcon	equ	0xFF2
 11252                           postinc0	equ	0xFEE
 11253                           fsr0h	equ	0xFEA
 11254                           fsr0l	equ	0xFE9
 11255                           wreg	equ	0xFE8
 11256                           indf1	equ	0xFE7
 11257                           postinc1	equ	0xFE6
 11258                           postdec1	equ	0xFE5
 11259                           fsr1h	equ	0xFE2
 11260                           fsr1l	equ	0xFE1
 11261                           indf2	equ	0xFDF
 11262                           postinc2	equ	0xFDE
 11263                           postdec2	equ	0xFDD
 11264                           fsr2h	equ	0xFDA
 11265                           fsr2l	equ	0xFD9
 11266                           status	equ	0xFD8
 11267                           
 11268 ;; *************** function _set_pwm1_duty *****************
 11269 ;; Defined at:
 11270 ;;		line 43 in file "../../../PIC18F/pwm_audio.c"
 11271 ;; Parameters:    Size  Location     Type
 11272 ;;  duty1           1    wreg     unsigned char 
 11273 ;; Auto vars:     Size  Location     Type
 11274 ;;  duty1           1    0[COMRAM] unsigned char 
 11275 ;; Return value:  Size  Location     Type
 11276 ;;		None               void
 11277 ;; Registers used:
 11278 ;;		wreg, status,2, status,0
 11279 ;; Tracked objects:
 11280 ;;		On entry : 0/0
 11281 ;;		On exit  : 0/0
 11282 ;;		Unchanged: 0/0
 11283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11284 ;;      Params:         0       0       0       0       0       0       0       0       0
 11285 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11286 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11287 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11288 ;;Total ram usage:        1 bytes
 11289 ;; Hardware stack levels used:    1
 11290 ;; This function calls:
 11291 ;;		Nothing
 11292 ;; This function is called by:
 11293 ;;		_isr
 11294 ;; This function uses a non-reentrant model
 11295 ;;
 11296                           
 11297                           	psect	text43
 11298  003CF4                     __ptext43:
 11299                           	opt stack 0
 11300  003CF4                     _set_pwm1_duty:
 11301                           	opt stack 18
 11302                           
 11303                           ;incstack = 0
 11304                           ;set_pwm1_duty@duty1 stored from wreg
 11305  003CF4  6E01               	movwf	set_pwm1_duty@duty1,c
 11306                           
 11307                           ;pwm_audio.c: 45: CCPR1L = duty1>>2;
 11308  003CF6  4001               	rrncf	set_pwm1_duty@duty1,w,c
 11309  003CF8  42E8               	rrncf	wreg,f,c
 11310  003CFA  0B3F               	andlw	63
 11311  003CFC  6EBE               	movwf	4030,c	;volatile
 11312                           
 11313                           ;pwm_audio.c: 46: CCP1CON &= 0b11001111;
 11314  003CFE  0ECF               	movlw	207
 11315  003D00  16BD               	andwf	4029,f,c	;volatile
 11316                           
 11317                           ;pwm_audio.c: 47: CCP1CON |= (duty1<<4)&0b00110000;
 11318  003D02  3801               	swapf	set_pwm1_duty@duty1,w,c
 11319  003D04  0BF0               	andlw	240
 11320  003D06  0B30               	andlw	48
 11321  003D08  12BD               	iorwf	4029,f,c	;volatile
 11322  003D0A  0012               	return	
 11323  003D0C                     __end_of_set_pwm1_duty:
 11324                           	opt stack 0
 11325                           pclatu	equ	0xFFB
 11326                           pclath	equ	0xFFA
 11327                           tblptru	equ	0xFF8
 11328                           tblptrh	equ	0xFF7
 11329                           tblptrl	equ	0xFF6
 11330                           tablat	equ	0xFF5
 11331                           prodh	equ	0xFF4
 11332                           prodl	equ	0xFF3
 11333                           intcon	equ	0xFF2
 11334                           postinc0	equ	0xFEE
 11335                           fsr0h	equ	0xFEA
 11336                           fsr0l	equ	0xFE9
 11337                           wreg	equ	0xFE8
 11338                           indf1	equ	0xFE7
 11339                           postinc1	equ	0xFE6
 11340                           postdec1	equ	0xFE5
 11341                           fsr1h	equ	0xFE2
 11342                           fsr1l	equ	0xFE1
 11343                           indf2	equ	0xFDF
 11344                           postinc2	equ	0xFDE
 11345                           postdec2	equ	0xFDD
 11346                           fsr2h	equ	0xFDA
 11347                           fsr2l	equ	0xFD9
 11348                           status	equ	0xFD8
 11349                           pclatu	equ	0xFFB
 11350                           pclath	equ	0xFFA
 11351                           tblptru	equ	0xFF8
 11352                           tblptrh	equ	0xFF7
 11353                           tblptrl	equ	0xFF6
 11354                           tablat	equ	0xFF5
 11355                           prodh	equ	0xFF4
 11356                           prodl	equ	0xFF3
 11357                           intcon	equ	0xFF2
 11358                           postinc0	equ	0xFEE
 11359                           fsr0h	equ	0xFEA
 11360                           fsr0l	equ	0xFE9
 11361                           wreg	equ	0xFE8
 11362                           indf1	equ	0xFE7
 11363                           postinc1	equ	0xFE6
 11364                           postdec1	equ	0xFE5
 11365                           fsr1h	equ	0xFE2
 11366                           fsr1l	equ	0xFE1
 11367                           indf2	equ	0xFDF
 11368                           postinc2	equ	0xFDE
 11369                           postdec2	equ	0xFDD
 11370                           fsr2h	equ	0xFDA
 11371                           fsr2l	equ	0xFD9
 11372                           status	equ	0xFD8
 11373                           
 11374                           	psect	rparam
 11375  0000                     pclatu	equ	0xFFB
 11376                           pclath	equ	0xFFA
 11377                           tblptru	equ	0xFF8
 11378                           tblptrh	equ	0xFF7
 11379                           tblptrl	equ	0xFF6
 11380                           tablat	equ	0xFF5
 11381                           prodh	equ	0xFF4
 11382                           prodl	equ	0xFF3
 11383                           intcon	equ	0xFF2
 11384                           postinc0	equ	0xFEE
 11385                           fsr0h	equ	0xFEA
 11386                           fsr0l	equ	0xFE9
 11387                           wreg	equ	0xFE8
 11388                           indf1	equ	0xFE7
 11389                           postinc1	equ	0xFE6
 11390                           postdec1	equ	0xFE5
 11391                           fsr1h	equ	0xFE2
 11392                           fsr1l	equ	0xFE1
 11393                           indf2	equ	0xFDF
 11394                           postinc2	equ	0xFDE
 11395                           postdec2	equ	0xFDD
 11396                           fsr2h	equ	0xFDA
 11397                           fsr2l	equ	0xFD9
 11398                           status	equ	0xFD8


Data Sizes:
    Strings     5
    Constant    0
    Data        0
    BSS         609
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     71      80
    BANK0           160    135     157
    BANK1           256      0      66
    BANK2           256      0     256
    BANK3           239      0       0
    BANK4           256      0     256
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 22
		 -> Fno.fname(BANK1[13]), Fno(BANK1[22]), NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 22
		 -> Fno.fname(BANK1[13]), Fno(BANK1[22]), NULL(NULL[0]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 22
		 -> Fno.fname(BANK1[13]), Fno(BANK1[22]), NULL(NULL[0]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 22
		 -> Fno.fname(BANK1[13]), Fno(BANK1[22]), NULL(NULL[0]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 22
		 -> Fno.fname(BANK1[13]), Fno(BANK1[22]), NULL(NULL[0]), 

    Dir1.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK0[12]), pf_opendir@sp(BANK0[12]), pf_open@sp(BANK0[12]), 

    play_wave_file@fn	PTR const unsigned char  size(2) Largest target is 22
		 -> Fno.fname(BANK1[13]), Fno(BANK1[22]), 

    Fs.buf	PTR unsigned char  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK0[32]), pf_opendir@dir(BANK0[32]), pf_open@dir(BANK0[32]), 

    disk_readp@buff	PTR unsigned char  size(2) Largest target is 256
		 -> Buff(BANK2[256]), pf_readdir@dir(BANK0[32]), pf_opendir@dir(BANK0[32]), pf_open@dir(BANK0[32]), 
		 -> pf_mount@buf(BANK0[36]), NULL(NULL[0]), get_fat@buf(BANK0[4]), 

    pf_readdir@fno	PTR struct _FILINFO_ size(2) Largest target is 22
		 -> Fno(BANK1[22]), 

    pf_readdir@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK0[12]), pf_opendir@sp(BANK0[12]), pf_open@sp(BANK0[12]), 

    pf_readdir@dj	PTR struct _Dir_ size(2) Largest target is 17
		 -> Dir1(BANK0[16]), 

    pf_readdir@fs.buf	PTR unsigned char  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK0[32]), pf_opendir@dir(BANK0[32]), pf_open@dir(BANK0[32]), 

    pf_readdir@fs	PTR struct _FATFS_ size(2) Largest target is 45
		 -> Fs(BANK1[44]), NULL(NULL[0]), 

    pf_opendir@path	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_1(CODE[1]), 

    pf_opendir@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK0[12]), pf_opendir@sp(BANK0[12]), pf_open@sp(BANK0[12]), 

    pf_opendir@dj	PTR struct _Dir_ size(2) Largest target is 17
		 -> Dir1(BANK0[16]), 

    pf_opendir@fs.buf	PTR unsigned char  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK0[32]), pf_opendir@dir(BANK0[32]), pf_open@dir(BANK0[32]), 

    pf_opendir@fs	PTR struct _FATFS_ size(2) Largest target is 45
		 -> Fs(BANK1[44]), NULL(NULL[0]), 

    pf_lseek@fs.buf	PTR unsigned char  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK0[32]), pf_opendir@dir(BANK0[32]), pf_open@dir(BANK0[32]), 

    pf_lseek@fs	PTR struct _FATFS_ size(2) Largest target is 45
		 -> Fs(BANK1[44]), NULL(NULL[0]), 

    pf_read$348	PTR unsigned char  size(2) Largest target is 256
		 -> Buff(BANK2[256]), NULL(NULL[0]), 

    pf_read@br	PTR unsigned short  size(2) Largest target is 2
		 -> rb(BANK0[2]), 

    pf_read@fs.buf	PTR unsigned char  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK0[32]), pf_opendir@dir(BANK0[32]), pf_open@dir(BANK0[32]), 

    pf_read@fs	PTR struct _FATFS_ size(2) Largest target is 45
		 -> Fs(BANK1[44]), NULL(NULL[0]), 

    pf_read@buff	PTR void  size(2) Largest target is 256
		 -> Buff(BANK2[256]), 

    pf_read@rbuff	PTR unsigned char  size(2) Largest target is 256
		 -> Buff(BANK2[256]), 

    pf_open@path	PTR const unsigned char  size(2) Largest target is 22
		 -> Fno.fname(BANK1[13]), Fno(BANK1[22]), 

    pf_open@fs.buf	PTR unsigned char  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK0[32]), pf_opendir@dir(BANK0[32]), pf_open@dir(BANK0[32]), 

    pf_open@fs	PTR struct _FATFS_ size(2) Largest target is 45
		 -> Fs(BANK1[44]), NULL(NULL[0]), 

    dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK0[12]), pf_opendir@sp(BANK0[12]), pf_open@sp(BANK0[12]), 

    pf_mount@fs.buf	PTR unsigned char  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK0[32]), pf_opendir@dir(BANK0[32]), pf_open@dir(BANK0[32]), 

    pf_mount@fs	PTR struct _FATFS_ size(2) Largest target is 45
		 -> Fs(BANK1[44]), 

    check_fs@buf	PTR unsigned char  size(2) Largest target is 36
		 -> pf_mount@buf(BANK0[36]), 

    follow_path@dir	PTR unsigned char  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK0[32]), pf_opendir@dir(BANK0[32]), pf_open@dir(BANK0[32]), 

    follow_path@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK0[12]), pf_opendir@sp(BANK0[12]), pf_open@sp(BANK0[12]), 

    follow_path@dj	PTR struct _Dir_ size(2) Largest target is 17
		 -> Dir1(BANK0[16]), pf_open@dj(BANK0[16]), 

    follow_path@path	PTR const unsigned char  size(2) Largest target is 22
		 -> Fno.fname(BANK1[13]), Fno(BANK1[22]), STR_1(CODE[1]), 

    get_fileinfo@dir	PTR unsigned char  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK0[32]), pf_opendir@dir(BANK0[32]), pf_open@dir(BANK0[32]), 

    get_fileinfo@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK0[12]), pf_opendir@sp(BANK0[12]), pf_open@sp(BANK0[12]), 

    get_fileinfo@dj	PTR struct _Dir_ size(2) Largest target is 17
		 -> Dir1(BANK0[16]), 

    get_fileinfo@fno	PTR struct _FILINFO_ size(2) Largest target is 22
		 -> Fno(BANK1[22]), 

    get_fileinfo@p	PTR unsigned char  size(2) Largest target is 22
		 -> Fno.fname(BANK1[13]), Fno(BANK1[22]), 

    create_name@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> follow_path@path(BANK0[2]), 

    create_name@p	PTR const unsigned char  size(2) Largest target is 22
		 -> Fno(BANK1[22]), STR_1(CODE[1]), 

    create_name@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK0[12]), pf_opendir@sp(BANK0[12]), pf_open@sp(BANK0[12]), 

    create_name@dj	PTR struct _Dir_ size(2) Largest target is 17
		 -> Dir1(BANK0[16]), pf_open@dj(BANK0[16]), 

    create_name@sfn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK0[12]), pf_opendir@sp(BANK0[12]), pf_open@sp(BANK0[12]), 

    dir_read@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK0[12]), pf_opendir@sp(BANK0[12]), pf_open@sp(BANK0[12]), 

    dir_read@dj	PTR struct _Dir_ size(2) Largest target is 17
		 -> Dir1(BANK0[16]), 

    dir_read@dir	PTR unsigned char  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK0[32]), pf_opendir@dir(BANK0[32]), pf_open@dir(BANK0[32]), 

    dir_find@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK0[12]), pf_opendir@sp(BANK0[12]), pf_open@sp(BANK0[12]), 

    FatFs.buf	PTR unsigned char  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK0[32]), pf_opendir@dir(BANK0[32]), pf_open@dir(BANK0[32]), 

    dir_find@dir	PTR unsigned char  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK0[32]), pf_opendir@dir(BANK0[32]), pf_open@dir(BANK0[32]), 

    dir_find@dj	PTR struct _Dir_ size(2) Largest target is 17
		 -> Dir1(BANK0[16]), pf_open@dj(BANK0[16]), 

    dir_next@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK0[12]), pf_opendir@sp(BANK0[12]), pf_open@sp(BANK0[12]), 

    dir_next@dj	PTR struct _Dir_ size(2) Largest target is 17
		 -> Dir1(BANK0[16]), pf_open@dj(BANK0[16]), 

    dir_next@fs.buf	PTR unsigned char  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK0[32]), pf_opendir@dir(BANK0[32]), pf_open@dir(BANK0[32]), 

    dir_next@fs	PTR struct _FATFS_ size(2) Largest target is 45
		 -> Fs(BANK1[44]), NULL(NULL[0]), 

    S50_Dir_$fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK0[12]), pf_opendir@sp(BANK0[12]), pf_open@sp(BANK0[12]), 

    dir_rewind@dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK0[12]), pf_opendir@sp(BANK0[12]), pf_open@sp(BANK0[12]), 

    dir_rewind@dj	PTR struct _Dir_ size(2) Largest target is 17
		 -> Dir1(BANK0[16]), pf_open@dj(BANK0[16]), 

    dir_rewind@fs.buf	PTR unsigned char  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK0[32]), pf_opendir@dir(BANK0[32]), pf_open@dir(BANK0[32]), 

    dir_rewind@fs	PTR struct _FATFS_ size(2) Largest target is 45
		 -> Fs(BANK1[44]), NULL(NULL[0]), 

    clust2sect@fs.buf	PTR unsigned char  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK0[32]), pf_opendir@dir(BANK0[32]), pf_open@dir(BANK0[32]), 

    clust2sect@fs	PTR struct _FATFS_ size(2) Largest target is 45
		 -> Fs(BANK1[44]), NULL(NULL[0]), 

    S21_FATFS_$buf	PTR unsigned char  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK0[32]), pf_opendir@dir(BANK0[32]), pf_open@dir(BANK0[32]), 

    get_fat@fs.buf	PTR unsigned char  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK0[32]), pf_opendir@dir(BANK0[32]), pf_open@dir(BANK0[32]), 

    FatFs	PTR struct _FATFS_ size(2) Largest target is 45
		 -> Fs(BANK1[44]), NULL(NULL[0]), 

    get_fat@fs	PTR struct _FATFS_ size(2) Largest target is 45
		 -> Fs(BANK1[44]), NULL(NULL[0]), 

    mem_cmp@src	PTR const void  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK0[12]), pf_opendir@sp(BANK0[12]), pf_open@sp(BANK0[12]), 

    mem_cmp@s	PTR const unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK0[12]), pf_opendir@sp(BANK0[12]), pf_open@sp(BANK0[12]), 

    mem_cmp@dst	PTR const void  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK0[32]), pf_opendir@dir(BANK0[32]), pf_open@dir(BANK0[32]), 

    mem_cmp@d	PTR const unsigned char  size(2) Largest target is 32
		 -> pf_readdir@dir(BANK0[32]), pf_opendir@dir(BANK0[32]), pf_open@dir(BANK0[32]), 

    mem_set@dst	PTR void  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK0[12]), pf_opendir@sp(BANK0[12]), pf_open@sp(BANK0[12]), 

    mem_set@d	PTR unsigned char  size(2) Largest target is 12
		 -> pf_readdir@sp(BANK0[12]), pf_opendir@sp(BANK0[12]), pf_open@sp(BANK0[12]), 


Critical Paths under _main in COMRAM

    _strstr->_strncmp
    _strncmp->_strlen
    _load_header->_pf_read
    _set_sampling_rate->___lldiv
    _pf_read->_get_fat
    _pf_lseek->_get_fat
    _pf_readdir->_dir_read
    _dir_read->_dir_next
    _follow_path->_dir_find
    _dir_find->_dir_next
    _dir_rewind->_clust2sect
    _dir_next->_get_fat
    _get_fat->_disk_readp
    _clust2sect->___lmul
    _create_name->_mem_set
    _pf_mount->_check_fs
    _disk_initialize->_send_cmd
    _check_fs->_disk_readp
    _disk_readp->_send_cmd
    _send_cmd->_wait_ready

Critical Paths under _isr in COMRAM

    _isr->_set_pwm1_duty

Critical Paths under _main in BANK0

    _main->_play_wave_file
    _play_wave_file->_pf_open
    _pf_open->_follow_path
    _load_header->_pf_lseek
    _load_header->_pf_read
    _pf_read->_get_fat
    _pf_lseek->_get_fat
    _pf_readdir->_dir_read
    _dir_read->_dir_next
    _pf_opendir->_follow_path
    _follow_path->_dir_find
    _dir_find->_dir_next
    _dir_next->_get_fat

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  122943
                              _delay
                           _pf_mount
                         _pf_opendir
                         _pf_readdir
                     _play_wave_file
                     _pwm_audio_init
                             _strstr
 ---------------------------------------------------------------------------------
 (1) _strstr                                               4     0      4     913
                                             30 COMRAM     4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              9     3      6     293
                                             21 COMRAM     9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     143
                                             15 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _strchr                                               4     0      4     194
                                             15 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _pwm_audio_init                                       0     0      0       0
                           _pwm_init
                        _timer1_init
 ---------------------------------------------------------------------------------
 (2) _timer1_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pwm_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _play_wave_file                                      17    15      2   61031
                                            118 BANK0     17    15      2
                        _load_header
                            _pf_open
                            _pf_read
                           _wav_putc
 ---------------------------------------------------------------------------------
 (2) _wav_putc                                             3     3      0      22
                                             15 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _pf_open                                             73    71      2   19384
                                             45 BANK0     73    71      2
                        _follow_path
 ---------------------------------------------------------------------------------
 (2) _load_header                                         20    16      4   25530
                                             64 COMRAM     4     4      0
                                             44 BANK0     16    12      4
                           _pf_lseek
                            _pf_read
                  _set_sampling_rate
 ---------------------------------------------------------------------------------
 (3) _set_sampling_rate                                   12     8      4     652
                                             28 COMRAM    12     8      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _pf_read                                             36    30      6   15423
                                             58 COMRAM     6     0      6
                                             14 BANK0     30    30      0
                            ___llmod
                         _clust2sect
                         _disk_readp
                            _get_fat
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     211
                                             15 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (3) _pf_lseek                                            34    30      4    9198
                                             58 COMRAM     4     0      4
                                             14 BANK0     30    30      0
                            ___lldiv
                         _clust2sect
                            _get_fat
 ---------------------------------------------------------------------------------
 (1) _pf_readdir                                          51    47      4   24556
                                             31 BANK0     51    47      4
                           _dir_next
                           _dir_read
                         _dir_rewind
                       _get_fileinfo
 ---------------------------------------------------------------------------------
 (2) _get_fileinfo                                        14    10      4     734
                                             15 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) _dir_read                                            11     9      2   13847
                                             67 COMRAM     2     0      2
                                             22 BANK0      9     9      0
                           _dir_next
                         _disk_readp
 ---------------------------------------------------------------------------------
 (1) _pf_opendir                                          59    55      4   20504
                                             45 BANK0     59    55      4
                         _dir_rewind
                        _follow_path
 ---------------------------------------------------------------------------------
 (3) _follow_path                                         19    15      4   18523
                                             26 BANK0     19    15      4
                        _create_name
                           _dir_find
                         _dir_rewind
 ---------------------------------------------------------------------------------
 (4) _dir_find                                             8     6      2   15309
                                             67 COMRAM     4     2      2
                                             22 BANK0      4     4      0
                           _dir_next
                         _dir_rewind
                         _disk_readp
                            _mem_cmp
 ---------------------------------------------------------------------------------
 (5) _mem_cmp                                             15     9      6     295
                                             15 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (4) _dir_rewind                                          16    14      2    1201
                                             42 COMRAM    16    14      2
                         _clust2sect
 ---------------------------------------------------------------------------------
 (5) _dir_next                                            17    15      2    8000
                                             58 COMRAM     9     7      2
                                             14 BANK0      8     8      0
                         _clust2sect
                            _get_fat
 ---------------------------------------------------------------------------------
 (3) _get_fat                                             28    24      4    6522
                                             44 COMRAM    14    10      4
                                              0 BANK0     14    14      0
                         _disk_readp
 ---------------------------------------------------------------------------------
 (3) _clust2sect                                          15    11      4     654
                                             27 COMRAM    15    11      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _create_name                                         20    16      4    1162
                                             23 COMRAM    20    16      4
                            _mem_set
 ---------------------------------------------------------------------------------
 (5) _mem_set                                              8     2      6     249
                                             15 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _pf_mount                                            71    69      2   15916
                                             50 COMRAM    18    16      2
                                              0 BANK0     53    53      0
                            ___lldiv
                             ___lmul
                           _check_fs
                    _disk_initialize
                         _disk_readp
 ---------------------------------------------------------------------------------
 (2) _disk_initialize                                     12    12      0    2218
                                             28 COMRAM    12    12      0
                           _init_spi
                            _rcv_spi
                        _release_spi
                           _send_cmd
 ---------------------------------------------------------------------------------
 (3) _init_spi                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _check_fs                                             6     0      6    5804
                                             44 COMRAM     6     0      6
                         _disk_readp
 ---------------------------------------------------------------------------------
 (4) _disk_readp                                          16     6     10    5265
                                             28 COMRAM    16     6     10
                            _rcv_spi
                        _release_spi
                           _send_cmd
 ---------------------------------------------------------------------------------
 (5) _send_cmd                                             8     4      4    1492
                                             20 COMRAM     8     4      4
                            _rcv_spi
                         _wait_ready
                           _xmit_spi
 ---------------------------------------------------------------------------------
 (6) _xmit_spi                                             2     2      0      34
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) _wait_ready                                          15    15      0      99
                                             15 COMRAM     5     5      0
                            _rcv_spi
 ---------------------------------------------------------------------------------
 (5) _release_spi                                          0     0      0       0
                            _rcv_spi
 ---------------------------------------------------------------------------------
 (7) _rcv_spi                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     330
                                             15 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     532
                                             15 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _delay                                                4     4      0      23
                                             15 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _isr                                                14    14      0      44
                                              1 COMRAM    14    14      0
                      _set_pwm1_duty
 ---------------------------------------------------------------------------------
 (12) _set_pwm1_duty                                       1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay
   _pf_mount
     ___lldiv
     ___lmul
     _check_fs
       _disk_readp
         _rcv_spi
         _release_spi
           _rcv_spi
         _send_cmd
           _rcv_spi
           _wait_ready
             _rcv_spi
           _xmit_spi
     _disk_initialize
       _init_spi
       _rcv_spi
       _release_spi
         _rcv_spi
       _send_cmd
         _rcv_spi
         _wait_ready
           _rcv_spi
         _xmit_spi
     _disk_readp
       _rcv_spi
       _release_spi
         _rcv_spi
       _send_cmd
         _rcv_spi
         _wait_ready
           _rcv_spi
         _xmit_spi
   _pf_opendir
     _dir_rewind
       _clust2sect
         ___lmul
     _follow_path
       _create_name
         _mem_set
       _dir_find
         _dir_next
           _clust2sect
             ___lmul
           _get_fat
             _disk_readp
               _rcv_spi
               _release_spi
                 _rcv_spi
               _send_cmd
                 _rcv_spi
                 _wait_ready
                   _rcv_spi
                 _xmit_spi
         _dir_rewind
           _clust2sect
             ___lmul
         _disk_readp
           _rcv_spi
           _release_spi
             _rcv_spi
           _send_cmd
             _rcv_spi
             _wait_ready
               _rcv_spi
             _xmit_spi
         _mem_cmp
       _dir_rewind
         _clust2sect
           ___lmul
   _pf_readdir
     _dir_next
       _clust2sect
         ___lmul
       _get_fat
         _disk_readp
           _rcv_spi
           _release_spi
             _rcv_spi
           _send_cmd
             _rcv_spi
             _wait_ready
               _rcv_spi
             _xmit_spi
     _dir_read
       _dir_next
         _clust2sect
           ___lmul
         _get_fat
           _disk_readp
             _rcv_spi
             _release_spi
               _rcv_spi
             _send_cmd
               _rcv_spi
               _wait_ready
                 _rcv_spi
               _xmit_spi
       _disk_readp
         _rcv_spi
         _release_spi
           _rcv_spi
         _send_cmd
           _rcv_spi
           _wait_ready
             _rcv_spi
           _xmit_spi
     _dir_rewind
       _clust2sect
         ___lmul
     _get_fileinfo
   _play_wave_file
     _load_header
       _pf_lseek
         ___lldiv
         _clust2sect
           ___lmul
         _get_fat
           _disk_readp
             _rcv_spi
             _release_spi
               _rcv_spi
             _send_cmd
               _rcv_spi
               _wait_ready
                 _rcv_spi
               _xmit_spi
       _pf_read
         ___llmod
         _clust2sect
           ___lmul
         _disk_readp
           _rcv_spi
           _release_spi
             _rcv_spi
           _send_cmd
             _rcv_spi
             _wait_ready
               _rcv_spi
             _xmit_spi
         _get_fat
           _disk_readp
             _rcv_spi
             _release_spi
               _rcv_spi
             _send_cmd
               _rcv_spi
               _wait_ready
                 _rcv_spi
               _xmit_spi
       _set_sampling_rate
         ___lldiv
     _pf_open
       _follow_path
         _create_name
           _mem_set
         _dir_find
           _dir_next
             _clust2sect
               ___lmul
             _get_fat
               _disk_readp
                 _rcv_spi
                 _release_spi
                   _rcv_spi
                 _send_cmd
                   _rcv_spi
                   _wait_ready
                     _rcv_spi
                   _xmit_spi
           _dir_rewind
             _clust2sect
               ___lmul
           _disk_readp
             _rcv_spi
             _release_spi
               _rcv_spi
             _send_cmd
               _rcv_spi
               _wait_ready
                 _rcv_spi
               _xmit_spi
           _mem_cmp
         _dir_rewind
           _clust2sect
             ___lmul
     _pf_read
       ___llmod
       _clust2sect
         ___lmul
       _disk_readp
         _rcv_spi
         _release_spi
           _rcv_spi
         _send_cmd
           _rcv_spi
           _wait_ready
             _rcv_spi
           _xmit_spi
       _get_fat
         _disk_readp
           _rcv_spi
           _release_spi
             _rcv_spi
           _send_cmd
             _rcv_spi
             _wait_ready
               _rcv_spi
             _xmit_spi
     _wav_putc
   _pwm_audio_init
     _pwm_init
     _timer1_init
   _strstr
     _strchr
     _strlen
     _strncmp
       _strlen (ARG)

 _isr (ROOT)
   _set_pwm1_duty

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           400      0       0      21        0.0%
BIGRAM             3EE      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0     100      14      100.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      42       7       25.8%
BITBANK3            EF      0       0      12        0.0%
BANK3               EF      0       0      10        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     87      9D       5       98.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     47      50       1       84.2%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     32F      11        0.0%
DATA                 0      0     32F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Mar 04 18:39:30 2015

            _pwm_audio_init 3CC0                 get_fat@clst 002D                create_name@c 002B  
              create_name@d 0023                create_name@i 002A                create_name@p 0024  
               _SSPSTATbits 000FC7                          l26 1B48                          l19 39CE  
                        l28 17E2                          l52 30CC                          l53 3044  
                        l63 267A                          _Fs 0100                 __CFG_BOR$ON 000000  
                        _rb 00FB               pf_mount@bsect 008C                 __CFG_BORV$3 000000  
             pf_mount@mclst 0088               pf_mount@fsize 0090                __CFG_CP0$OFF 000000  
             create_name@dj 0018                __CFG_CP1$OFF 000000               pf_mount@tsect 0084  
             create_name@ni 0026                __CFG_CP2$OFF 000000               create_name@si 0027  
              __CFG_CP3$OFF 000000                         l201 0DA0                         l203 089C  
                       l151 1788                         l144 3400                         l219 2F94  
                       l324 3418                         l325 34E0                         l165 16D8  
                       l182 1152                         l423 3D36                         l417 3D2E  
                       l177 12CA                         l169 2D0E                         l452 21BE  
                       l376 2A18                         l465 2090                         l466 20B4  
                       l468 20DA                         l478 1F00                         l998 3956  
              __CFG_CPB$OFF 000000                         _PR2 000FCB                __CFG_CPD$OFF 000000  
                       _Fno 012C                         _isr 0008                         fsr2 000FD9  
                       prod 000FF3                         wreg 000FE8                disk_readp@bc 002B  
              disk_readp@rc 002A           disk_initialize@ty 0025              create_name@sfn 0028  
              __CFG_LVP$OFF 000000                __CFG_WDT$OFF 000000                        l1100 3862  
                      l1008 3A94                        l1106 3C14                        l1123 38E4  
                      l1108 3C46                        l3212 3618                        l3142 3B0C  
                      l3222 3C90                        l4112 38C4                        l4104 3866  
                      l3146 3B20                        l3218 3C80                        l5002 1A64  
                      l3242 300A                        l4114 38CC                        l3404 27F8  
                      l5012 1B1C                        l3228 3980                        l4108 3892  
                      l3422 3908                        l5014 1B38                        l3246 300E  
                      l4126 3C2C                        l3424 3914                        l3408 2810  
                      l5040 250E                        l3256 308A                        l5120 22A4  
                      l5112 2222                        l5104 21C2                        l5200 11BC  
                      l4400 37E2                        l3434 3948                        l3426 3918  
                      l3370 271E                        l5050 25BA                        l3258 30AE  
                      l5106 21C8                        l3450 3A86                        l3442 3A52  
                      l3380 2744                        l5060 2664                        l3444 3A5E  
                      l5204 11D2                        l5220 12A6                        l4412 385A  
                      l3358 26C8                        l3446 3A62                        l5206 11DE  
                      l4094 3BAA                        l4406 381C                        l3384 2752  
                      l3376 2738                        l5056 25FC                        l5144 237A  
                      l5136 2318                        l5304 2DC8                        l5320 2E14  
                      l5160 0DD8                        l4096 3BAE                        l4408 3844  
                      l4418 3C58                        l5402 290C                        l5146 2428  
                      l5314 2DFC                        l5322 2E3E                        l5226 12B2  
                      l5420 2960                        l5412 2936                        l5076 30FE  
                      l3716 2A68                        l5180 0FF8                        l5172 0EC4  
                      l5500 1F72                        l5350 33B0                        l5342 3366  
                      l5430 29A8                        l3398 27E6                        l5094 31E0  
                      l5326 2E5A                        l3726 2A90                        l3734 2AA8  
                      l5254 0AE2                        l5182 1022                        l5166 0DFA  
                      l5336 334A                        l5440 29F6                        l5432 29AE  
                      l5424 296E                        l5088 3192                        l3760 2B06  
                      l5256 0B38                        l5450 2A0C                        l5442 29FA  
                      l5370 2864                        l5098 31F8                        l3746 2AD2  
                      l3762 2B8A                        l5266 0C2E                        l4900 34B0  
                      l5436 29D2                        l5428 2996                        l5700 14F6  
                      l5292 2D30                        l5284 0D8A                        l5188 1092  
                      l5508 1FC4                        l5460 2BB2                        l4830 3C10  
                      l5358 33FE                        l5366 285E                        l5710 161C  
                      l5550 211A                        l4824 3BEE                        l4912 34D0  
                      l4904 34BC                        l5384 28AC                        l5720 167C  
                      l6280 2184                        l5480 2C3A                        l5472 2C28  
                      l3936 3B54                        l5714 163E                        l6274 2152  
                      l6282 2196                        l5802 1BCA                        l4932 351E  
                      l5396 28E2                        l5732 2E7A                        l6276 2164  
                      l6284 21A0                        l5548 20EC                        l5556 211E  
                      l5492 1F30                        l5476 2C36                        l5900 36A6  
                      l4918 34DE                        l4942 356C                        l4926 34F6  
                      l5398 28E8                        l5662 13A4                        l5646 12EA  
                      l5750 2F84                        l6278 2172                        l6286 21AA  
                      l5822 1C9E                        l5910 3706                        l4880 346C  
                      l4872 3458                        l4952 359E                        l5680 13F4  
                      l5656 1368                        l5744 2F64                        l5760 3218  
                      l6288 21B4                        l5816 1C80                        l5824 1CAA  
                      l5904 36CE                        l4946 357E                        l4938 3538  
                      l5674 13BA                        l5746 2F6A                        l5842 1D6E  
                      l5850 1D98                        l4868 344C                        l4892 3482  
                      l5828 1CC0                        ?_isr 0001                        l4886 347A  
                      l4958 35B4                        l5686 1426                        l4990 19B8  
                      l5774 32AE                        l5766 3270                        l5854 1DB0  
                      l5870 1E54                        l5848 1D8C                        l4994 19C6  
                      l4978 1896                        l5786 330E                        l5874 1E6A  
                      l5890 1EFC                        l4988 1996                        l5868 1E48  
                      l5888 1EF2                        l5896 3690                        STR_1 0805  
                      STR_2 0801                        u3210 26FC                        u3217 26F2  
                      u3330 27B6                        u3337 27AC                        u4305 3B72  
                      u6010 0CD4                        u6015 0CC8                        u6040 2D9E  
                      u6035 2D74                        u6046 2DA0                        u5275 34E8  
                      u6180 33FA                        u5460 1AB0                        u5445 19A6  
                      u5535 251E                        u5560 25F8                        u5465 1AA6  
                      u5385 181C                        u6505 2062                        u5650 21EC  
                      u5810 0F36                        u6390 2A16                        u6630 13F0  
                      u5590 3168                        u5670 2216                        u5815 0F2A  
                      u5760 2372                        u6705 170C                        u5585 3140  
                      u5657 21E2                        u5690 2260                        u5596 316A  
                      u5677 220C                        u6665 150E                        u5697 2256  
                      u5945 0912              ??_get_fileinfo 0014                        _Dir1 00EB  
                      _Buff 0200                        _main 368C                        fsr0h 000FEA  
                      fsr1h 000FE2                        fsr0l 000FE9                        fsr2h 000FDA  
                      indf1 000FE7                        fsr1l 000FE1                        indf2 000FDF  
                      fsr2l 000FD9                        pclat 000FFA                        prodh 000FF4  
                      prodl 000FF3                        start 0018          load_header@ChunkID 0090  
             __CFG_IESO$OFF 000000      __end_of_pwm_audio_init 3CDA               disk_readp@lba 001F  
             disk_readp@cnt 0025               disk_readp@ofs 0023               disk_readp@res 0029  
        disk_initialize@cmd 0024                ?_follow_path 007A          disk_initialize@ocr 001E  
        disk_initialize@tmr 0026             create_name@path 001A               get_fileinfo@c 001A  
             get_fileinfo@i 001D               get_fileinfo@p 0018                       ??_isr 0002  
              ?_load_header 008C              __CFG_CCP2MX$ON 000000                       ?_main 0001  
   __size_of_play_wave_file 03B8             __end_of___lldiv 3968             __end_of___llmod 3AA6  
                     _T2CON 000FCA                       i2l287 37A6                       _TMR1H 000FCF  
                     _TMR1L 000FCE               __CFG_USBDIV$2 000000                       _TRISC 000F94  
                     _FatFs 0048               __CFG_PWRT$OFF 000000       set_sampling_rate@rate 001D  
             __CFG_WRT0$OFF 000000               __CFG_WRT1$OFF 000000               __CFG_WRT2$OFF 000000  
       ___lmul@multiplicand 0014               __CFG_WRT3$OFF 000000              __CFG_EBTR0$OFF 000000  
            __CFG_FCMEN$OFF 000000              __CFG_EBTR1$OFF 000000              __CFG_EBTR2$OFF 000000  
            __CFG_EBTR3$OFF 000000             __end_of_get_fat 1B4A               __CFG_WRTB$OFF 000000  
             __CFG_WRTC$OFF 000000               __CFG_WRTD$OFF 000000              __CFG_EBTRB$OFF 000000  
                     _delay 3C48             __end_of_mem_cmp 39D8             __end_of_mem_set 3CA2  
           __end_of_pf_read 12CC             __end_of_pf_open 2D10             __end_of_rcv_spi 3D3E  
                     tablat 000FF5                       status 000FD8             __end_of_strncmp 38E6  
            __CFG_PBADEN$ON 000000              disk_readp@buff 001D             ?_pwm_audio_init 0001  
            __CFG_MCLRE$OFF 000000             __initialization 3AA6                __end_of_main 3738  
              clust2sect@fs 0029              get_fileinfo@dj 0010                      ??_main 0048  
              ?_release_spi 0001               __activetblptr 000002              __CFG_PLLDIV$12 000000  
                    ?_delay 0001                      _ADCON1 000FC1            ___llmod@dividend 0010  
                    _CCPR1L 000FBE                      _CCPR2L 000FBB           _set_sampling_rate 39D8  
                    _SSPBUF 000FC9            __end_of_check_fs 3402        __size_of_create_name 01D8  
        ?_set_sampling_rate 001D    __size_of_disk_initialize 01C6            __end_of_dir_find 31FE  
            __CFG_XINST$OFF 000000            __end_of_dir_read 2E60            __end_of_dir_next 267C  
                    _pWAVIN 004A                      ___lmul 3AFC              __CFG_STVREN$ON 000000  
                 ??___lldiv 0018                   ??___llmod 0018                ?_timer1_init 0001  
       ??_set_sampling_rate 0021                      delay@i 0010            __end_of_init_spi 3CC0  
                    clear_0 3AAE                      clear_1 3AC2                      clear_2 3AD4  
                    clear_3 3AE0                      clear_4 3AEC            __end_of_pf_lseek 0DA2  
          __end_of_pf_mount 178A        __end_of_get_fileinfo 2B98                 pf_read@buff 003B  
               pf_read@clst 0084          set_pwm1_duty@duty1 0001                 pf_read@sect 007C  
               pf_read@rcnt 0088                   ??_get_fat 0031                      _strchr 3C14  
                    _strlen 3BA0             play_wave_file@i 00E3                      _strstr 37E0  
          __end_of_send_cmd 34E2                   ??_mem_cmp 0016                   ??_mem_set 0016  
                 ??_pf_read 006E                   ??_pf_open 008F                __mediumconst 0000  
                 ??_rcv_spi 0010                      tblptrh 000FF7                      tblptrl 000FF6  
                    tblptru 000FF8                 pf_lseek@bcs 0082            __end_of_wav_putc 3BA0  
               pf_lseek@ofs 003B            __end_of_pwm_init 3CF4                 pf_open@path 008D  
                 ??_strncmp 001C   __end_of_set_sampling_rate 3A40            __end_of_xmit_spi 3D34  
                __accesstop 0060     __end_of__initialization 3AF2                 pf_mount@buf 0060  
               pf_mount@fmt 0094              __pcstackCOMRAM 0001               __end_of_delay 3C76  
      __size_of_follow_path 026E              _play_wave_file 1B4A       __end_of_set_pwm1_duty 3D0C  
      __size_of_load_header 02BE                     ??_delay 0010             get_fileinfo@dir 001B  
           get_fileinfo@fno 0012                  __pbssBANK0 00E7                  __pbssBANK1 0100  
                __pbssBANK2 0200                  __pbssBANK4 0400                     ?___lmul 0010  
    __end_of_play_wave_file 1F02                     _CCP1CON 000FBD                     _CCP2CON 000FBA  
         ??_disk_initialize 001D              ___lmul@product 0018                 _NumChannels 00E9  
                   ?_strchr 0010                     ?_strlen 0010                     ?_strstr 001F  
                _dir_rewind 2F9A                   ?_check_fs 002D                  _disk_readp 34E2  
      __size_of_release_spi 0008              follow_path@dir 008A              follow_path@res 008C  
   load_header@SamplingRate 0094                 send_cmd@cmd 001C                 send_cmd@arg 0015  
               send_cmd@res 001A                   ?_dir_find 0044                   ?_dir_read 0044  
                 ?_dir_next 003B                     _SSPCON1 000FC6                     _SSPSTAT 000FC7  
                _clust2sect 35BC  __size_of_set_sampling_rate 0068            ??_pwm_audio_init 0010  
           __CFG_VREGEN$OFF 000000                   ?_init_spi 0001                   ?_pf_lseek 003B  
                 ?_pf_mount 0033                   ?_send_cmd 0015                     __Hparam 0000  
                   __Lparam 0000       __size_of_get_fileinfo 017E                     _pWAVOUT 004C  
                 ?_wav_putc 0001             __size_of___lmul 0056                     ___lldiv 38E6  
                   ___llmod 3A40                   ?_pwm_init 0001                __psmallconst 0800  
           ?_play_wave_file 00D6                     __pcinit 3AA6                  _pf_readdir 31FE  
       _disk_initialize$807 0022                     __ramtop 0800                   ?_xmit_spi 0001  
      __size_of_timer1_init 0016                     __ptext0 368C                     __ptext1 37E0  
                   __ptext2 3864                     __ptext3 3BA0                     __ptext4 3C14  
                   __ptext5 3CC0                     __ptext6 3D0C                     __ptext7 3CDA  
                   __ptext8 1B4A                     __ptext9 3B52                     _get_fat 178A  
                _pf_opendir 2E60             __size_of_strchr 0034             __size_of_strlen 003E  
                 _T1CONbits 000FCD             __size_of_strstr 0084                     _mem_cmp 3968  
                   _mem_set 3C76                     _pf_read 0DA2                __size_of_isr 37D8  
                   _pf_open 2B98                  ??_check_fs 0033                     _rcv_spi 3D34  
                ??_dir_find 0046                  ??_dir_read 0076                  ??_dir_next 003D  
              pf_read@rbuff 0078                xmit_spi@temp 0010                     _strncmp 3864  
            __pintcode_body 3738            play_wave_file@fn 00D6            play_wave_file@sz 00DD  
      end_of_initialization 3AF2                _get_fileinfo 2A1A               __Lmediumconst 0000  
                   int_func 3738                  ??_init_spi 0010                  ??_pf_lseek 006E  
              pf_readdir@dj 007F                pf_readdir@fs 00AF                  ??_pf_mount 0035  
              pf_readdir@sp 00A3             ___lldiv@divisor 0014                  ??_send_cmd 0019  
           ___lldiv@counter 001C                pf_lseek@clst 0086                pf_lseek@sect 007A  
                   postdec1 000FE5                     postdec2 000FDD                     postinc0 000FEE  
                   postinc1 000FE6                     postinc2 000FDE                  ??_wav_putc 0010  
                ??_pwm_init 0010                  _wait_ready 3BDE                     strlen@s 0010  
                dir_find@dj 0044                  ??_xmit_spi 0010                  dir_read@dj 0044  
               ?_dir_rewind 002B                  dir_next@dj 003B                  dir_next@fs 006E  
              pf_opendir@dj 008D                 ?_disk_readp 001D                pf_opendir@fs 00C5  
              pf_opendir@sp 00B9                   _TRISBbits 000F93                   _TRISCbits 000F94  
                get_fat@buf 0062                  get_fat@ofs 0068                 ?_clust2sect 001C  
             ??_create_name 001C            disk_initialize@n 0028              __end_of___lmul 3B52  
               ?_pf_readdir 007F              clust2sect@clst 001C                 ?_pf_opendir 008D  
            __end_of_strchr 3C48              __end_of_strlen 3BDE              __end_of_strstr 3864  
       start_initialization 3AA6                 __end_of_isr 37E0                  mem_cmp@cnt 0014  
                mem_cmp@dst 0010                  mem_cmp@src 0012             ___llmod@divisor 0014  
           _disk_initialize 2854                  mem_set@cnt 0014                  mem_set@dst 0010  
           ___llmod@counter 0018                  mem_set@val 0012         __size_of_dir_rewind 0134  
         wait_ready@timeout 0010               _BitsPerSample 00E7               ??_follow_path 007E  
       __size_of_disk_readp 00DA         __end_of_create_name 2854                    ??___lmul 0018  
                pf_read@btr 003D                 ?_wait_ready 0001               ??_load_header 0041  
          __CFG_LPT1OSC$OFF 000000         __size_of_clust2sect 00D0                  pf_lseek@fs 008A  
                pf_open@dir 00A3                  pf_open@res 00C3                    ??_strchr 0014  
                  ??_strlen 0012                    ??_strstr 0023                  pf_mount@fs 0033  
               __pbssCOMRAM 0048               __pcstackBANK0 0060         __end_of__stringdata 0806  
         __size_of_check_fs 00EE                check_fs@sect 002F           __size_of_dir_find 0130  
         __size_of_dir_read 0150           __size_of_dir_next 024E         __size_of_pf_readdir 0116  
       __size_of_pf_opendir 013A      __size_of_set_pwm1_duty 0018           __size_of_init_spi 001E  
          ??_play_wave_file 00D8           __size_of_pf_lseek 059A           __size_of_pf_mount 04BE  
                 __pintcode 0008           __size_of_send_cmd 00E0                    ?___lldiv 0010  
                  ?___llmod 0010               follow_path@dj 007A           __size_of_wav_putc 004E  
       __end_of_follow_path 242E           __size_of_pwm_init 001A               ??_release_spi 0010  
                  ?_get_fat 002D                 __smallconst 0800                    ?_mem_cmp 0010  
                  ?_mem_set 0010     play_wave_file@amplitude 00E1                    ?_pf_read 003B  
                  ?_pf_open 008D           __size_of_xmit_spi 0012         __end_of_load_header 21C0  
                  ?_rcv_spi 0001              _dir_rewind$154 0031               _TMR1H_preload 004F  
            __size_of_delay 002E     __end_of_disk_initialize 2A1A                 _get_fat$110 0060  
                  ?_strncmp 0016         __size_of_wait_ready 0036               _TMR1L_preload 0050  
               _create_name 267C                    _LATCbits 000F8B                    _PIE1bits 000F9D  
           follow_path@path 007C                    _PIR1bits 000F9E                    i2u505_45 37A0  
          __CFG_WDTPS$32768 000000               ??_timer1_init 0010                   dir_find@c 0076  
                 dir_read@a 007A                   dir_read@c 007D                   dir_next@i 0074  
                 get_fat@bc 006A                   get_fat@fs 006C                   get_fat@wc 0066  
               __stringdata 0801                ??_dir_rewind 002D               _set_pwm1_duty 3CF4  
                  _CardType 004E                ??_disk_readp 0027         __end_of_release_spi 3D46  
              ??_clust2sect 0020           ___lmul@multiplier 0010    set_sampling_rate@preload 0025  
             load_header@sz 0098                    __Hrparam 0000          __end_of_dir_rewind 30CE  
                  __Lrparam 0000                 _follow_path 21C0          __end_of_disk_readp 35BC  
                 pf_read@br 003F                   pf_read@dr 0077                   pf_read@fs 008A  
   __size_of_pwm_audio_init 001A                   pf_open@dj 00C6                   pf_open@fs 00C4  
                 pf_open@sp 0097            __size_of___lldiv 0082            __size_of___llmod 0066  
              ??_pf_readdir 0046                 _load_header 1F02                 _pf_read$348 007A  
        __end_of_clust2sect 368C                ??_pf_opendir 0091                 check_fs@buf 002D  
            ?_set_pwm1_duty 0001            __size_of_get_fat 03C0         __end_of_timer1_init 3D22  
                  _check_fs 3314            __size_of_mem_cmp 0070            __size_of_mem_set 002C  
          __size_of_pf_read 052A            __size_of_pf_open 0178            __size_of_rcv_spi 000A  
                  __ptext10 2B98                    __ptext11 1F02                    __ptext20 21C0  
                  __ptext12 39D8                    __ptext21 30CE                    __ptext13 0DA2  
                  __ptext30 2854                    __ptext22 3968                    __ptext14 3A40  
                  __ptext31 3CA2                    __ptext23 2F9A                    __ptext15 0808  
                  __ptext40 38E6                    __ptext32 3314                    __ptext24 242E  
                  __ptext16 31FE                    __ptext41 3C48                    __ptext33 34E2  
                  __ptext25 178A                    __ptext17 2A1A                    __ptext34 3402  
                  __ptext26 35BC                    __ptext18 2D10                    __ptext43 3CF4  
                  __ptext35 3D22                    __ptext27 267C                    __ptext19 2E60  
                  __ptext36 3BDE                    __ptext28 3C76                    __ptext37 3D3E  
                  __ptext29 12CC                    __ptext38 3D34                    __ptext39 3AFC  
                  _dir_find 30CE                    _dir_read 2D10                    _dir_next 242E  
          ?_disk_initialize 0001                   send_cmd@n 001B            __size_of_strncmp 0082  
             __size_of_main 00AC                    _init_spi 3CA2                    _pf_lseek 0808  
                  _pf_mount 12CC          __end_of_pf_readdir 3314                  strncmp@len 001A  
        __end_of_pf_opendir 2F9A                    _send_cmd 3402                    _wav_putc 3B52  
                  _pwm_init 3CDA                ??_wait_ready 0010               pf_read@remain 0080  
                  _xmit_spi 3D22                   wav_putc@c 0012           play_wave_file@res 00DC  
     __CFG_CPUDIV$OSC1_PLL2 000000                 _release_spi 3D3E                    mem_cmp@d 0019  
                  mem_cmp@r 001D                    mem_cmp@s 001B                  _INTCONbits 000FF2  
                  mem_set@d 0016               pf_readdir@dir 0083               pf_readdir@fno 0081  
             pf_readdir@res 00B1               wait_ready@res 0014                    intlevel2 0000  
                 strchr@chr 0012                   strchr@ptr 0010          __end_of_wait_ready 3C14  
          ___lldiv@dividend 0010                   strncmp@s1 0016                   strncmp@s2 0018  
                 xmit_spi@c 0011               pf_lseek@ifptr 007E                 _timer1_init 3D0C  
           ??_set_pwm1_duty 0001         __CFG_FOSC$INTOSC_HS 000000            ___lldiv@quotient 0018  
                  strlen@cp 0014              dir_rewind@clst 0037                 dir_find@dir 0077  
               dir_find@res 0079                 _SSPCON1bits 000FC6                    strstr@s1 001F  
                  strstr@s2 0021                dir_next@clst 0070                 dir_read@dir 007B  
               dir_read@res 007E              pf_opendir@path 008F               ?_get_fileinfo 0010  
              ?_create_name 0018                  _WAV_L_BUFF 0400               pf_opendir@dir 0099  
              dir_rewind@dj 002B                dir_rewind@fs 0035               pf_opendir@res 00C7  
